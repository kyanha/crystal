#----------------------------------------------------------------------------
# Autoconf input script. Invoke the ./autogen.sh script to generate a
# configure script from this file.
#----------------------------------------------------------------------------
AC_PREREQ([2.54])

#----------------------------------------------------------------------------
# Initialize Autoconf
#----------------------------------------------------------------------------
AC_INIT(
    [#PROJECTNAME#],
    [#VERSION#],
    [#EMAIL#])
CS_PACKAGEINFO(
    [#LONGNAME#],
    [#COPYRIGHT#],
    [#HOMEPAGE#])
AC_CONFIG_SRCDIR([mk/jam/build.jam])
AC_CONFIG_AUX_DIR([mk/autoconf])
AC_CANONICAL_HOST

#----------------------------------------------------------------------------
# Setup for the configuration header
#----------------------------------------------------------------------------
AC_CONFIG_HEADERS([config.h])
AH_TOP([/* We expect to use CS everywhere, so include cssysdef.h. */
#include <cssysdef.h>])

#----------------------------------------------------------------------------
# Check for applications
#----------------------------------------------------------------------------
CS_PROG_CC
AS_IF([test -z "$CC"],
    [AC_MSG_ERROR([Could not find a usable C compiler.])])
CS_PROG_CXX
AS_IF([test -z "$CXX"],
    [AC_MSG_ERROR([Could not find a usable C++ compiler.])])
CS_PROG_LINK

AC_CHECK_PROGS([INSTALL], [install])
AS_IF([test -n "$INSTALL"], [CS_JAMCONFIG_PROPERTY([INSTALL], [$INSTALL])])

AC_PROG_RANLIB
AS_IF([test -n "$RANLIB"], [CS_JAMCONFIG_PROPERTY([RANLIB], [$RANLIB])])

#----------------------------------------------------------------------------
# Determine system type
#----------------------------------------------------------------------------
CS_CHECK_HOST
                                                                                
#----------------------------------------------------------------------------
# Check for syntax problems / header files
#----------------------------------------------------------------------------
# Nothing yet.
                                                                                
#----------------------------------------------------------------------------
# Check for external libraries
#----------------------------------------------------------------------------
CS_PATH_CRYSTAL_JAM([0.96], [],
  [AC_MSG_ERROR([
*** Crystal Space could not be found. The latest version is always available
*** from http://crystal.sourceforge.net/
*** Also, be sure that you have either installed Crystal Space or set the
*** CRYSTAL environment variable properly.
])], [cstool csgfx csgeom csutil])
                                                                                
#----------------------------------------------------------------------------
# Package configuration switches
#----------------------------------------------------------------------------
AC_MSG_CHECKING([build mode])
AC_ARG_ENABLE([debug],
    [AC_HELP_STRING([--enable-debug],
	[build with debugging information (default NO)])],
    [], [enable_debug=no])
AC_MSG_RESULT([$enable_debug])

AS_IF([test $enable_debug = yes],
    [CS_JAMCONFIG_PROPERTY([MODE], [debug])],
    [CS_JAMCONFIG_PROPERTY([MODE], [optimize])])

#-----------------------------------------------------------------------------
# Output Installpaths/package info
#-----------------------------------------------------------------------------
CS_OUTPUT_INSTALLDIRS
CS_EMIT_PACKAGEINFO([jam])
                                                                                
#----------------------------------------------------------------------------
# Output generated files.  Also create a Jamfile when compiling outside
# source directory.
#----------------------------------------------------------------------------
CS_JAMCONFIG_PROPERTY([JAMCONFIG_READ], [yes])
CS_JAMCONFIG_OUTPUT([Jamconfig])
CS_INIT_JAMFILE
AC_OUTPUT
                                                                                
AC_MSG_NOTICE([
                                                                                
Please note that this project uses Jam as it build tool,
therefore you must type 'jam' to build the project.
])
