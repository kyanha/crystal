# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ivaria', [dirname(__file__)])
        except ImportError:
            import _ivaria
            return _ivaria
        if fp is not None:
            try:
                _mod = imp.load_module('_ivaria', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ivaria = swig_import_helper()
    del swig_import_helper
else:
    import _ivaria
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import core

def _SetSCFPointer(*args):
  return _ivaria._SetSCFPointer(*args)
_SetSCFPointer = _ivaria._SetSCFPointer

def _GetSCFPointer():
  return _ivaria._GetSCFPointer()
_GetSCFPointer = _ivaria._GetSCFPointer
if not "core" in dir():
    core = __import__("cspace").__dict__["core"]
core.AddSCFLink(_SetSCFPointer)
CSMutableArrayHelper = core.CSMutableArrayHelper

class iDecal(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _ivaria.new_iDecal()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ivaria.delete_iDecal
    __del__ = lambda self : None;
iDecal_swigregister = _ivaria.iDecal_swigregister
iDecal_swigregister(iDecal)

class iDecalTemplate(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetTimeToLive(self): return _ivaria.iDecalTemplate_GetTimeToLive(self)
    def GetMaterialWrapper(self): return _ivaria.iDecalTemplate_GetMaterialWrapper(self)
    def GetRenderPriority(self): return _ivaria.iDecalTemplate_GetRenderPriority(self)
    def GetZBufMode(self): return _ivaria.iDecalTemplate_GetZBufMode(self)
    def GetPolygonNormalThreshold(self): return _ivaria.iDecalTemplate_GetPolygonNormalThreshold(self)
    def GetDecalOffset(self): return _ivaria.iDecalTemplate_GetDecalOffset(self)
    def HasTopClipping(self): return _ivaria.iDecalTemplate_HasTopClipping(self)
    def GetTopClippingScale(self): return _ivaria.iDecalTemplate_GetTopClippingScale(self)
    def HasBottomClipping(self): return _ivaria.iDecalTemplate_HasBottomClipping(self)
    def GetBottomClippingScale(self): return _ivaria.iDecalTemplate_GetBottomClippingScale(self)
    def GetMinTexCoord(self): return _ivaria.iDecalTemplate_GetMinTexCoord(self)
    def GetMainColor(self): return _ivaria.iDecalTemplate_GetMainColor(self)
    def GetTopColor(self): return _ivaria.iDecalTemplate_GetTopColor(self)
    def GetBottomColor(self): return _ivaria.iDecalTemplate_GetBottomColor(self)
    def GetMaxTexCoord(self): return _ivaria.iDecalTemplate_GetMaxTexCoord(self)
    def GetMixMode(self): return _ivaria.iDecalTemplate_GetMixMode(self)
    def GetPerpendicularFaceThreshold(self): return _ivaria.iDecalTemplate_GetPerpendicularFaceThreshold(self)
    def GetPerpendicularFaceOffset(self): return _ivaria.iDecalTemplate_GetPerpendicularFaceOffset(self)
    def SetTimeToLive(self, *args): return _ivaria.iDecalTemplate_SetTimeToLive(self, *args)
    def SetMaterialWrapper(self, *args): return _ivaria.iDecalTemplate_SetMaterialWrapper(self, *args)
    def SetRenderPriority(self, *args): return _ivaria.iDecalTemplate_SetRenderPriority(self, *args)
    def SetZBufMode(self, *args): return _ivaria.iDecalTemplate_SetZBufMode(self, *args)
    def SetPolygonNormalThreshold(self, *args): return _ivaria.iDecalTemplate_SetPolygonNormalThreshold(self, *args)
    def SetDecalOffset(self, *args): return _ivaria.iDecalTemplate_SetDecalOffset(self, *args)
    def SetTopClipping(self, *args): return _ivaria.iDecalTemplate_SetTopClipping(self, *args)
    def SetBottomClipping(self, *args): return _ivaria.iDecalTemplate_SetBottomClipping(self, *args)
    def SetTexCoords(self, *args): return _ivaria.iDecalTemplate_SetTexCoords(self, *args)
    def SetMixMode(self, *args): return _ivaria.iDecalTemplate_SetMixMode(self, *args)
    def SetPerpendicularFaceThreshold(self, *args): return _ivaria.iDecalTemplate_SetPerpendicularFaceThreshold(self, *args)
    def SetPerpendicularFaceOffset(self, *args): return _ivaria.iDecalTemplate_SetPerpendicularFaceOffset(self, *args)
    def SetMainColor(self, *args): return _ivaria.iDecalTemplate_SetMainColor(self, *args)
    def SetTopColor(self, *args): return _ivaria.iDecalTemplate_SetTopColor(self, *args)
    def SetBottomColor(self, *args): return _ivaria.iDecalTemplate_SetBottomColor(self, *args)
    def SetClipping(self, *args): return _ivaria.iDecalTemplate_SetClipping(self, *args)
    def HasClipping(self): return _ivaria.iDecalTemplate_HasClipping(self)
    scfGetVersion = staticmethod(_ivaria.iDecalTemplate_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iDecalTemplate
    __del__ = lambda self : None;
iDecalTemplate_swigregister = _ivaria.iDecalTemplate_swigregister
iDecalTemplate_swigregister(iDecalTemplate)

def iDecalTemplate_scfGetVersion():
  return _ivaria.iDecalTemplate_scfGetVersion()
iDecalTemplate_scfGetVersion = _ivaria.iDecalTemplate_scfGetVersion

class iDecalAnimationControl(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _ivaria.delete_iDecalAnimationControl
    __del__ = lambda self : None;
    def UpdateDecal(self, *args): return _ivaria.iDecalAnimationControl_UpdateDecal(self, *args)
iDecalAnimationControl_swigregister = _ivaria.iDecalAnimationControl_swigregister
iDecalAnimationControl_swigregister(iDecalAnimationControl)

class iDecalBuilder(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _ivaria.delete_iDecalBuilder
    __del__ = lambda self : None;
    def AddStaticPoly(self, *args): return _ivaria.iDecalBuilder_AddStaticPoly(self, *args)
    def SetDecalAnimationControl(self, *args): return _ivaria.iDecalBuilder_SetDecalAnimationControl(self, *args)
iDecalBuilder_swigregister = _ivaria.iDecalBuilder_swigregister
iDecalBuilder_swigregister(iDecalBuilder)

class iDecalManager(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def CreateDecalTemplate(self, *args): return _ivaria.iDecalManager_CreateDecalTemplate(self, *args)
    def DeleteDecal(self, *args): return _ivaria.iDecalManager_DeleteDecal(self, *args)
    def GetDecalCount(self): return _ivaria.iDecalManager_GetDecalCount(self)
    def GetDecal(self, *args): return _ivaria.iDecalManager_GetDecal(self, *args)
    def CreateDecal(self, *args): return _ivaria.iDecalManager_CreateDecal(self, *args)
    scfGetVersion = staticmethod(_ivaria.iDecalManager_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iDecalManager
    __del__ = lambda self : None;
iDecalManager_swigregister = _ivaria.iDecalManager_swigregister
iDecalManager_swigregister(iDecalManager)

def iDecalManager_scfGetVersion():
  return _ivaria.iDecalManager_scfGetVersion()
iDecalManager_scfGetVersion = _ivaria.iDecalManager_scfGetVersion

csConPageUp = _ivaria.csConPageUp
csConPageDown = _ivaria.csConPageDown
csConVeryTop = _ivaria.csConVeryTop
csConVeryBottom = _ivaria.csConVeryBottom
csConNoCursor = _ivaria.csConNoCursor
csConNormalCursor = _ivaria.csConNormalCursor
csConInsertCursor = _ivaria.csConInsertCursor
class iConsoleWatcher(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def ConsoleVisibilityChanged(self, *args): return _ivaria.iConsoleWatcher_ConsoleVisibilityChanged(self, *args)
    __swig_destroy__ = _ivaria.delete_iConsoleWatcher
    __del__ = lambda self : None;
iConsoleWatcher_swigregister = _ivaria.iConsoleWatcher_swigregister
iConsoleWatcher_swigregister(iConsoleWatcher)

class iConsoleOutput(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def PutText(self, *args): return _ivaria.iConsoleOutput_PutText(self, *args)
    def GetLine(self, *args): return _ivaria.iConsoleOutput_GetLine(self, *args)
    def Draw2D(self, oRect = None): return _ivaria.iConsoleOutput_Draw2D(self, oRect)
    def Draw3D(self, oRect = None): return _ivaria.iConsoleOutput_Draw3D(self, oRect)
    def Clear(self, wipe = False): return _ivaria.iConsoleOutput_Clear(self, wipe)
    def SetBufferSize(self, *args): return _ivaria.iConsoleOutput_SetBufferSize(self, *args)
    def GetTransparency(self): return _ivaria.iConsoleOutput_GetTransparency(self)
    def SetTransparency(self, *args): return _ivaria.iConsoleOutput_SetTransparency(self, *args)
    def GetFont(self): return _ivaria.iConsoleOutput_GetFont(self)
    def SetFont(self, *args): return _ivaria.iConsoleOutput_SetFont(self, *args)
    def GetTopLine(self): return _ivaria.iConsoleOutput_GetTopLine(self)
    def ScrollTo(self, *args): return _ivaria.iConsoleOutput_ScrollTo(self, *args)
    def GetCursorStyle(self): return _ivaria.iConsoleOutput_GetCursorStyle(self)
    def SetCursorStyle(self, *args): return _ivaria.iConsoleOutput_SetCursorStyle(self, *args)
    def SetVisible(self, *args): return _ivaria.iConsoleOutput_SetVisible(self, *args)
    def GetVisible(self): return _ivaria.iConsoleOutput_GetVisible(self)
    def AutoUpdate(self, *args): return _ivaria.iConsoleOutput_AutoUpdate(self, *args)
    def SetCursorPos(self, *args): return _ivaria.iConsoleOutput_SetCursorPos(self, *args)
    def GetMaxLineWidth(self): return _ivaria.iConsoleOutput_GetMaxLineWidth(self)
    def RegisterWatcher(self, *args): return _ivaria.iConsoleOutput_RegisterWatcher(self, *args)
    def PerformExtension(self, *args): return _ivaria.iConsoleOutput_PerformExtension(self, *args)
    scfGetVersion = staticmethod(_ivaria.iConsoleOutput_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iConsoleOutput
    __del__ = lambda self : None;
iConsoleOutput_swigregister = _ivaria.iConsoleOutput_swigregister
iConsoleOutput_swigregister(iConsoleOutput)

def iConsoleOutput_scfGetVersion():
  return _ivaria.iConsoleOutput_scfGetVersion()
iConsoleOutput_scfGetVersion = _ivaria.iConsoleOutput_scfGetVersion

class iConsoleExecCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Execute(self, *args): return _ivaria.iConsoleExecCallback_Execute(self, *args)
    scfGetVersion = staticmethod(_ivaria.iConsoleExecCallback_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iConsoleExecCallback
    __del__ = lambda self : None;
iConsoleExecCallback_swigregister = _ivaria.iConsoleExecCallback_swigregister
iConsoleExecCallback_swigregister(iConsoleExecCallback)

def iConsoleExecCallback_scfGetVersion():
  return _ivaria.iConsoleExecCallback_scfGetVersion()
iConsoleExecCallback_scfGetVersion = _ivaria.iConsoleExecCallback_scfGetVersion

class iConsoleInput(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Bind(self, *args): return _ivaria.iConsoleInput_Bind(self, *args)
    def SetExecuteCallback(self, *args): return _ivaria.iConsoleInput_SetExecuteCallback(self, *args)
    def GetExecuteCallback(self): return _ivaria.iConsoleInput_GetExecuteCallback(self)
    def GetText(self, *args): return _ivaria.iConsoleInput_GetText(self, *args)
    def GetCurLine(self): return _ivaria.iConsoleInput_GetCurLine(self)
    def GetBufferSize(self): return _ivaria.iConsoleInput_GetBufferSize(self)
    def SetBufferSize(self, *args): return _ivaria.iConsoleInput_SetBufferSize(self, *args)
    def Clear(self): return _ivaria.iConsoleInput_Clear(self)
    def SetPrompt(self, *args): return _ivaria.iConsoleInput_SetPrompt(self, *args)
    def HandleEvent(self, *args): return _ivaria.iConsoleInput_HandleEvent(self, *args)
    scfGetVersion = staticmethod(_ivaria.iConsoleInput_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iConsoleInput
    __del__ = lambda self : None;
iConsoleInput_swigregister = _ivaria.iConsoleInput_swigregister
iConsoleInput_swigregister(iConsoleInput)

def iConsoleInput_scfGetVersion():
  return _ivaria.iConsoleInput_scfGetVersion()
iConsoleInput_scfGetVersion = _ivaria.iConsoleInput_scfGetVersion

class iStandardReporterListener(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetOutputConsole(self, *args): return _ivaria.iStandardReporterListener_SetOutputConsole(self, *args)
    def SetNativeWindowManager(self, *args): return _ivaria.iStandardReporterListener_SetNativeWindowManager(self, *args)
    def SetReporter(self, *args): return _ivaria.iStandardReporterListener_SetReporter(self, *args)
    def SetDebugFile(self, *args): return _ivaria.iStandardReporterListener_SetDebugFile(self, *args)
    def SetDefaults(self): return _ivaria.iStandardReporterListener_SetDefaults(self)
    def SetMessageDestination(self, *args): return _ivaria.iStandardReporterListener_SetMessageDestination(self, *args)
    def SetStandardOutput(self, *args): return _ivaria.iStandardReporterListener_SetStandardOutput(self, *args)
    def IsStandardOutput(self, *args): return _ivaria.iStandardReporterListener_IsStandardOutput(self, *args)
    def SetStandardError(self, *args): return _ivaria.iStandardReporterListener_SetStandardError(self, *args)
    def IsStandardError(self, *args): return _ivaria.iStandardReporterListener_IsStandardError(self, *args)
    def SetConsoleOutput(self, *args): return _ivaria.iStandardReporterListener_SetConsoleOutput(self, *args)
    def IsConsoleOutput(self, *args): return _ivaria.iStandardReporterListener_IsConsoleOutput(self, *args)
    def SetAlertOutput(self, *args): return _ivaria.iStandardReporterListener_SetAlertOutput(self, *args)
    def IsAlertOutput(self, *args): return _ivaria.iStandardReporterListener_IsAlertOutput(self, *args)
    def SetDebugOutput(self, *args): return _ivaria.iStandardReporterListener_SetDebugOutput(self, *args)
    def IsDebugOutput(self, *args): return _ivaria.iStandardReporterListener_IsDebugOutput(self, *args)
    def SetPopupOutput(self, *args): return _ivaria.iStandardReporterListener_SetPopupOutput(self, *args)
    def IsPopupOutput(self, *args): return _ivaria.iStandardReporterListener_IsPopupOutput(self, *args)
    def RemoveMessages(self, *args): return _ivaria.iStandardReporterListener_RemoveMessages(self, *args)
    def ShowMessageID(self, *args): return _ivaria.iStandardReporterListener_ShowMessageID(self, *args)
    def GetDebugFile(self): return _ivaria.iStandardReporterListener_GetDebugFile(self)
    scfGetVersion = staticmethod(_ivaria.iStandardReporterListener_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iStandardReporterListener
    __del__ = lambda self : None;
iStandardReporterListener_swigregister = _ivaria.iStandardReporterListener_swigregister
iStandardReporterListener_swigregister(iStandardReporterListener)

def iStandardReporterListener_scfGetVersion():
  return _ivaria.iStandardReporterListener_scfGetVersion()
iStandardReporterListener_scfGetVersion = _ivaria.iStandardReporterListener_scfGetVersion

class iView(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetEngine(self): return _ivaria.iView_GetEngine(self)
    def SetEngine(self, *args): return _ivaria.iView_SetEngine(self, *args)
    def GetCamera(self): return _ivaria.iView_GetCamera(self)
    def SetCamera(self, *args): return _ivaria.iView_SetCamera(self, *args)
    def GetPerspectiveCamera(self): return _ivaria.iView_GetPerspectiveCamera(self)
    def SetPerspectiveCamera(self, *args): return _ivaria.iView_SetPerspectiveCamera(self, *args)
    def GetContext(self): return _ivaria.iView_GetContext(self)
    def SetContext(self, *args): return _ivaria.iView_SetContext(self, *args)
    def SetRectangle(self, *args): return _ivaria.iView_SetRectangle(self, *args)
    def ClearView(self): return _ivaria.iView_ClearView(self)
    def AddViewVertex(self, *args): return _ivaria.iView_AddViewVertex(self, *args)
    def RestrictClipperToScreen(self): return _ivaria.iView_RestrictClipperToScreen(self)
    def UpdateClipper(self): return _ivaria.iView_UpdateClipper(self)
    def GetClipper(self): return _ivaria.iView_GetClipper(self)
    def Draw(self, mesh = None): return _ivaria.iView_Draw(self, mesh)
    def SetAutoResize(self, *args): return _ivaria.iView_SetAutoResize(self, *args)
    def GetMeshFilter(self): return _ivaria.iView_GetMeshFilter(self)
    def GetCustomMatrixCamera(self): return _ivaria.iView_GetCustomMatrixCamera(self)
    def SetCustomMatrixCamera(self, *args): return _ivaria.iView_SetCustomMatrixCamera(self, *args)
    def GetWidth(self): return _ivaria.iView_GetWidth(self)
    def GetHeight(self): return _ivaria.iView_GetHeight(self)
    def SetWidth(self, *args): return _ivaria.iView_SetWidth(self, *args)
    def SetHeight(self, *args): return _ivaria.iView_SetHeight(self, *args)
    def NormalizedToScreen(self, *args): return _ivaria.iView_NormalizedToScreen(self, *args)
    def ScreenToNormalized(self, *args): return _ivaria.iView_ScreenToNormalized(self, *args)
    scfGetVersion = staticmethod(_ivaria.iView_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iView
    __del__ = lambda self : None;
iView_swigregister = _ivaria.iView_swigregister
iView_swigregister(iView)

def iView_scfGetVersion():
  return _ivaria.iView_scfGetVersion()
iView_scfGetVersion = _ivaria.iView_scfGetVersion

class iBugPlugRenderObject(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Render(self, *args): return _ivaria.iBugPlugRenderObject_Render(self, *args)
    __swig_destroy__ = _ivaria.delete_iBugPlugRenderObject
    __del__ = lambda self : None;
iBugPlugRenderObject_swigregister = _ivaria.iBugPlugRenderObject_swigregister
iBugPlugRenderObject_swigregister(iBugPlugRenderObject)

class iBugPlug(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetupDebugSector(self): return _ivaria.iBugPlug_SetupDebugSector(self)
    def DebugSectorBox(self, *args): return _ivaria.iBugPlug_DebugSectorBox(self, *args)
    def DebugSectorTriangle(self, *args): return _ivaria.iBugPlug_DebugSectorTriangle(self, *args)
    def SwitchDebugSector(self, *args): return _ivaria.iBugPlug_SwitchDebugSector(self, *args)
    def CheckDebugSector(self): return _ivaria.iBugPlug_CheckDebugSector(self)
    def SetupDebugView(self): return _ivaria.iBugPlug_SetupDebugView(self)
    def DebugViewPoint(self, *args): return _ivaria.iBugPlug_DebugViewPoint(self, *args)
    def DebugViewLine(self, *args): return _ivaria.iBugPlug_DebugViewLine(self, *args)
    def DebugViewBox(self, *args): return _ivaria.iBugPlug_DebugViewBox(self, *args)
    def DebugViewPointCount(self): return _ivaria.iBugPlug_DebugViewPointCount(self)
    def DebugViewGetPoint(self, *args): return _ivaria.iBugPlug_DebugViewGetPoint(self, *args)
    def DebugViewLineCount(self): return _ivaria.iBugPlug_DebugViewLineCount(self)
    def DebugViewGetLine(self, *args): return _ivaria.iBugPlug_DebugViewGetLine(self, *args)
    def DebugViewBoxCount(self): return _ivaria.iBugPlug_DebugViewBoxCount(self)
    def DebugViewGetBox(self, *args): return _ivaria.iBugPlug_DebugViewGetBox(self, *args)
    def DebugViewRenderObject(self, *args): return _ivaria.iBugPlug_DebugViewRenderObject(self, *args)
    def DebugViewClearScreen(self, *args): return _ivaria.iBugPlug_DebugViewClearScreen(self, *args)
    def SwitchDebugView(self, clear = True): return _ivaria.iBugPlug_SwitchDebugView(self, clear)
    def CheckDebugView(self): return _ivaria.iBugPlug_CheckDebugView(self)
    def AddCounter(self, *args): return _ivaria.iBugPlug_AddCounter(self, *args)
    def AddCounterEnum(self, *args): return _ivaria.iBugPlug_AddCounterEnum(self, *args)
    def ResetCounter(self, *args): return _ivaria.iBugPlug_ResetCounter(self, *args)
    def RemoveCounter(self, *args): return _ivaria.iBugPlug_RemoveCounter(self, *args)
    def ExecCommand(self, *args): return _ivaria.iBugPlug_ExecCommand(self, *args)
    scfGetVersion = staticmethod(_ivaria.iBugPlug_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iBugPlug
    __del__ = lambda self : None;
iBugPlug_swigregister = _ivaria.iBugPlug_swigregister
iBugPlug_swigregister(iBugPlug)

def iBugPlug_scfGetVersion():
  return _ivaria.iBugPlug_scfGetVersion()
iBugPlug_scfGetVersion = _ivaria.iBugPlug_scfGetVersion

class csCollisionPair(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    a1 = _swig_property(_ivaria.csCollisionPair_a1_get, _ivaria.csCollisionPair_a1_set)
    b1 = _swig_property(_ivaria.csCollisionPair_b1_get, _ivaria.csCollisionPair_b1_set)
    c1 = _swig_property(_ivaria.csCollisionPair_c1_get, _ivaria.csCollisionPair_c1_set)
    a2 = _swig_property(_ivaria.csCollisionPair_a2_get, _ivaria.csCollisionPair_a2_set)
    b2 = _swig_property(_ivaria.csCollisionPair_b2_get, _ivaria.csCollisionPair_b2_set)
    c2 = _swig_property(_ivaria.csCollisionPair_c2_get, _ivaria.csCollisionPair_c2_set)
    def __eq__(self, *args): return _ivaria.csCollisionPair___eq__(self, *args)
    def __init__(self): 
        this = _ivaria.new_csCollisionPair()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ivaria.delete_csCollisionPair
    __del__ = lambda self : None;
csCollisionPair_swigregister = _ivaria.csCollisionPair_swigregister
csCollisionPair_swigregister(csCollisionPair)

class csIntersectingTriangle(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    a = _swig_property(_ivaria.csIntersectingTriangle_a_get, _ivaria.csIntersectingTriangle_a_set)
    b = _swig_property(_ivaria.csIntersectingTriangle_b_get, _ivaria.csIntersectingTriangle_b_set)
    c = _swig_property(_ivaria.csIntersectingTriangle_c_get, _ivaria.csIntersectingTriangle_c_set)
    def __init__(self): 
        this = _ivaria.new_csIntersectingTriangle()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ivaria.delete_csIntersectingTriangle
    __del__ = lambda self : None;
csIntersectingTriangle_swigregister = _ivaria.csIntersectingTriangle_swigregister
csIntersectingTriangle_swigregister(csIntersectingTriangle)

CS_MESH_COLLIDER = _ivaria.CS_MESH_COLLIDER
CS_TERRAFORMER_COLLIDER = _ivaria.CS_TERRAFORMER_COLLIDER
CS_TERRAIN_COLLIDER = _ivaria.CS_TERRAIN_COLLIDER
class iCollider(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetColliderType(self): return _ivaria.iCollider_GetColliderType(self)
    scfGetVersion = staticmethod(_ivaria.iCollider_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iCollider
    __del__ = lambda self : None;
iCollider_swigregister = _ivaria.iCollider_swigregister
iCollider_swigregister(iCollider)

def iCollider_scfGetVersion():
  return _ivaria.iCollider_scfGetVersion()
iCollider_scfGetVersion = _ivaria.iCollider_scfGetVersion

class iCollideSystem(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetTriangleDataID(self): return _ivaria.iCollideSystem_GetTriangleDataID(self)
    def GetBaseDataID(self): return _ivaria.iCollideSystem_GetBaseDataID(self)
    def CreateCollider(self, *args): return _ivaria.iCollideSystem_CreateCollider(self, *args)
    def Collide(self, *args): return _ivaria.iCollideSystem_Collide(self, *args)
    def GetCollisionPairs(self): return _ivaria.iCollideSystem_GetCollisionPairs(self)
    def GetCollisionPairCount(self): return _ivaria.iCollideSystem_GetCollisionPairCount(self)
    def ResetCollisionPairs(self): return _ivaria.iCollideSystem_ResetCollisionPairs(self)
    def CollideRay(self, *args): return _ivaria.iCollideSystem_CollideRay(self, *args)
    def CollideSegment(self, *args): return _ivaria.iCollideSystem_CollideSegment(self, *args)
    def GetIntersectingTriangles(self): return _ivaria.iCollideSystem_GetIntersectingTriangles(self)
    def SetOneHitOnly(self, *args): return _ivaria.iCollideSystem_SetOneHitOnly(self, *args)
    def GetOneHitOnly(self): return _ivaria.iCollideSystem_GetOneHitOnly(self)
    def GetCollisionPairByIndex(self, *args): return _ivaria.iCollideSystem_GetCollisionPairByIndex(self, *args)
    scfGetVersion = staticmethod(_ivaria.iCollideSystem_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iCollideSystem
    __del__ = lambda self : None;
    def GetCollisionPairs (self):
      num = self.GetCollisionPairCount()
      pairs = []
      for i in range(num):
        pairs.append(self.GetCollisionPairByIndex(i))
      return pairs

iCollideSystem_swigregister = _ivaria.iCollideSystem_swigregister
iCollideSystem_swigregister(iCollideSystem)

def iCollideSystem_scfGetVersion():
  return _ivaria.iCollideSystem_scfGetVersion()
iCollideSystem_scfGetVersion = _ivaria.iCollideSystem_scfGetVersion

class csCollisionPairArrayReadOnly(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetSize(self): return _ivaria.csCollisionPairArrayReadOnly_GetSize(self)
    def Get(self, *args): return _ivaria.csCollisionPairArrayReadOnly_Get(self, *args)
    def Top(self): return _ivaria.csCollisionPairArrayReadOnly_Top(self)
    def Find(self, *args): return _ivaria.csCollisionPairArrayReadOnly_Find(self, *args)
    def GetIndex(self, *args): return _ivaria.csCollisionPairArrayReadOnly_GetIndex(self, *args)
    def IsEmpty(self): return _ivaria.csCollisionPairArrayReadOnly_IsEmpty(self)
    def GetAll(self, *args): return _ivaria.csCollisionPairArrayReadOnly_GetAll(self, *args)
    __swig_destroy__ = _ivaria.delete_csCollisionPairArrayReadOnly
    __del__ = lambda self : None;
csCollisionPairArrayReadOnly_swigregister = _ivaria.csCollisionPairArrayReadOnly_swigregister
csCollisionPairArrayReadOnly_swigregister(csCollisionPairArrayReadOnly)

class csCollisionPairArrayChangeElements(csCollisionPairArrayReadOnly):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Get(self, *args): return _ivaria.csCollisionPairArrayChangeElements_Get(self, *args)
    def Top(self, *args): return _ivaria.csCollisionPairArrayChangeElements_Top(self, *args)
    __swig_destroy__ = _ivaria.delete_csCollisionPairArrayChangeElements
    __del__ = lambda self : None;
csCollisionPairArrayChangeElements_swigregister = _ivaria.csCollisionPairArrayChangeElements_swigregister
csCollisionPairArrayChangeElements_swigregister(csCollisionPairArrayChangeElements)

class csCollisionPairArrayChangeAll(csCollisionPairArrayChangeElements):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetSize(self, *args): return _ivaria.csCollisionPairArrayChangeAll_SetSize(self, *args)
    def GetExtend(self, *args): return _ivaria.csCollisionPairArrayChangeAll_GetExtend(self, *args)
    def Put(self, *args): return _ivaria.csCollisionPairArrayChangeAll_Put(self, *args)
    def Push(self, *args): return _ivaria.csCollisionPairArrayChangeAll_Push(self, *args)
    def PushSmart(self, *args): return _ivaria.csCollisionPairArrayChangeAll_PushSmart(self, *args)
    def Pop(self): return _ivaria.csCollisionPairArrayChangeAll_Pop(self)
    def Insert(self, *args): return _ivaria.csCollisionPairArrayChangeAll_Insert(self, *args)
    def DeleteAll(self): return _ivaria.csCollisionPairArrayChangeAll_DeleteAll(self)
    def Truncate(self, *args): return _ivaria.csCollisionPairArrayChangeAll_Truncate(self, *args)
    def Empty(self): return _ivaria.csCollisionPairArrayChangeAll_Empty(self)
    def DeleteIndex(self, *args): return _ivaria.csCollisionPairArrayChangeAll_DeleteIndex(self, *args)
    def DeleteIndexFast(self, *args): return _ivaria.csCollisionPairArrayChangeAll_DeleteIndexFast(self, *args)
    def Delete(self, *args): return _ivaria.csCollisionPairArrayChangeAll_Delete(self, *args)
    __swig_destroy__ = _ivaria.delete_csCollisionPairArrayChangeAll
    __del__ = lambda self : None;
csCollisionPairArrayChangeAll_swigregister = _ivaria.csCollisionPairArrayChangeAll_swigregister
csCollisionPairArrayChangeAll_swigregister(csCollisionPairArrayChangeAll)

class iDynamicsStepCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Step(self, *args): return _ivaria.iDynamicsStepCallback_Step(self, *args)
    __swig_destroy__ = _ivaria.delete_iDynamicsStepCallback
    __del__ = lambda self : None;
iDynamicsStepCallback_swigregister = _ivaria.iDynamicsStepCallback_swigregister
iDynamicsStepCallback_swigregister(iDynamicsStepCallback)

class iDynamics(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def CreateSystem(self): return _ivaria.iDynamics_CreateSystem(self)
    def RemoveSystem(self, *args): return _ivaria.iDynamics_RemoveSystem(self, *args)
    def RemoveSystems(self): return _ivaria.iDynamics_RemoveSystems(self)
    def FindSystem(self, *args): return _ivaria.iDynamics_FindSystem(self, *args)
    def Step(self, *args): return _ivaria.iDynamics_Step(self, *args)
    def AddStepCallback(self, *args): return _ivaria.iDynamics_AddStepCallback(self, *args)
    def RemoveStepCallback(self, *args): return _ivaria.iDynamics_RemoveStepCallback(self, *args)
    scfGetVersion = staticmethod(_ivaria.iDynamics_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iDynamics
    __del__ = lambda self : None;
iDynamics_swigregister = _ivaria.iDynamics_swigregister
iDynamics_swigregister(iDynamics)

def iDynamics_scfGetVersion():
  return _ivaria.iDynamics_scfGetVersion()
iDynamics_scfGetVersion = _ivaria.iDynamics_scfGetVersion

class iDynamicSystem(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def QueryObject(self): return _ivaria.iDynamicSystem_QueryObject(self)
    def SetGravity(self, *args): return _ivaria.iDynamicSystem_SetGravity(self, *args)
    def GetGravity(self): return _ivaria.iDynamicSystem_GetGravity(self)
    def SetLinearDampener(self, *args): return _ivaria.iDynamicSystem_SetLinearDampener(self, *args)
    def GetLinearDampener(self): return _ivaria.iDynamicSystem_GetLinearDampener(self)
    def SetRollingDampener(self, *args): return _ivaria.iDynamicSystem_SetRollingDampener(self, *args)
    def GetRollingDampener(self): return _ivaria.iDynamicSystem_GetRollingDampener(self)
    def EnableAutoDisable(self, *args): return _ivaria.iDynamicSystem_EnableAutoDisable(self, *args)
    def AutoDisableEnabled(self): return _ivaria.iDynamicSystem_AutoDisableEnabled(self)
    def SetAutoDisableParams(self, *args): return _ivaria.iDynamicSystem_SetAutoDisableParams(self, *args)
    def Step(self, *args): return _ivaria.iDynamicSystem_Step(self, *args)
    def CreateBody(self): return _ivaria.iDynamicSystem_CreateBody(self)
    def RemoveBody(self, *args): return _ivaria.iDynamicSystem_RemoveBody(self, *args)
    def FindBody(self, *args): return _ivaria.iDynamicSystem_FindBody(self, *args)
    def GetBody(self, *args): return _ivaria.iDynamicSystem_GetBody(self, *args)
    def GetBodysCount(self): return _ivaria.iDynamicSystem_GetBodysCount(self)
    def CreateGroup(self): return _ivaria.iDynamicSystem_CreateGroup(self)
    def RemoveGroup(self, *args): return _ivaria.iDynamicSystem_RemoveGroup(self, *args)
    def CreateJoint(self): return _ivaria.iDynamicSystem_CreateJoint(self)
    def RemoveJoint(self, *args): return _ivaria.iDynamicSystem_RemoveJoint(self, *args)
    def GetDefaultMoveCallback(self): return _ivaria.iDynamicSystem_GetDefaultMoveCallback(self)
    def AttachColliderConvexMesh(self, *args): return _ivaria.iDynamicSystem_AttachColliderConvexMesh(self, *args)
    def AttachColliderMesh(self, *args): return _ivaria.iDynamicSystem_AttachColliderMesh(self, *args)
    def AttachColliderCylinder(self, *args): return _ivaria.iDynamicSystem_AttachColliderCylinder(self, *args)
    def AttachColliderBox(self, *args): return _ivaria.iDynamicSystem_AttachColliderBox(self, *args)
    def AttachColliderSphere(self, *args): return _ivaria.iDynamicSystem_AttachColliderSphere(self, *args)
    def AttachColliderPlane(self, *args): return _ivaria.iDynamicSystem_AttachColliderPlane(self, *args)
    def DestroyColliders(self): return _ivaria.iDynamicSystem_DestroyColliders(self)
    def DestroyCollider(self, *args): return _ivaria.iDynamicSystem_DestroyCollider(self, *args)
    def AttachCollider(self, *args): return _ivaria.iDynamicSystem_AttachCollider(self, *args)
    def CreateCollider(self): return _ivaria.iDynamicSystem_CreateCollider(self)
    def GetCollider(self, *args): return _ivaria.iDynamicSystem_GetCollider(self, *args)
    def GetColliderCount(self): return _ivaria.iDynamicSystem_GetColliderCount(self)
    def AttachColliderCapsule(self, *args): return _ivaria.iDynamicSystem_AttachColliderCapsule(self, *args)
    def AddBody(self, *args): return _ivaria.iDynamicSystem_AddBody(self, *args)
    def AddJoint(self, *args): return _ivaria.iDynamicSystem_AddJoint(self, *args)
    scfGetVersion = staticmethod(_ivaria.iDynamicSystem_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iDynamicSystem
    __del__ = lambda self : None;
iDynamicSystem_swigregister = _ivaria.iDynamicSystem_swigregister
iDynamicSystem_swigregister(iDynamicSystem)

def iDynamicSystem_scfGetVersion():
  return _ivaria.iDynamicSystem_scfGetVersion()
iDynamicSystem_scfGetVersion = _ivaria.iDynamicSystem_scfGetVersion

class iDynamicsMoveCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Execute(self, *args): return _ivaria.iDynamicsMoveCallback_Execute(self, *args)
    __swig_destroy__ = _ivaria.delete_iDynamicsMoveCallback
    __del__ = lambda self : None;
iDynamicsMoveCallback_swigregister = _ivaria.iDynamicsMoveCallback_swigregister
iDynamicsMoveCallback_swigregister(iDynamicsMoveCallback)

class iDynamicsCollisionCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Execute(self, *args): return _ivaria.iDynamicsCollisionCallback_Execute(self, *args)
    __swig_destroy__ = _ivaria.delete_iDynamicsCollisionCallback
    __del__ = lambda self : None;
iDynamicsCollisionCallback_swigregister = _ivaria.iDynamicsCollisionCallback_swigregister
iDynamicsCollisionCallback_swigregister(iDynamicsCollisionCallback)

class iBodyGroup(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def AddBody(self, *args): return _ivaria.iBodyGroup_AddBody(self, *args)
    def RemoveBody(self, *args): return _ivaria.iBodyGroup_RemoveBody(self, *args)
    def BodyInGroup(self, *args): return _ivaria.iBodyGroup_BodyInGroup(self, *args)
    scfGetVersion = staticmethod(_ivaria.iBodyGroup_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iBodyGroup
    __del__ = lambda self : None;
iBodyGroup_swigregister = _ivaria.iBodyGroup_swigregister
iBodyGroup_swigregister(iBodyGroup)

def iBodyGroup_scfGetVersion():
  return _ivaria.iBodyGroup_scfGetVersion()
iBodyGroup_scfGetVersion = _ivaria.iBodyGroup_scfGetVersion

class iRigidBody(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def QueryObject(self): return _ivaria.iRigidBody_QueryObject(self)
    def MakeStatic(self): return _ivaria.iRigidBody_MakeStatic(self)
    def MakeDynamic(self): return _ivaria.iRigidBody_MakeDynamic(self)
    def IsStatic(self): return _ivaria.iRigidBody_IsStatic(self)
    def Disable(self): return _ivaria.iRigidBody_Disable(self)
    def Enable(self): return _ivaria.iRigidBody_Enable(self)
    def IsEnabled(self): return _ivaria.iRigidBody_IsEnabled(self)
    def GetGroup(self): return _ivaria.iRigidBody_GetGroup(self)
    def AttachColliderConvexMesh(self, *args): return _ivaria.iRigidBody_AttachColliderConvexMesh(self, *args)
    def AttachColliderMesh(self, *args): return _ivaria.iRigidBody_AttachColliderMesh(self, *args)
    def AttachColliderCylinder(self, *args): return _ivaria.iRigidBody_AttachColliderCylinder(self, *args)
    def AttachColliderBox(self, *args): return _ivaria.iRigidBody_AttachColliderBox(self, *args)
    def AttachColliderSphere(self, *args): return _ivaria.iRigidBody_AttachColliderSphere(self, *args)
    def AttachColliderPlane(self, *args): return _ivaria.iRigidBody_AttachColliderPlane(self, *args)
    def AttachCollider(self, *args): return _ivaria.iRigidBody_AttachCollider(self, *args)
    def DestroyColliders(self): return _ivaria.iRigidBody_DestroyColliders(self)
    def DestroyCollider(self, *args): return _ivaria.iRigidBody_DestroyCollider(self, *args)
    def SetPosition(self, *args): return _ivaria.iRigidBody_SetPosition(self, *args)
    def GetPosition(self): return _ivaria.iRigidBody_GetPosition(self)
    def SetOrientation(self, *args): return _ivaria.iRigidBody_SetOrientation(self, *args)
    def GetOrientation(self): return _ivaria.iRigidBody_GetOrientation(self)
    def SetTransform(self, *args): return _ivaria.iRigidBody_SetTransform(self, *args)
    def GetTransform(self): return _ivaria.iRigidBody_GetTransform(self)
    def SetLinearVelocity(self, *args): return _ivaria.iRigidBody_SetLinearVelocity(self, *args)
    def GetLinearVelocity(self): return _ivaria.iRigidBody_GetLinearVelocity(self)
    def SetAngularVelocity(self, *args): return _ivaria.iRigidBody_SetAngularVelocity(self, *args)
    def GetAngularVelocity(self): return _ivaria.iRigidBody_GetAngularVelocity(self)
    def SetProperties(self, *args): return _ivaria.iRigidBody_SetProperties(self, *args)
    def GetProperties(self, *args): return _ivaria.iRigidBody_GetProperties(self, *args)
    def GetMass(self): return _ivaria.iRigidBody_GetMass(self)
    def GetCenter(self): return _ivaria.iRigidBody_GetCenter(self)
    def GetInertia(self): return _ivaria.iRigidBody_GetInertia(self)
    def AdjustTotalMass(self, *args): return _ivaria.iRigidBody_AdjustTotalMass(self, *args)
    def AddForce(self, *args): return _ivaria.iRigidBody_AddForce(self, *args)
    def AddTorque(self, *args): return _ivaria.iRigidBody_AddTorque(self, *args)
    def AddRelForce(self, *args): return _ivaria.iRigidBody_AddRelForce(self, *args)
    def AddRelTorque(self, *args): return _ivaria.iRigidBody_AddRelTorque(self, *args)
    def AddForceAtPos(self, *args): return _ivaria.iRigidBody_AddForceAtPos(self, *args)
    def AddForceAtRelPos(self, *args): return _ivaria.iRigidBody_AddForceAtRelPos(self, *args)
    def AddRelForceAtPos(self, *args): return _ivaria.iRigidBody_AddRelForceAtPos(self, *args)
    def AddRelForceAtRelPos(self, *args): return _ivaria.iRigidBody_AddRelForceAtRelPos(self, *args)
    def GetForce(self): return _ivaria.iRigidBody_GetForce(self)
    def GetTorque(self): return _ivaria.iRigidBody_GetTorque(self)
    def AttachMesh(self, *args): return _ivaria.iRigidBody_AttachMesh(self, *args)
    def GetAttachedMesh(self): return _ivaria.iRigidBody_GetAttachedMesh(self)
    def AttachLight(self, *args): return _ivaria.iRigidBody_AttachLight(self, *args)
    def GetAttachedLight(self): return _ivaria.iRigidBody_GetAttachedLight(self)
    def AttachCamera(self, *args): return _ivaria.iRigidBody_AttachCamera(self, *args)
    def GetAttachedCamera(self): return _ivaria.iRigidBody_GetAttachedCamera(self)
    def SetMoveCallback(self, *args): return _ivaria.iRigidBody_SetMoveCallback(self, *args)
    def SetCollisionCallback(self, *args): return _ivaria.iRigidBody_SetCollisionCallback(self, *args)
    def Collision(self, *args): return _ivaria.iRigidBody_Collision(self, *args)
    def Update(self): return _ivaria.iRigidBody_Update(self)
    def GetCollider(self, *args): return _ivaria.iRigidBody_GetCollider(self, *args)
    def GetColliderCount(self): return _ivaria.iRigidBody_GetColliderCount(self)
    def AttachColliderCapsule(self, *args): return _ivaria.iRigidBody_AttachColliderCapsule(self, *args)
    __swig_destroy__ = _ivaria.delete_iRigidBody
    __del__ = lambda self : None;
iRigidBody_swigregister = _ivaria.iRigidBody_swigregister
iRigidBody_swigregister(iRigidBody)

NO_GEOMETRY = _ivaria.NO_GEOMETRY
BOX_COLLIDER_GEOMETRY = _ivaria.BOX_COLLIDER_GEOMETRY
PLANE_COLLIDER_GEOMETRY = _ivaria.PLANE_COLLIDER_GEOMETRY
TRIMESH_COLLIDER_GEOMETRY = _ivaria.TRIMESH_COLLIDER_GEOMETRY
CONVEXMESH_COLLIDER_GEOMETRY = _ivaria.CONVEXMESH_COLLIDER_GEOMETRY
CYLINDER_COLLIDER_GEOMETRY = _ivaria.CYLINDER_COLLIDER_GEOMETRY
CAPSULE_COLLIDER_GEOMETRY = _ivaria.CAPSULE_COLLIDER_GEOMETRY
SPHERE_COLLIDER_GEOMETRY = _ivaria.SPHERE_COLLIDER_GEOMETRY
class iDynamicsColliderCollisionCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Execute(self, *args): return _ivaria.iDynamicsColliderCollisionCallback_Execute(self, *args)
    __swig_destroy__ = _ivaria.delete_iDynamicsColliderCollisionCallback
    __del__ = lambda self : None;
iDynamicsColliderCollisionCallback_swigregister = _ivaria.iDynamicsColliderCollisionCallback_swigregister
iDynamicsColliderCollisionCallback_swigregister(iDynamicsColliderCollisionCallback)

class iDynamicsSystemCollider(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def CreateSphereGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_CreateSphereGeometry(self, *args)
    def CreatePlaneGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_CreatePlaneGeometry(self, *args)
    def CreateConvexMeshGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_CreateConvexMeshGeometry(self, *args)
    def CreateMeshGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_CreateMeshGeometry(self, *args)
    def CreateBoxGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_CreateBoxGeometry(self, *args)
    def CreateCapsuleGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_CreateCapsuleGeometry(self, *args)
    def CreateCylinderGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_CreateCylinderGeometry(self, *args)
    def SetCollisionCallback(self, *args): return _ivaria.iDynamicsSystemCollider_SetCollisionCallback(self, *args)
    def SetFriction(self, *args): return _ivaria.iDynamicsSystemCollider_SetFriction(self, *args)
    def SetSoftness(self, *args): return _ivaria.iDynamicsSystemCollider_SetSoftness(self, *args)
    def SetDensity(self, *args): return _ivaria.iDynamicsSystemCollider_SetDensity(self, *args)
    def SetElasticity(self, *args): return _ivaria.iDynamicsSystemCollider_SetElasticity(self, *args)
    def GetFriction(self): return _ivaria.iDynamicsSystemCollider_GetFriction(self)
    def GetSoftness(self): return _ivaria.iDynamicsSystemCollider_GetSoftness(self)
    def GetDensity(self): return _ivaria.iDynamicsSystemCollider_GetDensity(self)
    def GetElasticity(self): return _ivaria.iDynamicsSystemCollider_GetElasticity(self)
    def FillWithColliderGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_FillWithColliderGeometry(self, *args)
    def GetGeometryType(self): return _ivaria.iDynamicsSystemCollider_GetGeometryType(self)
    def GetTransform(self): return _ivaria.iDynamicsSystemCollider_GetTransform(self)
    def GetLocalTransform(self): return _ivaria.iDynamicsSystemCollider_GetLocalTransform(self)
    def SetTransform(self, *args): return _ivaria.iDynamicsSystemCollider_SetTransform(self, *args)
    def GetBoxGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_GetBoxGeometry(self, *args)
    def GetSphereGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_GetSphereGeometry(self, *args)
    def GetPlaneGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_GetPlaneGeometry(self, *args)
    def GetCylinderGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_GetCylinderGeometry(self, *args)
    def MakeStatic(self): return _ivaria.iDynamicsSystemCollider_MakeStatic(self)
    def MakeDynamic(self): return _ivaria.iDynamicsSystemCollider_MakeDynamic(self)
    def IsStatic(self): return _ivaria.iDynamicsSystemCollider_IsStatic(self)
    def GetCapsuleGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_GetCapsuleGeometry(self, *args)
    def GetMeshGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_GetMeshGeometry(self, *args)
    def GetConvexMeshGeometry(self, *args): return _ivaria.iDynamicsSystemCollider_GetConvexMeshGeometry(self, *args)
    __swig_destroy__ = _ivaria.delete_iDynamicsSystemCollider
    __del__ = lambda self : None;
iDynamicsSystemCollider_swigregister = _ivaria.iDynamicsSystemCollider_swigregister
iDynamicsSystemCollider_swigregister(iDynamicsSystemCollider)

class iJoint(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Attach(self, *args): return _ivaria.iJoint_Attach(self, *args)
    def GetAttachedBody(self, *args): return _ivaria.iJoint_GetAttachedBody(self, *args)
    def SetTransform(self, *args): return _ivaria.iJoint_SetTransform(self, *args)
    def GetTransform(self): return _ivaria.iJoint_GetTransform(self)
    def SetTransConstraints(self, *args): return _ivaria.iJoint_SetTransConstraints(self, *args)
    def IsXTransConstrained(self): return _ivaria.iJoint_IsXTransConstrained(self)
    def IsYTransConstrained(self): return _ivaria.iJoint_IsYTransConstrained(self)
    def IsZTransConstrained(self): return _ivaria.iJoint_IsZTransConstrained(self)
    def SetMinimumDistance(self, *args): return _ivaria.iJoint_SetMinimumDistance(self, *args)
    def GetMinimumDistance(self): return _ivaria.iJoint_GetMinimumDistance(self)
    def SetMaximumDistance(self, *args): return _ivaria.iJoint_SetMaximumDistance(self, *args)
    def GetMaximumDistance(self): return _ivaria.iJoint_GetMaximumDistance(self)
    def SetRotConstraints(self, *args): return _ivaria.iJoint_SetRotConstraints(self, *args)
    def IsXRotConstrained(self): return _ivaria.iJoint_IsXRotConstrained(self)
    def IsYRotConstrained(self): return _ivaria.iJoint_IsYRotConstrained(self)
    def IsZRotConstrained(self): return _ivaria.iJoint_IsZRotConstrained(self)
    def SetMinimumAngle(self, *args): return _ivaria.iJoint_SetMinimumAngle(self, *args)
    def GetMinimumAngle(self): return _ivaria.iJoint_GetMinimumAngle(self)
    def SetMaximumAngle(self, *args): return _ivaria.iJoint_SetMaximumAngle(self, *args)
    def GetMaximumAngle(self): return _ivaria.iJoint_GetMaximumAngle(self)
    def SetBounce(self, *args): return _ivaria.iJoint_SetBounce(self, *args)
    def GetBounce(self): return _ivaria.iJoint_GetBounce(self)
    def SetDesiredVelocity(self, *args): return _ivaria.iJoint_SetDesiredVelocity(self, *args)
    def GetDesiredVelocity(self): return _ivaria.iJoint_GetDesiredVelocity(self)
    def SetMaxForce(self, *args): return _ivaria.iJoint_SetMaxForce(self, *args)
    def GetMaxForce(self): return _ivaria.iJoint_GetMaxForce(self)
    def SetAngularConstraintAxis(self, *args): return _ivaria.iJoint_SetAngularConstraintAxis(self, *args)
    def GetAngularConstraintAxis(self, *args): return _ivaria.iJoint_GetAngularConstraintAxis(self, *args)
    def RebuildJoint(self): return _ivaria.iJoint_RebuildJoint(self)
    scfGetVersion = staticmethod(_ivaria.iJoint_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iJoint
    __del__ = lambda self : None;
iJoint_swigregister = _ivaria.iJoint_swigregister
iJoint_swigregister(iJoint)

def iJoint_scfGetVersion():
  return _ivaria.iJoint_scfGetVersion()
iJoint_scfGetVersion = _ivaria.iJoint_scfGetVersion

class iODEFrameUpdateCallback(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Execute(self, *args): return _ivaria.iODEFrameUpdateCallback_Execute(self, *args)
    __swig_destroy__ = _ivaria.delete_iODEFrameUpdateCallback
    __del__ = lambda self : None;
iODEFrameUpdateCallback_swigregister = _ivaria.iODEFrameUpdateCallback_swigregister
iODEFrameUpdateCallback_swigregister(iODEFrameUpdateCallback)

class iODEDynamicState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetGlobalERP(self, *args): return _ivaria.iODEDynamicState_SetGlobalERP(self, *args)
    def GlobalERP(self): return _ivaria.iODEDynamicState_GlobalERP(self)
    def SetGlobalCFM(self, *args): return _ivaria.iODEDynamicState_SetGlobalCFM(self, *args)
    def GlobalCFM(self): return _ivaria.iODEDynamicState_GlobalCFM(self)
    def EnableStepFast(self, *args): return _ivaria.iODEDynamicState_EnableStepFast(self, *args)
    def StepFastEnabled(self): return _ivaria.iODEDynamicState_StepFastEnabled(self)
    def SetStepFastIterations(self, *args): return _ivaria.iODEDynamicState_SetStepFastIterations(self, *args)
    def StepFastIterations(self): return _ivaria.iODEDynamicState_StepFastIterations(self)
    def EnableQuickStep(self, *args): return _ivaria.iODEDynamicState_EnableQuickStep(self, *args)
    def QuickStepEnabled(self): return _ivaria.iODEDynamicState_QuickStepEnabled(self)
    def SetQuickStepIterations(self, *args): return _ivaria.iODEDynamicState_SetQuickStepIterations(self, *args)
    def QuickStepIterations(self): return _ivaria.iODEDynamicState_QuickStepIterations(self)
    def EnableFrameRate(self, *args): return _ivaria.iODEDynamicState_EnableFrameRate(self, *args)
    def FrameRateEnabled(self): return _ivaria.iODEDynamicState_FrameRateEnabled(self)
    def SetFrameRate(self, *args): return _ivaria.iODEDynamicState_SetFrameRate(self, *args)
    def FrameRate(self): return _ivaria.iODEDynamicState_FrameRate(self)
    def SetFrameLimit(self, *args): return _ivaria.iODEDynamicState_SetFrameLimit(self, *args)
    def FrameLimit(self): return _ivaria.iODEDynamicState_FrameLimit(self)
    def AddFrameUpdateCallback(self, *args): return _ivaria.iODEDynamicState_AddFrameUpdateCallback(self, *args)
    def RemoveFrameUpdateCallback(self, *args): return _ivaria.iODEDynamicState_RemoveFrameUpdateCallback(self, *args)
    def EnableEventProcessing(self, *args): return _ivaria.iODEDynamicState_EnableEventProcessing(self, *args)
    def EventProcessingEnabled(self): return _ivaria.iODEDynamicState_EventProcessingEnabled(self)
    def EnableFastObjects(self, *args): return _ivaria.iODEDynamicState_EnableFastObjects(self, *args)
    def FastObjectsEnabled(self): return _ivaria.iODEDynamicState_FastObjectsEnabled(self)
    scfGetVersion = staticmethod(_ivaria.iODEDynamicState_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEDynamicState
    __del__ = lambda self : None;
iODEDynamicState_swigregister = _ivaria.iODEDynamicState_swigregister
iODEDynamicState_swigregister(iODEDynamicState)

def iODEDynamicState_scfGetVersion():
  return _ivaria.iODEDynamicState_scfGetVersion()
iODEDynamicState_scfGetVersion = _ivaria.iODEDynamicState_scfGetVersion

class iODEDynamicSystemState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetERP(self, *args): return _ivaria.iODEDynamicSystemState_SetERP(self, *args)
    def ERP(self): return _ivaria.iODEDynamicSystemState_ERP(self)
    def SetCFM(self, *args): return _ivaria.iODEDynamicSystemState_SetCFM(self, *args)
    def CFM(self): return _ivaria.iODEDynamicSystemState_CFM(self)
    def EnableStepFast(self, *args): return _ivaria.iODEDynamicSystemState_EnableStepFast(self, *args)
    def StepFastEnabled(self): return _ivaria.iODEDynamicSystemState_StepFastEnabled(self)
    def SetStepFastIterations(self, *args): return _ivaria.iODEDynamicSystemState_SetStepFastIterations(self, *args)
    def StepFastIterations(self): return _ivaria.iODEDynamicSystemState_StepFastIterations(self)
    def EnableQuickStep(self, *args): return _ivaria.iODEDynamicSystemState_EnableQuickStep(self, *args)
    def QuickStepEnabled(self): return _ivaria.iODEDynamicSystemState_QuickStepEnabled(self)
    def SetQuickStepIterations(self, *args): return _ivaria.iODEDynamicSystemState_SetQuickStepIterations(self, *args)
    def QuickStepIterations(self): return _ivaria.iODEDynamicSystemState_QuickStepIterations(self)
    def EnableAutoDisable(self, *args): return _ivaria.iODEDynamicSystemState_EnableAutoDisable(self, *args)
    def AutoDisableEnabled(self): return _ivaria.iODEDynamicSystemState_AutoDisableEnabled(self)
    def SetAutoDisableParams(self, *args): return _ivaria.iODEDynamicSystemState_SetAutoDisableParams(self, *args)
    def EnableFrameRate(self, *args): return _ivaria.iODEDynamicSystemState_EnableFrameRate(self, *args)
    def FrameRateEnabled(self): return _ivaria.iODEDynamicSystemState_FrameRateEnabled(self)
    def SetFrameRate(self, *args): return _ivaria.iODEDynamicSystemState_SetFrameRate(self, *args)
    def FrameRate(self): return _ivaria.iODEDynamicSystemState_FrameRate(self)
    def SetFrameLimit(self, *args): return _ivaria.iODEDynamicSystemState_SetFrameLimit(self, *args)
    def FrameLimit(self): return _ivaria.iODEDynamicSystemState_FrameLimit(self)
    def AddFrameUpdateCallback(self, *args): return _ivaria.iODEDynamicSystemState_AddFrameUpdateCallback(self, *args)
    def RemoveFrameUpdateCallback(self, *args): return _ivaria.iODEDynamicSystemState_RemoveFrameUpdateCallback(self, *args)
    def EnableFastObjects(self, *args): return _ivaria.iODEDynamicSystemState_EnableFastObjects(self, *args)
    def FastObjectsEnabled(self): return _ivaria.iODEDynamicSystemState_FastObjectsEnabled(self)
    def CreateBallJoint(self): return _ivaria.iODEDynamicSystemState_CreateBallJoint(self)
    def CreateHingeJoint(self): return _ivaria.iODEDynamicSystemState_CreateHingeJoint(self)
    def CreateHinge2Joint(self): return _ivaria.iODEDynamicSystemState_CreateHinge2Joint(self)
    def CreateAMotorJoint(self): return _ivaria.iODEDynamicSystemState_CreateAMotorJoint(self)
    def CreateUniversalJoint(self): return _ivaria.iODEDynamicSystemState_CreateUniversalJoint(self)
    def CreateSliderJoint(self): return _ivaria.iODEDynamicSystemState_CreateSliderJoint(self)
    def RemoveJoint(self, *args): return _ivaria.iODEDynamicSystemState_RemoveJoint(self, *args)
    def SetContactMaxCorrectingVel(self, *args): return _ivaria.iODEDynamicSystemState_SetContactMaxCorrectingVel(self, *args)
    def GetContactMaxCorrectingVel(self): return _ivaria.iODEDynamicSystemState_GetContactMaxCorrectingVel(self)
    def SetContactSurfaceLayer(self, *args): return _ivaria.iODEDynamicSystemState_SetContactSurfaceLayer(self, *args)
    def GetContactSurfaceLayer(self): return _ivaria.iODEDynamicSystemState_GetContactSurfaceLayer(self)
    def EnableOldInertia(self, *args): return _ivaria.iODEDynamicSystemState_EnableOldInertia(self, *args)
    def IsOldInertiaEnabled(self): return _ivaria.iODEDynamicSystemState_IsOldInertiaEnabled(self)
    scfGetVersion = staticmethod(_ivaria.iODEDynamicSystemState_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEDynamicSystemState
    __del__ = lambda self : None;
iODEDynamicSystemState_swigregister = _ivaria.iODEDynamicSystemState_swigregister
iODEDynamicSystemState_swigregister(iODEDynamicSystemState)

def iODEDynamicSystemState_scfGetVersion():
  return _ivaria.iODEDynamicSystemState_scfGetVersion()
iODEDynamicSystemState_scfGetVersion = _ivaria.iODEDynamicSystemState_scfGetVersion

CS_ODE_JOINT_TYPE_UNKNOWN = _ivaria.CS_ODE_JOINT_TYPE_UNKNOWN
CS_ODE_JOINT_TYPE_BALL = _ivaria.CS_ODE_JOINT_TYPE_BALL
CS_ODE_JOINT_TYPE_HINGE = _ivaria.CS_ODE_JOINT_TYPE_HINGE
CS_ODE_JOINT_TYPE_SLIDER = _ivaria.CS_ODE_JOINT_TYPE_SLIDER
CS_ODE_JOINT_TYPE_CONTACT = _ivaria.CS_ODE_JOINT_TYPE_CONTACT
CS_ODE_JOINT_TYPE_UNIVERSAL = _ivaria.CS_ODE_JOINT_TYPE_UNIVERSAL
CS_ODE_JOINT_TYPE_HINGE2 = _ivaria.CS_ODE_JOINT_TYPE_HINGE2
CS_ODE_JOINT_TYPE_FIXED = _ivaria.CS_ODE_JOINT_TYPE_FIXED
CS_ODE_JOINT_TYPE_AMOTOR = _ivaria.CS_ODE_JOINT_TYPE_AMOTOR
class iODEJointState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetType(self): return _ivaria.iODEJointState_GetType(self)
    def SetLoStop(self, *args): return _ivaria.iODEJointState_SetLoStop(self, *args)
    def SetHiStop(self, *args): return _ivaria.iODEJointState_SetHiStop(self, *args)
    def SetVel(self, *args): return _ivaria.iODEJointState_SetVel(self, *args)
    def SetFMax(self, *args): return _ivaria.iODEJointState_SetFMax(self, *args)
    def SetFudgeFactor(self, *args): return _ivaria.iODEJointState_SetFudgeFactor(self, *args)
    def SetBounce(self, *args): return _ivaria.iODEJointState_SetBounce(self, *args)
    def SetCFM(self, *args): return _ivaria.iODEJointState_SetCFM(self, *args)
    def SetStopERP(self, *args): return _ivaria.iODEJointState_SetStopERP(self, *args)
    def SetStopCFM(self, *args): return _ivaria.iODEJointState_SetStopCFM(self, *args)
    def SetSuspensionERP(self, *args): return _ivaria.iODEJointState_SetSuspensionERP(self, *args)
    def SetSuspensionCFM(self, *args): return _ivaria.iODEJointState_SetSuspensionCFM(self, *args)
    def GetLoStop(self): return _ivaria.iODEJointState_GetLoStop(self)
    def GetHiStop(self): return _ivaria.iODEJointState_GetHiStop(self)
    def GetVel(self): return _ivaria.iODEJointState_GetVel(self)
    def GetMaxForce(self): return _ivaria.iODEJointState_GetMaxForce(self)
    def GetFudgeFactor(self): return _ivaria.iODEJointState_GetFudgeFactor(self)
    def GetBounce(self): return _ivaria.iODEJointState_GetBounce(self)
    def GetCFM(self): return _ivaria.iODEJointState_GetCFM(self)
    def GetStopERP(self): return _ivaria.iODEJointState_GetStopERP(self)
    def GetStopCFM(self): return _ivaria.iODEJointState_GetStopCFM(self)
    def GetSuspensionERP(self): return _ivaria.iODEJointState_GetSuspensionERP(self)
    def GetSuspensionCFM(self): return _ivaria.iODEJointState_GetSuspensionCFM(self)
    scfGetVersion = staticmethod(_ivaria.iODEJointState_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEJointState
    __del__ = lambda self : None;
iODEJointState_swigregister = _ivaria.iODEJointState_swigregister
iODEJointState_swigregister(iODEJointState)

def iODEJointState_scfGetVersion():
  return _ivaria.iODEJointState_scfGetVersion()
iODEJointState_scfGetVersion = _ivaria.iODEJointState_scfGetVersion

class iODEGeneralJointState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetLoStop(self, *args): return _ivaria.iODEGeneralJointState_SetLoStop(self, *args)
    def SetHiStop(self, *args): return _ivaria.iODEGeneralJointState_SetHiStop(self, *args)
    def SetVel(self, *args): return _ivaria.iODEGeneralJointState_SetVel(self, *args)
    def SetFMax(self, *args): return _ivaria.iODEGeneralJointState_SetFMax(self, *args)
    def SetFudgeFactor(self, *args): return _ivaria.iODEGeneralJointState_SetFudgeFactor(self, *args)
    def SetBounce(self, *args): return _ivaria.iODEGeneralJointState_SetBounce(self, *args)
    def SetCFM(self, *args): return _ivaria.iODEGeneralJointState_SetCFM(self, *args)
    def SetStopERP(self, *args): return _ivaria.iODEGeneralJointState_SetStopERP(self, *args)
    def SetStopCFM(self, *args): return _ivaria.iODEGeneralJointState_SetStopCFM(self, *args)
    def SetSuspensionERP(self, *args): return _ivaria.iODEGeneralJointState_SetSuspensionERP(self, *args)
    def SetSuspensionCFM(self, *args): return _ivaria.iODEGeneralJointState_SetSuspensionCFM(self, *args)
    def GetLoStop(self, *args): return _ivaria.iODEGeneralJointState_GetLoStop(self, *args)
    def GetHiStop(self, *args): return _ivaria.iODEGeneralJointState_GetHiStop(self, *args)
    def GetVel(self, *args): return _ivaria.iODEGeneralJointState_GetVel(self, *args)
    def GetFMax(self, *args): return _ivaria.iODEGeneralJointState_GetFMax(self, *args)
    def GetFudgeFactor(self, *args): return _ivaria.iODEGeneralJointState_GetFudgeFactor(self, *args)
    def GetBounce(self, *args): return _ivaria.iODEGeneralJointState_GetBounce(self, *args)
    def GetCFM(self, *args): return _ivaria.iODEGeneralJointState_GetCFM(self, *args)
    def GetStopERP(self, *args): return _ivaria.iODEGeneralJointState_GetStopERP(self, *args)
    def GetStopCFM(self, *args): return _ivaria.iODEGeneralJointState_GetStopCFM(self, *args)
    def GetSuspensionERP(self, *args): return _ivaria.iODEGeneralJointState_GetSuspensionERP(self, *args)
    def GetSuspensionCFM(self, *args): return _ivaria.iODEGeneralJointState_GetSuspensionCFM(self, *args)
    def Attach(self, *args): return _ivaria.iODEGeneralJointState_Attach(self, *args)
    def GetAttachedBody(self, *args): return _ivaria.iODEGeneralJointState_GetAttachedBody(self, *args)
    def GetFeedbackForce1(self): return _ivaria.iODEGeneralJointState_GetFeedbackForce1(self)
    def GetFeedbackTorque1(self): return _ivaria.iODEGeneralJointState_GetFeedbackTorque1(self)
    def GetFeedbackForce2(self): return _ivaria.iODEGeneralJointState_GetFeedbackForce2(self)
    def GetFeedbackTorque2(self): return _ivaria.iODEGeneralJointState_GetFeedbackTorque2(self)
    __swig_destroy__ = _ivaria.delete_iODEGeneralJointState
    __del__ = lambda self : None;
iODEGeneralJointState_swigregister = _ivaria.iODEGeneralJointState_swigregister
iODEGeneralJointState_swigregister(iODEGeneralJointState)

class iODESliderJoint(iODEGeneralJointState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetSliderAxis(self, *args): return _ivaria.iODESliderJoint_SetSliderAxis(self, *args)
    def GetSliderAxis(self): return _ivaria.iODESliderJoint_GetSliderAxis(self)
    def GetSliderPosition(self): return _ivaria.iODESliderJoint_GetSliderPosition(self)
    def GetSliderPositionRate(self): return _ivaria.iODESliderJoint_GetSliderPositionRate(self)
    scfGetVersion = staticmethod(_ivaria.iODESliderJoint_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODESliderJoint
    __del__ = lambda self : None;
iODESliderJoint_swigregister = _ivaria.iODESliderJoint_swigregister
iODESliderJoint_swigregister(iODESliderJoint)

def iODESliderJoint_scfGetVersion():
  return _ivaria.iODESliderJoint_scfGetVersion()
iODESliderJoint_scfGetVersion = _ivaria.iODESliderJoint_scfGetVersion

class iODEUniversalJoint(iODEGeneralJointState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetUniversalAnchor(self, *args): return _ivaria.iODEUniversalJoint_SetUniversalAnchor(self, *args)
    def SetUniversalAxis1(self, *args): return _ivaria.iODEUniversalJoint_SetUniversalAxis1(self, *args)
    def SetUniversalAxis2(self, *args): return _ivaria.iODEUniversalJoint_SetUniversalAxis2(self, *args)
    def GetUniversalAnchor1(self): return _ivaria.iODEUniversalJoint_GetUniversalAnchor1(self)
    def GetUniversalAnchor2(self): return _ivaria.iODEUniversalJoint_GetUniversalAnchor2(self)
    def GetUniversalAxis1(self): return _ivaria.iODEUniversalJoint_GetUniversalAxis1(self)
    def GetUniversalAxis2(self): return _ivaria.iODEUniversalJoint_GetUniversalAxis2(self)
    scfGetVersion = staticmethod(_ivaria.iODEUniversalJoint_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEUniversalJoint
    __del__ = lambda self : None;
iODEUniversalJoint_swigregister = _ivaria.iODEUniversalJoint_swigregister
iODEUniversalJoint_swigregister(iODEUniversalJoint)

def iODEUniversalJoint_scfGetVersion():
  return _ivaria.iODEUniversalJoint_scfGetVersion()
iODEUniversalJoint_scfGetVersion = _ivaria.iODEUniversalJoint_scfGetVersion

CS_ODE_AMOTOR_MODE_UNKNOWN = _ivaria.CS_ODE_AMOTOR_MODE_UNKNOWN
CS_ODE_AMOTOR_MODE_USER = _ivaria.CS_ODE_AMOTOR_MODE_USER
CS_ODE_AMOTOR_MODE_EULER = _ivaria.CS_ODE_AMOTOR_MODE_EULER
CS_ODE_AMOTOR_MODE_LAST = _ivaria.CS_ODE_AMOTOR_MODE_LAST
class iODEAMotorJoint(iODEGeneralJointState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetAMotorMode(self, *args): return _ivaria.iODEAMotorJoint_SetAMotorMode(self, *args)
    def GetAMotorMode(self): return _ivaria.iODEAMotorJoint_GetAMotorMode(self)
    def SetAMotorNumAxes(self, *args): return _ivaria.iODEAMotorJoint_SetAMotorNumAxes(self, *args)
    def GetAMotorNumAxes(self): return _ivaria.iODEAMotorJoint_GetAMotorNumAxes(self)
    def SetAMotorAxis(self, *args): return _ivaria.iODEAMotorJoint_SetAMotorAxis(self, *args)
    def GetAMotorAxis(self, *args): return _ivaria.iODEAMotorJoint_GetAMotorAxis(self, *args)
    def GetAMotorAxisRelOrientation(self, *args): return _ivaria.iODEAMotorJoint_GetAMotorAxisRelOrientation(self, *args)
    def SetAMotorAngle(self, *args): return _ivaria.iODEAMotorJoint_SetAMotorAngle(self, *args)
    def GetAMotorAngle(self, *args): return _ivaria.iODEAMotorJoint_GetAMotorAngle(self, *args)
    def GetAMotorAngleRate(self, *args): return _ivaria.iODEAMotorJoint_GetAMotorAngleRate(self, *args)
    scfGetVersion = staticmethod(_ivaria.iODEAMotorJoint_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEAMotorJoint
    __del__ = lambda self : None;
iODEAMotorJoint_swigregister = _ivaria.iODEAMotorJoint_swigregister
iODEAMotorJoint_swigregister(iODEAMotorJoint)

def iODEAMotorJoint_scfGetVersion():
  return _ivaria.iODEAMotorJoint_scfGetVersion()
iODEAMotorJoint_scfGetVersion = _ivaria.iODEAMotorJoint_scfGetVersion

class iODEHinge2Joint(iODEGeneralJointState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetHingeAnchor(self, *args): return _ivaria.iODEHinge2Joint_SetHingeAnchor(self, *args)
    def SetHingeAxis1(self, *args): return _ivaria.iODEHinge2Joint_SetHingeAxis1(self, *args)
    def SetHingeAxis2(self, *args): return _ivaria.iODEHinge2Joint_SetHingeAxis2(self, *args)
    def GetHingeAnchor1(self): return _ivaria.iODEHinge2Joint_GetHingeAnchor1(self)
    def GetHingeAnchor2(self): return _ivaria.iODEHinge2Joint_GetHingeAnchor2(self)
    def GetHingeAxis1(self): return _ivaria.iODEHinge2Joint_GetHingeAxis1(self)
    def GetHingeAxis2(self): return _ivaria.iODEHinge2Joint_GetHingeAxis2(self)
    def GetHingeAngle(self): return _ivaria.iODEHinge2Joint_GetHingeAngle(self)
    def GetHingeAngleRate1(self): return _ivaria.iODEHinge2Joint_GetHingeAngleRate1(self)
    def GetHingeAngleRate2(self): return _ivaria.iODEHinge2Joint_GetHingeAngleRate2(self)
    def GetAnchorError(self): return _ivaria.iODEHinge2Joint_GetAnchorError(self)
    scfGetVersion = staticmethod(_ivaria.iODEHinge2Joint_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEHinge2Joint
    __del__ = lambda self : None;
iODEHinge2Joint_swigregister = _ivaria.iODEHinge2Joint_swigregister
iODEHinge2Joint_swigregister(iODEHinge2Joint)

def iODEHinge2Joint_scfGetVersion():
  return _ivaria.iODEHinge2Joint_scfGetVersion()
iODEHinge2Joint_scfGetVersion = _ivaria.iODEHinge2Joint_scfGetVersion

class iODEHingeJoint(iODEGeneralJointState):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetHingeAnchor(self, *args): return _ivaria.iODEHingeJoint_SetHingeAnchor(self, *args)
    def SetHingeAxis(self, *args): return _ivaria.iODEHingeJoint_SetHingeAxis(self, *args)
    def GetHingeAnchor1(self): return _ivaria.iODEHingeJoint_GetHingeAnchor1(self)
    def GetHingeAnchor2(self): return _ivaria.iODEHingeJoint_GetHingeAnchor2(self)
    def GetHingeAxis(self): return _ivaria.iODEHingeJoint_GetHingeAxis(self)
    def GetHingeAngle(self): return _ivaria.iODEHingeJoint_GetHingeAngle(self)
    def GetHingeAngleRate(self): return _ivaria.iODEHingeJoint_GetHingeAngleRate(self)
    def GetAnchorError(self): return _ivaria.iODEHingeJoint_GetAnchorError(self)
    scfGetVersion = staticmethod(_ivaria.iODEHingeJoint_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEHingeJoint
    __del__ = lambda self : None;
iODEHingeJoint_swigregister = _ivaria.iODEHingeJoint_swigregister
iODEHingeJoint_swigregister(iODEHingeJoint)

def iODEHingeJoint_scfGetVersion():
  return _ivaria.iODEHingeJoint_scfGetVersion()
iODEHingeJoint_scfGetVersion = _ivaria.iODEHingeJoint_scfGetVersion

class iODEBallJoint(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetBallAnchor(self, *args): return _ivaria.iODEBallJoint_SetBallAnchor(self, *args)
    def GetBallAnchor1(self): return _ivaria.iODEBallJoint_GetBallAnchor1(self)
    def GetBallAnchor2(self): return _ivaria.iODEBallJoint_GetBallAnchor2(self)
    def GetAnchorError(self): return _ivaria.iODEBallJoint_GetAnchorError(self)
    def Attach(self, *args): return _ivaria.iODEBallJoint_Attach(self, *args)
    def GetAttachedBody(self, *args): return _ivaria.iODEBallJoint_GetAttachedBody(self, *args)
    def GetFeedbackForce1(self): return _ivaria.iODEBallJoint_GetFeedbackForce1(self)
    def GetFeedbackTorque1(self): return _ivaria.iODEBallJoint_GetFeedbackTorque1(self)
    def GetFeedbackForce2(self): return _ivaria.iODEBallJoint_GetFeedbackForce2(self)
    def GetFeedbackTorque2(self): return _ivaria.iODEBallJoint_GetFeedbackTorque2(self)
    scfGetVersion = staticmethod(_ivaria.iODEBallJoint_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iODEBallJoint
    __del__ = lambda self : None;
iODEBallJoint_swigregister = _ivaria.iODEBallJoint_swigregister
iODEBallJoint_swigregister(iODEBallJoint)

def iODEBallJoint_scfGetVersion():
  return _ivaria.iODEBallJoint_scfGetVersion()
iODEBallJoint_scfGetVersion = _ivaria.iODEBallJoint_scfGetVersion

CS_SEQUENCE_LIGHTCHANGE_NONE = _ivaria.CS_SEQUENCE_LIGHTCHANGE_NONE
CS_SEQUENCE_LIGHTCHANGE_LESS = _ivaria.CS_SEQUENCE_LIGHTCHANGE_LESS
CS_SEQUENCE_LIGHTCHANGE_GREATER = _ivaria.CS_SEQUENCE_LIGHTCHANGE_GREATER
class iParameterESM(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetValue(self, params = None): return _ivaria.iParameterESM_GetValue(self, params)
    def IsConstant(self): return _ivaria.iParameterESM_IsConstant(self)
    __swig_destroy__ = _ivaria.delete_iParameterESM
    __del__ = lambda self : None;
iParameterESM_swigregister = _ivaria.iParameterESM_swigregister
iParameterESM_swigregister(iParameterESM)

class iEngineSequenceParameters(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetParameterCount(self): return _ivaria.iEngineSequenceParameters_GetParameterCount(self)
    def GetParameter(self, *args): return _ivaria.iEngineSequenceParameters_GetParameter(self, *args)
    def GetParameterIdx(self, *args): return _ivaria.iEngineSequenceParameters_GetParameterIdx(self, *args)
    def GetParameterName(self, *args): return _ivaria.iEngineSequenceParameters_GetParameterName(self, *args)
    def AddParameter(self, *args): return _ivaria.iEngineSequenceParameters_AddParameter(self, *args)
    def SetParameter(self, *args): return _ivaria.iEngineSequenceParameters_SetParameter(self, *args)
    def CreateParameterESM(self, *args): return _ivaria.iEngineSequenceParameters_CreateParameterESM(self, *args)
    __swig_destroy__ = _ivaria.delete_iEngineSequenceParameters
    __del__ = lambda self : None;
iEngineSequenceParameters_swigregister = _ivaria.iEngineSequenceParameters_swigregister
iEngineSequenceParameters_swigregister(iEngineSequenceParameters)

class iSequenceWrapper(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def QueryObject(self): return _ivaria.iSequenceWrapper_QueryObject(self)
    def GetSequence(self): return _ivaria.iSequenceWrapper_GetSequence(self)
    def CreateBaseParameterBlock(self): return _ivaria.iSequenceWrapper_CreateBaseParameterBlock(self)
    def GetBaseParameterBlock(self): return _ivaria.iSequenceWrapper_GetBaseParameterBlock(self)
    def CreateParameterBlock(self): return _ivaria.iSequenceWrapper_CreateParameterBlock(self)
    def AddOperationSetVariable(self, *args): return _ivaria.iSequenceWrapper_AddOperationSetVariable(self, *args)
    def AddOperationSetMaterial(self, *args): return _ivaria.iSequenceWrapper_AddOperationSetMaterial(self, *args)
    def AddOperationSetLight(self, *args): return _ivaria.iSequenceWrapper_AddOperationSetLight(self, *args)
    def AddOperationFadeLight(self, *args): return _ivaria.iSequenceWrapper_AddOperationFadeLight(self, *args)
    def AddOperationSetAmbient(self, *args): return _ivaria.iSequenceWrapper_AddOperationSetAmbient(self, *args)
    def AddOperationFadeAmbient(self, *args): return _ivaria.iSequenceWrapper_AddOperationFadeAmbient(self, *args)
    def AddOperationRandomDelay(self, *args): return _ivaria.iSequenceWrapper_AddOperationRandomDelay(self, *args)
    def AddOperationSetMeshColor(self, *args): return _ivaria.iSequenceWrapper_AddOperationSetMeshColor(self, *args)
    def AddOperationFadeMeshColor(self, *args): return _ivaria.iSequenceWrapper_AddOperationFadeMeshColor(self, *args)
    def AddOperationSetFog(self, *args): return _ivaria.iSequenceWrapper_AddOperationSetFog(self, *args)
    def AddOperationFadeFog(self, *args): return _ivaria.iSequenceWrapper_AddOperationFadeFog(self, *args)
    def AddOperationRotateDuration(self, *args): return _ivaria.iSequenceWrapper_AddOperationRotateDuration(self, *args)
    def AddOperationMoveDuration(self, *args): return _ivaria.iSequenceWrapper_AddOperationMoveDuration(self, *args)
    def AddOperationTriggerState(self, *args): return _ivaria.iSequenceWrapper_AddOperationTriggerState(self, *args)
    def AddOperationCheckTrigger(self, *args): return _ivaria.iSequenceWrapper_AddOperationCheckTrigger(self, *args)
    def AddOperationTestTrigger(self, *args): return _ivaria.iSequenceWrapper_AddOperationTestTrigger(self, *args)
    __swig_destroy__ = _ivaria.delete_iSequenceWrapper
    __del__ = lambda self : None;
iSequenceWrapper_swigregister = _ivaria.iSequenceWrapper_swigregister
iSequenceWrapper_swigregister(iSequenceWrapper)

class iSequenceTrigger(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def QueryObject(self): return _ivaria.iSequenceTrigger_QueryObject(self)
    def AddConditionInSector(self, *args): return _ivaria.iSequenceTrigger_AddConditionInSector(self, *args)
    def AddConditionSectorVisible(self, *args): return _ivaria.iSequenceTrigger_AddConditionSectorVisible(self, *args)
    def AddConditionMeshClick(self, *args): return _ivaria.iSequenceTrigger_AddConditionMeshClick(self, *args)
    def AddConditionLightChange(self, *args): return _ivaria.iSequenceTrigger_AddConditionLightChange(self, *args)
    def AddConditionManual(self): return _ivaria.iSequenceTrigger_AddConditionManual(self)
    def SetEnabled(self, *args): return _ivaria.iSequenceTrigger_SetEnabled(self, *args)
    def IsEnabled(self): return _ivaria.iSequenceTrigger_IsEnabled(self)
    def ClearConditions(self): return _ivaria.iSequenceTrigger_ClearConditions(self)
    def Trigger(self): return _ivaria.iSequenceTrigger_Trigger(self)
    def SetParameters(self, *args): return _ivaria.iSequenceTrigger_SetParameters(self, *args)
    def GetParameters(self): return _ivaria.iSequenceTrigger_GetParameters(self)
    def FireSequence(self, *args): return _ivaria.iSequenceTrigger_FireSequence(self, *args)
    def GetFiredSequence(self): return _ivaria.iSequenceTrigger_GetFiredSequence(self)
    def TestConditions(self, *args): return _ivaria.iSequenceTrigger_TestConditions(self, *args)
    def CheckState(self): return _ivaria.iSequenceTrigger_CheckState(self)
    def ForceFire(self, now = False): return _ivaria.iSequenceTrigger_ForceFire(self, now)
    __swig_destroy__ = _ivaria.delete_iSequenceTrigger
    __del__ = lambda self : None;
iSequenceTrigger_swigregister = _ivaria.iSequenceTrigger_swigregister
iSequenceTrigger_swigregister(iSequenceTrigger)

class iSequenceTimedOperation(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Do(self, *args): return _ivaria.iSequenceTimedOperation_Do(self, *args)
    __swig_destroy__ = _ivaria.delete_iSequenceTimedOperation
    __del__ = lambda self : None;
iSequenceTimedOperation_swigregister = _ivaria.iSequenceTimedOperation_swigregister
iSequenceTimedOperation_swigregister(iSequenceTimedOperation)

class iEngineSequenceManager(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetSequenceManager(self): return _ivaria.iEngineSequenceManager_GetSequenceManager(self)
    def CreateParameterESM(self, *args): return _ivaria.iEngineSequenceManager_CreateParameterESM(self, *args)
    def CreateTrigger(self, *args): return _ivaria.iEngineSequenceManager_CreateTrigger(self, *args)
    def RemoveTrigger(self, *args): return _ivaria.iEngineSequenceManager_RemoveTrigger(self, *args)
    def RemoveTriggers(self): return _ivaria.iEngineSequenceManager_RemoveTriggers(self)
    def GetTriggerCount(self): return _ivaria.iEngineSequenceManager_GetTriggerCount(self)
    def GetTrigger(self, *args): return _ivaria.iEngineSequenceManager_GetTrigger(self, *args)
    def FindTriggerByName(self, *args): return _ivaria.iEngineSequenceManager_FindTriggerByName(self, *args)
    def FireTriggerByName(self, *args): return _ivaria.iEngineSequenceManager_FireTriggerByName(self, *args)
    def CreateSequence(self, *args): return _ivaria.iEngineSequenceManager_CreateSequence(self, *args)
    def RemoveSequence(self, *args): return _ivaria.iEngineSequenceManager_RemoveSequence(self, *args)
    def RemoveSequences(self): return _ivaria.iEngineSequenceManager_RemoveSequences(self)
    def GetSequenceCount(self): return _ivaria.iEngineSequenceManager_GetSequenceCount(self)
    def GetSequence(self, *args): return _ivaria.iEngineSequenceManager_GetSequence(self, *args)
    def FindSequenceByName(self, *args): return _ivaria.iEngineSequenceManager_FindSequenceByName(self, *args)
    def RunSequenceByName(self, *args): return _ivaria.iEngineSequenceManager_RunSequenceByName(self, *args)
    def FireTimedOperation(self, *args): return _ivaria.iEngineSequenceManager_FireTimedOperation(self, *args)
    def DestroyTimedOperations(self, *args): return _ivaria.iEngineSequenceManager_DestroyTimedOperations(self, *args)
    scfGetVersion = staticmethod(_ivaria.iEngineSequenceManager_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iEngineSequenceManager
    __del__ = lambda self : None;
iEngineSequenceManager_swigregister = _ivaria.iEngineSequenceManager_swigregister
iEngineSequenceManager_swigregister(iEngineSequenceManager)

def iEngineSequenceManager_scfGetVersion():
  return _ivaria.iEngineSequenceManager_scfGetVersion()
iEngineSequenceManager_scfGetVersion = _ivaria.iEngineSequenceManager_scfGetVersion

class iMovieRecorder(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Start(self): return _ivaria.iMovieRecorder_Start(self)
    def Stop(self): return _ivaria.iMovieRecorder_Stop(self)
    def IsRecording(self): return _ivaria.iMovieRecorder_IsRecording(self)
    def Pause(self): return _ivaria.iMovieRecorder_Pause(self)
    def UnPause(self): return _ivaria.iMovieRecorder_UnPause(self)
    def IsPaused(self): return _ivaria.iMovieRecorder_IsPaused(self)
    def SetRecordingFile(self, *args): return _ivaria.iMovieRecorder_SetRecordingFile(self, *args)
    def SetFilenameFormat(self, *args): return _ivaria.iMovieRecorder_SetFilenameFormat(self, *args)
    scfGetVersion = staticmethod(_ivaria.iMovieRecorder_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iMovieRecorder
    __del__ = lambda self : None;
iMovieRecorder_swigregister = _ivaria.iMovieRecorder_swigregister
iMovieRecorder_swigregister(iMovieRecorder)

def iMovieRecorder_scfGetVersion():
  return _ivaria.iMovieRecorder_scfGetVersion()
iMovieRecorder_scfGetVersion = _ivaria.iMovieRecorder_scfGetVersion

class iMapNode(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def QueryObject(self): return _ivaria.iMapNode_QueryObject(self)
    def SetPosition(self, *args): return _ivaria.iMapNode_SetPosition(self, *args)
    def GetPosition(self): return _ivaria.iMapNode_GetPosition(self)
    def SetXVector(self, *args): return _ivaria.iMapNode_SetXVector(self, *args)
    def GetXVector(self): return _ivaria.iMapNode_GetXVector(self)
    def SetYVector(self, *args): return _ivaria.iMapNode_SetYVector(self, *args)
    def GetYVector(self): return _ivaria.iMapNode_GetYVector(self)
    def SetZVector(self, *args): return _ivaria.iMapNode_SetZVector(self, *args)
    def GetZVector(self): return _ivaria.iMapNode_GetZVector(self)
    def SetSector(self, *args): return _ivaria.iMapNode_SetSector(self, *args)
    def GetSector(self): return _ivaria.iMapNode_GetSector(self)
    scfGetVersion = staticmethod(_ivaria.iMapNode_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iMapNode
    __del__ = lambda self : None;
iMapNode_swigregister = _ivaria.iMapNode_swigregister
iMapNode_swigregister(iMapNode)

def iMapNode_scfGetVersion():
  return _ivaria.iMapNode_scfGetVersion()
iMapNode_scfGetVersion = _ivaria.iMapNode_scfGetVersion

class iSequenceOperation(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Do(self, *args): return _ivaria.iSequenceOperation_Do(self, *args)
    def CleanupSequences(self): return _ivaria.iSequenceOperation_CleanupSequences(self)
    scfGetVersion = staticmethod(_ivaria.iSequenceOperation_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iSequenceOperation
    __del__ = lambda self : None;
iSequenceOperation_swigregister = _ivaria.iSequenceOperation_swigregister
iSequenceOperation_swigregister(iSequenceOperation)

def iSequenceOperation_scfGetVersion():
  return _ivaria.iSequenceOperation_scfGetVersion()
iSequenceOperation_scfGetVersion = _ivaria.iSequenceOperation_scfGetVersion

class iSequenceCondition(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Condition(self, *args): return _ivaria.iSequenceCondition_Condition(self, *args)
    scfGetVersion = staticmethod(_ivaria.iSequenceCondition_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iSequenceCondition
    __del__ = lambda self : None;
iSequenceCondition_swigregister = _ivaria.iSequenceCondition_swigregister
iSequenceCondition_swigregister(iSequenceCondition)

def iSequenceCondition_scfGetVersion():
  return _ivaria.iSequenceCondition_scfGetVersion()
iSequenceCondition_scfGetVersion = _ivaria.iSequenceCondition_scfGetVersion

class csSequenceOp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    next = _swig_property(_ivaria.csSequenceOp_next_get, _ivaria.csSequenceOp_next_set)
    prev = _swig_property(_ivaria.csSequenceOp_prev_get, _ivaria.csSequenceOp_prev_set)
    time = _swig_property(_ivaria.csSequenceOp_time_get, _ivaria.csSequenceOp_time_set)
    params = _swig_property(_ivaria.csSequenceOp_params_get, _ivaria.csSequenceOp_params_set)
    operation = _swig_property(_ivaria.csSequenceOp_operation_get, _ivaria.csSequenceOp_operation_set)
    sequence_id = _swig_property(_ivaria.csSequenceOp_sequence_id_get, _ivaria.csSequenceOp_sequence_id_set)
    def __init__(self): 
        this = _ivaria.new_csSequenceOp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ivaria.delete_csSequenceOp
    __del__ = lambda self : None;
csSequenceOp_swigregister = _ivaria.csSequenceOp_swigregister
csSequenceOp_swigregister(csSequenceOp)

class iSequence(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetFirstSequence(self): return _ivaria.iSequence_GetFirstSequence(self)
    def AddOperation(self, *args): return _ivaria.iSequence_AddOperation(self, *args)
    def AddRunSequence(self, *args): return _ivaria.iSequence_AddRunSequence(self, *args)
    def AddCondition(self, *args): return _ivaria.iSequence_AddCondition(self, *args)
    def AddLoop(self, *args): return _ivaria.iSequence_AddLoop(self, *args)
    def Clear(self): return _ivaria.iSequence_Clear(self)
    def IsEmpty(self): return _ivaria.iSequence_IsEmpty(self)
    scfGetVersion = staticmethod(_ivaria.iSequence_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iSequence
    __del__ = lambda self : None;
iSequence_swigregister = _ivaria.iSequence_swigregister
iSequence_swigregister(iSequence)

def iSequence_scfGetVersion():
  return _ivaria.iSequence_scfGetVersion()
iSequence_scfGetVersion = _ivaria.iSequence_scfGetVersion

class iSequenceManager(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Clear(self): return _ivaria.iSequenceManager_Clear(self)
    def IsEmpty(self): return _ivaria.iSequenceManager_IsEmpty(self)
    def Suspend(self): return _ivaria.iSequenceManager_Suspend(self)
    def Resume(self): return _ivaria.iSequenceManager_Resume(self)
    def IsSuspended(self): return _ivaria.iSequenceManager_IsSuspended(self)
    def TimeWarp(self, *args): return _ivaria.iSequenceManager_TimeWarp(self, *args)
    def GetMainTime(self): return _ivaria.iSequenceManager_GetMainTime(self)
    def GetDeltaTime(self): return _ivaria.iSequenceManager_GetDeltaTime(self)
    def NewSequence(self): return _ivaria.iSequenceManager_NewSequence(self)
    def RunSequence(self, *args): return _ivaria.iSequenceManager_RunSequence(self, *args)
    def DestroySequenceOperations(self, *args): return _ivaria.iSequenceManager_DestroySequenceOperations(self, *args)
    def GetUniqueID(self): return _ivaria.iSequenceManager_GetUniqueID(self)
    scfGetVersion = staticmethod(_ivaria.iSequenceManager_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iSequenceManager
    __del__ = lambda self : None;
iSequenceManager_swigregister = _ivaria.iSequenceManager_swigregister
iSequenceManager_swigregister(iSequenceManager)

def iSequenceManager_scfGetVersion():
  return _ivaria.iSequenceManager_scfGetVersion()
iSequenceManager_scfGetVersion = _ivaria.iSequenceManager_scfGetVersion

class iImageModifier(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetName(self): return _ivaria.iImageModifier_GetName(self)
    def Modify(self, *args): return _ivaria.iImageModifier_Modify(self, *args)
    scfGetVersion = staticmethod(_ivaria.iImageModifier_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iImageModifier
    __del__ = lambda self : None;
iImageModifier_swigregister = _ivaria.iImageModifier_swigregister
iImageModifier_swigregister(iImageModifier)

def iImageModifier_scfGetVersion():
  return _ivaria.iImageModifier_scfGetVersion()
iImageModifier_scfGetVersion = _ivaria.iImageModifier_scfGetVersion

class iBlobImage(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    scfGetVersion = staticmethod(_ivaria.iBlobImage_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iBlobImage
    __del__ = lambda self : None;
iBlobImage_swigregister = _ivaria.iBlobImage_swigregister
iBlobImage_swigregister(iBlobImage)

def iBlobImage_scfGetVersion():
  return _ivaria.iBlobImage_scfGetVersion()
iBlobImage_scfGetVersion = _ivaria.iBlobImage_scfGetVersion

class iMovingObject(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetViewPort(self, *args): return _ivaria.iMovingObject_SetViewPort(self, *args)
    def GetViewPort(self): return _ivaria.iMovingObject_GetViewPort(self)
    def GetID(self): return _ivaria.iMovingObject_GetID(self)
    def GetName(self): return _ivaria.iMovingObject_GetName(self)
    def GetLayer(self): return _ivaria.iMovingObject_GetLayer(self)
    def Update(self, *args): return _ivaria.iMovingObject_Update(self, *args)
    def Draw(self): return _ivaria.iMovingObject_Draw(self)
    def Move(self, *args): return _ivaria.iMovingObject_Move(self, *args)
    def Scale(self, *args): return _ivaria.iMovingObject_Scale(self, *args)
    def In(self, *args): return _ivaria.iMovingObject_In(self, *args)
    def GetX(self): return _ivaria.iMovingObject_GetX(self)
    def GetY(self): return _ivaria.iMovingObject_GetY(self)
    def GetWidth(self): return _ivaria.iMovingObject_GetWidth(self)
    def GetHeight(self): return _ivaria.iMovingObject_GetHeight(self)
    def GetRealX(self): return _ivaria.iMovingObject_GetRealX(self)
    def GetRealY(self): return _ivaria.iMovingObject_GetRealY(self)
    def Hide(self): return _ivaria.iMovingObject_Hide(self)
    def Show(self): return _ivaria.iMovingObject_Show(self)
    def IsHidden(self): return _ivaria.iMovingObject_IsHidden(self)
    def SetClickable(self, *args): return _ivaria.iMovingObject_SetClickable(self, *args)
    def IsClickable(self): return _ivaria.iMovingObject_IsClickable(self)
    def SetLineMover(self, *args): return _ivaria.iMovingObject_SetLineMover(self, *args)
    def SetPathMover(self, *args): return _ivaria.iMovingObject_SetPathMover(self, *args)
    def AddPathSegment(self, *args): return _ivaria.iMovingObject_AddPathSegment(self, *args)
    scfGetVersion = staticmethod(_ivaria.iMovingObject_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iMovingObject
    __del__ = lambda self : None;
iMovingObject_swigregister = _ivaria.iMovingObject_swigregister
iMovingObject_swigregister(iMovingObject)

def iMovingObject_scfGetVersion():
  return _ivaria.iMovingObject_scfGetVersion()
iMovingObject_scfGetVersion = _ivaria.iMovingObject_scfGetVersion

class iGeom(iMovingObject):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Box(self, *args): return _ivaria.iGeom_Box(self, *args)
    def Line(self, *args): return _ivaria.iGeom_Line(self, *args)
    def Text(self, *args): return _ivaria.iGeom_Text(self, *args)
    def Blob(self, *args): return _ivaria.iGeom_Blob(self, *args)
    def Remove(self, *args): return _ivaria.iGeom_Remove(self, *args)
    def ChangeColor(self, *args): return _ivaria.iGeom_ChangeColor(self, *args)
    def ChangeText(self, *args): return _ivaria.iGeom_ChangeText(self, *args)
    def ChangeBlobImage(self, *args): return _ivaria.iGeom_ChangeBlobImage(self, *args)
    def ScaleGeom(self, *args): return _ivaria.iGeom_ScaleGeom(self, *args)
    def GetGeomWidth(self, *args): return _ivaria.iGeom_GetGeomWidth(self, *args)
    def GetGeomHeight(self, *args): return _ivaria.iGeom_GetGeomHeight(self, *args)
    scfGetVersion = staticmethod(_ivaria.iGeom_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iGeom
    __del__ = lambda self : None;
iGeom_swigregister = _ivaria.iGeom_swigregister
iGeom_swigregister(iGeom)

def iGeom_scfGetVersion():
  return _ivaria.iGeom_scfGetVersion()
iGeom_scfGetVersion = _ivaria.iGeom_scfGetVersion

class iBlob(iMovingObject):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def AddImage(self, *args): return _ivaria.iBlob_AddImage(self, *args)
    def RemoveSecondaryImages(self): return _ivaria.iBlob_RemoveSecondaryImages(self)
    def SetModifier(self, *args): return _ivaria.iBlob_SetModifier(self, *args)
    def ClearModifier(self): return _ivaria.iBlob_ClearModifier(self)
    def SetAlpha(self, *args): return _ivaria.iBlob_SetAlpha(self, *args)
    def AnimateAlpha(self, *args): return _ivaria.iBlob_AnimateAlpha(self, *args)
    def SetHorizontalSwap(self, *args): return _ivaria.iBlob_SetHorizontalSwap(self, *args)
    def AddAnimationImage(self, *args): return _ivaria.iBlob_AddAnimationImage(self, *args)
    def PlayAnimation(self, *args): return _ivaria.iBlob_PlayAnimation(self, *args)
    def StopAnimations(self): return _ivaria.iBlob_StopAnimations(self)
    scfGetVersion = staticmethod(_ivaria.iBlob_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iBlob
    __del__ = lambda self : None;
iBlob_swigregister = _ivaria.iBlob_swigregister
iBlob_swigregister(iBlob)

def iBlob_scfGetVersion():
  return _ivaria.iBlob_scfGetVersion()
iBlob_scfGetVersion = _ivaria.iBlob_scfGetVersion

class iBlobViewPort(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Scroll(self, *args): return _ivaria.iBlobViewPort_Scroll(self, *args)
    def GetScrollX(self): return _ivaria.iBlobViewPort_GetScrollX(self)
    def GetScrollY(self): return _ivaria.iBlobViewPort_GetScrollY(self)
    def ScrollRelative(self, *args): return _ivaria.iBlobViewPort_ScrollRelative(self, *args)
    def ScrollVisible(self, *args): return _ivaria.iBlobViewPort_ScrollVisible(self, *args)
    def ClearModifier(self): return _ivaria.iBlobViewPort_ClearModifier(self)
    def SetModifier(self, *args): return _ivaria.iBlobViewPort_SetModifier(self, *args)
    scfGetVersion = staticmethod(_ivaria.iBlobViewPort_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iBlobViewPort
    __del__ = lambda self : None;
iBlobViewPort_swigregister = _ivaria.iBlobViewPort_swigregister
iBlobViewPort_swigregister(iBlobViewPort)

def iBlobViewPort_scfGetVersion():
  return _ivaria.iBlobViewPort_scfGetVersion()
iBlobViewPort_scfGetVersion = _ivaria.iBlobViewPort_scfGetVersion

class iBlobManager(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Update(self, *args): return _ivaria.iBlobManager_Update(self, *args)
    def GetGrayScaleImageModifier(self, *args): return _ivaria.iBlobManager_GetGrayScaleImageModifier(self, *args)
    def GetColorizedImageModifier(self, *args): return _ivaria.iBlobManager_GetColorizedImageModifier(self, *args)
    def GetBlurImageModifier(self, *args): return _ivaria.iBlobManager_GetBlurImageModifier(self, *args)
    def GetCombinedImageModifier(self, *args): return _ivaria.iBlobManager_GetCombinedImageModifier(self, *args)
    def LoadTexture(self, *args): return _ivaria.iBlobManager_LoadTexture(self, *args)
    def MapTexture(self, *args): return _ivaria.iBlobManager_MapTexture(self, *args)
    def CreateBlobViewPort(self, *args): return _ivaria.iBlobManager_CreateBlobViewPort(self, *args)
    def FindMovingObject(self, *args): return _ivaria.iBlobManager_FindMovingObject(self, *args)
    def CreateBlobImage(self, *args): return _ivaria.iBlobManager_CreateBlobImage(self, *args)
    def RemoveBlobImage(self, *args): return _ivaria.iBlobManager_RemoveBlobImage(self, *args)
    def RemoveBlobImages(self): return _ivaria.iBlobManager_RemoveBlobImages(self)
    def FindBlobImage(self, *args): return _ivaria.iBlobManager_FindBlobImage(self, *args)
    def CreateBlob(self, *args): return _ivaria.iBlobManager_CreateBlob(self, *args)
    def CreateGeom(self, *args): return _ivaria.iBlobManager_CreateGeom(self, *args)
    def RemoveMovingObject(self, *args): return _ivaria.iBlobManager_RemoveMovingObject(self, *args)
    def RemoveMovingObjects(self): return _ivaria.iBlobManager_RemoveMovingObjects(self)
    def MovingObjectToFront(self, *args): return _ivaria.iBlobManager_MovingObjectToFront(self, *args)
    def CheckCollision(self, *args): return _ivaria.iBlobManager_CheckCollision(self, *args)
    scfGetVersion = staticmethod(_ivaria.iBlobManager_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iBlobManager
    __del__ = lambda self : None;
iBlobManager_swigregister = _ivaria.iBlobManager_swigregister
iBlobManager_swigregister(iBlobManager)

def iBlobManager_scfGetVersion():
  return _ivaria.iBlobManager_scfGetVersion()
iBlobManager_scfGetVersion = _ivaria.iBlobManager_scfGetVersion

class iScriptValue(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    tInt = _ivaria.iScriptValue_tInt
    tFloat = _ivaria.iScriptValue_tFloat
    tDouble = _ivaria.iScriptValue_tDouble
    tString = _ivaria.iScriptValue_tString
    tBool = _ivaria.iScriptValue_tBool
    tObject = _ivaria.iScriptValue_tObject
    def GetScript(self): return _ivaria.iScriptValue_GetScript(self)
    def GetTypes(self): return _ivaria.iScriptValue_GetTypes(self)
    def GetInt(self): return _ivaria.iScriptValue_GetInt(self)
    def GetFloat(self): return _ivaria.iScriptValue_GetFloat(self)
    def GetDouble(self): return _ivaria.iScriptValue_GetDouble(self)
    def GetString(self): return _ivaria.iScriptValue_GetString(self)
    def GetBool(self): return _ivaria.iScriptValue_GetBool(self)
    def GetObject(self): return _ivaria.iScriptValue_GetObject(self)
    __swig_destroy__ = _ivaria.delete_iScriptValue
    __del__ = lambda self : None;
iScriptValue_swigregister = _ivaria.iScriptValue_swigregister
iScriptValue_swigregister(iScriptValue)

class iScriptObject(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetScript(self): return _ivaria.iScriptObject_GetScript(self)
    def GetClass(self): return _ivaria.iScriptObject_GetClass(self)
    def IsA(self, *args): return _ivaria.iScriptObject_IsA(self, *args)
    def IsType(self, *args): return _ivaria.iScriptObject_IsType(self, *args)
    def GetPointer(self): return _ivaria.iScriptObject_GetPointer(self)
    def SetPointer(self, *args): return _ivaria.iScriptObject_SetPointer(self, *args)
    def Call(self, *args): return _ivaria.iScriptObject_Call(self, *args)
    def SetFloat(self, *args): return _ivaria.iScriptObject_SetFloat(self, *args)
    def Set(self, *args): return _ivaria.iScriptObject_Set(self, *args)
    def SetTruth(self, *args): return _ivaria.iScriptObject_SetTruth(self, *args)
    def GetFloat(self, *args): return _ivaria.iScriptObject_GetFloat(self, *args)
    def Get(self, *args): return _ivaria.iScriptObject_Get(self, *args)
    def GetTruth(self, *args): return _ivaria.iScriptObject_GetTruth(self, *args)
    scfGetVersion = staticmethod(_ivaria.iScriptObject_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iScriptObject
    __del__ = lambda self : None;
iScriptObject_swigregister = _ivaria.iScriptObject_swigregister
iScriptObject_swigregister(iScriptObject)

def iScriptObject_scfGetVersion():
  return _ivaria.iScriptObject_scfGetVersion()
iScriptObject_scfGetVersion = _ivaria.iScriptObject_scfGetVersion

class iScript(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def RunText(self, *args): return _ivaria.iScript_RunText(self, *args)
    def LoadModule(self, *args): return _ivaria.iScript_LoadModule(self, *args)
    def LoadModuleNative(self, *args): return _ivaria.iScript_LoadModuleNative(self, *args)
    def Call(self, *args): return _ivaria.iScript_Call(self, *args)
    def RValue(self, *args): return _ivaria.iScript_RValue(self, *args)
    def New(self, *args): return _ivaria.iScript_New(self, *args)
    def Store(self, *args): return _ivaria.iScript_Store(self, *args)
    def Remove(self, *args): return _ivaria.iScript_Remove(self, *args)
    def NewObject(self, *args): return _ivaria.iScript_NewObject(self, *args)
    def RetrieveFloat(self, *args): return _ivaria.iScript_RetrieveFloat(self, *args)
    def Retrieve(self, *args): return _ivaria.iScript_Retrieve(self, *args)
    def GetTruth(self, *args): return _ivaria.iScript_GetTruth(self, *args)
    scfGetVersion = staticmethod(_ivaria.iScript_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iScript
    __del__ = lambda self : None;
iScript_swigregister = _ivaria.iScript_swigregister
iScript_swigregister(iScript)

def iScript_scfGetVersion():
  return _ivaria.iScript_scfGetVersion()
iScript_scfGetVersion = _ivaria.iScript_scfGetVersion

class iSimpleFormerState(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SetHeightmap(self, *args): return _ivaria.iSimpleFormerState_SetHeightmap(self, *args)
    def SetScale(self, *args): return _ivaria.iSimpleFormerState_SetScale(self, *args)
    def SetOffset(self, *args): return _ivaria.iSimpleFormerState_SetOffset(self, *args)
    def SetIntegerMap(self, *args): return _ivaria.iSimpleFormerState_SetIntegerMap(self, *args)
    def SetFloatMap(self, *args): return _ivaria.iSimpleFormerState_SetFloatMap(self, *args)
    def GetFloatMap(self): return _ivaria.iSimpleFormerState_GetFloatMap(self)
    def SetMaterialScale(self, *args): return _ivaria.iSimpleFormerState_SetMaterialScale(self, *args)
    scfGetVersion = staticmethod(_ivaria.iSimpleFormerState_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iSimpleFormerState
    __del__ = lambda self : None;
iSimpleFormerState_swigregister = _ivaria.iSimpleFormerState_swigregister
iSimpleFormerState_swigregister(iSimpleFormerState)

def iSimpleFormerState_scfGetVersion():
  return _ivaria.iSimpleFormerState_scfGetVersion()
iSimpleFormerState_scfGetVersion = _ivaria.iSimpleFormerState_scfGetVersion

class iTerraFormer(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetSampler(self, *args): return _ivaria.iTerraFormer_GetSampler(self, *args)
    def GetIntegerMapSize(self, *args): return _ivaria.iTerraFormer_GetIntegerMapSize(self, *args)
    def SampleFloat(self, *args): return _ivaria.iTerraFormer_SampleFloat(self, *args)
    def SampleVector2(self, *args): return _ivaria.iTerraFormer_SampleVector2(self, *args)
    def SampleVector3(self, *args): return _ivaria.iTerraFormer_SampleVector3(self, *args)
    def SampleInteger(self, *args): return _ivaria.iTerraFormer_SampleInteger(self, *args)
    def QueryObject(self): return _ivaria.iTerraFormer_QueryObject(self)
    scfGetVersion = staticmethod(_ivaria.iTerraFormer_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iTerraFormer
    __del__ = lambda self : None;
iTerraFormer_swigregister = _ivaria.iTerraFormer_swigregister
iTerraFormer_swigregister(iTerraFormer)

def iTerraFormer_scfGetVersion():
  return _ivaria.iTerraFormer_scfGetVersion()
iTerraFormer_scfGetVersion = _ivaria.iTerraFormer_scfGetVersion

class iTerraSampler(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def SampleFloat(self, *args): return _ivaria.iTerraSampler_SampleFloat(self, *args)
    def SampleVector2(self, *args): return _ivaria.iTerraSampler_SampleVector2(self, *args)
    def SampleVector3(self, *args): return _ivaria.iTerraSampler_SampleVector3(self, *args)
    def SampleInteger(self, *args): return _ivaria.iTerraSampler_SampleInteger(self, *args)
    def GetMaterialPalette(self): return _ivaria.iTerraSampler_GetMaterialPalette(self)
    def GetRegion(self): return _ivaria.iTerraSampler_GetRegion(self)
    def GetResolution(self, *args): return _ivaria.iTerraSampler_GetResolution(self, *args)
    def GetVersion(self): return _ivaria.iTerraSampler_GetVersion(self)
    def Cleanup(self): return _ivaria.iTerraSampler_Cleanup(self)
    scfGetVersion = staticmethod(_ivaria.iTerraSampler_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iTerraSampler
    __del__ = lambda self : None;
iTerraSampler_swigregister = _ivaria.iTerraSampler_swigregister
iTerraSampler_swigregister(iTerraSampler)

def iTerraSampler_scfGetVersion():
  return _ivaria.iTerraSampler_scfGetVersion()
iTerraSampler_scfGetVersion = _ivaria.iTerraSampler_scfGetVersion

class iTranslator(core.iBase):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def GetMsg(self, *args): return _ivaria.iTranslator_GetMsg(self, *args)
    scfGetVersion = staticmethod(_ivaria.iTranslator_scfGetVersion)
    __swig_destroy__ = _ivaria.delete_iTranslator
    __del__ = lambda self : None;
iTranslator_swigregister = _ivaria.iTranslator_swigregister
iTranslator_swigregister(iTranslator)

def iTranslator_scfGetVersion():
  return _ivaria.iTranslator_scfGetVersion()
iTranslator_scfGetVersion = _ivaria.iTranslator_scfGetVersion

def CS_REQUEST_REPORTERLISTENER ():
  return core.CS_REQUEST_PLUGIN("crystalspace.utilities.stdrep",
    iStandardReporterListener)
def CS_REQUEST_CONSOLEOUT ():
  return core.CS_REQUEST_PLUGIN("crystalspace.console.output.standard",
    iConsoleOutput)



