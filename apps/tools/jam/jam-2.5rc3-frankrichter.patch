This is a patch for Jam 2.5rc3 by Frank Richter <resqu@gmx.ch> (with a minor
addition to "Jamfile" by Eric Sunshine <sunshine@sunshineco.com> which allows
the bootstrap to work correctly when Jam is building itself).  It was created
for the Crystal Space cs-win32libs support package, but is not specific to that
package, and can be used for any project.  This custom version of Jam is
suitable for use with MSYS/Mingw and Cygwin.  It differs from the official
distribution in the following ways:

- Invokes commands via the Bourne shell (/bin/sh) rather than cmd.exe.
- Is dependent upon neither cygwin1.dll nor msys-1.0.dll.

Build from an MSYS or Cygwin shell prompt using the following command:

  make CC=gcc CFLAGS=-DMSYS

The complete patch can be found in the file jam-2.5rc3-frankricther.patch.

diff -u -r -d -N jam-2.5/execunix.c jam/execunix.c
--- jam-2.5/execunix.c	2003-04-23 00:45:50.000000000 -0400
+++ jam/execunix.c	2004-04-28 19:40:32.000000000 -0400
@@ -50,7 +50,7 @@
 # include <process.h>
 # endif
 
-# ifdef OS_NT 
+# if defined (OS_NT) || defined (OS_MSYS)
 # define USE_EXECNT
 # include <process.h>
 # define WIN32_LEAN_AND_MEAN
@@ -120,10 +120,10 @@
 	    exit( EXITBAD );
 	}
 
-# ifdef USE_EXECNT
+# if defined( USE_EXECNT ) && !defined(OS_MSYS)
 	if( !cmdtab[ slot ].tempfile )
 	{
-	    char *tempdir;
+	    char *tempdir, *p;
 
 	    if( !( tempdir = getenv( "TEMP" ) ) &&
 		!( tempdir = getenv( "TMP" ) ) )
@@ -166,6 +166,35 @@
 	}
 # endif
 
+# ifdef OS_MSYS
+	{
+	  char* str_quoted = cmdtab[ slot ].tempfile =
+	    malloc( strlen(string) * 4 + 3);
+	  char* p = string;
+	  strcpy (str_quoted, "\"");
+
+	  while (*p != 0)
+	  {
+	    if (*p == '\"')
+	      strcat (str_quoted, "\\\"");
+	    /*else if (*p == '\'')
+	      strcat (str_quoted, "\\\'");*/
+	    else if (*p == '\\')
+	      strcat (str_quoted, "\\\\");
+	    else
+	    {
+	      static char ch[2] = {0, 0};
+	      ch[0] = *p; 
+	      strcat (str_quoted, ch);
+	    }
+	    p++;
+	  }
+
+	  strcat (str_quoted, "\"");
+	  string = str_quoted;
+	}
+# endif
+
 	/* Forumulate argv */
 	/* If shell was defined, be prepared for % and ! subs. */
 	/* Otherwise, use stock /bin/sh (on unix) or cmd.exe (on NT). */
diff -u -r -d -N jam-2.5/filent.c jam/filent.c
--- jam-2.5/filent.c	2003-04-23 00:45:50.000000000 -0400
+++ jam/filent.c	2004-04-28 19:40:32.000000000 -0400
@@ -32,7 +32,7 @@
 # include "filesys.h"
 # include "pathsys.h"
 
-# ifdef OS_NT
+# if defined ( OS_NT ) || defined (OS_MSYS)
 
 # ifdef __BORLANDC__
 # if __BORLANDC__ < 0x550
@@ -240,7 +240,9 @@
 		*/
 
 		name = string_table + atoi( ar_hdr.ar_name + 1 );
-		endname = name + strlen( name );
+		endname = strchr (name, '/');
+		if (endname == 0)
+		  endname = name + strlen( name );
 	    }
 	    else
 	    {
diff -u -r -d -N jam-2.5/fileunix.c jam/fileunix.c
--- jam-2.5/fileunix.c	2003-04-23 00:45:51.000000000 -0400
+++ jam/fileunix.c	2004-04-28 19:40:32.000000000 -0400
@@ -54,7 +54,11 @@
 # include <unistd.h>
 # define STRUCT_DIRENT struct direct 
 # else
-# include <dirent.h>
+# ifdef OS_MSYS
+#  include "dirent_win32.h"
+# else
+#  include <dirent.h>
+# endif
 # define STRUCT_DIRENT struct dirent 
 # endif
 
@@ -64,7 +68,7 @@
 # endif
 
 # if defined( OS_MVS ) || \
-     defined( OS_INTERIX ) 
+     defined( OS_INTERIX ) || defined (OS_MSYS)
 
 #define	ARMAG	"!<arch>\n"
 #define	SARMAG	8
diff -u -r -d -N jam-2.5/headers.c jam/headers.c
--- jam-2.5/headers.c	2003-04-23 00:45:51.000000000 -0400
+++ jam/headers.c	2004-04-28 19:40:32.000000000 -0400
@@ -105,6 +105,9 @@
 
 	while( fgets( buf, sizeof( buf ), f ) )
 	{
+	  char* p = (buf && strlen (buf) > 0) ? &buf[strlen (buf) - 1] : 0;
+	  if (p && (*p == '\r')) *p = 0;
+	  
 	    for( i = 0; i < rec; i++ )
 		if( regexec( re[i], buf ) && re[i]->startp[1] )
 	    {
diff -u -r -d -N jam-2.5/Jambase jam/Jambase
--- jam-2.5/Jambase	2003-04-23 00:45:49.000000000 -0400
+++ jam/Jambase	2004-04-28 19:40:32.000000000 -0400
@@ -425,6 +425,13 @@
 	CC		?= gcc ;
 	YACC		?= bison -y ;
 
+    case MSYS :
+	CC		?= gcc ;
+	CCFLAGS		+= -DMSYS ;
+	JAMSHELL	?= sh -c ;
+	RANLIB		?= ranlib ;
+	SUFEXE		?= .exe ;
+
     case CYGWIN :	
 	CC		?= gcc ;
 	CCFLAGS 	+= -D__cygwin__ ;
diff -u -r -d -N jam-2.5/jambase.c jam/jambase.c
--- jam-2.5/jambase.c	2003-04-23 00:57:10.000000000 -0400
+++ jam/jambase.c	2004-04-28 19:40:32.000000000 -0400
@@ -241,6 +241,12 @@
 "case AMIGA :\n",
 "CC		?= gcc ;\n",
 "YACC		?= bison -y ;\n",
+"case MSYS :\n",
+"CC		?= gcc ;\n",
+"CCFLAGS		+= -DMSYS ;\n",
+"JAMSHELL	?= sh -c ;\n",
+"RANLIB		?= ranlib ;\n",
+"SUFEXE		?= .exe ;\n",
 "case CYGWIN :	\n",
 "CC		?= gcc ;\n",
 "CCFLAGS 	+= -D__cygwin__ ;\n",
diff -u -r -d -N jam-2.5/jam.c jam/jam.c
--- jam-2.5/jam.c	2003-04-23 00:45:51.000000000 -0400
+++ jam/jam.c	2004-04-30 17:59:31.000000000 -0400
@@ -286,7 +286,7 @@
 	}
 
 	/* And JAMUNAME */
-# ifdef unix
+# if defined(unix) && !defined(__NeXT__)
 	{
 	    struct utsname u;
 
diff -u -r -d -N jam-2.5/Jamfile jam/Jamfile
--- jam-2.5/Jamfile	2003-04-23 00:45:49.000000000 -0400
+++ jam/Jamfile	2004-04-28 19:40:32.000000000 -0400
@@ -23,6 +23,7 @@
 #
 
 if $(NT) 	{ code = execunix.c filent.c pathunix.c ; } 
+else if $(OS) = MSYS { code = execunix.c filent.c pathunix.c ; } 
 else if $(MINGW) { code = execunix.c filent.c pathunix.c ; } 
 else if $(OS2)	{ code = execunix.c fileos2.c pathunix.c ; } 
 else if $(VMS) 	{ code = execvms.c filevms.c pathvms.c ; } 
diff -u -r -d -N jam-2.5/jam.h jam/jam.h
--- jam-2.5/jam.h	2003-04-23 00:45:51.000000000 -0400
+++ jam/jam.h	2004-04-28 19:40:32.000000000 -0400
@@ -223,6 +223,11 @@
 # define OS_COHERENT
 # define NO_VFORK
 # endif
+# ifdef MSYS
+# define OSMINOR "OS=MSYS"
+# define OS_MSYS
+# undef USE_FILEUNIX
+# endif
 # ifdef __cygwin__
 # define OSMINOR "OS=CYGWIN"
 # define OS_CYGWIN
@@ -364,9 +369,11 @@
 # include <sys/types.h>
 # include <sys/stat.h>
 
+# ifndef OS_MSYS
 # ifndef OS_MPEIX
 # include <sys/file.h>
 # endif
+# endif
 
 # include <fcntl.h>
 # include <stdio.h>
diff -u -r -d -N jam-2.5/Makefile jam/Makefile
--- jam-2.5/Makefile	2003-04-23 00:45:50.000000000 -0400
+++ jam/Makefile	2004-04-28 19:40:32.000000000 -0400
@@ -43,6 +43,10 @@
 #CC = gcc
 #CFLAGS = -DMINGW
 
+# MSYS
+# CC = gcc
+# CFLAGS = -DMSYS
+
 # MPEIX
 #CC = gcc
 #CFLAGS = -I/usr/include -D_POSIX_SOURCE
