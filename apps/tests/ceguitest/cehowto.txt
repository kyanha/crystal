CSCEGUI plugin is the interface between CEGUI (cegui.org.uk) and CS to allow the rendering inside CS. It is really easy to use it,
though it hardly need any initialization at all. The only feature appart from the rendering is the support for CS VFS, everything 
else is handled by CEGUI Core.

This tutorial is based upon the Simple1 tutorial. First thing to do, is to Request the plugin, this is done in Simple1::OnInitialize

bool Simple1::OnInitialize(int argc, char* argv[])
{
  if (!csInitializer::RequestPlugins(GetObjectRegistry(),
    CS_REQUEST_VFS,
    CS_REQUEST_OPENGL3D,
    CS_REQUEST_ENGINE,
    CS_REQUEST_FONTSERVER,
    CS_REQUEST_IMAGELOADER,
    CS_REQUEST_LEVELLOADER,
    CS_REQUEST_REPORTER,
    CS_REQUEST_REPORTERLISTENER,
    CS_REQUEST_PLUGIN ("crystalspace.cegui.renderer", iCEGUIRenderer),
    CS_REQUEST_END))
    return ReportError("Failed to initialize plugins!");

  if (!RegisterQueue(GetObjectRegistry()))
    return ReportError("Failed to set up event handler!");

  return true;
}

The time has now come to do the actually loading. Thanks to the resourceprovider, it is possible to use VFS when initialize CEGUI.
The procedure is pretty strate forward. Edit:

bool Simple1::Application()
	.
	.
	.
  // Basic initialize of CEGUI
  cegui->Initialize ();

  // Set the logging level
  CEGUI::Logger::getSingleton().setLoggingLevel(CEGUI::Informative);

  // Mount the dir where the skin datafiles are located
  // this can be done in a vfs.cfg instead.
  vfs->Mount ("/ceguitest/", "data$/ceguitest$/");

  // Change to the mounted directory
  vfs->ChDir ("/ceguitest/");

  // Load the IceSkin
  CEGUI::SchemeManager::getSingleton().loadScheme("ice.scheme");

  // Set the wanted mouse cursor
  CEGUI::System::getSingleton().setDefaultMouseCursor("ice", "MouseArrow");

  // Set the font for CEGUI, this needs to be a ttf.
  CEGUI::FontManager::getSingleton().createFont("Vera", "/fonts/ttf/Vera.ttf", 12, CEGUI::Default);

  // The last step to get CEGUI running is loading the layout
  // first get a handle to the window manager
  CEGUI::WindowManager& winMgr = CEGUI::WindowManager::getSingleton();

  // then load the layout
  CEGUI::System::getSingleton().setGUISheet(winMgr.loadWindowLayout("ice.layout"));
	.
	.
	.
  Run();
  return true;
}


Finally to be able to see the GUI, you have to call the renderer function each frame.

void Simple1::ProcessFrame()
  view->Draw ();
  // Tell CEGUI to performe the rendering
  CEGUI::System::getSingleton().renderGUI();
}


// TODO write how to connect events