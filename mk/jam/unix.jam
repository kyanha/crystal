#============================================================================
# Jam configuration and actions for Linux/Unix
#============================================================================
SHELL ?= "/bin/sh" ;

# only use nasm on x86 for now...
NASM.FLAGS += -f elf ;
# disabled (Matze: I really think we should eanble this, regardless of the 1%
# speed loss...)
#PLUGIN.CFLAGS += -fPIC ;

#----------------------------------------------------------------------------
# platform specific rules

##  ConstructApplicationTarget target : options
##    Constructs the application atrget name (ie. foo.exe for foo)
rule ConstructApplicationTarget
{
  return $(<) ;
}
rule ConstructLibraryTarget
{
  return lib$(<)$(SUFLIB) ;
}
rule ConstructPluginTarget
{
  return $(<).so ;
}

# SystemLinkApplication target : objects : options
#  do system specific actions needed for linking the application and construct
#  correct clean targets.
rule SystemLinkApplication
{
  local target = $($(<)_TARGET) ;
  
  Depends $(target) : $(>) ;
  LinkApplication $(target) : $(>) ;
  # setup clean rules
  Clean clean : $(target) ;
  Clean $(<)clean : $(target) ;
}

# SystemLinkPlugin target : objects : options : metafile
#  do system specific actions needed for linking the plugin and construct
#  correct clean targets.
rule SystemLinkPlugin
{
  local target = $($(<)_TARGET) ;
  
  Depends $(target) : $(>) ;
  LinkPlugin $(target) : $(>) ;
  PluginMetaData $(<) : $(4) ;
  # setup clean rules
  Clean clean : $(target) ;
  Clean $(<)clean : $(target) ;
}

actions LinkPlugin bind NEEDLIBS bind EXTRAOBJECTS
{
  $(CMD.LINK) -shared -Wl,-soname -Wl,$(<) -o $(<) $(>) $(EXTRAOBJECTS) $(NEEDLIBS) $(LINKLIBS)
}
actions LinkApplication bind NEEDLIBS bind EXTRAOBJECTS
{
  $(CMD.LINK) -o $(<) $(>) $(EXTRAOBJECTS) $(NEEDLIBS) $(LINKLIBS)
}
