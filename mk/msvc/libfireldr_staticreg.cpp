// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_fireldr[] =
"<?xml version=\"1.0\"?>"
"<!-- fireldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.fire</name>"
"        <implementation>csFireFactoryLoader</implementation>"
"        <description>Crystal Space Fire Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.fire</name>"
"        <implementation>csFireLoader</implementation>"
"        <description>Crystal Space Fire Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.fire</name>"
"        <implementation>csFireFactorySaver</implementation>"
"        <description>Crystal Space Fire Factory Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.fire</name>"
"        <implementation>csFireSaver</implementation>"
"        <description>Crystal Space Fire Mesh Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csFireFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csFireFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFireFactoryLoader) 
  #endif
  #ifndef csFireLoader_FACTORY_REGISTER_DEFINED 
  #define csFireLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFireLoader) 
  #endif
  #ifndef csFireFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csFireFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFireFactorySaver) 
  #endif
  #ifndef csFireSaver_FACTORY_REGISTER_DEFINED 
  #define csFireSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFireSaver) 
  #endif

class fireldr
{
SCF_REGISTER_STATIC_LIBRARY(fireldr,metainfo_fireldr)
  #ifndef csFireFactoryLoader_FACTORY_REGISTERED 
  #define csFireFactoryLoader_FACTORY_REGISTERED 
    csFireFactoryLoader_StaticInit csFireFactoryLoader_static_init__; 
  #endif
  #ifndef csFireLoader_FACTORY_REGISTERED 
  #define csFireLoader_FACTORY_REGISTERED 
    csFireLoader_StaticInit csFireLoader_static_init__; 
  #endif
  #ifndef csFireFactorySaver_FACTORY_REGISTERED 
  #define csFireFactorySaver_FACTORY_REGISTERED 
    csFireFactorySaver_StaticInit csFireFactorySaver_static_init__; 
  #endif
  #ifndef csFireSaver_FACTORY_REGISTERED 
  #define csFireSaver_FACTORY_REGISTERED 
    csFireSaver_StaticInit csFireSaver_static_init__; 
  #endif
public:
 fireldr();
};
fireldr::fireldr() {}

}
