The AsciiArt library is available here:

http://aa-project.sourceforge.net/

*** These notes are quite old; so they may not accurately reflect present-day
    AsciiArt.

You have to make a small change to aalib.h (sorry, not my fault) before
the driver will properly compile with any decent C++ compiler:

find the line containing "struct aa_context aa_context". Now add an #ifndef
around all the following typedefs (until aa_savedata) this way:

#ifndef __cplusplus
typedef struct aa_context aa_context;
typedef struct aa_linkedlist aa_linkedlist;
typedef struct aa_linkedlist aa_reclist;
typedef struct aa_renderparams aa_renderparams;
typedef struct aa_hardwareparams aa_hardware_params;
typedef struct aa_driver aa_driver;
typedef struct aa_font aa_font;
typedef struct aa_format aa_format;
typedef struct aa_savedata aa_savedata;
#endif

That's all.

Notes on running.

-*- Most AsciiArt mouse and keyboard drivers lacks much functionality...
    the most annoying is that most don't generate KeyUp events. This means
    that once you press the "Down" key, you can't stop...

    In general, the best results you will get with the ports that handle
    keyboard and mouse inside their system driver (e.g. djgpp).
    Ports that report events through their 2D graphics driver (e.g.
    OS/2, X11 and a number of others) will use the ugly AALib driver.

-*- When you run executable, you better redirect the output to /dev/null
    (or to nul for OS/2, Dos and Windows), because CsPrintf's will interfere
    with ascii output.

-*- On OS/2 you will have to mark "walktest" (or whatever) executable
    as console executable. This is an OS/2 limitation - the executable have
    to be either PM or console, it cannot be both at the same time. Since
    the "normal" OS/2 driver uses DIVE, executables are marked for running
    under PM. To mark it as being designed to run in a console, you should
    use the "markexe" utility that comes with toolkit. Type:

    markexe WINDOWCOMPAT walktest.exe

    To revert back, type

    markexe WINDOWAPI walktest.exe

    Another trick is to launch somehow "walktest" through DosExecPgm
    rather than through DosStartSession. This won't allow it to be detached
    from the console and it will run just fine. For this you can use the
    "console" utility which can be found on hobbes.nmsu.edu, for example.
    This utility is also handy to open a new console window with given font
    size/console size/position and so on... handy for ascii art driver.
