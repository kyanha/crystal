# This is a subinclude file used to define the rules needed
# to build the Glide2 3D driver -- glide3d Version 3

# Driver description
DESCRIPTION.glide3d3 = Crystal Space Glide V3 3D renderer

#------------------------------------------------------------- rootdefines ---#
ifeq ($(MAKESECTION),rootdefines)

# Driver-specific help commands
DRIVERHELP += \
  $(NEWLINE)echo $"  make glide3d3     Make the $(DESCRIPTION.glide3d3)$"

endif # ifeq ($(MAKESECTION),rootdefines)

#------------------------------------------------------------- roottargets ---#
ifeq ($(MAKESECTION),roottargets)

.PHONY: glide3d3
all plugins drivers drivers3d: glide3d3

glide3d3:
	$(MAKE_TARGET) MAKE_DLL=yes
glide3d3clean:
	$(MAKE_CLEAN)

endif # ifeq ($(MAKESECTION),roottargets)

#------------------------------------------------------------- postdefines ---#
ifeq ($(MAKESECTION),postdefines)

ifeq (,$(GLIDE2_LIB))
GLIDE3_LIB = -lglide3x
endif

CFLAGS.GLIDE3D3 += $(GLIDE3_PATH) -DGLIDE3 
LIB.GLIDE3D3.SYSTEM += $(GLIDE3_LIB)

# The Glide driver
ifeq ($(USE_PLUGINS),yes)
  GLIDE3D3 = $(OUTDLL)glide3d3$(DLL)
  LIB.GLIDE3D3 = $(foreach d,$(DEP.GLIDE3D3),$($d.LIB))
  LIB.GLIDE3D3.SPECIAL = $(LIB.GLIDE3D3.SYSTEM)
  TO_INSTALL.DYNAMIC_LIBS += $(GLIDE3D3)
else
  GLIDE3D3 = $(OUT)$(LIB_PREFIX)glide3d3$(LIB)
  DEP.EXE += $(GLIDE3D3)
  LIBS.EXE += $(LIB.GLIDE3D3.SYSTEM)
  SCF.STATIC += glide3d3
  TO_INSTALL.STATIC_LIBS += $(GLIDE3D3)
endif

INC.GLIDE3D3 = $(wildcard plugins/video/renderer/glide/*.h \
  plugins/video/renderer/common/*.h)
SRC.GLIDE3D3.1 = $(wildcard plugins/video/renderer/glide/*.cpp)
SRC.GLIDE3D3.2 = $(wildcard plugins/video/renderer/common/*.cpp)
SRC.GLIDE3D3 = $(SRC.GLIDE3D3.1) $(SRC.GLIDE3D3.2)
OBJ.GLIDE3D3 = $(addprefix $(OUT),$(notdir $(SRC.GLIDE3D3.1:.cpp=3$O))) \
  $(addprefix $(OUT),$(notdir $(SRC.GLIDE3D3.2:.cpp=$O)))
DEP.GLIDE3D3 = CSGEOM CSGFXLDR CSUTIL CSSYS
CFG.GLIDE3D3 = data/config/glide.cfg

TO_INSTALL.CONFIG += $(CFG.GLIDE3D3)

#MSVC.DSP += GLIDE3D3
#DSP.GLIDE3D3.NAME = glide3d3
#DSP.GLIDE3D3.TYPE = plugin
#DSP.GLIDE3D3.RESOURCES = plugins/video/renderer/glide/init3.inc

endif # ifeq ($(MAKESECTION),postdefines)

#----------------------------------------------------------------- targets ---#
ifeq ($(MAKESECTION),targets)

.PHONY: glide3d3 glide3d3clean

# Chain rules
clean: glide3d3clean

glide3d3: $(OUTDIRS) $(GLIDE3D3)

$(OUT)%3$O: plugins/video/renderer/glide/%.cpp
	$(DO.COMPILE.CPP) $(CFLAGS.GLIDE3D3)

$(OUT)%$O: plugins/video/renderer/common/%.cpp 
	$(DO.COMPILE.CPP) $(CFLAGS.GLIDE3D3)

$(GLIDE3D3): $(OBJ.GLIDE3D3) $(LIB.GLIDE3D3)
	$(DO.PLUGIN) $(LIB.GLIDE3D3.SPECIAL)

glide3d3clean:
	$(RM) $(GLIDE3D3) $(OBJ.GLIDE3D3) $(OUTOS)glide3d3.dep

ifdef DO_DEPEND
dep: $(OUTOS)glide3d3.dep
$(OUTOS)glide3d3.dep: $(SRC.GLIDE3D3)
	$(DO.DEP1) $(CFLAGS.GLIDE3D3) $(DO.DEP2)
else
-include $(OUTOS)glide3d3.dep
endif

endif # ifeq ($(MAKESECTION),targets)
