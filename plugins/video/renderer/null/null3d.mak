# This is a subinclude file used to define the rules needed
# to build the 3D NULL rendering driver -- null3d

# Driver description
DESCRIPTION.null3d = Crystal Space null 3D driver

#-------------------------------------------------------------- rootdefines ---#
ifeq ($(MAKESECTION),rootdefines)

# Driver-specific help commands
DRIVERHELP += $(NEWLINE)echo $"  make null3d       Make the $(DESCRIPTION.null3d)$"

endif # ifeq ($(MAKESECTION),rootdefines)

#-------------------------------------------------------------- roottargets ---#
ifeq ($(MAKESECTION),roottargets)

.PHONY: null3d

all plugins drivers drivers3d: null3d

null3d:
	$(MAKE_TARGET) MAKE_DLL=yes
null3dclean:
	$(MAKE_CLEAN)

endif # ifeq ($(MAKESECTION),roottargets)

#-------------------------------------------------------------- postdefines ---#
ifeq ($(MAKESECTION),postdefines)

vpath %.cpp plugins/video/renderer/null

ifeq ($(USE_SHARED_PLUGINS),yes)
  NULL3D=$(OUTDLL)null3d$(DLL)
  DEP.NULL3D=$(CSGFXLDR.LIB) $(CSUTIL.LIB) $(CSSYS.LIB)
  TO_INSTALL.DYNAMIC_LIBS+=$(NULL3D)
else
  NULL3D=$(OUT)$(LIB_PREFIX)null3d$(LIB)
  DEP.EXE+=$(NULL3D)
  CFLAGS.STATIC_SCF+=$(CFLAGS.D)SCL_NULL3D
  TO_INSTALL.STATIC_LIBS+=$(NULL3D)
endif
TO_INSTALL.CONFIG += data/config/null3d.cfg
DESCRIPTION.$(NULL3D) = $(DESCRIPTION.null3d)
SRC.NULL3D = $(wildcard plugins/video/renderer/null/*.cpp) \
  plugins/video/renderer/common/txtmgr.cpp
OBJ.NULL3D = $(addprefix $(OUT),$(notdir $(SRC.NULL3D:.cpp=$O)))

endif # ifeq ($(MAKESECTION),postdefines)

#------------------------------------------------------------------ targets ---#
ifeq ($(MAKESECTION),targets)

.PHONY: null3d null3dclean

# Chain rules
all: $(NULL3D)
clean: null3dclean

null3d: $(OUTDIRS) $(NULL3D)

# Extra dependencies not generated by "make depend"
$(NULL3D): $(OBJ.NULL3D) $(DEP.NULL3D)
	$(DO.PLUGIN)

null3dclean:
	$(RM) $(NULL3D) $(OBJ.NULL3D)

ifdef DO_DEPEND
dep: $(OUTOS)null3d.dep
$(OUTOS)null3d.dep: $(SRC.NULL3D)
	$(DO.DEP)
else
-include $(OUTOS)null3d.dep
endif

endif # ifeq ($(MAKESECTION),targets)
