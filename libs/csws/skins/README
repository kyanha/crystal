The subdirectories here contains different skins for CSWS.
It is highly recommended to keep skins for different components in separate
files, because the CSWS user may want to use only some components, and doing
so will avoid linking all skin slices together into the user's executable.

The naming convention for skin slice files is as follows:

	s{x}{yyyyyy}.cpp

where "s" stands for "skin", "x" is the 1-letter short name of the skin
("d" for "default", "w" for "wacky" and so on) and yyy is the short name
of the skinned component. Please don't break the 8.3 naming convention,
otherwise it may cause problems for archives unpacked under Win9X built
with DJGPP (because windoze tends to append the ugly ~1, ~2 and so on
suffix for DOS programs). Also take care to avoid having same name in
different subdirectories (because of the flat out/ directory layout -
the object files will overlap). If the first letter of your skin name
is already busy, use the second, or use a number and so on. The name
of the skin file doesn't really matter.

Also note that you can easily derive skins from other skins - that is, some
skin slices may be implemented from scratch, other skins may be derived from
existing skin slices. For example, you may want a skin that has the same
look like the default skin, with the exception you want a black pixel in the
middle of every button:

#include "csws/csskin.h"

class csDottyButtonSkin : public csDefaultButtonSkin
{
public:
  virtual void Draw (csComponent &This);
}

void csDottyButtonSkin::Draw (csComponent &This)
{
  csDefaultButtonSkin::Draw ();
  Pixel (This.bound.Width () / 2, This.bound.Height () / 2, CSPAL_BUTTON_TEXT);
}
