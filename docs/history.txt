Crystal Space detailed change log.
http://www.crystalspace3d.org/

The overall history is in reverse (descending) chronological order, so that
each new day's entries appears before the previous day's entries.  The
individual changes for each given day, however, are in normal (ascending)
chronological order.

14-Feb-2008
        - Jorrit added csgfx/imagemanipulate.h to the python bindings.
        - Jorrit added csImageManipulate.TransformColor() and
          Gray() tools.
	- varslot added code to the CoreAudio driver for dealing
          with sound hardware that cannot handle the desired buffer
          size. Successively redusing the buffer size we arrive at a
          sound buffer that can be used. This fixes sound problem on e.g.
          MacBook, and should address bugtracker ticket #205. Note:
          sound.cfg is not loaded by the CoreAudio driver, and should
          maybe also be fixed.
	- res fixed the xmlshader plugin to not assert on some more complex
	  conditions.
13-Feb-2008
	- varslot added a rule to work around known issue with texture
	  compression and Intel graphics card under OSX.
        - Jorrit deprecated the Load() functions in iLoader that accept a
          iBase* result return parameter. Instead there are now three
          new versions that return an instance of csLoadResult.
	- res changed the font cache to set the pixel storage through the
	  state cache as well.
	- res fixed a copy and paste bug in xmlshader which could result in
	  some conditions being wrongly determined to be "always true" or
	  "always false".
	- res changed csApplicationFramework::SetApplicationName() to take
	  a const char* instead of a char*.
	- res made some char* -> const char* in apps.
	- caedes fixed bullet plugin to be compatible with bullet 2.66 while
	  maintaining backwards compatibility.
	- caedes fixed phystut jamfile so it will get built if either bullet
	  or ode are available (before it would be built only depending on
	  whether ode was available).
	- caedes enhanced phystut to report its own command line options on
	  '--help' besides crystalspace options.
	- res fixed setting of the '0' render target in soft3d when no render
	  target is set.
12-Feb-2008
	- caedes fixed python override of Graphics2D::PerformExtension to
	  allow command passthrough to the real c++ PerformExtension.
	- res fixed the state cache texture unit iteration to only iterate
	  over the available texture units and not all up to CS_GL_MAX_LAYER.
	- res put some pixel store settings into the state cache and made
	  methods that use pixel data (such as texture uploading) set these
	  settings.
	- caedes added some config options to cspython.
	  - CsPython.Path.: to add vfs paths to pythonpath.
	  - CsPython.Module.: to load modules on csPython::Initialize.
	  this will allow defining python classes as scf classes and much more.
	- res made the GL depth clear value be re-set every frame (needed in
	  embedding scenarios).
11-Feb-2008
	- Genjix commented csGeomDebug swig line.
        - Jorrit fixed the python plugin so that parameters of type
          'uint8' are now also recognized from Python.
10-Feb-2008
	- PK applied the patch from Rolenun in Ticket #450. Closes #450.
5-Feb-2008
	- Sueastside undid his ThreadedJobQueue change since it broke on linux.
	- Marten redid some of the handling of thread priorities to be more
          robust.
	- Sueastside redid his ThreadedJobQueue, should work now after
          Marten's changes.
4-Feb-2008
	- Sueastside added an optional parameter to ThreadedJobQueue's
          constructor to set the thread's priority.
2-Feb-2008
	- res fixed "short" (h) and "short short" (hh) handling to only cast
	  to a signed char/short when formatting to a decimal integer; cast to
	  unsigned otherwise.
	- Sueastside added XWindow clipboard event support. Rolenun made me do
          it!
29-Jan-2008
	- Sueastside added IsPrecached() to iTextureHandle.
24-Jan-2008
	- caedes patched relaytool so it doesn't redirect to /dev/tty, as it 
	  doesn't exist in some situations.
	- Ross B cleaned up updated HowTo example.
	- Ross B updated the HOWTO: Clicking on Objects for misc API changes.
	- caedes fixed previous relaytool change to remove uneeded echo.
23-Jan-2008
	- res fixed a bug in relaytool where building the libraries search array
	  was broken.
	- caedes fixed vertexlight.cgvp not getting installed.
22-Jan-2008
	- Mike Gist committed a patch from Trymm which adds a method to set
	  blending time for cyclic animations in cal3d.
20-Jan-2008
	- Ross B updated sound docs to use a reference to iLoader instead of
	  iSndSysLoader.
	- Ross B updated old sound documentation to be relevant again.
	- caedes added swig declaration for scfImplementation3 template.
19-Jan-2008
	- res changed the gl3d framebuffer render-to-texture backend to not
	  use hardcoded internal formats when turning textures into render
	  targets but a format depending on the actual format of the texture
	  and the bit depth of the framebuffer.
	- res fixed some wrong casts and a leak in sprcal3d.
	- Marten fixed (probably) atomic operations on 64-bit PPC.
18-Jan-2008
	- res committed an update to the MSVC 7+ external project HOWTO from
	  nev7n.
	- res changed the xmlread plugin to use scfImplementationPooled<> to
	  pool nodes (instead of a "custom" implementation).
	- res tweaked cswinGetErrorMessage() to return messages with "inserts
	  ignored": some Windows messages have "inserts" (similar to printf
	  formatting specifiers) that insert values into the message; however,
	  if a value isn't given, FormatMessage() actually returns an error.
	  Ignoring inserts returns the message inclusive inserts - which is
	  still better than an obscure error code.
	- res changed scfImplementation<> to store "auxiliary data" (such as
	  weak reference owners, metadata, SCF parent) in a separate structure
	  instead of the class instance: only a fraction of all objects use
	  one of these features, so this externalization should save a couple
	  bytes of memory.
17-Jan-2008
	- Marten reverted r28423 as it introduce a arbitrary and hardcoded
	  constant at a place where there should be no such thing.
        - Mike Gist added checks for the LoadProxyTextures() function. It now
          isn't called when we're not using proxy textures.
16-Jan-2008
	- res removed the scfObject field(s) from scfImplementation*. The
	  address of the actual implementation class can be computed at
	  runtime and doesn't have to be stored in an instance. This saves
	  a pointer (or more for "extension" implementations) per SCF object.
	- res added some simple SCF class stats.
15-Jan-2008
	- res merged r27442 from rendermanager branch to trunk (cubemap
	  support with fbo render-to-texture).
	- res merged r27667 from rendermanager branch to trunk (better support
	  for textures exceeding the framebuffer dimensions in framebuffer r2t
	  backend).
	- Mike Gist got animated textures working with proxy textures.
14-Jan-2008
	- Mike Gist committed a patch from Trymm to fix a crash in sprcal3d.
	- res re-enabled PBO on ATI (latest driver fixes found issues).
	- res temporarily disabled FBO since it's currently broken.
	- res merged r27437 from rendermanager branch to trunk (use
	  glGenerateMipmaps in gl3d).
	- Vincent blindly changed a constant in OpenAL renderer, which seems
	  to fix the "play too fast" issue with stereo OGG files.
11-Jan-2008
	- Vincent removed mentions of iCollection throughout the project.
	- philwyett added reference to exporting LD_LIBRARY_PATH to allow demo
	  applications to run without error on Linux. I also updated some basic
	  info for contacting me etc.
	- Mike Gist enhanced the runtime check for AltiVec to work on linux.
10-Jan-2008
	- Eric Sunshine fixed a couple bugs in macro CS_EMIT_BUILD_PROPERTY()
	  in emit.m4 which manifested when the client passed a non-empty
	  EMPTY-OKAY argument. (1) It incorrectly unconditionally employed the
	  CS_JAMCONFIG_PROPERTY() emitter rather than respecting the EMITTER
	  argument and only employing CS_JAMCONFIG_PROPERTY() as a
	  fallback. (2) It neglected to pass the optional UNCONDITIONAL
	  argument along to the emitter.
	 - Eric Sunshine added "default" as an alias for the existing tokens
	  "emit" and "yes" for the EMITTER argument of macro
	  CS_EMITTER_OPTIONAL() in emit.m4.
	- Eric Sunshine made minor clarifications to macro documentation in
	  emit.m4.
	- Eric Sunshine added new Autoconf macros CS_TR_SH_Lang(),
	  CS_TR_SH_lang(), and CS_TR_SH_LANG() to language.m4. These macros are
	  similar to AS_TR_SH(), but convert "+" in its argument to "x" rather
	  than "p" since "x" is more suitable in a context dealing with
	  programming languages. For instance, CS_TR_SH_Lang([C++]) becomes
	  "Cxx", rather than the less idiomatic "Cpp" as would be the case with
	  AS_TR_SH().  These macros are useful for composing shell variable
	  names pertaining to a particular language. For instance, if the
	  language upon which a macro operates is in $1, then the macro may
	  compose a shell variable name using
	  CS_TR_SH_lang([cs_cv_prog_$1_feature]).  CS_TR_SH_Lang() performs no
	  case-folding of its input. CS_TR_SH_lang() folds the input to
	  lowercase.  CS_TR_SH_LANG() folds the input to uppercase.
	- Eric Sunshine added new Autoconf macro CS_LANG_RESOLVE() to
	  language.m4.  This macro is a convenience tool for other macros which
	  optionally accept a language specifier. It returns the input language
	  specifier if non-empty, otherwise the specified fallback language.
	  If the fallback is not provided, then the language is assumed to be
	  "C".
	- Eric Sunshine updated macro CS_BUILD_IFELSE() in checkbuild.m4 to
	  take advantage of the new CS_TR_SH_LANG() and CS_LANG_RESOLVE()
	  macros.  Also retired the somewhat ugly public CS_LANG_CFLAGS macro
	  (although a somewhat similar private helper macro, _CS_LANG_CFLAGS(),
	  is still employed by CS_BUILD_IFELSE()).
	- Eric Sunshine updated the various CS_COMPILER_WARNING_FOO() macros in
	  warnings.m4 to take advantage of the new CS_TR_SH_lang() and
	  CS_LANG_RESOLVE() macros.
	- Eric Sunshine improved the various CS_COMPILER_WARNING_FOO() macros
	  in warnings.m4 by having them compose proper cache variables
	  incorporating the language name (such as "cs_cv_prog_cxx_foo") rather
	  than employing the too-general static name "cs_cv_prog_compiler_foo"
	  in the case that the client fails to provide an explicit cache
	  variable name.
	- Eric Sunshine re-factored the various CS_COMPILER_WARNING_FOO()
	  macros in warnings.m4 by introducing new helpers
	  _CS_WARNING_SUPPRESS_MSG() and _CS_WARNING_CACHE_VAR() which avoid
	  similar code in each of the CS_COMPILER_WARNING_FOO() macros.
	- Eric Sunshine promoted the C++ STL check from an inline configure.ac
	  test to a stand-alone re-usable macro CS_CHECK_STL() in checkstl.m4
	  so that it can be employed by external projects and other Autoconf
	  macros.
	- Eric Sunshine promoted the complicated -fvisibility-inline-hiddens
	  check from an inline configure.ac test to a stand-alone re-usable
	  macro CS_VISIBILITY_INLINES_HIDDEN() in visibility.m4 so that it can
	  be employed by external projects.
	- Eric Sunshine upgraded CS_VISIBILITY_INLINES_HIDDEN() in
	  visibility.m4 so that it explicitly promotes compilation warnings to
	  errors in case the compiler neglects to return an error code when the
	  switch under consideration is not recognized.
	- Eric Sunshine promoted the checks for compiler switch and in-code
	  delcaration of symbol visibility from inline configure.ac tests to
	  stand-alone re-usable macros in visibility.m4. The new macros are
	  CS_VISIBILITY_FLAG_HIDDEN(), CS_VISIBILITY_FLAG_DEFAULT(),
	  CS_VISIBILITY_DECLARE_HIDDEN(), and CS_VISIBILITY_DECLARE_DEFAULT().
	  Performed a good deal of re-factoring and simplification of these
	  checks in order to lower maintenance costs.  For consistency, also
	  renamed CS_VISIBILITY_INLINES_HIDDEN() to
	  CS_VISIBILITY_FLAG_INLINES_HIDDEN().
	- Eric Sunshine upgraded the symbol visibility compiler flag checks in
	  visibility.m4 so that they promote compiler warnings to errors.  This
	  should resolve problem experienced by Andres Freund during
	  cross-compiling on Linux for Windows where configure was under the
	  impression that -fvisibility=hidden was usable since the compiler
	  issued only a warning and otherwise ignored the flag.
9-Jan-2008
	- Mike Gist committed a patch from Trymm for sprcal3d to keep
	  compatibility with cal3d files which aren't updated for the recent
	  changes. Those now use the old bugged behavior instead of not working
	  at all.
	- Eric Sunshine upgraded mk/autoconf/compiler.m4 so that the macros
	  CS_PROG_CC() and CS_PROG_CXX() also publish the shell variable names
	  cs_compiler_name_c and cs_compiler_name_cxx, respectively.
	  Furthermore, these macros now emit build properties COMPILER.C.TYPE
	  and COMPILER.CXX.TYPE (and, as an historic anomaly, COMPILER.TYPE) to
	  Jamconfig. These changes ensure that the compiler's type/name is
	  published for all CS Jam-based projects (rather than only for CS
	  itself).  This fixes problem where mk/jam/win32.jam's
	  ConstructSharedLibraryTarget rule, which depends upon the compiler
	  type/name information, failed in external CS-based projects.
	- Vincent added '-no3d' command line option to sndtest, to set the
	  sound stream in CS_SND3D_DISABLE mode. Useful for investigating a bug
	  with playback of stereo OGG files with OpenAL renderer in that mode.
8-Jan-2008
	- Mike Gist committed a patch from Trymm for sprcal3d which fixes the
	  problems with characters not walking properly for the first couple of
	  seconds after movement has been initiated.
	- Marten added a non-threaded job queue.
	- Marten added the ability to query a job queue if all enqueued jobs
	  are run.
	- Marten made a few cosmetic fixes to lighter2.
	- Marten started to convert lighter2 to be able to take advantage
	  of multi-processor/core configurations.
	- Marten made a number of fixes to bullet plugin and phystut 
	  application, fixing creation of sphere and joints.
7-Jan-2008
	- res fixed a constness mismatch in cspython.cpp occuring with 
	  Python 2.4 (and probably older) caused that surfaced after r28415
	  and r28416.
	- Vincent fixed a bug which prevented OGG files to be played when
	  using OpenAL. Also commented unused stuff in OpenAL renderer, and
	  added OpenAL specific kvp in sound.cfg.
6-Jan-2008
	- Marten fixed a bug in lighter2 related to light through portals.
	- Vincent added '-sndfile' commandline option to allow setting the
	  sound file to use in 'sndtest' and 'asndtest'. Also added sound and
	  stream format information display.
	- caedes added swig template to help declaring typemaps for argc-argv
	  style parameter lists for functions.
	- caedes added swig output typemaps for EventData structs in GetData
	  functions in the different EventHelper classes.
	- caedes fixed a constness problem in cspython.
	- Marten made a couple of cosmetic fixes in ligher2.
5-Jan-2008
	- Mike Gist committed a patch from Trymm which corrects a few problems
	  with idle animations in sprcal3d. Characters will no longer play the
	  idle animation in situations like when in the middle of a fight, and
	  all idle animations will be played at random.
	- Marten fixed a warning in terrain.
	- Marten added svn:ignore property on mk\msvc9 directory.
	- Marten made an optimization to lighter2, cutting out code taking 7%
	  of total runtime.
	- res fixed the preprocessor condition in 
	  libs/csutil/processor/processorspecdetection_nonwin_gcc_x86.cpp to
	  not compile the contents of that file on Win32 at all (as also
	  suggested by the name). Should fix #440.
	- Marten removed the unit test application and deprecated the unit
	  test method in iDebugHelper.
	- Marten redid the ligther2 optimization to play better with future
	  implementation of area lights.
	- Marten fixed a bug in lighter2 whereby lights through portals wouldn't
	  work at all.
4-Jan-2008
	- Vincent fixed a crasher in csbench: PerformShaderTest() still queried
	  iThingState for walls mesh after CreateRoom() was changed to use
	  genmesh.
	- caedes added a macro called CALLBACK_INTERFACE_HDR to python swig
	  files to help in declaring director classes for scf interfaces.
1-Jan-2008
	- Jorrit added iPortal->GetObjectSphere() and GetWorldSphere().
	  With these two functions you can get the bounding sphere (in world
	  and object space) of the portal.
	- Jorrit fixed iMeshWrapper->PlaceMesh() so that it uses the new
	  GetObjectSphere() function. This speeds the function up and makes
	  it also more correct (although it increases the chance of adding
	  too many sectors).
	- res augmented the render target API to allow "attachments" (to
	  support rendering depth instead of color data to textures or, later,
	  multiple render targets) and better querying if a texture format can
	  be rendered to.
31-Dec-2007
	- Jorrit set Video.OpenGL.StencilThreshold to 1 instead of 50. That
	  basically means that stencil clipping will always be used for
	  portals instead of plane clipping. We never did conclusive
	  benchmarks on what is better here but at least on Intel Graphics
	  plane clipping is not working properly causing lots of artifacts
	  in portal heavy levels like flarge.
28-Dec-2007
	- res updated the docs for the new cs-win32libs release.
	- philwyett added a build tip for unix that reduces build time
	  on dual core processors.
	- caedes fixed castle-tex.zip being incorrectly added to vfs.cfg
	  template, and thus impossible to find on install.
26-Dec-2007
	- Jorrit added new methods to iStandardReporterListener so that
	  you can set and query the individual output settings for every
	  severity.
	- Jorrit changed BugPlug to use severity DEBUG instead of
	  NOTIFY.
	- Jorrit changed BugPlug to temporarily force output of DEBUG
	  severity level to print to stdout for the output of the BugPlug
	  commands. That way you can see output of BugPlug commands even
	  in optimize mode.
	- Jorrit did several documentation updates:
	    - Added documentation for the new MinimumElapsedTicks
	      configuration setting.
	    - Removed documentation for the offscreen software renderer.
	    - Added some specific documentation on BugPlug.
	    - Added some cross-references to the new BugPlug documentation.
	- Jorrit blindly implemented the new MinimumElapsedTicks setting
	  for MacOS/X.
	- Jorrit did several documentation updates:
	    - Removed the obsolete radiosity settings from the engine
	      configuration chatper.
	    - Mentioned the new -RenderLoop option in the viewmesh
	      documentation.
	    - Updated the ODE documentation to indicate that ODE plugin
	      now automatically uses fixed stepsize.
	    - Added (initial) documentation for Bullet.
	- res slimmed down the general gcc x86 processor specs detection to
	  only do what's needed to get the desired flags. Works around a crash
	  in optimize mode with gcc 4.2.2 apparently related to the removed
	  code.
	- res un-inlined the general gcc x86 processor specs detection.
	- res added gmeshanimpdl to the walktest plugins list.
	- res added light-object bounding sphere culling to lighter2 so only
	  lights that can affect and object are computed for it. Can give a
	  speedup, depending on the map.
24-Dec-2007
	- Jorrit added support for a new System.MinimumElapsedTicks setting
	  to data/config/system.cfg. With this setting you can control
	  the minimum amount of time that each iteration in the runloop
	  should spend. Using this you can limit framerate and lower cpu
	  usage of Crystal Space. By default this setting is set to 0 which
	  means no fps limiting will occur.
22-Dec-2007
	- res added support for depth textures to gl3d's CreateTexture().
21-Dec-2007
	- Jorrit added a -RenderLoop option to viewmesh so that you
	  can use another renderloop. Just as:
	    viewmesh -RenderLoop=diffuse ...
	- Jorrit extended viewmesh so that it also loads the light,
	  light_bumpmap, ambient, reflectsphere, parallax,
	  light_spec_bumpmap, and parallaxAtt shaders.
	- caedes added lightmaps folder in maps to install targets.
	- res changed csTextureWrapper to to lazily determine an image's
	  keycolor and not immediately when the wrapper is created or the
	  image changed.
	- res fixed some string-to-char* assignment warnings.
	- res removed mipmap and interpolation renderstate changing from
	  bugplug (both are not supported by the current renderers anyway).
	- Sueastside fixed a compile error of walktest introduced by res.
20-Dec-2007
	- Vincent fixed Jamfile for OpenAL plugin to use OpenAL availability
	  check result from configure.
19-Dec-2007
	- caedes added castle-tex.zip to install targets.
18-Dec-2007
	- Jorrit relaxed the rule on disabling VBO in gldrivers.xml. For
	  the very first time version 2.1.7059 of the ATI drivers on Linux
	  manages to get VBO right (and a lot of other things)!
        - Mike Gist made a few changes to proxy textures; altered some argument
          names, added some documentation for them and made proxy textures
          be completely optional (and not the default). You now need to specify
          when loading a map/library whether or not you want to use them.
        - Save alphaType, keep_image and keycolour data in proxy textures.
17-Dec-2007
	- Marten removed the mutex locks in event queue and object registry.
	  They indicated a thread safety where there actually is none and only
	  resulted in useless overhead.
16-Dec-2007
	- Eric Sunshine restored the std::string based test which had been used
	  originally to determine if gcc's -finline-visibility-hidden flag is
	  buggy (as it is in numerous versions on several platforms).  This
	  test was removed in r21931 after it was discovered that there were
	  one or two obscure platform/compiler combinations for which the test
	  was not accurate. It seems better, however, to use a mostly accurate
	  test (std::string) than the current check based upon hard-coded
	  platform and compiler version tests, which is too often
	  inaccurate. Hopefully, this change resolves issue #355 (and perhaps
	  #333) for most cases.
	- Eric Sunshine fixed problem in configure.ac where AS_IF() conditional
	  would access undefined shell variable
	  $cs_cv_prog_cxx_visibility_inlines_hidden_buggy if compiler did not
	  respond to -fvisibility-inlines-hidden.
	- Eric Sunshine eliminated several compilation warnings in the plugins.
	- Eric Sunshine eliminated several compilation warnings in the apps.
	- Eric Sunshine refined the heuristic used by the 'dumptarget' rule in
	  dump.jam to extract likely top-level target names from NotFile
	  invocations. It now expects a target to begin with an alphanumeric,
	  thus ignoring some NotFile items, such as -g3, -lfoo, etc. This
	  resolves issue #430 as much as possible without introducing
	  CS-specific knowledge into this otherwise generic mechanism. Note,
	  that since there is no way to obtain a perfect set of top-level
	  targets from Jam, the heuristic employed by 'dumptargets' returns
	  only an approximation. It errs on the side of dumping too many
	  potential targets by observing invocations of NotFile (which happens
	  to be invoked for most of the top-level target names), rather than
	  erring in the other direction and missing real top-level targets.
	  NotFile is also used for other purposes, such as optionally telling
	  the ResponseFile rule that the items to be written to the file do not
	  represent actual files, thus the heuristic can be fooled if such
	  items look like they might be viable top-level target names. Also
	  modified the GeneratePluginLibraryGlueLib rule in static.jam slightly
	  to avoid having CS_DECLARE_DEFAULT_STATIC_VARIABLE_REGISTRATION
	  appear as a top-level target, but this is a case of treating the
	  symptom and is not a robust resolution.
	- Eric Sunshine removed the long-deprecated 'nrall' Jam target which
	  had been maintained for backward compatibility after the "new
	  renderer" architecture was made the default and the old renderer
	  retired.
	- Jorrit changed back the default for the forceLoadTextures
	  parameter in iLoader->LoadMap() and LoadMapFile() so that it
	  again defaults to true. Even though this is the less desirable
	  option since it means textures will be loaded even if they
	  are not used in the world file, it is still better to set this
	  parameter to true by default to avoid compatibility breaking.
	- Jorrit also changed the loader so that textures are now loaded
	  immediatelly if forceLoadTextures is true instead of at the
	  end of the loading cycle. XML scripts in CEL need the textures
	  before the file has been completely loaded.
	- Marten made a few optimizations to the atomic operations on PPC
	  and SPARC.
	- Marten added an application for micro-benchmarking atomic operations.
	- Marten removed CS::Threading::Mutex::IsLocked() and all users of it.
	  The reason is that there is no way to query the current lock-status
	  when using pthreads. The old solution by keeping an boolean
	  variable does not work as it does not properly interact with the
	  locking of the mutex in conditions, and is in itself cause of race 
	  conditions.
15-Dec-2007
	- Marten fixed colladaconvertor to compile cleanly on gcc (mingw).
	- Jorrit committed a work-around for bug #429 (relaytool crashes
	  on 64-bit linux) by Marten. This is just a work-around. The
	  ticket should not be closed yet until a real fix can be found.
	- Eric Sunshine fixed several problems with SplitDebugInfo rule in
	  debuginfo.jam which were responsible for bugs #365, #433, and #434.
	  These problems were caused by r28216 which accidentally reverted
	  fixes applied to SplitDebugInfo in r27911.
14-Dec-2007
	- Marten fixed msvcgen configuration for building in MSVC 9.
	- caedes fixed cspace.pth generating jam code to respect DESTDIR.
	- caedes fixed pythmod jam rule to look for dbg files in the right
	  place on install.
	- Eric Sunshine eliminated several compilation warnings from csgeom.
        - Scott Johnson eliminated some compilation warnings (newlines) from
          colladaconvertor.
13-Dec-2007
	- caedes made a little fix on lighter2 user manual.
8-Dec-2007
        - Mike Gist committed a patch from Trymm to fix the direction
          animations are played. If you had been reversing some animations,
          then the idle animations would also be played backwards unless you
          played an animation forwards first.
        - Mike Gist committed a patch from Kenny Graunke to correct the return
          value of csGetPlatformConfigDir on macosx (it's now consistent across
          all platforms).
7-Dec-2007
	- Sueastside fixed "partial" shadows in lighter2, this bug
	  occurred when no material was explicitly set on the object.
6-Dec-2007
	- res made the following changes to csloader:
	    - Added 'forceLoadTextures' parameter to LoadMapFile.
	    - Changed proxy texture loading to utilize "proxy images". These
	      will load the image when first needed. That way proxy textures
	      can also be used before they're loaded.
5-Dec-2007
        - Mike Gist committed a patch from res to fix linking of static apps
          in MSVC.
29-Nov-2007
	- Eric Sunshine changed 'MasterHeader' rule in helper.jam so that it
	  invokes the 'ResponseFile' rule with a delimiter of "%" rather than
	  allowing 'ResponseFile' to use the default delimiter of "@", since
	  "@" may legally appear in email addresses and Doxygen directives
	  (@file, for example), both of which are likely to appear in master
	  header boilerplate.
	- Eric Sunshine changed CS/include/Jamfile so that it uses Doxygen
	  directive "@file" in master header boilerplate rather than "\file"
	  since "\file" ends up as "<formfeed>ile" when 'jam masterheaders' is
	  invoked under the Dash shell. (This appears to be a bug in Dash
	  single-quote treatment and has been reported.)
	- Eric Sunshine fixed bug in configure.ac where CS_PLATFORM_UNIX was
	  not emitted to csconfig.h on Mac OS X (for which both
	  CS_PLATFORM_MACOSX and CS_PLATFORM_UNIX are supposed to be defined).
	  This bug was introduced in r23813-r23814 on 2006/03/14 when inline
	  host checking code was removed from configure.ac in favor of the
	  external CS_CHECK_HOST() macro from cs_check_host.m4.  Also fixed
	  configure.ac so that it no longer access the shell variable
	  cs_host_macosx, which is private to (not published by)
	  _CS_CHECK_HOST_DARWIN in cs_check_host.m4.
28-Nov-2007
	- res changed the ODE plugin to install custom ODE message handlers
	  (which can make errors less annoying and reduce the output spam by
	  buffering up multiple similar messages).
	- Vincent fixed a build error with GCC (undeclared messageInterval).
	- res made some cleanups and tweaks to relaytool: fixed a crash in
	  the "reloc fixup" code on x86 (and maybe x86_64 as well).
24-Nov-2007
	- Vincent merged OpenAL branch (r24357:28234) into trunk.
22-Nov-2007
	- Marten fixed a possible bug in threading code.
21-Nov-2007
	- res added the msvc9 directories to jobber.cfg.
        - Mike Gist changed object loading so that regions hold a ref to
          the object after finding a 'duplicate'.
        - Mike Gist updated the proxy texture code and the
          unusedresourcehelper functions for the case where multiple regions
          hold a ref to an object.
        - Mike Gist added a function to iRegion to find and return an iShader
          child object and a unusedresourcehelper function to unregister
          unused shaders in a given list.
20-Nov-2007
	- Eric Sunshine eliminated compilation warnings in software renderer.
	- Eric Sunshine removed the compiler-based deprecation attribute from
	  CS::Graphics::RenderMeshModes::flipCulling since the inline
	  constructors references this variable and cause a Niagara of warnings
	  to flood the build. Worse, even if external projects fix their own
	  code to avoid this variable, they still get penalized by warnings
	  because of the constructors (over which code external projects have
	  no control). One way to avoid this problem would be to un-inline the
	  constructors and then disable the deprecation warning only when
	  compiling the implementation file containing the constructors. A
	  potential difficulty with this approach, however, is that there is no
	  obvious location in the CS/libs hierarchy for such an implementation
	  file to reside.  Since it is considered very unlikely that external
	  projects will be accessing this variable, and since un-inlining the
	  constructors is perhaps unnecessarily complicated, the decision was
	  made instead to remove the compiler-based deprecation attribute, but
	  retain the documentation-based deprecation warning. If real-world
	  experience shows that removing the compiler attribute was the wrong
	  approach, then the un-inlining approach can instead be implemented.
	- Eric Sunshine fixed bug in CS/plugins/cscript/Jamfile where it
	  unconditionally referenced Python-related targets even if Python SDK
	  was not found or was disabled explicitly, thus breaking the build in
	  those cases (and indirectly causing makefile emulation generation to
	  fail).
	- Eric Sunshine fixed bug in processorspecdetection_nonwin_gcc_x86.h
	  where it referenced and returned to the caller uninitialized state.
	- Eric Sunshine added 'non-virtual destructor' warning suppression to
	  apps/test/wxtest/Jamfile to silence warnings about header problems
	  over which we have no control (for wxWidgets shipped with Mac OS X).
	- Eric Sunshine eliminated numerous compilation warnings throughout
	  CS/apps plus a couple apparent outright bugs in lighter2 resulting
	  from invalid csVector3 construction.
        - Mike Gist changed texture parsing to store the absolute (VFS)
          file path instead of the relative file path. Resolves #417
        - Mike Gist added some virtual allocator methods to csShaderVariable.
          Should resolve #72.
	- Eric Sunshine fixed bug in recently added
	  CS::Graphics::RenderMeshModes copy-constructor. Resolves issue #420.
	- Eric Sunshine eliminated some more compilation warnings in lighter2
	  reported by a more recent gcc. Also normalized formatting of size_t
	  per suggestion from Frank.
	- Eric Sunshine eliminated compilation warning in sprcal3d.
	- res copied the debug symbol collection and file upload Jam code from
	  CSlibs.
	- res added support for version 9 to the VC project generation.
19-Nov-2007
	- Eric Sunshine fixed OpenAL renderer to take advantage of
	  CS_OPENAL_PATH preprocessor symbol when performing #includes. The
	  value of this symbol is determined by the configure script as 'AL' on
	  most platforms and 'OpenAL' on Mac OS X. Resolves issue #415.
	- Eric Sunshine eliminated compilation warnings in OpenAL renderer.
	- Fossi fixed a null pointer error on loading imposters.
	- res fixed shared library building breakage after r28177. (A
	  reference to a parameter of the Win32 SystemLinkSharedLibrary rule
	  wasn't updated when the parameter placement changed.)
	- Eric Sunshine generalized "checking..." message for
	  __attribute__((malloc)) in configure.ac so that it is not quite so
	  GNU-specific. Also normalized the message to match format of other
	  similar __attribute__(()) checks.
	- Eric Sunshine added copy-constructor to CS::Graphics::RenderMeshModes
	  to pacify Mac OS X 4.0.1 compiler which complained about having to
	  synthesize the method when invoked by
	  csGLGraphics3D::DrawSimpleMesh().
	- Eric Sunshine fixed incorrect type in declaration of
	  csGLBasicTextureHandle::pbo, which caused compilation to break on Mac
	  OS X.  Resolves issue #414.
	- Eric Sunshine added configure.ac check to determine how to suppress
	  warnings about non-virtual destructors in classes with virtual
	  methods. CS code itself does not require such suppression, but some
	  3rd-party libraries employed by CS publish headers which contain this
	  fault. (Some versions of wxWidgets and cppunit are notable examples.)
	- res fixed csCommonImageFile to compile when THREADED_LOADING is
	  disabled.
	- Eric Sunshine generalized the non-virtual destructor warning
	  suppression check and moved it from configure.ac to
	  CS/mk/autoconf/warnings.m4 for use by external projects.
	- Eric Sunshine added 'non-virtual destructor' warning suppression to
	  plugins/video/canvas/wxgl/Jamfile to silence warnings about header
	  problems over which we have no control (for wxWidgets shipped with
	  Mac OS X).
18-Nov-2007
	- Eric Sunshine fixed gristing problem in LibraryShared rule in
	  library.jam which caused it to leave symbolic links laying around in
	  top-level build directory at 'clean' time. Also added missing Clean
	  rule invocation to Library implementation. Fixes issue #413.
	- Eric Sunshine fixed bugs in construction of '$(libname)clean' targets
	  in SystemLinkSharedLibrary implementations in unix.jam and win32.jam
	  which resulted in auxilliary files created by those rules (such as
	  .dbg and .def) to be left around when those clean targets were
	  invoked.
	- Eric Sunshine fixed bug in SystemLinkSharedLibrary in unix.jam which
	  caused 'clean' targets to miss generated .resp file.
	- Eric Sunshine simplified and normalized implementation of DoSymLink
	  actions in helper.jam.
15-Nov-2007
	- res changed BfdModuleHelperWin32 to convert backslashes in the 
	  module name into forward slashes - libbfd wants these.
	- res changed BfdSymbols to always use separate debug info if present,
	  not only if the actual module has not symbols - this works better on
	  Win32 where some symbols (exported funtions, mostly) are always
	  found in the actual module.
	- Jorrit fixed a small bug in Dynavis with regards to debugging
	  output.
	- Jorrit fixed a bug in dynavis where during update of an object
	  the check for outline culling was using the old version of
	  the goodoccluder flag.
	- Jorrit changed Dynavis so that the warning if a model is not closed
	  is not used if the model has less then 16 triangles. In that case
	  Dynavis will not use outline culling anyway so the warning is
	  useless.
	- Eric Sunshine fixed bugs in several Jamfiles which referenced the
	  target 'vfs' unconditionally. This caused Jam to abort if zlib was
	  not found at configure time, and also caused makefile emulation layer
	  creation to fail.
	- Eric Sunshine removed the unused MikMod check from configure.ac.
	- Eric Sunshine removed unportable shell constructs from
	  CS/bin/autogen.sh.
        - Mike Gist fixed a few issues with the forceLoadTextures argument
          in some functions in csparser, which were causing incorrect default
          behaviour (and thus breaking some backwards compatibility).
	- res fixed the static plugins linking library-side glue to also work
	  when shared libs are disabled.
	- res removed the "platform allocator" stuff (which became unnecessary
	  when the malloc/new override was removed).
	- res tweaked the VC projects have the same .pdb file used by compiler
	  and linker when building shared libs.
14-Nov-2007
	- res fixed BfdModuleHelperWin32 to actually build on MinGW.
13-Nov-2007
	- res made the following changes:
	    - Changed the BFD callstack name resolution helper to be (mostly)
	      platform-agnostic - a helper is still needed to provide module
	      file names and addresses.
	    - Added such a helper for all platforms
	      supporting dladdr(). 
	    - Fixed te BFD symbol handler to explicitly try to follow
	      .gnu_debuglink when no symbols are found in the "main" file.
	  Together, these changes fix #165.
	- Eric Sunshine eliminated several compilation warnings in the core
	  library.
	- Eric Sunshine fixed sed expression in CS/mk/autoconf/crystal.m4 to
	  work with POSIX-compliant sed commands (such as the BSD version on
	  Mac OS X) which recognize only the '*' regex repetition token.
	  (Portable scripts should not use '+', '?', or '{n,m}' repetition
	  notation.) Resolves #411.
11-Nov-2007
	- res moved CS::ShaderVariableContextImpl to the CS::Graphics
	  namespace.
	- res added CS::Graphics::OverlayShaderVariableContextImpl - a shader
	  variable context that "overlays" SVs over some other given context.
	- res changed the terrain2 plugin to make the shader variable context
	  from the terrain cell render properties available for rendering.
	- res made the terrain2 loader load SVs into cell rendering properties.
	- res added initial support for lightmaps to the terrain_fixed shaders.
10-Nov-2007
	- Vincent applied res' patch for configure OpenAL check. It was
	  looking for alut, which is not used by CS sound system.
	- Vincent silenced warnings about '#pragma GCC diagnostic' with
	  GCC < 4.2.
	- Marten added an assert in CS::Threading::Condition::Wait to 
	  make sure the mutex really is held when wait is called.
	- Marten fixed a compilation error in phystut (M_PI vs PI define).
9-Nov-2007
	- Jorrit did the following bullet/physics related changes:
	    - Added iDynamicsSystemCollider->CreateCylinderGeometry().
	    - Implemented this in bullet and ODE plugins. In the ODE
	      plugin a capsule is used.
	    - Bullet debug mode now doesn't draw unneeded many lines in
	      case there are multiple steps/frame. Also it no longer
	      flickers. The debug display is stable.
	    - Added support for convex meshes with extended iDynamics
	      API. In ODE implementation this will just use a normal
	      mesh. In Bullet this will use a special convex mesh primitive
	      which is allowed to move (concave meshes cannot move
	      in Bullet). This is untested however.
	    - Compile fix on phystut.
	    - Changed ODE plugin so that it now automatically handles
	      splitting the elapsed time in fixed chunks. This code
	      was present but for some reason disabled by default.
	    - Removed split in fixed dynamic steps in phystut. Bullet
	      already handles this automatically and our ode plugin
	      also fixes this in the plugin.
	    - Started initialial implementation of joints in the bullet
	      plugin. Not working yet.
	    - Partially implemented the joint support for fixed joints.
	      It works slightly but the simulation seems unstable for
	      some reason.
	- Eric Sunshine fixed issue #408 (Autoconf 2.59 bug: "." not
	  transformed to to "_" in shell $with_foo variable names) by making
	  "cairomm-1.0" an aliases of "cairomm" in the CS_CHECK_LIB_WITH()
	  invocation in configure.ac.  This arrangement generally is more
	  robust anyhow, potentially requiring less future maintenance.
	- res changed CS_CHECK_LIB_WITH to also augment the pkg-config search
	  path and executable search path with directories derived from the
	  user-specified location. Also changed some wording to make clear that
	  the provided location is only search in addition to any standard
	  directories, not instead. Addresses #276.
8-Nov-2007
	- Jorrit did the following bullet/physics related changes:
	    - Added support for static mesh colliders to bullet.
	    - Dynamic rigid mesh bodies are not supported by bullet.
	      Bullet prints a warning when this is tried and will return
	      false.
	    - Added new '*' key to phystut. This will add a star shaped
	      static collider to test out static mesh colliders.
	    - Decreased radius of the avatar sphere in phystut.
	    - Fixed a bug in SetLinearVelocity() and SetAngularVelocity().
	      If the object was resting then calling those functions
	      would have no immediate effect. Fixed by calling
	      activate() on the rigid body.
	    - Added bullet specific iBulletDynamicSystem interface.
	      With this interface you can get debug drawing for
	      Bullet colliders.
	    - Changed phystut so that with the '?' key you can now enable
	      and disable this debugging feature for bullet.
	    - Added implementation of AttachColliderCylinder().
	    - Fixed a big bug in the conversion of Bullet to CS
	      transforms. The matrix was inverted which caused objects
	      to be positioned totally wrong. Without the debugging tool
	      this was not always very obvious.
7-Nov-2007
	- res re-did the change from r27846 (add some arguments to Update()):
	  to not break compatibility with existing third-party implementations
	  of iGenMeshAnimationControl, the change to Update() there was
	  reverted. Instead, a new interface was added 
	  (iGenMeshAnimationControl1_4) which holds the updated Update() 
	  method. The genmesh plugin will use the version from
	  iGenMeshAnimationControl1_4 if that interface is present, otherwise
	  it will use the "old" version from iGenMeshAnimationControl.
	- res removed the unused compile group "meshimpexp".
	- res fixed an inconsistency in the event system where the mouse and
	  joystick event helpers created events whose key modifier flags where
	  specified and stored as 'uint32' whereas practically all other code
	  treated them as 'csKeyModifiers'. Changed the helpers to take and
	  store 'csKeyModifiers' (the old 'uint32' variants are deprecated).
	  Should fix #84.
	- res added iKeyboardDriver::GetModifiersState(), returning the state
	  of all modifiers in a csKeyModifiers structure.
	- res fixed some uses of the now-deprecated event creation helpers
	  taking uint32 modifier states.
5-Nov-2007
	- Jorrit changed phystut so that it adds spheres with the
	  center hard transformed. That way the 'offset' feature in
	  AttachColliderSphere() is used and tested. In bullet this
	  appears to work well, however in odedynam it doesn't.
	- Jorrit fixed a crash-at-exit bug in bullet plugin.
	- res fixed the bullet configure test to work with Bullet 2.64.
	- Jorrit implemented CreateCollider() for the bullet plugin. Changed
	  phystut so that half of the wall colliders are created using
	  CreateCollider() while the other half are created using
	  AttachColliderBox().
	- Jorrit (paritally) implemented CreateSphereGeometry() for
	  bullet colliders. The center offset is not yet supported and is
	  always set at 0,0,0.
	- res changed bin/autogen.sh to not remove aclocal.m4 when autoconf
	  failed. Can be helpful for troubleshooting.
	- res fixed a copy-and-paste error in include/Jamfile to properly
	  filter include/csutil/scopedmutexlock.h from the master headers.
4-Nov-2007
	- res updated the caca canvas to work with caca 0.99.
	- res added an empty IconsMakeWin32ICO rule override to msvcgen.jam to
	  prevent icon file regeneration when just regenerating VC projects.
        - Mike Gist added the concept of 'proxy textures', where textures are
          created without an image loaded, and then fully loaded when they are
          needed. This allows for a library of textures to be shared between
          maps, but only the textures actually used by a given map to be loaded.
          Also added some unloading functions as part of this, although they can
          be used separately if wanted.
	- res adjusted the preprocessor definitions for lib3ds to contain
	  LIB3DS_GENERIC_DATA_IO_CALLBACKS, needed for the version contained
	  in the latest cs-win32libs.
	- res marked the UnusedResourceHelper() functions with
	  CS_CRYSTALSPACE_EXPORT, had them take const refs to arrays, and 
	  added safeguards against 0 entries in arrays.
3-Nov-2007
	- Jorrit added an initial port of the bullet physics plugin to the
	  latest release of bullet (2.64). Not everything is supported yet
	  but basic phystest using boxes and spheres works fine. Things that
	  don't work are some parts of the collider api, joints, and body
	  groups. Also several physics parameters like elasticity are not
	  yet supported.
	  Note: the configure test is currently broken. The problem is
	  that bullet expects the include path (-I) to be set to
	  ${installpath}/bullet and I don't know how to express that in
	  configure.ac.
	- res removed the setting of CS_HAVE_LIBBFD when meta info embedding
	  was enabled and libbfd is present. This fixes build errors on MinGW
	  in optimize mode where this preprocessor macro was set but libbfd
	  not actually linked. The other BFD use in CS, the bfd-based plugin
	  metadata reader, is unaffected since it doesn't make use of that
	  macro to detect BFD presence (that's handled in the Jam file).
1-Nov-2007
	- res added a simple (and rather unflexible) SVG loader utilizing
	  VGVM.
31-Oct-2007
	- Jorrit made the dynamic step callback array in odedynam use
	  a normal csRefArray instead of a csWeakRefArray. Using a weak
	  ref array in this case is wrong since it requires implementors
	  of this callback to keep their own reference somewhere.
	- caedes fixed memory leaks in emit iEmitFactoryState implementation.
	- caedes fixed csShaderVariable leaks in lightiter.
        - Mike Gist committed a change from Marten to fix GetNamedChildObject.
30-Oct-2007
	- res fixed some implementation mistakes in csRedBlackTree, leading
	  to violations of the RB reles in the tree, especially when deleting:
	    - The original source for the variant implemented here uses 'nil'
	      elements as indicators for absence of a child or parent of a
	      tree node. The CS implementation uses 0 as 'nil', and dutifully
	      checked some pointers for 0 before manipulating their contents.
	      However, in the original source, 'nil' is an actual element and
	      at a point a change is made to it's 'parent' which us expected
	      to be reflected at another place where the parent of a possibly
	      'nil' element is read. Fixed the code to track that special
	      'nil parent' there.
	    - In another part, the parent of a specific node was used
	      repeatedly and thus cached. However, some operations done on the
	      tree potentially change the parent of that specific node, but
	      the cached value was not updated. Fixed as well.
	    - In one instance a statement was just transcribed plain wrong.
	- res added CS::Utility::GenericResourceCache. This helps with the
	  somewhat common issues that some resources used while rendering
	  should be reused next frame, however, the desired resources have
	  different attributes. Also, resources shouldn't be just piled up
	  but unneeded ones should be released after some time. The generic
	  resource cache deals with that while allowing for necessary 
	  behaviour customization (e.g. only return a resource that satisfies
	  some constraint).
28-Oct-2007
	- res changed the Jam LinkWith rules to add a dependency of targets
	  on the "naked" target names (e.g. 'crystalspace') instead of the
	  link library filename (e.g. 'libcrystalspace-1.3.so') to make sure
	  the symlinks for shared libs are created.
	- caedes fixed leakward for shaderweaver's WeaverCompiler (was using
	  bad class name for leakward implementation).
	- Eric Sunshine added CS/doc/support/prepare_online_publish.sh, a
	  script for massaging generated HTML documentation (CS manual and API
	  reference) into a form suitable for online publication. This script
	  is invoked as a documentation generation post-process from jobber. It
	  presently performs the following tasks:
	    - Renames generated .html files to .php.
	    - Fixes up internal links to point at .php rather than .html.
	    - Adds a "Search" field.
26-Oct-2007
	- Darek added bindings to the documentation.
	- caedes fixed incorrect handling of smart pointers in cspython.
	- caedes fixed one memory leak in genmesh.
	- caedes fixed RenderBufferAccessor leakwards for genmesh, spr2d, 
	  particles and instmesh (they were missing some 
	  CS_LEAKWARD_IMPLEMENT uses).
25-Oct-2007
	- caedes added a bunch of const_cast to cspython to account for 
	  incorrect prototypes in python 2.4 functions (which would lead to
	  compile errors).
	- Jorrit updated SimpleRoom.java so that it no longer uses the
	  deprecated CS_QUERY_REGISTRY and SCF_QUERY_INTERFACE. Also changed
	  it to use genmesh instead of thing for the walls.
	- caedes added some macros to swig interface files for facilitating
	  removal of csString types from scripting languages, namely
	  TYPEMAP_STRING and TYPEMAP_STRING_PTR. Note this macros have to be
	  implemented for each language in order to completely remove the
	  types.
	- caedes implemented TYPEMAP_STRING and TYPEMAP_STRING_PTR swig macros
	  for python, thus removing csString and similar completely from the
	  python bindings.
24-Oct-2007
	- caedes implemented 'new' iScript interface for cspython. Fixes
	  trac #93.
	- caedes fixed error message routing in cspython to send errors
	  as reporter errors instead of warnings.
	- caedes changed pysimp to use new iScript interface, and also changed
	  way cspython is loaded so it can report its command line help.
	- Marten made a number of fixes to the threading subsystem:
	    - Added a barrier synchronization primitive.
	    - Reimplemented the thread startup synchronization.
	    - Removed some fallout of yesterdays cleanup of old threading.
	- caedes removed data/varia/walktest.cam. Fixes trac #162.
	- caedes changed walktest LoadCamera command to emit warnings
	  instead of errors when it encounter problems.
	- caedes replaced uses of CS_GET_CHILD_OBJECT in walktest and mazing
	  apps by CS::GetChildObject.
	- res fixed some 'friend' methods of csSphere and csMatrix2 lacking
	  CS_CRYSTALSPACE_EXPORT.
23-Oct-2007
	- Marten cleaned out a few remaining deprecated classes left from 
	  pre 1.2 including the old threading subsystem.
	- Marten removed a potential race & deadlock from the thread startup.
	  This change impose a small change in (undocumented) semantics of
	  CS::Threading::Thread::Start(), the method might now return before
	  the thread have fully started.
21-Oct-2007
	- res augmented ptpdlight to also support light specification by
	  sector and light name (which should be much more reliable than using
	  the light ID).
	- res made lighter2 write out sector and light name instead of the
	  light ID for ptpdlight lightmap-light mappings.
	- res changed lighter2 to not only support XML world files.
	- res slightly improved lighter2's support for multiple world files:
	  meshless worlds that only carry textures and materials now work.
	- res augmented gmeshanimpdl to also support light specification by
	  sector and light name.
	- res made lighter2 write out sector and light name instead of the
	  light ID for gmeshanimpdl lightmap-light mappings.
20-Oct-2007
	- res added a method to iTextureHandle to query whether applying a
	  blit buffer may potentially require calls into foreign code.
	- res changed the ptpdlight MMX code to do an 'emms' if applying the
	  blit buffer potentially calls foreign code. Actually fixes some
	  corruption experienced with ATI drivers and using glTexSubImage2D.
	- res added support for the pixel pack/unpack buffer bindings to the
	  GL state cache.
	- res fixed some errors in csimagetool's getopt_long() options string.
	- res changed the JPG loader to only return paletted images if the
	  loaded image is grayscale; otherwise, the quantization is left to
	  CS.
	- res deprecated the (pretty much defunct for while now) 
	  iImageIO::SetDithering() method.
	- Darek updated haze docs.
	- caedes added macros to swig bindings to allow declaring structures
          similar to csWrapPtr in other modules.
        - caedes added some immutable declarations in swig bindings to avoid
	  a number of warnings.
	- caedes polished swig jam rule by following some advice from Eric
	  Sunshine (removed an unecessary variable, and fixed a misleading
	  comment).
	- res fixed a wrong order in the shader weaver type info data.
	- res "generalized" the MSVC deprecation warning headers into 
	  csutil/deprecation_warn_* since latest gcc also offers a mechanism 
	  to silence deprecation warnings. 
	- Mike Gist added a compile fix for the OpenAL plugin on MSVC.
19-Oct-2007
	- Vincent added comments about using iSndSysSource3D,
	  iSndSysSource3DDirectional and iSndSysSource3DDirectionalSimple
	  instead of deprecated iSndSysSourceSoftware3D interface.
	- caedes fixed element size in swig iDataBuffer buffer declaration.
	- res changed the GL texture blitting logic to make sure the texture
	  is in the desired format even if only a partial area is changed.
	- res added a Dump() method to GL textures.
	- res added a tweak to the driver DB to disable PBO on ATI (where it
	  gives incorrect results).
	- caedes added correct swig wrapping of many common methods returning
	  iBase which until now where using old cs macros. This wrapping
	  allows to start using the real cs interface, so old methods have
	  been deprecated. List of deprecated macros and new replacements:
	    - CS_QUERY_REGISTRY -> ObjectRegistry->Get
	    - CS_QUERY_REGISTRY_TAG_INTERFACE -> ObjectRegistry->Get
	    - SCF_QUERY_INTERFACE -> iBase->QueryInterface
	    - CS_QUERY_PLUGIN_CLASS -> iPluginManager->QueryPlugin
	    - CS_LOAD_PLUGIN -> iPluginManager->LoadPlugin
	    - CS_LOAD_PLUGIN_ALWAYS -> iPluginManager->LoadPluginAlways
	    - CS_GET_CHILD_OBJECT -> iObject->GetChild
	    - CS_GET_NAMED_CHILD_OBJECT -> iObject->GetChild
	    - CS_GET_FIRST_NAMED_CHILD_OBJECT -> iObject->GetChildByName
	  note some lesser used methods had to be renamed to cope with
	  ambiguous overloading.
	- caedes added a DEPRECATED_METHOD directive to swig interface
	  files, this can be wrapped in language specific way to both
	  avoid compile time warnings and provide run time warnings
	  instead.
	- caedes fixed python tutorials to remove usage of old macros above.
	- caedes made iSCF::SCF and scfInterfaceMetadata::interfaceName
	  immutable inside bindings to account for some warnings, and added
	  a function to change the global core SCF pointer.
18-Oct-2007
	- caedes added BUFFER_RW_FUNCTIONS macro to swig interface files,
	  this is useful for declaring buffer like objects that can be
	  wrapped in efficient language specific buffers. Also added
	  a python implementation for the macro (for other languages
	  it just won't do anything until someone implements it).
	- caedes added swig buffer declarations for iDataBuffer and
	  iGeneralFactoryState vertices stuff.
	- caedes added error printing to the python eventhandler, this
	  way its not necessary to wrap the event handler code in
	  try,except clauses.
	- caedes removed try,except clauses from the python tutorials
	  event handlers and fixed some other minor style issues in
	  the tutorials.
	- caedes added tutorial4.py, on a better base for creating pure
	  python cs apps.
17-Oct-2007
	- Jorrit fixed the genmesh loader so that you can now use multiple
	  <box> and <sphere> statements to make a genmesh factory out of
	  multiple primitives. Also using CS::Geometry::Primitives now.
	- Jorrit started work on instmesh and meshgen. At this point the
	  following things are done:
	    - Instmesh and meshgen now work nicely together without
	      (known) bugs. Lighting works too.
	    - If the meshes used for meshgen don't have too many
	      polygons and density isn't too big then instmesh+meshgen
	      is a lot faster compared to genmesh+meshgen. At the
	      very least the update time (when moving around) is
	      a lot faster. However, as soon as the total number
	      of polygons gets too big then instmesh+genmesh starts
	      to get in a disadvantage. On this further optimizations
	      have to be made.
	    - Warning: instmesh+meshgen still has a bug at exit. Seems
	      there is some memory corruption going on.
	- res enabled shared libraries by default on Win32 and Linux.
	- res merged the MSVC project shared libraries support from the
	  msvc-dlls branch.
	- Vincent restored iSndSysSourceSoftware3D interface for the sake of
	  compatibility and deprecated it.
	- res fixed msvcgen.jam to use MSVC.PREFIX.library_static instead of
	  MSVC.PREFIX.library everywhere.
	- res added a new interface for directly setting texture pixel data:
	  iTextureHandle->QueryBlitBuffer()/ApplyBlitBuffer(). Instead of
	  copying a client-provided buffer, the client writes into a renderer-
	  provided buffer. This can save a copy (and thus give somewhat better
	  performance) when some extensions for direct texture memory access
	  are available (such as ARB_pixel_buffer_object).
	- res made ptpdlight use iTextureHandle->QueryBlitBuffer()/
	  ApplyBlitBuffer(). 
	- res changed shared library building to place the built libraries
	  into the top build directory and not deep within out/.
	- caedes made python bindings use -modern swig flag. This instructs
	  swig to use modern python features only (and generates somewhat less
	  convoluted code).
	- res changed docconv_static to link some unneeded plugins.
	- res fixed an errorneous MsvcUsePCH in the cslight Jamfile.
	- res made shared libraries built in out/.../libs again (so they're
	  correctly picked up by cs-config), but also added a symlink for them
	  to the top build directory (for convenience).
	- res fixed the MSVC projects to "decorate" the object file names for
	  the static plugin library again.
	- res made static plugins in MSVC be put into a separate shared lib as
	  well (like what's done when build statically with Jam now) to
	  facilitate LGPL compliance when 3rd parties wish to link CS
	  statically.
	- res fixed some build errors that appeared with static plugins.
	- res fixed the MSVC static plugins project to not contain the library
	  building preprocessor definitions (which mess up importing when 
	  building with DLLs).
16-Oct-2007
        - Mike Gist deprecated csProcessorCapability.
14-Oct-2007
	- Eric Sunshine renamed build variable LIB3DS.ONE_THREE_OH to
	  LIB3DS.GENERIC_DATA_IO_CALLBACKS to better reflect its intended
	  meaning (a specific API change). Likewise, changed the configure
	  "checking" message from "if lib3ds version >= 1.3.0" to "for generic
	  data I/O callbacks" in order to clarify and reduce confusion (since
	  the old ">= 1.3.0" message appeared immediately after a "if lib3ds is
	  sufficiently recent" message). Also, renamed related C++ #define from
	  NEW_DATA_CALLBACKS to LIB3DS_GENERIC_DATA_IO_CALLBACKS.
	- Eric Sunshine eliminated several compilation warnings.
	- Eric Sunshine fixed 'using independent target "nohelp"' warning
	  emitted by Jam when building cs-config.
    	- Eric Sunshine fixed cs-config/Jamfile so that cs-config gets removed
	  upon 'jam clean' and 'jam distclean'.
	- Eric Sunshine re-added 'cs-configclean' Jam target which got lost
	  when versioned cs-config-x.y functionality was added to
	  cs-config/Jamfile.
	- Eric Sunshine updated cs_min_version_default to 1.3 in
	  CS/mk/autoconf/crystal.m4. Also added commentary to various
	  version-containing files stating that this file needs to be updated
	  during version bumps.  (Ultimately, we should have a script in CS/bin
	  which performs the version bump automatically rather than having to
	  remember to do it manually in each place.)
	- Eric Sunshine fixed some problems with the SplitDebugInfo rule in
	  strip.jam which caused it to be somewhat dysfunctional. An obvious
	  manifestation of these problems was that the generated .dbg files
	  were not removed by any of the Jam 'clean' targets.
13-Oct-2007
	- res fixed a bug in DDS cubemap saving (checked for wrong subimage
	  count).
	- res made the DDS saver support DXT w/ cubemaps.
	- res augmented csimagetool to support creating a cubemap from multiple
	  images and splitting a cubemap into its subimages.
        - Mike Gist added matRef to Mesh (cal3d) to increase the refCount on
          materials used by that mesh. This fixes a problem where the ref count
          on some materials was incorrect.
12-Oct-2007
	- caedes applied a patch from Lukas Erlinghagen for the pysimp.py file
	  to account for incorrect lighting.
	- Jorrit did an optimization to CollideRaySegment (in opcode plugin)
	  for old terrain. At worst this will make CollideRaySegment
	  about eight times faster. At best it can be a lot more.
	- Jorrit did a *huge* optimization in CollideRaySegment again.
	  The result is that TraceBeam is now more then 10000(!) times
	  faster compared to before my previous optimization. As an
	  added benefit future performance for collision detection will
	  no longer be degraded as the cache size for OPCODE will remain
	  small.
	- res fixed the ptpdlight VC project to contain an un-gristed
	  ptpdlight_mmx.cpp filename.
11-Oct-2007
	- res changed the relaytool invocation to:
	    - Pass multiple libs to be relayed in one command.
	    - Pass CS' CFLAGS.
10-Oct-2007
        - Mike Gist fixed a compile error in the processor spec detection
          code on PPC.
	- res fixed csImageCubeMapMaker to not use new[]/delete[] for the
	  filename (since csImageBase uses cs_malloc()/cs_free() for it).
	- caedes reverted r27847 on data/shader/reflect.xml as seems
	  future accidentally slipped in :).
09-Oct-2007
	- res added the CS_SUPPORTS_MMX preprocessor define for MSVC projects.
	- res made ptpdlight support MMX for a slight speed-up.
	- res added an MMX test to configure (based on Mike Gist's work in the
	  SIMD SoC branch).
	- res made it possible to run the CFlags Jam rule on (gristed) source
	  file targets to specify per-source compile flags.
	- res made the ptpslight MMX stuff compile on gcc.
        - Mike Gist merged a basic simdtest from the SIMD SoC branch.
	- Jorrit did a small optimization in meshgen. Meshes that become
	  invisible due to alpha transparency are now really made invisible
	  for the engine. That helps performance a bit.
07-Oct-2007
	- Eric Sunshine resolved some issues with jobber configuration
	  following recent changes:
	    - Restored MSVCGEN_SILENT=yes for msvcgen runs in order to reduce
	      noise in output log.
            - Added --quiet option to configure script invocation to reduce
	      noise.
	    - Update recently-outdated comments to reflect current state.
	- res changed iGenMeshAnimationControl::Update() to also take a mesh
	  version and vertex count (like the other Update* methods).
	- res added multi-buffer support to gmeshanimpdl.
	- res augmented lighter2 to support directional static lighting for
	  vertex-lit objects as well.
06-Oct-2007
	- res made the following changes to shaderweaver:
	    - Added a simpler way to specify default values for inputs: it can
	      now be a value that gets assigned to the input if no match to
	      some connected output is found.
	    - Added "attributes" to input/output values: these store auxiliary
	      bits of information that can be set and used by snippets to
	      fine-tune their behaviour. As a practical example: normals have
	      an attribute "perfragment" which indicates whether the normal
	      varies per fragment (e.g. comes from a normal map) or just per
	      vertex.  The lightmapping code uses that information and only
	      utilizes directional LMs if the normal varies per fragment.
	- andres made jobber really use the CS configure script, in order to
	  better cope with changes, like the recent Python ones. Also made
	  jobber checkout from a local repository and then "switch --relocate;
	  update" in order to make it more failsafe and faster.
05-Oct-2007
	- caedes changed mk/jam/swig.jam to make sure the bindings/python out
	  folder is created before swig is run on the modules in all
	  situations. This fixes problems when running pythonfreeze on a clean
	  tree.
	- caedes made some changes to swig files:
	    - temporarily moved fontserv to core module, as there are problems
	      having it in a separate module.
	    - added array protocol declaration for iStringArray.
	    - added iterator protocol for scfInterfaceMetadataList python
	      wrapper.
	- caedes changed PyBindingModule rule to not emit warnings on
	  uninitialized variables coming from swig generated code (was like
	  this originially but somehow the flag got removed on bindingsplit).
	- caedes reordered cspace python package __init__.py to import
	  modules in inheritance order, and moved fontserv back to ivideo
	  module as the reordering takes care of type resolution problems.
	- caedes moved iAnimatedImage to the swig core interfaces list (had
	  been incorrectly added to the iengine interface list).
	- res changed bugplug to stop profiler logging when it's unloaded.
	- res made bugplug's "normal drawing" also draw tangents and
	  bitangents.
	- res added a method to obtain a custom render buffer by name string 
	  from genmeshes.
	- res made changed the genmesh factory to allow retrieval of the
	  tangent and bitangent buffers via GetRenderBuffer().
	- res fixed a bug in xmlshader where conditional constructs like
	  'elsif ... else ... endif' would result in document data to be
	  internally assigned to the wrong block (and hence cause invalid
	  output).
	- res added initial support for directional lightmaps to lighter2.
	- res changed the "classic lighting" weaver snippet to take advantage
	  of directional lightmaps.
	- res added some (still very limited) per-map configuration support to
	  lighter2 (only lightmap density works atm).
	- res converted data/water.zip to use genmeshes, fixed poly meshes,
	  and lit it with lighter2.
	- res changed shaderweaver to emit a meaningful message when an input
	  for a snippet can't be matched and no default is given.
	- caedes changed castle license to by-sa. Xotic agreed some time ago
	  to have a license similar to cs so as to not complicate
	  distribution, but seems we forgot to update the licenses
	  appropriately. He still agrees that we can use the license more
	  appropriate for cs (last time we agreed on by-sa, so thats what it
	  is now).
	- caedes added python __repr__ and __str__ for many of the csgeom
	  types.
	- iceeey made CS_CHECK_PYTHON emit PYTHON.VERSION.
	- iceeey made configure emit CMD.SWIG.VERSION.
	- iceeey made python binding generation require at least SWIG 1.3.28
	  for since this allows the use of modern SWIG features.
        - iceeey made python binding generation for Python 2.5 require at least
	  SWIG 1.3.31 since Python 2.5 was first supported in this version
	  (actually in 1.3.30, but this version was buggy and was superceded
	  by 1.3.30 7 days later).
	- caedes added a jam target for generating a python cspace.pth file on
	  install (will automatically be run with install_bindings).
	- res fixed lighter2 trying to set up tangents for genmeshes even if 
	  they aren't needed.
04-Oct-2007
	- andres added a VarFileInfo Block to the resources for win32
	  dlls/executables as they are invalid without and especially
	  considered invalid by windows installer.
	- andres made the search for the CS installation in the registry not to
	  look at the version agnostic version before the version aware bit in
	  registry
	- res removed the "ignore neighbouring primitives" from lighter2's
	  border element handling again. Instead, now sampling points are 
	  ensured to be really on the primitive (wasn't always the case 
	  before, esp. near corners), and the sampling points are slightly
	  fudged away from the primitive to make it less likely that it hits
	  very close primitives.
	- caedes did the following changes to swig files:
	    - added ARRAY_CHANGE_ALL_TEMPLATE and ARRAY_CHANGE_ALL_TEMPLATE_PTR
	      swig macros to help in declaring iArrayChangeAll related
	      templates to swig.
	    - added terrain2 related includes and interfaces.
	    - added some intermodules relationships.
	    - changed cspace.i module include ordering.
	    - added swig declarations for scfImplementationExt2, 
	      scfImplementation2, scfFakeInterface, and fixed 
	      scfImplementationExt1.
	    - added iAnimatedImage, iProcTexture, iRenderLoop, 
	      iRenderLoopManager and related includes.
	    - removed some leftover commented code.
	    - added iLightIterator, iObjectIterator, iPluginIterator, 
	      iSectorIterator, iMeshWrapperIterator to interface
	      list, and related missing iterator directives for swig.
	- caedes changed cspython.cpp not to use PYTHONPATH variable name as
	  it seems it conflicts with a Win32-specific #define inside the 
	  python headers (reported by Lukas Erlinghagen).
	- res fixed a use of the wrong variable in the MSVC portion of the
	  PythMod Jam rule which caused Python module projects to not depend
	  on the specified libraries.
	- res fixed some botched progress tracking in lighter2.
	- res moved the castle textures to their own .zip file: notably, their
	  license (CC-by-nc) differs from the other textures' one (not 
	  separately specified, presumably LGPL). Separating the textures
	  reduces the risk that the castle textures are mistaken as being 
	  under the LGPL and makes it easier for clients to not distribute
	  them should they find the license inacceptable.
	- res fixed lighter2 to not compute the element types for a primitive
	  if the object it belongs to is vertex-lit. Fixes trac #370.
03-Oct-2007
	- caedes changed all python tutorials to use opengl instead of
	  software rendering.
	- res fixed a buffer overrun in lighter2: when clipping a triangle to
	  a box, the resulting polygon can have up to seven vertices, not just
	  six. (Really.)
	- res changed genmesh's "lazy" color allocation to use the vertex 
	  array capacity, not size. (This works better when the vertex buffer
	  is "presized" and shrunk again, needed when AddVertex() is to be 
	  used.)
	- res tweaked the gl3d texture manager to not remove a texture from
	  the texture array immediately when the texture is freed: the array
	  is a weak ref one anyway, 0 items are now weeded out lazily. This
	  makes texture removal slightly more efficient due the saving of an
	  array search.
	- caedes added python cpp frozen files.
	- caedes added some swig ignores for CustomAllocatedDerived and 
	  CustomAllocatedDerivedVirtual new and delete operators to account
	  for some swig warnings.
02-Oct-2007
	- res augmented lighter2's element classification algorithm to not 
	  only rely on the position in the scanline to mark an element as
	  partial or full; determine that by computing the actual element
	  coverage.
	- res fixed assignments for csBitArray.
        - caedes fixed some python relative jam files so they account
          correctly for the case where swig is not installed.
	- caedes moved scripts/python/cspace folder to 
	  scripts/python/frozen/cspace to avoid pythonpath clash when running
	  the tutorials.
	- caedes merged the bindingsplit branch into trunk.
	- caedes added new python related frozen swig files.
	- caedes adapted jobber-cel-svn.cfg and jobber-svn.cfg to account
	  for new freeze targets introduced by bindingsplit merge.
	- res tweaked lighter2's border handling to ignore ray hits to 
	  primitives neighbouring to the currently lit one in some cases. This
	  seems to resolve some glitches.
	- res made some tweaks to the binding-related MSVC projects:
	    - The Python module projects now have a "py" prefix (in addition to
	      the already existing "dll" prefix).
	    - The Python modules are now filtered from the typical workspaces.
	    - Added a workspace containing the Python-related projects as well.
	- caedes tweaked swig.jam rules to use a <language>freeze target, 
	  which freezes all swig files relative to that language.
	- caedes modified jobber-svn cel and cs files to use the
	  <language>freeze target from above, also removed the pycscegui
	  explicit freeze as it is included in the global target now,
	  finally, fixed bad folder specification for the pythonfreeze (was 
	  still only using cscript/cspython/).
	- caedes moved pycscegui frozen .py file to 
	  scripts/python/frozen/cspace/, and adapted pyceguitest tutorial to
	  account for its new location.
01-Oct-2007
        - Mike Gist reversed the loops in csSector::UnlinkObjects() to avoid
          meshes being skipped if sl->Remove() removes a mesh object from the
          sector's mesh list.
	- Marten fixed regex compilation on MSVC.
	- res reverted r27755 and r27756 and fixed MSVC regex.c compilation
	  without the need for regex_wrapper.h: just use 
	  csutil/generic/regex.h.
	- Marten fixed compilation on gcc4.2. Don't use reserved keyword for
	  variable names.
	- res fixed a flaw in LocalBufferAllocator in single allocation mode:
	  Free() was always checking whether the local buffer did not consist
	  of the "free pattern"; however, this should not be done when the
	  excess allocator was used, since in that case the local buffer is
	  not touched.
	- caedes removed scripts/python/cspace.py as it shouldnt exist any
	  more.
	- res fixed another flaw in LocalBufferAllocator in single allocation
	  mode: When Free()ing, the local buffer is now always filled with the
	  "free pattern", i.e. also when actually freeing memory from the
	  excess allocator.
30-Sep-2007
	- res made some VC warning fixes.
	- res made the following changes to TinyXML:
	    - When writing to an iFile, instead of storing the XML to a string
	      buffer and writing out everything at once, a smaller buffer is
	      used and the data is written out incrementally.
	    - Scraped a few bytes off the Tiny node's memory footprint.
	- res changed csRegExpMatcher to not allocate the 'regex_t' structure
	  from the heap but have it inline in the class.
	- res made the following changes to csHash<>:
	    - Put() and PutUnique() now return a ref to the value that was 
	      added.
	    - Added GetOrCreate(), which returns an element for a key if one 
	      already exists, or adds and returns a default one if not.
	    - Marked csHashCompute as a "pure" method.
	- res augmented iPluginManager->LoadPlugin() to optionally be silent
	  about plugin loading failures.
	- res made the following changes to lighter:
	    - Added creation of meshes visualizing traced rays and what they
	      hit (for debugging purposes).
	    - Made some small tweaks to improve border element behaviour.
29-Sep-2007
	- Mike Gist changed the call to LoadTexture() in FindTexture() to not
	  create a material if the texture isn't found. This fixes a material
	  duplication bug in FindNamedMaterial().
	- Vincent fixed a <comparever> entry in gldriver.xml.
        - Mike Gist fixed a crash in csMeshFactoryList::Remove().
	- caedes made some shader changes:
	    - fixed vertexlight.cgvp for undeclared matrix and incorrect
	      attenuation.
	    - fixed ambient.avp binding texture coordinates incorrectly.
	    - made std_character2.xml use only software skinning (added
	      soft-skinning.inc snippet).
	    - added a fallback for character_bump2.xml for cards with no
	      pixel processor.
28-Sep-2007
	- Vincent added static variants in lighter2, cslight, basemapgen and
	  docconv Jamfiles.
26-Sep-2007
	- Darek made some fixes in translator and added manual fallback 
	  list (e.g. Translator.Fallback.eu = es it en).
25-Sep-2007
	- res made relaytool work better with shared libs: no link time 
	  warnings on x86 resp. link errors on amd64.
	- res fixed lighter2 to conserve used "single color" lightmaps when 
	  cleaning "old" lightmaps.
	- res made lighter2 generate different lightmap texture names for
	  different levels.
	- res fixed lighter2's "MaterialImage<>" class so not crash when
	  negative coords are requested for wrapped sampling.
	- Marten added back PD-light support in lighter2.
	- res made lighter2 generate level-specific lightmap texture names 
	  also for PD light maps and solid color lightmaps (the latter is done
	  to avoid undesired cleanups).
	- res fixed lighter2's "MaterialImage<>" interpolation to correctly
	  sample negative coordinates.
22-Sep-2007
	- caedes fixed incorrect java/corepost.i and cleaned perl/corepost.i.
	- caedes added swig includes for wrapping RenderPriority again, as it
	  was moved to a different file in cs and this breaks things.
	- caedes added swig defines for CS_DEPRECATED_VAR and
	  CS_DEPRECATED_VAR_MSG so this are correctly wrapped.
	- caedes moved swig scf.i file to include/bindings/common as that
	  is a more correct place.
21-Sep-2007
	- Genjix added support for 3 character long locale codes at the behest
	  or res2k (thanks!).
	- Genjix swapped the precedence of checking system language and using
	  config lanuage, and made a small optimisation in storage.
	- Genjix slightly modified the behaviour of translator, namely adding
	  fallbacks for when language is not found and defaulting to english.
	- iceeey fixed a bug in parsing of GL driver DB where a comparever
	  which checks for an unknown version string type would cause a
	  compound fulfill="one" (OR) condition to short-circuit. This makes
	  the rule "ATI: 'Forceful' fixed function enable" properly applied
	  to ATI cards on Linux making "walktest terrainf" no longer exhibit
	  garbled text and CS logo.
	- res added "partial" shadow support to lighter2: the alpha channel of
	  a surface's texture is taken into consideration when casting the
	  shadow.
	- res added the possibility to instruct the engine to "keep images" on
	  texture wrappers by default. Useful for apps that need the actual
	  image data.
	- res made the GTK alert code also compile on GTK version 2.4.
20-Sep-2007
	- caedes, Genjix and iceeey removed some stupid code :D
	    csQuaternion quat;
	    if (quat.v.x != 0 || quat.v.y != 0 || quat.v.z != 0 || quat.w != 0)
	      // ...
	- Genjix fixed bug in walktest where it doesn't look where the camera
	  is when you move left and right at start!
	- Vincent applied res' fix for configure which detected lib3ds-1.3.0
	  when lib3ds-1.2.0 was installed.
18-Sep-2007
	- res added support for the --gc-sections linker flag and made targets
	  on unix use it.
	- res added support for GTK message boxes to the xwindow plugin. (They
	  look much nicer than the Xaw ones.)
	- res updated the lib3ds check to also check for the I/O callback
	  prototype changes introduced in lib3ds 1.3.0 and changed gmesh3ds to
	  select the appropriate variant. Fixes trac #361.
	- res fixed "fake relay stub" generation for when relaytool is not
	  available.
	- res added the line number + column reporting to the TinyXML and 
	  xmlread error strings. Addresses trac #123.
	- res changed the configure relaytool test to use CS_PATH_TOOL instead
	  of hardcoding the path.
	- res made csparser not assert/crash when the default missing texture
	  can't be loaded - it merely displays an error message now.
	- res changed lighter2 to only propagate lights once through any 
	  portal. This works around apparently occuring infinite recursions.
	- res made lighter2 also always write out a log file "lighter2.log"
	  with all reporter messages.
	- res added some initial "external factory respect" support to lighter2
	  (means factories outside the level directory won't be altered).
	- res fixed the "split prevention" logic in the lighter2 lightmap
	  layouter to not botch splittable meshes.
	- res made lighter2 write out per-mesh "tex lightmap" SVs.
	- res fixed lighter2 ignoring the material from the mesh object if it
	  doesn't have submeshes.
	- res deprecated the remaining csObject-related macros. Also deprecated
	  an unlogic usage of iObject::GetChild ().
17-Sep-2007
	- res added a driver DB tweak to disable EXT_framebuffer_object for
	  (now rather old) ATI drivers (see trac #261).
	- res tweaked the driver DB to enabled "hidden Radeon NPOTS" for newer
	  ATI drivers (which have a slightly different renderer string).
	- res made the XML parsers errors slightly more helpful by having the
	  error message contain the hierarchy of elements in which the error
	  occured.
	- res added support for relaying external libraries using relaytool
	  (that is, they're dynamically loaded, allowing graceful handling
	  of inavailability).
	- res changed the xwindow plugin to have the Xaw library relayed.
	- res made the GL framebuffer render-to-texture support work slightly
	  better with textures larger than the framebuffer.
15-Sep-2007
	- caedes added swig module post files for java and perl.
	- res fixed a crash in the GL driver DB when <comparever> was used
	  with an unrecognized version type.
	- res tweaked some GL driver DB entries to take advantage of the
	  new "glvendor" type.
	- res fixed the default CS_DEPRECATED_VAR definition to actually emit
	  a declaration.
14-Sep-2007
	- andres fixed compilation in mingw (and maybe others) after res' 
	  changes as suggested by res.
	- res added a nicer variant of iSyntaxService::HandlePortalParameter().
	  Also fixed a bug where the "before" setting would always overwrite
	  the "after" one if specified last.
	- res moved RenderMesh to the CS::Graphics namespace.
	- Eric Sunshine added "authorship" attribution for Frank and Marten to
	  the CS manual, and removed copyright notices for a couple people
	  whose work is no longer present in the manual. Also fixed a couple
	  Texinfo mark-up errors in perl.txi.
	- res added CS::TriangleIndicesStreamRandom<>.
	- res tweaked csBSPTree to not use EPSILON for triangle classification
	  against planes; this fixes overzealous classification of triangles
	  as coplanar.
	- res fixed genmesh per-submesh z mode support to actually work.
	- res added support for genmesh per-submesh back-to-front triangle
	  sorting.
13-Sep-2007
	- res added a macro to deprecate struct members and variables
	  (CS_DEPRECATED_VAR and CS_DEPRECATED_VAR_MSG).
	- res made the cull flipping flag in render meshes more flexible -
	  now, there's a 3rd mode "disable".
	- res made render priority a render mesh field.
	- res added support for per-submesh render priorities and z modes to
	  genmesh.
	- res added a "glvendor" version that can be used by the GL driver DB.
	- res tweaked the GL driver DB to work around apparent font corruption
	  with Mesa 6.5.2 (all drivers).
	- res added Description() methods to csMatrix3 and csTransform.
12-Sep-2007
	- Jorrit merged the CS AI branch into trunk (basically only a small
	  change in PriorityQueue).
11-Sep-2007
	- caedes fixed setting of pythonpath inside cspython for new build 
	  location.
	- caedes fixed some problems in swig interface files related to
	  building external modules, also cleaned them up a bit more.
10-Sep-2007
	- caedes made some changes to the swig interface files:
	    - added SetSCFPointer and GetSCFPointer to all modules so
	      their SCF pointers can be set.
	    - added a system for python modules to automatically get
	      their SCF pointers updated, use SetSCFPointer to get that
	      updated instead of the old cvar.iSCF_SCF.
	    - cleaned up some old commented code.
	- caedes modified cspython to set SCF pointer in python modules
	  using the new SetSCFPointer function.
8-Sep-2007
	- res fixed a crash in bezier plugin caused by a rendermanager-only
	  change accidentally slipping in.
	- Genjix added doxygen comment for genmeshanim2 Append(animname)
	  function.
	- iceeey made the cssaver save plugin references with the short name
	  from the original world file, if it was loaded with the saveable
	  flag set. This makes saving and then loading 'castle' work.
	- res changed the output directory of the Python modules and .py glue
	  to out/.../bindings/python.
	- res added two new targets: "bindings" and "install_bindings" to build
	  resp. install bindings.
	- res changed the output/install directory to bindings/python/cspace.
	- res added a 'bindingsclean' target.
	- res changed the python modules to not abuse the plugin rule under
	  MSVC to get built as a DLL any more.
	- caedes added an initial __init__.py file for the new python
	  bindings package (scripts/python/cspace/).
	- res removed the crystalspace_python library and made cspython use the
	  external python modules.
	- res made the cspace __init__.py being copied into the
	  bindings/python/out directory (in out/ resp. the install directory).
	- res changed cspython plugin to augment the PYTHONPATH env var with
	  the location for the python module files in the build path.
	- res fixed the cspython build to properly locate the swig runtime
	  header.
7-Sep-2007
	- res fixed the debug info splitting to put the debug info file into
	  the same directory as the binary (fixes separate debug info for
	  shared libs).
	- res fixed the bezier mesh sometimes returning incompletely setup
	  render meshes.
	- Genjix changed joytest to use CS_REQUEST_JOYSTICK as an example for
	  the users.
	- Jorrit reverted r27048 (quotes for javac detection). This fixes
	  both #377 and #378.
	- Vincent commented explicit OSS driver for software sound renderer in
	  OpenAL branch. Also added examples for other drivers requests.
6-Sep-2007
	- res applied a patch from 'sarah' to fix compiling after merging some
	  weaver changes from render manager branch (trac #384).
	- caedes fixed compilation of python bindings for removal of 
	  CS_LOAD_PLUGIN_ALWAYS, the function remains in the bindings but is
	  deprecated now (otherwise some people might not have a chance to
	  update).
	- Vincent added missing trailing semicolons for some CS_ASSERT() in
	  OpenAL renderer plugin, fixing building errors in optimized mode.
	- Mike Gist fixed bug #351 (wxgl compilation problem).
	- res fixed a null pointer access in null3d when null2d is not present.
	- res changed glshader_cg to always use TinyXML to load the "coercion
	  library" and creating the default coercions - needed since the 
	  document structure is augmented after loading (resp. created from
	  scratch).
	- Jorrit fixed a bug in terrainf caused by genmeshify. Apparently
	  genmeshify tried to put specific material overrides in the
	  mesh object.
3-Sep-2007
	- res partially reverted r27524 and r27534: some methods that have not
	  been fully deprecated have been removed by these changesets. Notably,
	  a commented out CS_DEPRECATED_METHOD does not count as a deprecation
	  as the user obviously can't get a deprecation warning for a method
	  because the marker for it is commented out!
	- res fixed a deallocation mismatch in VFS.
	- res fixed some Cg errors and warnings in some weaver snippets 
	  due the recent weaver changes.
2-Sep-2007
	- res added a hash computer and comparator for csMD5::Digest.
	- res fixed the same node collapsing in the shader weaver to add 
	  proper connections when collapsing two nodes.
	- res fixed coerce chain creation in the Cg weaver combiner: chains
	  could get complicated (e.g. A->B->A->C where A->C would suffice)
	  and were incorrectly returned (the 1st and 2nd step were the same).
	- res changed csStrNew()/new char[] to CS::StrDup()/cs_malloc() in a
	  few places.
	- res added an optimization to shader weaver: if the same snippet is
	  used multiple times with the same input all copies are collapsed
	  into one.
	- Marten did a few more changes to the border handling in lighter2.
	- Marten did a few cleanups.
1-Sep-2007
	- Jorrit removed more deprecated stuff.
31-Aug-2007
	- res made the Cg plugin emit warnings from the Cg compiler in verbose
	  mode (previously it only reported issues from the compiler when an
	  error occured).
	- res made the Cg weaver combiner use unique identifier for 
	  vertex-to-fragment data to avoid clashes.
	- res fixed some snippets for that.
	- Genjix bumped interface minor version.
	- Genjix added animation blending to genmeshanim2. Now the there is
	  Execute("animname", blend_factor). By default this is 0, and if all
	  running animations for a bone are 0 then it blends equally between
	  them all, otherwise it computes ratios based on the blend_factor and
	  the total blend factor of all animations affecting the bone.
	- Jorrit started removing lots of deprecated stuff in CS.
	- Jorrit fixed an infinite loop in sprcal3d GetObjectBoundingBox()
	  for factories.
	- Jorrit did more deprecation removals (including legacy submesh
	  support in genmesh).
	- Jorrit did more deprecation removals (including SCF_QUERY_INTERFACE,
	  CS_QUERY_REGISTRY and related).
	- Jorrit did more deprecation removals (including CS_LOAD_PLUGIN
	  and related).
	- Jorrit did more deprecation removals.
	- Jorrit fixed several parts in CS for the recent deprecation removals.
	- Jorrit fixed a few warnings.
	- res augmented the Cg weaver combiner to contain a number of simple,
	  "templated" coercions (for trivial stuff such as normalization).
	- res added "annotations" to the shader weaver: when enabled comments
	  are added to the generated shader code that make it easier to follow
	  it.
	- res made the weaver-generated shader code slightly more readable by
	  removing some indirections.
	- res fixed an issue in shader weaver where dependencies, inserted
	  between snippets to reuse program inputs, were also, incorrectly,
	  used when resolving candidates for inputs.
30-Aug-2007
	- Genjix added api documentation about iSkeleton::SetTransformMode(...)
	- Genjix added joystick define to initapp.h (CS_REQUEST_JOYSTICK)
	- Genjix hid public data member and added an accessor instead.
	- Genjix removed useless line of code from csSkeleton.
	- Genjix replaced type integer with an easier to understand
	  enum value.
29-Aug-2007
	- Piotr changed remaining Win32 call to *A version.
	- res reverted r27508, but also made sure all Win32 calls are
	  explicitly using the *A versions of functions.
	- res updated the winlibs version link for 1.2_002.
28-Aug-2007
	- res made the CS::Geometry::TextureMapper destructor virtual (to
	  silence a gcc complaint).
	- res marked the new CS::Geometry::Primitive and TextureMapper stuff
	  as dllexported.
	- res added a missing include to wxtest, as found by DaHoC.
	- res added a missing "msvc warning off" include to thing.h, fixing
	  some MSVC #pragma warnings.
	- res added a page about allocators, better specifying what the
	  methods an allocator must provide and how they should behave.
	  Updated some allocators to follow that specification.
	- res fixed csArray<> to properly deal with allocator Realloc()
	  calls returning 0.
	- Vincent changed joywin plugin so that it doesn't assert when there's
	  no window. Fixes crash when used with null renderer (trac #369).
27-Aug-2007
	- res added a simple beautification step to the Cg weaver combiner.
	  This makes the synthesized Cg programs more human-readable (and thus
	  can make debugging easier).
26-Aug-2007
	- Jorrit added ptpdlight to 'jam walkall'.
24-Aug-2007
	- Jorrit ran gemneshify on nearly all levels in CS. All usage of
	  thing has been eliminated.
	- Jorrit changed simplept to use genmesh instead of thing.
	- Jorrit removed the infinite maze from walktest. It was broken
	  anyway and removing it is the fastest way to remove the usage
	  of thing :-)
	- Jorrit deprecated thing.
23-Aug-2007
	- Jorrit completely rewrote the GeneralMeshBuilder class and split
	  every primitive in its own class. This simplifies the usage
	  considerably and is better design in general. New classes (in
	  namespace CS::Geometry) are now:
	    - Box
	    - TesselatedBox
	    - TesselatedQuad
	    - Capsule
	    - Sphere
	- Jorrit deprecated iEngine->CreateSectorWallsMesh() and
	  iEngine->CreateThingMesh().
	- Jorrit removed (nearly) all uses of CreateThingMesh() and
	  CreateSectorWallsMesh() in CS.
	- Jorrit removed usage of CreateSectorWallsMesh() in mazing tutorial
	  (code and documentation).
22-Aug-2007
	- Jorrit deprecated csPrimitives and added CS::Geometry::Primitives
	  instead.
	- Jorrit added csPlane3::FindOrthogonalPoints().
	- Jorrit added a new CS::Geometry::DensityTextureMapper class
	  which computes texture mapping on a surface based on fixed
	  density.
	- Jorrit fixed a texture mapping bug in Primitives::GenerateQuad().
	- Jorrit added GeneralMeshBuilder::GenerateTesselatedQuad().
	- Jorrit renamed GeneralMeshBuilder::GenerateBla() methods to Bla().
	- Jorrit modified simple1 and simple2 to use the new
	  GeneralMeshBuilder. Also modified the tutorial documentation
	  for this.
21-Aug-2007
	- Marten rewrote the way lighter2 handles border elements.
20-Aug-2007
	- Jorrit fixed decals so they work fine on 64-bit.
	- Jorrit added CS::Geometry::TextureMapper. This class works
	  together with csPrimitives so that you can specify alternative
	  ways to do the texture mapping for the generated primites.
	  Also extended the GeneralMeshBuilder functions with a texture
	  mapper parameter.
	- res added new weaver snippets for additive blending, fresnel term,
	  environment reflection and refraction, a glass shader, and made
	  adjustments to properly support the discarding of unused vertex-to-
	  fragment data.
	- res fixed an issue in the shader weaver where sometimes the same 
	  output of a node was used twice, tho it shouldn't have.
	- res augmented the Cg weaver combiner to discard unused vertex-to-
	  fragment data.
17-Aug-2007
	- Jorrit fixed a bug in genmesh. Decals didn't work on submeshes.
	  This prevented decals from working on levels treated with
	  lighter2.
	- Jorrit fixed a crash bug in lighter2.
	- res fixed cubemap support in the gl3d fbo render-to-texture path.
15-Aug-2007
	- res made the gl3d texture blit and render to texture stuff use
	  glGenerateMipmap, if available,
14-Aug-2007
	- Jorrit added iEngine->CreateGenMesh() and
	  iEngine->CreateGenMeshFactory() (alternative to the current
	  iEngine->CreateThingMesh()).
	- Jorrit added csGeneralMeshPrimitives class. This class complements
	  csPrimitives with the ability to directly populate a genmesh
	  factory.
	- Jorrit added an optional 'flags' parameter to
	  csPrimitives::GenerateBox() so that you can create a box visible from
	  the inside and also can disable the smooth option for normals.
	- Jorrit added (ifdeffed out) a first try at converting simple1 to
	  use this instead of a thing for the room.
	- res made the fractional element areas in lighter2 swappable. (On
	  large levels they can account for a significant portion of the
	  used memory).
	- Jorrit put csGeneralMeshPrimitives into the new namespace
	  CS::Geometry. Also renamed it to GeneralMeshBuilder.
	- Jorrit removed the new iEngine functions (CreateGenMesh() and
	  CreateGenMeshFactory()) and added CS::Geometry::GeneralMeshBuilder
	  functions CreateMesh() and CreateFactory().
12-Aug-2007
	- res added CS::SubRectangles::IsEmpty().
	- res sped up the lighter2 object lightmap layouting. (Replaced a
	  linear search with a binary search when determining the primitives
	  that can be layouted together.)
	- res fixed TinyXML to build on gcc 4.1.2 again (issue found by Darek).
11-Aug-2007
	- res changed csFixedSizeAllocator<> to allow construction from a
	  given memory allocator.
	- res changed TinyXML documents to use their own heap. Can reduce 
	  memory fragmentation when dealing with large documents.
	- res added CS::Utility::SmartFileOpen() - a function for the somewhat
	  common task to open a world file from a path that could denote any
	  of: a plain filename, directory or .zip archive.
	- res made genmeshify use CS::Utility::SmartFileOpen().
	- res added an option to levtool to fix <polymesh> tags (by replacing
	  them with <trimesh> tags).
	- res made levtool use CS::Utility::SmartFileOpen().
	- res removed deprecated methods from csArray<>.
10-Aug-2007
	- Jorrit fixed a compile bug in math.h (for gcc).
	- Jorrit removed renderpriorities tag from some levels.
	- res changed the delayed TinyXML node freeing to use less memory 
	  allocations. Can speed up cleanup for large documents.
        - caedes reworked the split bindings swig files so now both split
          and monolithic bindings can be built from the same set of swig
          interface files. this also adds a new core module to the bindings.
8-Aug-2007
	- Jorrit (hopefully) removed all traces of the deprecated
	  iPolygonMesh.
	- res removed the debugging graph header.
	- res removed the deprecated image generation stuff.
	- res added a missing initialization to csConsoleOutput. Should 
	  address trac #368.
	- res removed the deprecated csutil/profile.h header.
7-Aug-2007
	- res changed the cs-win32libs link to point to the 1.2 version.
	- res deprecated the obsolete 
	  iMeshObject->InvalidateMaterialHandles().
	- res changed csPath to not be marked as "exported" any more 
	  (all-inline, gives link errors with MSVC/DLLs).
2-Aug-2007
	- Marten implemented a small optimization for the (i+1)%3 case,
	  mainly used when traversing edges in triangles.
1-Aug-2007
	- Jorrit fixed an initialization error in gmeshskelanim2 that could
	  cause crashes at exit. This fixes #367.
30-Jul-2007
        - Mike Gist fixed a few warnings.
29-Jul-2007
	- res made the CEL jobber import crystalspace_staticplugins_msvc.jam
	  from CS before generating VC projects.
	- res changed the way the MSVC static plugin information for external
	  projects is generated: since the different VC versions need different
	  flags, multiple files are now generated, and must later be included
	  separately (e.g. by an umbrella jam file).
	- res added a target to create a doxygen tagfile for the public API.
26-Jul-2007
	- res fixed some undefined type issues that occured when building 
	  libraries as DLLs with MSVC.
	- res fixed the GUIDs in libcrystalspace_directx to be properly
	  exported when built as a DLL with MSVC.
	- res fixed a couple of linking issues for DLLs with MSVC: marking
	  all-inline or as "exported" give problems on MSVC since VC tries to
	  even import members that are inline. Also, "exported" templates 
	  classes are not a good idea either since VC will attempt to import
	  instantiations of it (which fails in most cases).
	- res suppressed some warnings about mixing dllexported and 
	  non-dllexported classes in MSVC.
	- res added a small shell script to regenerate 
	  include/csutil/scf_implgen_p.h (and also regenerated that file).
	- res slightly changed how CS_DEBUG_BREAK is realized: the actual
	  debugging break functionality is now provided by the function
	  CS::Debug::DebugBreak() and is also available in optimize builds;
	  CS_DEBUG_BREAK now just wraps around that. (Note that CS_DEBUG_BREAK
	  still resolves to a no-op in optimize builds.)
23-Jul-2007
	- res fixed crystal.m4 to use the right test order when a development
	  resp. stable version is requested (previously, the orders actually
	  tested where swapped in comparison to the described desired
	  behaviour).
	- Eric Sunshine eliminated several compilation warnings in the shaders
	  reported by the (admittedly somewhat buggy) Mac OS X gcc 4.0.1
	  compiler.
	- Eric Sunshine eliminated a batch of compilation warnings in OpenGL
	  renderer.
	- Eric Sunshine eliminated a slew of compilation warnings, including
	  deprecation warnings, from 'thing' plugin.
	- Eric Sunshine suppressed deprecation warnings in 'stencil' render
	  step where it is forced to utilize deprecated
	  csTriangleMeshPolyMesh() for the sake of backward-compatibility.
	- Eric Sunshine eliminated gobs of compilation warnings and some
	  outright coding errors in various mesh plugins.
	- Eric Sunshine eliminated compilation warnings in 'bugplug' and
	  CS::TriangleIndicesStream.
	- Eric Sunshine eliminated compilation warnings from various plugin
	  modules.
	- res updated scripts/jamtemplate/cel.m4 with the latest version from
	  the CEL repository.
22-Jul-2007
	- Vincent committed res' patch for incremental shared linking support
	  on Unix, which fixes 'LinkSharedLibrary actions too long' build error
	  when ld doesn't support response file. Solves trac #278.
	- Eric Sunshine suppressed deprecation warnings in cstool/collider.cpp
	  where it is forced to invoke its own deprecated constructors for
	  the sake of backward-compatibility.
	- Eric Sunshine rewrote the plugin loader for Mac OS X to fully employ
	  the "two-level" namespace dynamic-library model introduced in OSX
	  10.1. The deprecated "flat" namespace model is no longer supported.
21-Jul-2007
	- Vincent updated rpm/cs.spec for items moved to CSExtra, lighter2
	  addition, and versioned files & directories.
20-Jul-2007
	- Marten added a CS::Threading::Thread::GetThreadID function and
	  backend implementations.
	- Marten removed the only usage we had of dynamic_cast and fixed 
	  trac #192.
	- Marten fixed event constraint in viewmesh between viewmesh itself
	  and CEGUI. Solves trac #332.
19-Jul-2007
	- Eric Sunshine eliminated several compilation and deprecation warnings
	  on Mac OS X.
	- Eric Sunshine removed some outdated entries from vfs.cfg and
	  vfs.cfg.template which referred to items moved to CSEXTRA.
	- res changed CS::Memory::LocalBufferAllocator to support multiple
	  allocations. (The old but miniscully more memory-efficient behaviour
	  can be enabled with a template argument.)
18-Jul-2007
	- res changed the default CS_PLUGINDIR and CS_CONFIGDIR values used
	  by libs/unix/instpath.cpp to contain version numbers.
	- res fixed the cs-csconfig-X.Y scripts to use the right CRYSTAL_x_y
	  variable (due a bug in the Jam code it currently used CRYSTAL_x_x).
	- Andres really made the python wrapper work (escape regex meta chars)
	  and fixes the longstanding, though propably harmless, typo in 
	  checkpython.m4. Also corrects CS_CHECK_TOOL into CS_CHECK_TOOLS 
	  (thanks to Eric).
	- res changed the cs-config wrapper to emit a better error message
	  when no cs-config-* scripts are found. Also, the directory from
	  which the wrapper was started is now searched as well.
	- res replaced the unportable use of 'dirname' in the cs-config 
	  wrapper with a custom (but portable) function, as suggested by Eric.
	  Also made the "no cs-config-* ..." error message output to stderr
	  instead of stdout.
	- res added a (still empty) appendix for the 1.2 to 1.4 API changes.
16-Jul-2007
	- Jorrit fixed two problems in csSpline as reported by valgrind.
	- Andres changed the python detection code to look for a 
	  ${hosttype}-python as well in order to make cross-compiling with
	  python support more automatic/possible. He also added
	  CS/bin to the search path in configure, and added a python wrapper
	  (prefixed with hosttype i586-mingw32msvc) which calls the windows 
	  python via wine and changes all paths to unix paths.
	- Andres updated svn:ignore of the CS directory to reflect new binaries.
12-Jul-2007
	- Jorrit fixed a rather big bug in
	  csKeyEventHelper::GetModifiersBits(). It was declared using
	  CS_CONST_METHOD but that is wrong in this case since that function
	  takes a reference to a modifier (which it modifies). This bug
	  caused celconsole in CEL to misbehave in release mode due to the
	  second call to this method being optimized away wrongly by
	  the compiler.
11-Jul-2007
        - Mike Gist added a #define to enable GNU C extensions in dlmalloc.
10-Jul-2007
	- Jorrit unbreaks CS on mingw by commenting the CS_DEPRECATED_TYPE
	  after the CS_TEX_IMG enum.
9-Jul-2007
	- res made the following changes to csList<>:
	    - Added ability to specify custom memory allocator.
	    - Added convenience methods to move an item to the front/back of
	      the list.
	- res relaxed the "no copy" restriction for csFixedSizeAllocator<> a 
	  bit: it's now	allowed to copy an empty allocator (which basically 
	  only copies the block sizes). Useful for some initialization cases.
	- res improved FBO support: 
	    - Now, multiple FBOs for different sizes are cached - this is 
	      necessary to support different render target dimensions, as all
	      buffers (color, depth, stencil) must have the same dimensions.
	      Previously, only one FBO was kept, with the result that as soon
	      as differently sized render targets were used the FBO code would
	      detect an error and fall back to the frame buffer.
	    - The depth and stencil format to be used is automatically 
	      detected: stencil buffer support is used when available.
	- res deprecated iTextureHandle::GetTextureTarget() in favor of the
	  more intuitively named GetTextureType().
	- res made a method for the (more than once occuring) "ensure 
	  uncompressed texture" logic in gl3d.
	- Marten made another OSX fix, still untested.
	- Eric Sunshine fixed csQsqrt() check in configure.ac which was broken
	  due to use of CS_FORCEINLINE in csqsqrt.h, causing the test to fail
	  unconditionally.
	- res changed csProcTexture to allow overriding of the actual texture 
	  wrapper creation.
	- res added support for float textures to gl3d CreateTexture().
8-Jul-2007
	- Genjix removed qualifier for LightmapMask destructor due to failing
	  to compile on linux.
7-Jul-2007
	- Marten fixed the OSX assistant to properly expose its intefaces.
	- res fixed lighter2 problems introduced by r27190.
6-Jul-2007
	- res fixed CS::SubRectangles::Split() neglecting to set the 
	  parent of newly created rectangles which would corrupt the internal
	  structure (and cause subsequent operations to return wrong results).
	  Also made Dump() available in non-debug builds.
	- res made the following changes to lighter2:
	    - Fixed an issue where the "factory" and "object" layouting would
	      produce slightly different bounding sizes for primitive groups -
	      enough to break layouting in tight situations.
	    - Made the lightmap masks used for postprocessing swappables.
	    - Some layouting tweaks.
	- res declared the offscreen canvas stuff deprecated.
	- res added support for separate blending modes (ie RGB and alpha
	  factors can be specifies separately).
	- res changed the engine to not reload the standard shaders when
	  closing.
5-Jul-2007
	- res made a fix to yesterday's lighter2 assertion fix.
4-Jul-2007
	- res fixed lighter2 not cleaning out all old lightmaps.
	- res fixed an assertion in lightmap layouting by matching the 
	  "factory" layouting (to determine whether to split) to the "object"
	  layouting. Previously, the differences between those could have the
	  result that the "factory" layouting would return a set of primitives
	  that the "object" layouting actually failed to layout onto one
	  lightmap.
1-Jul-2007
	- res made csGLGraphics3D::DrawSimpleMesh () do a "forceful fixed
	  function enable" when drawing without shaders.
30-Jun-2007
	- Marten fixed compilation on MSVC after Oktals additions.
29-Jun-2007
	- Oktal augmented the isfinite() test in configure with tests for
	  isnan() and isnormal().
	- Oktal added portable csNaN() and csNormal() functions alongside the
	  preexisting csFinite() in csgeom/math.h
26-Jun-2007
	- Jorrit fixed a bug in the skeleton graveyard by adding
	  iSkeletonGraveyard->RemoveSkeleton(). Genmesh anim now
	  calls this method when the animation is destroyed. That fixes
	  memory leaks and crashes when genmesh anim objects are removed
	  from memory. Note that sprcal3d still has a circular reference
	  bug with the graveyard.
25-Jun-2007
	- Jorrit converted a few remaining interfaces to using SCF_INTERFACE
	  instead of SCF_VERSION.
        - Mike Gist added CS::SIMD namespace, containing some SIMD specific
          functions and types.
        - Mike Gist added preliminary SIMDCheck function. This takes up to two
          SIMD function pointers and a c++ fallback, and decides which to use
          based on CPU instruction set support.
        - Mike Gist enhanced simdtest to make use of SIMDCheck. Everything in
          CS::SIMD and using those functions and types is only tested working on
          MSVC. Other platform support in progress.
24-Jun-2007
        - Piotr made small bugfix in odedynam colliders ref handling.
	- Eric Sunshine corrected "camera movement" documentation bug.
	  Fixes #348.
	- res made "jam install" install not just "history.txt" but
	  "history*.txt" - this way the branch-specific histories (e.g.
	  for release branches) are installed as well.
23-Jun-2007
	- res made the CS_PACKAGEINFO autoconf macro truncate the version
	  number after non-numerical and non-dot characters. This has the
	  effect that versions such as "1.2rc1" are split into "1" and "2",
	  and not "1" and "2rc1". Fixes #347.
21-Jun-2007
	- Jorrit implemented CollideRaySegment() for old terraformer
	  as well.
20-Jun-2007
	- Jorrit extended csIntersect3::BoxSegment() so that it also
	  (optionally) supports rays.
	- Jorrit added csIntersect3::ClipSegmentBox() to clip a segment
	  or ray to a box.
	- Jorrit changed csTerrainSystem::CollideSegment() to use this
	  new clipper and by doing that made it support rays in addition
	  to normal segments.
	- Marten fixed the ClipSegmentBox to support perfectly aligned
	  rays on bounding box border.
	- Marten made csTerrainSystem::CollideSegment() handle perfectly
	  vertical segments/rays.
19-Jun-2007
	- Jorrit extended iTerrainSystem with a new CollideSegment()
	  variant that returns at most one hit and the triangle.
	- Jorrit added a 'use_ray' parameter to
	  iTerrainCollider->CollideSegment(). Not implemented yet.
	- Jorrit implemented CollideRay() for new terrain in opcode
	  plugin. Works mostly with two problems:
	    - Rays are not supported yet.
	    - There seems to be a bug at cell boundaries. The terrain
	      is missed there.
	- res committed a patch from Joerg Fischer (with minor stylistic 
	  changes) to properly support joysticks on Windows whose axes do not
	  correspond to the order found in the DIJOYSTATE2 structure (which is
	  probably about every joystick). See trac #343. 
18-Jun-2007
	- Jorrit extended iTerrainCollider with a new version of
	  CollideSegment() that returns at most one hit and also the
	  triangle. Added an implementation for this to csopcode plugin.
15-Jun-2007
	- Jorrit did some preparation work in csopcode plugin to allow
	  CollideRaySegment to also work with new and old terrain. Not
	  finished yet.
14-Jun-2007
	- Jorrit fixed walktest recording facility so it no longer crashes
	  on very big commands.
9-Jun-2007
	- Marten made some fixes for compilation on OSX
7-Jun-2007
        - caedes did the following changes in swig interface files:
          - moved all common swig interface declarations to a new folder
            called 'include/bindings/common'.
          - made the main module swig files a thin wrapper that declares
            the module names and includes the real stuff lying in common/,
            this will allow building small modules or old monolithic approach
            for languages that havent adapted for new structure.
          - merged cspace.i and basepre.i, thus reverting that part of the
            split.
          - created post swig files for all modules for python.
        - caedes removed crystalspace_python dependency on python modules
          jamfiles (except the 'core' module).
        - caedes added strict aliasing disabling for the python modules to
          account for warnings generated by swig code.
        - caedes split csgeom bindings into one further swig module.
6-Jun-2007
	- caedes fixed scripting bindings for latest scf changes.
	- res fixed the configure javac detection to quote the Java directory
	  (so directories with spaces work).
4-Jun-2007
	- Oktal fixed a mistake made during Marten's SCF clean-up, that broke
	  some X11 canvas plugins.
	- Mike Gist added PSD code for PPC on OSX. Still needs testing.
3-Jun-2007
	- Mike Gist refactored PSD (Processor Spec Detection) code and made it
	  check for and return a bitmask of all supported instructions. Win and 
	  unix runtime checking work well now.
1-Jun-2007
	- res changed the cs-config wrapper script to use '=' instead of '==' 
	  for more POSIX compliancy.
	- res changed the cs-config wrapper script to use shell built-ins
	  instead of external utilities to construct the initial list of
	  cs-config-* scripts.
31-May-2007
	- Marten reverted some of the changes and did some more fixes to make
	  CS compile on GCC again after the SCF improvements.
	- Mike Gist added basic structure for runtime instruction set detection
	  and support for such detection on windows.
	- Mike Gist added what's hopefully runtime instruction set detection for
	  x86 based linux gcc.
30-May-2007
	- Marten made some cleanups to scfImplementation(Ext)N to reduce the 
	  source size and hopefully speed up compilation a tiny bit.
	- Marten added some basic reflection support to SCF.	
	- Marten updated version of iBase which was previously forgotten.
	- Marten removed the last usage of SCF_DECLARE_IBASE and 
	  SCF_IMPLEMENT_IBASE and companions.
	- Marten removed the highly unfinished and previously wrongly added
	  pvs culler plugin.
	- res made the manual and API docs include the version number in their
	  respective titles.  One idea is to make the different versions more
	  distinguishable in e.g. search results.
29-May-2007
	- Eric Sunshine fixed 'MyRunner' example in threading documentation in
	  user manual so that it inherits from 'iRunnable' publicly rather than
	  privately.
	- res fixed a lighter2 issue where objects with the same factory 
	  shared the same lightmap space.
	- res fixed an issue in csStringBase::Append(): if "" was attempted to
	  be appended to a 0 string, the string would be left as 0, and not
	  "" as it should (since "" and 0 are two different things). Since
	  Append() is used by csString copy constructors this meant that
	  copy-constructing from an empty string actually resulted in a 0
	  string. E.g. in one particular case this was problematic with a 
	  csString set ("" was added, but became the 0 string - hence 
	  subsequent tests whether the set contains the string failed).
	- res removed some AWS/AWS2-specific files left over from the move to
	  CSEXTRA.
28-May-2007
	- res wrote the lighter2 "Developer's Manual".
	- Marten fixed master include headers w.r.t. csutil/threading.
25-May-2007
	- Jorrit cleaned up several old unused (and/or broken) walktest
	  commands. Also removed them from the key bindings.
	- Jorrit fixed mesh selection in walktest.
	- Jorrit added support for mesh movement. This helps to reposition
	  objects on a terrain (for example).
	- Jorrit changed the hotkeys for split-view and related (now
	  equal to 'v', 'shift-'v, and 'alt-v').
        - Oktal started splitting the per-module language-specific parts of
          the swig interface files (only done python/imeshpost.i so far).
24-May-2007
	- Jorrit fixed a bug in the socket docs.
	- Jorrit created 1.2 branch and bumped version of trunk from 1.1
	  to 1.3.
        - Oktal reorganized the split swig interface files; cspace.i now
          contains only code for the core module and modules that have yet to
          be split; basepre.i and basepost.i contain code that was previously
          in cspace.i and is common to all the modules.
        - Oktal added SWIGIMPORTED guards to the split swig interface files.
          This fixes several serious problems caused by my reorganization.
          Also a small semantic change to the APPLY_FOR_ALL_INTERFACES stuff.
        - Oktal moved the pure python CS_REQUEST_PLUGIN wrappers from
          pythpost.i to cspace.i.
22-May-2007
	- Genjix correct SCF Test example.
        - caedes started splitting of the swig interface files so
          several modules can be built that work together.
        - caedes added starting python module folders for the split
          scripting interface.
        - caedes removed references and dependencies from cegui from the split
          python modules jamfiles and cpp files.
21-May-2007
	- res committed a patch by 'whirm' to replace the use of pushd/popd
	  when building CS with cd/cd -: pushd/popd is a bashism while cd/cd -
	  works on a wider range of shells.
20-May-2007
	- res changed the Cygwin build docs to generally recommend using the
	  cs-win32libs package and to more prominently use jam (instead of
	  make).
	- res changed lighter2 to only have one "lmdensity" option and not
	  two (for u and v direction, respectively): in practice, the two
	  options usually had the same value anyway; and since the meaning of
	  "u" and "v" depends on other factors such as the orientation of a
	  primitive, much of the additional "control" from having two values
	  would actually be difficult to utilize.
19-May-2007
	- Genjix fixed a bug in genmeshanim where it wouldn't animate
	  the animation when first played, when the loop forever flag is set
	  after it has been started.
	- res added a note to the appendix on the csString::Upcase() and
	  Downcase() behavior change.
17-May-2007
	- res updated the docs for the new cs-win32libs release.
	- res added support for alpha maps to basemapgen.
	- res generated a basemap for terraina.
	- res disabled -fvisibility-inlines-hidden for AMD64 again: as
	  reported in trac #333 the -fvisibility-inlines-hidden + -fPIC + 
	  -shared problem is still present with gcc 4.1.1.
	- Andrew Robberts fixed the normal movement camera mode to work like
          the old one. Also fixed some minor bugs in viewmesh camera.
16-May-2007
	- Vincent fixed typos throughout the project, and updated or removed
	  some of the obsolete parts in the manual.
14-May-2007
	- Oktal made the following changes to the Swig scripting bindings:
	    - Fixed the Java bindings to work with the new OBJECT_FUNCTIONS
	      semantics in cspace.i.
	    - Cleaned up redundant code in Perl module's AUTOLOAD subroutine.
	    - Fixed and uncommented Perl module's extra operator overloads.
	    - Minor fix in the perlsimp.pl example script.
	    - Updated Perl scripting section of the manual.
	- res added csLerp() to math.h.
	- res made the following changes to basemapgen:
	    - Made it not require an already existing basemap.
	    - Default basemap size to nearest PO2 of material map size.
	    - Made it sample from the material layer images bilinearly instead
	      of nearest neighbor.
	    - Made it mipmap the material layer images to the highest required
	      mip needed when taking the scaling into account.
	    - Removed supersampling realized by upscaling at the beginning
	      and downscaling at the end: the bilinear filtering now used 
	      should give sufficiently smooth results.
	- res used basemapgen to compute basemaps for terrain and terrainf.
13-May-2007
	- res renamed the lighter2 "Xtexelperunit" options to the more
	  descriptive "lmdensityX".
	- Marten added documentation on terrain2 terrain plugin. Also
	  did a small reorganizing of the order in the mesh object 
	  documentation.
11-May-2007
	- Jorrit moved the more technical information about mixmodes
	  to the renderer section in the manual.
	- Jorrit fixed the new step in diffuse, shadowed, and shadowed2
	  renderloops so that it no longer does portaltraversal.
10-May-2007
	- Jorrit fixed a compile error in typetraits.h.
	- Jorrit added a 'standard' shaderstep to std_rloop_diffuse. That
	  helps with objects that want to use normal std_lighting (for
	  mixmode/transparency reasons for example).
	- Jorrit also added that step to the shadowed renderloops.
	- Marten fixed a potential precision problem in the terrain2 
	  feeders when loading from an color encoded image heightmap.
	- Marten eliminated an unnecessary include.
	- Marten fixed csopcodes terrain collision code to properly take
	  the transform of the terrain itself into consideration.
9-May-2007
	- Jorrit removed the fat renderloop. It is not very useful anymore
	  and will be replaced by the new render manager in the (hopefully
	  not too distant) future.
	- Jorrit removed all functions in iRenderView that were added
	  specifically for the fat renderloop.
	- Jorrit deprecated the clipping/culling methods in iRenderView
	  and added a new CS::RenderViewClipper class that provides
	  the same functionality.
	- Jorrit changed all current mesh objects to use the new
	  methods in CS::RenderViewClipper instead of the deprecated
	  ones in iRenderView.
	- Marten added a const qualifier to one parameter in 
	  CS::RenderViewClipper::ClipBBox.
	- Marten updated terrain2 with a number of changes:
	    - Made the rendering seamless between cells given they line up
	      perfectly, have same xz size etc.
	    - Unified the coordinate systems to be consistient.
	    - Updated rendering to be consistent when splitting/merging
	      subblocks (needed for inter-cell connections).
	    - Added support for raw heightmap as well as color encoded
	      images to give higher precision.
	    - Made it possible to specify a set of default values for
	      cells so that common parameters don't need to be repeated.
	    - Removed the "simple" renderer as it was horribly broken.
	    - Updated terraini demo level to use four cells.
	- Marten removed a now obsolete check in configure for spidermonkey
	  javascript library used by AWS2 (which have been moved to CSextra).
	- Marten fixed comment for CS_FX_ALPHA to reflect the value of the
	  constant.
	- Marten added a manually preprocessed version of scf_implgen.h.
	  scf_implgen.h is used to (compile-time) generate the 
	  scfImplementationN and scfImplementationExtN templates via macro
	  magic which adds substantial time to compiling. See top of 
	  csutil/scf_implgen_p.h for instructions how to regenerate it.
	- Marten added an "offset" parameter to the feeders in terrain2 that
	  offsets the height data by a fixed amount.
	- Marten did a cleanup of namespaces in CS by moving around some
	  classes:
	    - CS::BitOps -> CS::Utility::BitOps
	    - CS::ImportKit -> CS::Utility::ImportKit
	    - CS::ScopedDelete -> CS::Utility::ScopedDelete
	    - CS::WeakReferenced -> CS::Utility::WeakReferenced
	    - CS::CompileAssert* -> CS::Utility::Implementation::CompileAssert*
	    - CS::DocumentHelper::* -> CS::DocSystem::*
	    - CS::TypeTraits::* -> CS::Meta::*
	  Typedefs, inline functions and deprecation warnings have been added
	  where needed for compatibility.
	- Marten added a header with documentation for the namespaces.
8-May-2007
	- Marten fixed a bug in lighter2 where it would write vertexcolors to
	  a buffer named "colors" when "color" was expected.
7-May-2007
	- Jorrit added a section about the syntax loader plugin to the
	  documentation.
	- Jorrit updated the mesh object documentation. This fixes #63
	  sufficiently for 1.2.
4-May-2007
	- Jorrit protected csTriangleMeshTools::CheckActiveEdges() against
	  empty meshes (num_edges == ~0).
	- Jorrit fixed a bug in csTriangleMeshTools::CalculatePlanes(). This
	  function was calculating the planes in reverse orientation compared
	  to csPolygonMeshTools::CalculatePlanes() (and also not normalized).
	  As a consequence of this, single-sided polygons (like portals)
	  would cull from the wrong side with Dynavis.
	  This fixes #330.
2-May-2007
	- Genjix corrected copyright blurb, added some doxygen comments and
	  made the parameters use const references.
	- caedes fixed a bug in genmesh AddVertex where it would allocate
	  colors incorrectly by expanding color array size to vertex array
	  size after having added the vertex, then add another color to the
	  array, thus usually adding two colors to the array per vertex.
	- res fixed CS::SubRectangles apparently producing wrong allocations,
	  resulting in fonts and Thing lightmaps being broken.
	- res added csColor::Luminance().
	- res added ability to write grayscale PD maps to lighter2 (enabled
	  by default since the current PD maps are only grayscale anyway).
	- res made ptpdlight support grayscale PD maps "natively" (that is,
	  they're not converted to RGB internally).
	- res silenced some deprecation warnings on VC.
	- res changed the cs-config wrapper to also look into $CRYSTAL/bin
	  for wrapped cs-config-X.Y scripts.
1-May-2007
	- Genjix added csTuple2 type ala std::pair and extended csHash with
	  a NextTuple () (returns value, key) as well as an operator["key"].
	- res fixed an issue in CS::SubRectangles where empty subrects would
	  later be "collapsed" errorneously when the sibling or a child was
	  reclaimed.
	- res fixed csImageMemory which completely ignored the provided buffer
	  if it was created with a buffer that was not to be destroyed.
	- res made csFixedSizeAllocator salt newly allocated/free'd memory in 
	  debug mode by default.
30-Apr-2007
	- Jorrit changed an example using fountain mesh object to the
	  particles mesh object.
        - Piotr changed odedynam to be backwards compatible with older ode
          versions, by changing 'Capsule' name to older 'CCylinder'.
29-Apr-2007
	- res changed configure's "-fvisibility-inline-hidden buggy" test to
	  not consider gcc >= 4.1 on amd64 as buggy. See #80.
28-Apr-2007
	- Jorrit added missing documentation for the 'preadvance' option
	  in particle systems.
	- Jorrit added a documentation section on decals (written by
	  Andrew Robberts).
	- Jorrit removed the outdated general particle system document
	  (the new documentation on particles covers everything that was in
	  there).
	- Jorrit deprecated thing and emit in the documentation.
	- res made the resource compiler options in the generated MSVC projects
	  contain the component's source directory in the list of include
	  directories. This allows to reference files in that directory in
	  addititionally used .rc files.
	- res changed the Win32 icon generation to store the 256 color versions
	  in an intermediate directory below out (since these files are
	  intermediate in nature).
27-Apr-2007
	- res somewhat simplified the ImageMagick invocation(s) used to convert
	  an icon's image to 256 colors (for Windows ICO). Also fixes the green
	  background on the 256 color images on Windows. Last but not least
	  made the 32-bit images being preferred by Windows over the 256 color
	  ones.
	- res fixed a recently introduced stupid typo that prevented CS' 
	  "custom" -Wl flags from being used.
	- Andrew Robberts added a "Reload" button to viewmesh that will reload
	  the current mesh and all textures, etc. it uses.
	- Andrew Robberts added mouse camera controls to viewmesh and moved
	  around the viewmesh camera stuff a bit. 
	- res applied a patch from caedes to make the rendertarget render step
	  actually work. See trac #326.
	- res added some gldrivers.xml tweaks contributed by Andrew J. Kroll.
	- res deprecated the terrain texture image generation functions
	  (csGenerateImage and companions).
26-Apr-2007
        - Piotr implemented skeleton 'SetTransform'.
        - Piotr changed skeleton pose update to ignore animations, when they 
          wasn't used (before first animation update). Which is useful for
          setting skeleton initial pose. 
	- res added a facility to generate Win32 ICO files from multiple PNG
	  files (such as those we can already generate from SVGs).
25-Apr-2007
	- Jorrit fixed a bug in the stencil and stencil2 plugins caused
	  by the iPolygonMesh changes. This fixes #322.
        - Piotr made small bugfix in animation logic while playing it 
          back in time.
	- res changed the way TinyXML destroys + frees node objects to avoid
	  accesses to freed memory that have been introduced by yesterday's
	  ref counting change.
	- res fixed a missing 'this->' which caused csTinyXmlNode::DecRef()
	  absolutely not do what it was intended to do.
	- res fixed csObjectModel to be properly exported from shared libs.
	- res fixed Jam "using independent target <sometarget>.dbg" messages.
	- res fixes needless relinks of binaries and plugins on Win32 with 
	  shared libs enabled.
	- res made the application symlink installation respect DESTDIR.
        - Piotr implemented skeleton key frame 'GetTransform'.
24-Apr-2007
        - Piotr made csSkeleton animation system to respect updates made
	  backwards in time (with negative 'elapsed time' value).
        - Piotr made parameters like animation speed and duration to be
	  effective.
	- res changed the internals of TinyXML to reference count tiny nodes.
	  This should fix #14.
	- res fixed some compile errors on PPC Macs in cssynldr's 
	  renderbuffer.cpp. Based on a patch from dfryer.
	- res made lighter2 work in the case different sectors contain 
	  different numbers of PD lights.
23-Apr-2007
        - Piotr changed ode body group to store weak references of rigid
          bodies insted of references(there is no sense in storing body
	  reference there, when it was deleted in dynamics system).
	- res added some consideration of the CS version number to 
	  createproject.sh: it also checks $CRYSTAL_x_y for support files and
	  writes the version number as the default required CS version to the
	  generated configure.ac.
22-Apr-2007
        - Piotr added bones update method to iSkeleton interface.
        - Piotr did small tweak of csSkeltonBone: "next_transform" 
          will be set with current transform when no animation is active
          on it.
        - Reed changed test for wxGLCanvas to include a third argument
	  (wxPoint), making it work with 2.8 as well as 2.6. Ought to fix
	  bug #309.
21-Apr-2007
	- res removed generation of python.cex - asking cs-config for the
	  crystalspace_python lib should return the same information.
	- res changed the installation of applications to install apps with a
	  suffix of the version number and to create a symlink for the
	  undecorated name.
	- res made the cs-config wrapper script be installed by the install_bin
	  jam target as well.
	- res changed crystal.m4 to also use CRYSTAL_x_y environment variables
	  for the path.
	- res changed the runtime CS path detection routine(s) to prefer
	  versioned environment variables (CRYSTAL_x_y, CRYSTAL_x_y_PLUGIN).
	- res changed the VC project generation to not enable PCHs for release
	  builds: apparently they're broken when whole program optimization is
	  enabled. That is the case for CS projects. The problem can be
	  worked around by disabling one of these settings, in this case PCHs.
20-Apr-2007
        - Piotr changed ode joints to ignore max/min distance parameter
          when resulting joint will be rotational (same for max/min angle
          in oposite direction). Before joints behavior was misleading:
          setting max/min distance for rotational joint was resulting in 
          angle constraints.
        - Piotr changed ode joints "GetTransform" method to return transform
          with origin in joint anchor (when joint is rotational).
	- res adjusted configure the cs-config generation to not put "private"
	  linker options such as the various -Wl params used into the linker
	  flags returned by cs-config. Addresses #150.
	- res tweaked the cs-config wrapper script to work better on MSYS.
19-Apr-2007
        - Piotr changed ode colliders to not loose transform data after
          recreation of geometry.
	- res changed CS::Utility::PriorityQueue to only use one template
	  argument and not a "priority" and "auxiliary" argument. Ordering has
	  to be provided by csComparator<>.
18-Apr-2007
        - Piotr fixed odedynam capsule representation to be oriented as
          ode collider is. 
        - Piotr fixed transform returned by dynamics system collider in
          odedynam.
	- res did some cleanups to ptpdlight and added some profiler zones.
	- res made the lighter2 black threshold configurable.
	- res added an implementation of a priority queue.
	- res added a "scheduler" to ptpdlight: the time needed to animate
	  a PD texture is measured and recorded. If the total time spent for
	  animating PD textures in a frame exceeds a given "budget" updates
	  are delayed to a future frame. Can be controlled through config
	  vars "Texture.PTPDLight.UseScheduling" (enable/disable, default on) 
	  and "Texture.PTPDLight.TimePerFrame" (time budget, default 25).
	- res changed ptpdlight to only update a PD texture when at least
	  one light changed it's color value by an amount that causes a
	  visible difference.
	- res rigged csWeakRef<> to store 'this' in an member on construction 
	  in debug mode and assert on that member being 'this' on destruction
	  in order to catch csWeakRef<>s being memcpy()ed (e.g. when stuffed
	  into a csArray<>).
	- res fixed an invalid storage of a csWeakRef<> in a csArray<> in
	  gmeshanimpdl.
	- res changed the lighter2 layouter to allow for some tolerance when
	  comparing normals. By default normals with an angle up to 1 degree
	  between them are considered equal for layouting purposes.
	- res committed a patch from Dariusz Dawidowski to the trans_std 
	  plugin that fixes the returning of a pointer to a local variable.
17-Apr-2007
	- Marten fixed two bugs in walktest with regards to the mouse mesh
	  selection; crash on selection of no mesh with right button and
	  no hit ever on middle button.
	- Jorrit added iTriangleMeshIterator and a new method
	  iObjectModel->GetTriangleDataIterator() to get an iterator over
	  all triangle meshes set on a model.
	- Jorrit fixed the loader so that the 'convex' and 'closed'
	  flags on mesh objects and factories are now also propagated to
	  the triangle meshes (and not only on the polygon  meshes).
	- Jorrit fixed csSaver to use iTriangleMesh and also it will now
	  completely write out the trimeshes for factories and meshes.
	- Jorrit changed genmeshify so that it writes out trimeshes
	  instead of polymeshes. However the code itself still works
	  with polygon meshes.
	- Jorrit did some more documentation updates related to the
	  deprecation of iPolygonMesh in favor of iTriangleMesh.
	- Jorrit updated mazing to the new iTriangleMesh.
	- Jorrit updated cspace.i for the new iTriangleMesh.
	- Jorrit updated light culling handling in the engine to use
	  iTriangleMesh instead of iPolygonMesh.
	- Jorrit updated the portal container mesh to use the new
	  iTriangleMesh.
	- Jorrit fixed a big bug in the thing mesh. It would accidently
	  use the lighting polygon flag to construct the visibility culling
	  mesh instead of the viscull flag. This bug was introduced in
	  revision 24181 where res2k decided that polygons that are not
	  lit should not contribute to visibility culling ;-)
	- Jorrit fixed iTriangleMesh support in thing so that it also respects
	  the colldet and viscull flags for individual polygons. In this case
	  the thing mesh will itself set the collision and visibility culling
	  meshes.
	- Jorrit converted csSolidSpace to iTriangleMesh. As far as I know
	  this concludes the iPolygonMesh->iTriangleMesh task.
        - Piotr added capsule generation to csPrimitives and genmeshfactory.
        - Piotr deprecated "CCylinder" name (caped cylinder) and replaced it 
          with "Capsule" (which is more widely used). 
	- Oktal added perlsimp.pl, the Perl equivalent of the Python script
	  pysimp.py (i.e. the simple1 app re-written in Perl), for testing
	  and demonstration of the Swig-generated Perl bindings.
	- Oktal made the following changes to the Swig-generated bindings:
	  - Fixed a runtime error in the Perl module's event handler.
	  - Fixed a runtime error in Perl's csInitializer::RequestPlugins.
	  - Fixed a runtime error in the Perl typemap for csWrapPtr.
	  - Restored scfGetVersion, mistakenly removed in previous revision.
	  - Added pure Perl replacements for the CS_POLYRANGE and
	    CSKEY_SHIFT/CTRL/ALT families of macros.
	  - Commented out extra Perl operator overloads until they can be
	    thoroughly checked for correctness.
	  - Used 'Carp' to provide more meaningful Perl error messages.
	  - Added %ignore directive for deprecated csArray::Length(), thereby
	    eliminating a few compiler warnings. Use GetSize() instead.
	  - Eliminated a few 'unused variable' warnings in the Perl module.
	  - Added Perl 'import' method to allow users to import CS symbols
	    into their namespace.
	  - Additional fix to the csperl5 Jamfile so cspace.pm is really put
	    in the correct location.
	  - Updated and improved the manual entry about Perl scripting.
	- Oktal reverted the Jamfile change from his previous commit and
	  modified it so cspace.pm and cspace.so can be copied to the scripts
	  directory with the perl5freeze and perl5freezeobj targets.
	- Andrew Robberts added some sort of decal support to bruteblock
	  terrain
16-Apr-2007
	- Andrew Robberts added a CS_ENTITY_NODECAL flag.
	- Jorrit fixed a bug in csObjectModel. It would use Put() instead
	  of PutUnique() for the hash of triangle data meshes. The
	  consequence of that was that it was not possible to replace
	  a triangle mesh once it was set. A further consequence of that
	  was that it genmeshes with submeshes didn't have working
	  collision detection.
	- Jorrit added a new csTriangleMeshPolyMesh class. This class is
	  immediatelly deprecated as it shouldn't be used outside CS.
	  Its purpose is to make the transition from iPolygonMesh
	  to iTriangleMesh easier.
	- Jorrit changed the stencil and stencil2 plugins to support new
	  iTriangleMesh.
	- Jorrit changed the odedynam plugin to use the new iTriangleMesh.
	- Jorrit changed bugplug to also show the new iTriangleMesh.
	- Jorrit fixed a few documentation references that were using
	  iPolygonMesh.
	- Jorrit changed simpcd to avoid iPolygonMesh. This temporarily
	  breaks simpcd though! There appears to be a bug in CSopcode where
	  it fails to work if you calculate the collision between two
	  identical colliders (but different transform). CSopcode currently
	  just returns false if it detects the colliders are the same (which
	  is not correct). Removing that test however doesn't seem to
	  solve the issue as then the colliders seem to collide all
	  the time.
	- res changed ptpdlight to compute and upload the lightmap data in a
	  tiled fashion to get a finer granularity over the areas that are
	  touched (or not) and to save on unnecessary computations.
	- Jorrit fixed a bug in the opcode plugin when collision detection
	  between the same collider (but different transform) was done.
	  The problem was that the opcode plugin kept the transform in the
	  collider class. And if that class is reused but with different
	  transforms then that obviously doesn't work. Fixing this bug also
	  causes every collider to be 4x4 floats shorter.
	- res made ptpdlight internally crop the PD light masks to the used
	  area in order to conserve some memory.
	- res made the ptpdlight combining faster.
	- res fixed some gcc warnings in ptpdlight.
	- res changed the cs-config wrapper to not use -executable (which is
	  apparently not supported by older 'find's) but -perm /500 instead.
15-Apr-2007
	- res made lighter2 display some progress after the last changes.
	- res added a gldrivers.xml tweak from Rolenun to work around garbled
	  text output with the Radeon DRI driver.
	- Marten reverted removal of deprecated code in genmesh and added a 
	  runtime warning to usage of the deprecated syntax in the loader.
	- Marten fixed a small bug in csFrameDataHolder.
	- Marten made a fix to csGLFontcache::CopyGlyphData which should fix 
	  trac #314 (read past end of array). Also updated to use 
	  CS::SubRectangles instead of deprecated csSubRect.
	- Marten made stencil, stencil2 and shadowmap renderloop steps respect
	  the CS_ENTITY_NOSHADOWS mesh flag.
	- res added CS::SubRectanglesCompact::AllocNoGrow().
	- res tweaked the lighter2 layouter to not create as few lightmaps as
	  possible, but rather a few more which are then smaller in the sum.
	- res implemented iTextureManager::CreateTexture() for null3d.
	- res added a csColor::IsBlack() variant that takes a threshold for
	  which values below are considered as "black".
	- res changed ptpdlight to also accept a solid base color instead of
	  a base image.
	- res augmented lighter2 to detect solid colored (base) lightmaps and
	  optimize the output in that case (single pixel LM or base color
	  if PD lights are used).
	- res fixed ptpdlight textures to register themselves upon load.
	- res changed the version numbers in filenames and text of the API
	  mods docs to better reflect our current numbering scheme. Notably,
	  version 1.2 was labeled "version 1.20", which is not quite the same.
14-Apr-2007
	- res added a cs-config wrapper script that scans for cs-config-X.Y
	  scripts in CRYSTAL and PATH and picks the latest version.
	- res changed cs-config to also check a CRYSTAL_x_y env var for a 
	  CS installation.
	- res changed the cs-config jam target to copy the cs-config wrapper
	  script to the build dir.
	- res added a variant of csArray<>::GetExtend() that takes a parameter
	  specifying with what value newly created items should be constructed
	  (analogue to SetSize()).
	- res added csBitArrayTweakable<>::NumBitsSet().
	- res added CS::SubRectangles::SetGrowPO2() (and GetGrowPO2()).
	- res slightly tweaked the behaviour of CS::SubRectangles::PlaceInto()
	  to cause less very small rectangles to allocate from.
	- res tweaked the lighter2 lightmap layouter to layout primitives 
	  which are affected by similar sets of PD lights closer together.
	- res bumped the versions for the interfaces which were recently
	  cleaned off deprecated methods.
13-Apr-2007
	- Jorrit added virtual to the destructor of SubRectangles class.
	- Jorrit changed the following meshes to also support
	  iTriangleMesh: genmesh, bezier, instmesh, spr3d, brute, and
	  thing.
	- Jorrit added iCollideSystem->GetBaseDataID().
	- Jorrit fixed csColliderHelper::InitializeCollisionWrapper() so
	  that it actually correctly uses the triangle mesh instead of the
	  polygon mesh if the object model supports triangle meshes.
        - Piotr fixed small parameters setting bugs in ode joint.
	- Jorrit fixed a bug in the iTriangleMesh implementation of
	  the thing mesh. It would forget to call Setup() in the
	  GetTriangleCount() and GetTriangles() methods.
	- Jorrit implemented iTriangleMesh support in dynavis.
12-Apr-2007
	- Oktal made the following changes to the iScript interface:
	    - Removed the Initialize() and Store() methods, which had been
	      deprecated since before CS version 0.98.
	    - Added a new interface called iScriptValue to hold a value from
	      a scripting interpreter (constant expressions like 3.14 or
	      "hello"), and added methods to iScript and iScriptObject that
	      accept iScriptValue pointers. These new methods are intended to
	      replace the existing Store/Set(), Retrieve/Get() and Call().
	      Importantly, the old Call() methods used an ugly printf-style
	      format string and var_args list to pass parameters to scripting
	      subroutines while the new method uses a csRefArray<iScriptValue>
	      which is much cleaner. The old methods are now deprecated.
	    - Added LoadModuleNative(), companion to LoadModule(), that
	      accepts a native filesystem path as opposed to a VFS path.
	    - Renamed methods in iScriptObject: IsType() becomes IsA() and
	      NewObject() becomes New() (better naming conventions IMHO).
	      The old names remain as deprecated methods.
	    - Added GetClass(), which returns a string containing the name of
	      an object's class within the scripting language.
	    - Marked SetPointer() as deprecated and not guaranteed to work.
	    - Updated and improved doxygen comments and the relevant sections
	      of the manual. Update of the release notes can wait until the
	      iScript changes have been implemented in csPython.
	    - Incremented the interfaces' version numbers.
	- Oktal updated the csPerl5 plugin to conform to the new iScript.
	- Oktal updated the perl5test application to test out the new stuff.
	- For each new method added to iScript, Oktal added a corresponding
	  stub implementation to csPython, so that compilation is not broken.
	  Pablo Martin (caedes) has offered to fill in these methods. The old
	  Store(), Retrieve() and Call() were never implemented for csPython,
	  so this update has not resulted in the loss of any functionality.
	- To maintain backwards compatibility with the deprecated methods in
	  iScript and iScriptObject, without having to implement them for all
	  subclasses, Oktal added intermediate classes csScriptCommon and
	  csScriptObjectCommon in csplugincommon, which implement the old
	  methods by forwarding requests to the new methods. csPerl5 and
	  csPython now inherit from these classes. These classes can be
	  removed when the deprecated methods are removed.
	- Oktal made the following changes to the Swig bindings:
	    - Fixed the Swig rule in the csperl5 Jamfile so the Swig-generated
	      files get put in the correct directory.
	    - The csPerl5 plugin no longer depends on the Swig-generated perl
	      module; it is possible to use the plugin without the module.
	    - Removed references to AWS, since it has been moved to CSExtra.
	    - Swig now ignores the somewhat-recently added virtual destructor
	      of iBase, and defines its own to correctly handle refcounts.
	    - Moved the directive "%ignore iPen::Rotate" from pythpre.i to
	      cspace.i since the problem it addresses appears to be present
	      for all language targets.
	    - The ..._OBJECT_FUNCTIONS macros now conform to the conventions
	      of the other language-specific macros.
	    - Removed the half-finished code related to operator overloading
	      in perl, as recent versions of Swig handle it automatically.
	    - Since Swig now has a %perlcode directive similar to %pythoncode,
	      several functions that had previously been written with ugly XS
	      (perl C API) were re-written in pure perl, less prone to errors.
	    - Added some extra overloaded operators using %perlcode.
	    - Replaced some calls to SWIG_TypeQuery("cspace::foo") with
	      $descriptor(foo*) where possible. This is much faster.
	    - Fixed several memory leaks and hanging pointers, with better
	      understanding of which perl API calls modify reference counts
	      and which do not.
	    - Fixed two bugs in the python implementation of the
	      TYPEMAP_OUTARG_ARRAY_... macros that would cause them to fail
	      silently. This meant changing their parameter semantics.
	    - Fixed numerous other bugs in the Swig interface files for perl.
	- Jorrit fixed a problem in the collider wrapper changes (reported
	  by caedes).
	- Jorrit updated the apimod documentation about the iPolygonMesh
	  deprecation and related.
	- Jorrit changed the verbose 'crystalspace.trianglemesh.bla' name
	  to just 'bla' (in the context of the ids used by iObjectModel->
	  GetTriangleData(id)).
	- Marten removed a big number of functions that were properly marked
	  as deprecated in 1.0 and should be removed before 1.2.
	- Oktal replaced csStrKey with csString as a hash key, fixing an error
	  in the xwin plugin introduced by Marten's deprecated stuff removal.
	- Oktal fixed a segfault in the python module related to improper
	  reference counting, introduced with his recent scripting changes.
	  csWrapPtr is now much more strict and cohesive about refcounting.
	  Also discovered and fixed a pre-existing mistake in the module.
11-Apr-2007
	- res tweaked the texi2html config to not include the current date in
	  redirect files.
	- Jorrit changed the loader to recognize a new <trimesh> keyword.
	  <polymesh> is now deprecated. However, both <trimesh> and
	  <polymesh> will currently attach both a iPolygonMesh and
	  an iTriangleMesh to the object model for compatibility reasons.
	- Jorrit changed <colldet>, <viscull>, and <shadows> options
	  inside a <trimesh> to the more general <id>. For example,
	  use <id>crystalspace.trianglemesh.colldet</id> instead of
	  <colldet/>.
	- Jorrit updated the documentation on the new <trimesh>
	  syntax in world files.
	- Oktal eliminated a compiler warning in csutil/util.cpp.
	- Oktal made a minor change to a comment in configure.ac.
	- Oktal added the methods DeleteAt() and StartsWith() to iString and
	  scfString, bringing them in to line with csString, where identical
	  methods already exist.
	- res tweaked texi2html + config to produce nicer quotes and dashes,
	  utilizing HTML entities instead of ASCII chars.
10-Apr-2007
	- res tweaked the texi2html config to work around that both an 
	  index.html and Index.html was created - the difference in case only
	  made trouble on Windows.
	- res slightly extended the iTextureWrapper docs to clarify when a
	  texture handle is available.
	- Marten added some error propagation in the texture matrix 
	  computation in csTextureTrans and thingmesh. Fixes #221.
9-Apr-2007
	- res renamed csSubRectangles to CS::SubRectangles.
	- res added CS::SubRectanglesCompact, a variant of CS::SubRectangles
	  which has a slightly different allocation behaviour - allocated
	  rects are arranged in a more compact rectangular fashion.
	- res switched the texi2html configuration to generate a file per
	  node instead per section and name the files after the node name.
	  This makes references to manual content much nicer and less prone
	  to break compared to the previously used section numbers.
	- res customized texi2html to get rid of the "SEC123" anchor names
	  for manual elements. This makes documentation changes cause less
	  modified files in SVN (together with the previous change).
	- res made the csRect destructor non-virtual: this seems rather
	  unneeded as there are no virtual methods in it right now.
7-Apr-2007
        - Piotr made cal3d meshes animations to be updated by skeleton 
          graveyard shared with genmeshanim meshes.
        - Piotr added manual updates option to graveyard.
        - Piotr added iAnimationInstance interface, for currently played 
          animations. 
6-Apr-2007
	- Jorrit did several changes for iTriangleMesh:
	    - Added csTriangleMeshPointer class. This is an implementation
	      of iTriangleMesh that takes pointers to the vertex and triangle
	      data.
	    - Added some conveniance methods to csObjectModel to fetch
	      the standard string set and also fetch the base trianglemesh id.
	    - Converted the protomesh as a first test case for using the
	      new iTriangleMesh.
	    - Extended iCollideSystem to support the new iTriangleMesh (and
	      deprecated the iPolygonMesh version). Extended the Opcode
	      plugin to handle iTriangleMesh.
	    - Changed csColliderWrapper to also work with the new
	      iTriangleMesh and deprecated the iPolygonMesh versions.
	    - Added iCollideSystem->GetTriangleDataID() so that it is easier
	      to fetch the 'crystalspace.trianglemesh.colldet' id that
	      is used to fetch the triangle data from iObjectModel. This
	      also solves the problem that some collider classes (like
	      csColliderHelper) don't have access to the object registry
	      and are thus incapable of fetching that id on their own.
	    - Changed csColliderHelper so it first checks if the object
	      supports iTriangleMesh and in that case it will use that.
5-Apr-2007
	- res added csSphere::TestIntersect().
	- res added a test to lighter2 to only compute lighting of PD lights
	  that can really affect an object.
	- res fixed some more VC warnings.
	- res converted odedynam to new SCF.
	- Jorrit added IsTriangleDataSet() and ResetTriangleData() to
	  iObjectModel. That way you can now distinguish between explicit
	  set of null triangle data as opposed to triangle data not
	  being set at all. In the last case a subsystem (like collision
	  detection) may chose to use the base mesh as a fallback.
	- res made the renderview the engine uses for drawing properly 
	  ref-counted and not stack-allocated, so it can be used after 
	  drawing is finished. (Relevant for bugplug.)
	- res added normals drawing to bugplug.
4-Apr-2007
	- Marten fixed the inertia calculation in odedynam (bug #279). This
	  is a potentially behaviour changing fix so the old (broken) way
	  can still be enabled via iODEDynamicsState::EnableOldInertia if
	  you have things that depends on the _broken_ behaviour.
	- Marten fixed cssynldr to handle loading a csOBB from both an OBB
	  syntax (<box><box>..</box><matrix>..</matrix></box>) and from 
	  AABB syntax (<box>..</box>). In the later case the matrix will
	  be identity.
3-Apr-2007
	- Marten fixed loading of box emitters in particles (#286).
	- res fixed a few warnings that occured on VC.
	- res implemented iTextureManager::CreateTexture() for gl3d.
	- res added CS::StructuredTextureFormat::GetComponentMask() to allow
	  quick identification of the components in a format.
	- res implemented iTextureManager::CreateTexture() for soft3d.
	- res changed csProcTexture to use iTextureManager::CreateTexture()
	  and not a dummy image, if no image to create the texture from was
	  given.
2-Apr-2007
	- Marten augmented ptpdlight to handle all black lightmaps.
	- Marten disabled a few deprecation warnings from the recent
	  iPolygonMesh and friends removal.
31-Mar-2007
	- Sueastside fixed a bug in basemapgen when factor=1
	  and a resolution bigger then the original basemap was specified.
30-Mar-2007
	- Jorrit continued work on iTriangleMesh:
	    - Extended iObjectModel with methods to get and set triangle
	      meshes (GetTriangleData()/SetTriangleData()).
	    - Deprecated iPolygonMesh.
	    - Deprecated iObjectModel methods having to do with
	      iPolygonMesh.
	    - Deprecated csPolygonMeshTools.
	    - Added csTriangleMeshTools as a mirror of csPolygonMeshTools.
	    - Deprecated csPolygonMeshBox.
	    - Added new csTriangleMeshBox.
	    - Added \deprecation tags.
	- Sueastside fixed some "stupid maths" that caused the basemap to
	  be scaled wrongly when specifying a factor.
	- Sueastside added a progressbar to basemapgen aswell as upscaling
	  of terrainmaterials to remove pixelation.
29-Mar-2007
	- res fixed a division by zero caused by some changes in his gl3d 
	  cleanup.
28-Mar-2007
	- res made csArray<> inherit from CS::Memory::CustomAllocated so 
	  new'ed csArray<> instances use CS' own allocator.
	- res added CS::Memory::AllocatorNew<T> which allocates/frees using
	  new T[]/delete[]. The intended use is to ensure compatability for 
	  existing code that takes/returns pointers allocated with a new T[].
	- res augmented CS::StructuredTextureFormat with methods to query
	  the contained information.
	- res fixed some occasions where the a texture format string of
	  "bgra8" was reported for csRGBpixel data when it really is "abgr8".
	- res sanitized the memory handling of csImageMemory. Image data is
	  now entirely managed by the 'databuf' member; the earlier practice
	  of freeing the image data in the image class was problematic as the
	  image data buffer was returned when asking for "raw data": the 
	  associated memory block was freed when the image was destructed,
	  but the image data buffer could live on past that point.
	- res also fixed csCommonImageFile for a similar problem (image data
	  destructed when image is although a returned data buffer may exist
	  longer).
	- res changed the GL texture manager to support more texture format
	  strings.
	- res fixed the GL renderer to create the fog image from a correctly
	  allocated memory block.
	- res did some cleanup in gl3d. (Removed unnecessary inclusions, split
	  gl_txtmgr.cpp into multiple, more manageable chunks.)
27-Mar-2007
        - Piotr did small bugfixing in cal3d iSkeleton implementation.
        - Piotr added methods for getting animations by indices from
          skeleton factory.
26-Mar-2007
	- res removed pseudo-instancing. See trac #280.
	- res made gl3d use a plugin namespace.
        - Piotr blindly fixed trac #305.
23-Mar-2007
	- res augmented the iDocumentNodeIterator interfaces to provide
	  "position" information. This is mostly intended for allowing to 
	  determine a progress for operations on documents.
	- res improved the error reporting of lighter2's swapping code a bit.
	  Also made it correctly handle a zlib "error" that's not really a
	  fatal error.
	- res made lighter2 progress output somewhat more detailed.
	- res augmented cswinIsWinNT to return also have enumerants for 
	  Windowses past XP.
	- res added an alternative way to detect the OpenGL driver used,
	  written by "heroalex" - see trac #263. The new way actually works on 
	  Windows Vista, but it also incurs less guessing the driver from 
	  registry entries than the "old" way, so I've made it default on NT 
	  platforms.
21-Mar-2007
	- Jorrit started work on the deprecation of iPolygonMesh and
	  the new iTriangleMesh. Added iTriangleMesh. Changed the already
	  existing csTriangleMesh class to implement iTriangleMesh.
20-Mar-2007
	- Jorrit moved AWS and AWS2 from CS to CSExtra.
	- Jorrit moved AWS data and docs.
	- Jorrit moved awstest and awstut.
	- Jorrit moved partedit, partedit2, and picview.
	- caedes closed #287 by adding a typedef declaration for int32_t at
	  cspace.i. This way swig does not use int32_t at the output cpp file.
18-Mar-2007
	- res changed lighter2's progress system to allow for arbitrarily
	  nested progress objects.
17-Mar-2007
	- Genjix closed #172 by adding 2 new lighting options to viewmesh.
	- res generalized lighter2's lightmap cache into a swapping mechanism
	  for all kinds of data.
	- Marten extended the jam system with a MsvcUsePCH target : file ;
	  rule which will emit usage of pch (precompiled header) into generated
	  Visual Studio project file.
	- res made lighter2 use the new MSVC PCH support.
16-Mar-2007
	- Jorrit and res2k fixed frustum code that was borked in revisions
	  26237 and 26242. This fixes ugly thing lightmaps (trac #262).
	- res fixed the shader data to be installed entirely.
	- res changed the installation directory and cs-config naming to
	  include the version number in order to allow parallel installations
	  of multiple CS versions.
	- res fixed an assert in csSubRectangles occuring after the latest
	  changes there. Fixes trac #282.
15-Mar-2007
	- Jorrit moved igeom/decal.h to ivaria/decal.h
	- Marten integrated terrain2 from the soc/terrain branch into trunk.
        - Piotr added support for keyframes without transform data for all 
          skeleton bones in genmeshanim.
        - Piotr added handling for animations without keyframes.
	- Marten fixed a compilation bug on gcc with terrain2.
	- caedes added a new accessor wrapper template to python bindings
	  for write only attributes with several input arguments (or methods).
14-Mar-2007
	- Marten did first step in renaming terrainimproved to terrain2.
	- Marten finished renaming terrainimproved to terrain2.
	- Marten did some clean-up of old terrainimproved/2 stuff.
	- Marten removed an extra include of windows.h that would pull in
	  way more than required, and as it is in a public header mess with
	  external projects.
	- res changed csDirtyAccessArray<> to take a memory allocator and
	  capacity handler (like csArray<> does).
	- res changed tinyxml's GrowString to be a wrapper around csString
	  (which already provides what GrowString does). Also switched some
	  strings to exponential growth for better performance with large
	  strings.
	- res optimized the csPrintfFormatter %s handling for a few cases 
	  (including the rather common plain "%s").
	- res added CS::Memory::Heap::Footprint(). (Potentially useful for
	  tracking memory usage.)
	- res tweaked csSubRectangles so that adding rectangles with Reclaim()
	  calls in between gives the same results as adding without Reclaim()
	  would give. (Previously, the packing between these could differ;
	  this tripped up the lightmap layouting in lighter2 which made this
	  assumption.)
	- Marten cleared up some more overuse of windows.h. Should help 
	  compilation speed a bit as windows.h and its includes are huge.
	- Marten changed the "missing texture" meta-texture from the xor-
	  checker to a red-green-blue-black checker which is more visible.
13-Mar-2007
	- Marten did some more fixes to terrain:
	    - Properly distinguish between factory and terrain object.
	    - Move feeder to be per terrain instead of per cell. Added per 
	      cell feeder properties.
	    - Fixed some things in the API to be more like rest of CS 
	      (sending SCF objects by pointer, transforms by reference).
	    - Unified terrain to use a single interface header file inside 
	      include/imesh.
	    - Fixed the loader to use more standardized names for tags.
9-Mar-2007
	- Jorrit started work on moving imposter handling to imposter
	  factories so that it is possible to share imposter textures.
	  Not really working yet however, so the imposter factory
	  currently behaves as if it is not sharing at all.
        - Piotr implemented finding bones by names in cal3d plugin.
8-Mar-2007
	- Jorrit did the following imposter updates:
	    - Changed imptest to show multiple meshes from the same factory.
	    - Fixed a bug in the rendering in case of multiple imposters.
	      The camera was not correctly restored (I thought this was
	      not needed) with the result that all imposters except the
	      first one rendered wrong.
	    - Changed the imposter textures to use binary alpha so that
	      they don't have to be sorted back to front.
	- Sueastside worked on basemapgen: added the ability to specify 
	  VFS mounts in a config file (VFS.Mount.[...] = [...]) and
	  fixed a possible crash when a texture file couldn't be found.
	  (Thank you vknecht!)
	- res shaved a few bytes off the internal per-element data of TinyXML.
	- res changed the implementation of ptpdlight's "lumel buffer" to
	  avoid the use of offsetof().
	- res changed lighter2's saving to save factories and objects 
	  separately. Factories are saved before the objects are initialized -
	  after that initialization, the factory can possibly be released,
	  reducing memory usage.
	- res reorganized primitive and vertex data so the data stored by 
	  factories resp. objects is closer to what's really only needed.
	- Marten fixed an error related to accessing already removed objects
	  when collapsing several lod-levels at once in bruteblock renderer
	  of new terrain.
	- Marten added support for large blocks (32-bit indices) in bruteblock 
	  renderer of new terrain.
	- Marten added support for per cell base material. Changed the terraini
	  level to mimic terrainf level.
	- Marten did a small fix for coordinate systems in improved terrain.  
7-Mar-2007
	- Jorrit fixed a crash bug in lighter2. In the simple TUI lastTask
	  started as an empty null string and comparing that with GetTaskName()
	  (which was recently changed to return a const char* instead of
	  a csString) crashes inside strcmp.
        - Piotr adds 'RemoveAllFrames' to 'iSkeletonScript'.
        - Piotr adds iDynamics step callback.
6-Mar-2007
	- res changed csStringBase::Upcase() and Downcase() to not use
	  toupper()/tolower() but csUnicodeTransform::MapToLower() and 
	  MapToUpper(). An issue with the to*() functions is that they respect
	  locale; this led to problems on systems that have a Turkish locale
	  set - there, the lower case of I (U+0049) 'i dotless' (U+0131) which
	  caused problems with XML parsing. Also, these strings now accept
	  UTF-8 (like most of CS) instead of the system's codepage. On the
	  downside, locale-aware casing is lost - however, support for this 
	  can (and should) be added to the csUnicodeTransform Map*() functions
	  once a need arises.
        - Piotr did cleaning in his last changes in csCal3dSkeletonBone.
	- Jorrit made csImposterProcTex a bit more efficient by not storing
	  pointers to engine, g3d, g2d, shader manager (they are easily
	  obtained from the given iRenderView) and also made the
	  cached string id's static so that they are *really* cached
	  now.
	- res fixed some more r26546 fallout.
	- res changed how "copy data vs. set pointer" is handled for render
	  buffers: instead of being controlled by a flag set at creation time,
	  a new method "SetData()" was added that just sets the render 
	  buffer's pointer. (The old way is still supported, but deprecated.)
	- res deprecated the (only intended for internal use anyway) 
	  CS_BUF_LOCK_NOLOCK render buffer lock mode.
	- Jorrit did a small optimization to csIntersect3::SegmentPlane()
	  as suggested by Erroroman.
5-Mar-2007
	- iceeey fixed some errors and warnings in basemapgen on GCC.
	- sueastside fixed a crash in basemapgen caused by a copy/paste error.
4-Mar-2007
	- Jorrit worked on imposters:
	    - Removed the ability to set imposter settings on meshes.
	      Imposter settings are done on the factory now.
	    - iMeshWrapper no longer implements iImposter.
        - Piotr implemented skeleton update callbacks handling from 
          iSkeleton interface.
        - Piotr implemented [Set/Get]Transform in csCal3dSkeletonBone. 
	- sueastside changed the application Report functions to use 
	  csReportV() macro.
	- res changed gmeshldr to save the "manualcolors" flag for objects
	  if it differs from the factory's setting. Also, previously it was
	  only written when manualcolors was disabled - which was wrong since
	  the default is exactly that.
	- res changed genmesh mesh colors to default to 0,0,0,1 and not 
	  0,0,0,0.
	- res changed the behaviour of factory genmesh colors somewhat: now
	  colors are no allocated until needed (ie requested by code). This
	  means some memory is saved if the factory colors are never changed
	  anyway.
	  Note: that means genmesh animation plugins may get a 0 pointer 
	  passed in as factory colors!
	- res changed lighter2 to disable the "lighting" flag on the genmesh
	  objects and to only write a PDL animation control if a mesh is 
	  really affected by some PDLs.
	- res did a quick fix to csVertexCompressor to make input of colors
	  optional.
3-Mar-2007
	- res added the X Window System and OpenGL to the list of "External
	  Libraries" in the manual.
	- res changed some #defines used for texture format strings and
	  structured texture formats to an enum.
	- res added the texture format string description from the dev wiki
	  to the API docs.
	- res fixed the return value of 
	  iDecalTemplate::GetBottomClippingScale(). Also removed the #defines 
	  for the decal template default values (the initializers in the
	  constructor make it quite clear already which value gets initialized
	  to what).
	- res made a couple of tweaks to the API docs.
        - Piotr did more work on implementing iSkeleton interface in cal3d
          plugin.
	- res changed CS_VERSION_NUMBER to properly contain a version
	  number in the "x.y.z" scheme (and not "x.yz").
	- sueastside added a new application 'basemapgen', this generates
          a basemap, to be used with terrain, from the used materials.
	- res changed lighter2 to properly save per-vertex lighting 
	  information again.
	- res added methods to csIEEEFloat to deal with doubles.
	- res added the ability to load and save render buffers to external
	  files to cssynldr.
2-Mar-2007
	- res made the following changes to lighter2:
	    - Changed the order of how things are saved: the new world file is
	      now written after the meshes are initialized (lightmaps 
	      layouted, necessary submesh splitting done) instead at the very
	      end of the lighting. This should make it possible to discard the
	      CS meshes and factories much earlier (since they're not needed
	      for saving any more) and thus memory to be conserved. 
	      (Caveat: currently breaks per-vertex lighting.)
	    - Made it delete the cache/genmesh_lm directory.
	    - Made it strip the (after lighting irrelevant) "localshadows" 
	      flag from GMs.
	    - Fixed a lightmap layouting having marked all vertices as "used"
	      initially, thus essentially doubling all vertices of a mesh.
	- res made tinyxml use cs_malloc() instead of new char[] for some
	  allocations.
	- res made VFS' DeleteFile() support directories.
	- res changed the way lighter2 handles progress display. Instead of
	  setting the progress directly, a number of "sub-progress" objects
	  are created (each representing a task). Code that "does something"
	  then sets the progress on one of such progress objects, which takes
	  care of updating the display and updating the overall progress.
	- Marten made a number of fixes to improved terrain:
	    - Changed the cell lru to be a bit more efficient.
	    - Removed all usage of csArray::Length/SetLength
	    - Fixed a block culling bug.
1-Mar-2007
	- res fixed embedgl to properly include gl.h. (<GL/gl.h> doesn't work
	  on all platforms, the CS_OPENGL_PATH construct takes care of the
	  proper path.)
	- Jorrit split plugins/engine/3d/meshobj.* into meshobj.* and
	  meshfact.* (i.e. keep mesh objects and mesh factories as separate
	  files).
	- Marten fixed a serious bug in bruteblock terrain where it would
	  never cull any terrain blocks.
	- Marten fixed csLog2 to give correct result when a power of 2
	  was given.
	- Marten made a number of fixes to improved terrain plugin:
	    - Rewrote the LOD level selection algorithm to use projected
	      area instead of just maximum component.
	    - Moved the index buffer generation to be done per terrain
	      renderer instance, not per terrain cell instance.
	    - Did some general stylistic fixes.
28-Feb-2007
	- Marten fixed the particle loader/saver to properly expose the
	  saver interface.
	- res added CS::StrDup*(), versions of csStrNew*() (or strdup(),
	  depending how you look at it) that use cs_malloc() for memory
	  allocation.
	- res fixed mixing of new char[] and cs_malloc() in xmlread.
	- res fixed a deprecation warning on VC in the skeleton plugin.
	- Jorrit did some work on imposters:
	    - Fixed checking on imposter tolerance (thanks to Marten).
	    - Added a separate camera_tolerance factor.
	    - Made tolerance default to 0.4 and camera_tolerance default
	      to 0.2.
	    - Extended the loader to handle the new camera_tolerance
	      attribute.
	- res un-botched CDATA parsing in xmlread. (It should never condense
	  whitespace. Was errorneously changed to respect the "condense
	  whitespace" flag earlier.)
26-Feb-2007
	- res slightly optimized xmlread by replacing uses of isspace(),
	  isalpha() and isalnum() with custom implementations.
	- res made some tweaks to CS::Memory::AllocatorHeap.
	- res added an optional "Allocator" template argument to 
	  scfImplementationPooled.
	- caedes fixed iSkeleton::GetScriptsCount. It was broken after
	  latest changes to iSkeleton interface.
24-Feb-2007
	- Andrew Robberts fixed top and bottom clipping in decals
	- Jorrit did some imposter work:
	    - Removed CreateImposter() from iImposter. That function doesn't
	      really make sense there and isn't needed either.
	    - Mesh factories now also implement iImposter. This is currently
	      only used as a default imposter setting for meshes created
	      from the factory. In the future it might be used for sharing
	      imposter actual imposters.
	    - Changed the loader so that you can now also set imposter
	      settings on the mesh factory.
23-Feb-2007
	- res added some groundwork for weaver int+bool support.
	- res fixed a crash in shaderweaver when too many coercions were
	  added to the internal tree.
	- res fixed a problem with merged input were the generating snippet
	  would be emitted after the requiring input.
	- res augmented the shaderweaver to also match an output to an input
	  if the input is more "general" than the output.
	- res fixed a crash in the Cg weaver combiner when generating a more 
	  complex coercion chain.
	- res augmented the Cg weaver combiner to also check <variablemap>
	  nodes for "input tags" (a part of weaver's input merging).
	- res made the Cg dump output used and reference flags for parameters.
	- res moved the "reflectsphere" material from teapot.lib to the flarge
	  level. (The teapot.lib file should only provide a basic mesh and
	  material, "special effects" are more appropriately assigned by the
	  "client" of the library mesh.)
	- res added normal+height map for the teapot xygyw texture.
	- res added a bunch of weaver snippets and weaver Cg coercions.
	- res re-created the "reflectsphere" shader as a weaved shader. Made
	  flarge use this new shader, and added a normal map to the teapot's
	  material to show off a bit.
        - Piotr is following res suggestion and makes the genmesh object 
          reset its user render buffer only in 'SetupObject' (instead of
          reseting right after any change). 
	- res added shaderweaver to the walktest plugin list.
	- Jorrit fixed imposter rendering so that it works a lot better
	  now.
	- Jorrit changed imptest so that it pans by default around the
	  sprite now. Easier to debug that way. Shift-move still works
	  to strafe. With 'space' you can reset the view so that it looks
	  at sprite again.
	- Jorrit increased imposter distance in imptest from 1 to 3.
        - Piotr changed "Script" to "Animation" in iSkeleton related interfaces.
22-Feb-2007
	- res fixed shaderweaver to not crash when a snippet lacks a 
	  <combiner> node.
	- res made nested snippets work right in shaderweaver.
	- res added a few additional weaver types and coercions, and made
	  shader use them.
	- Andrew Robberts added a colour falloff to decals.
	- Jorrit moved the engine code from the imposter branch to main
	  trunk. Reworked the code so that it now uses a preprocess
	  event handler to update all the imposter textures instead of
	  trying to do it in the main engine view. This required
	  rewriting the update queue in the engine so that there is now
	  a separate update queue for every camera.
	- Jorrit moved the simple2 imposter test code to a new imptest app
	  in CS. This clearly shows that imposters are not yet working.
	- caedes did the following changes to cspace.i:
	  - added igeom/decal.h to swig includes.
	  - added iShader, iDecalManager and iDecalTemplate to
	    interface_apply's.
	  - added SWIGLUA test for language pre/post files.
        - Piotr made genmesh to reset its user render buffers when they
          change.
21-Feb-2007
	- res added a missing export marker for csExpandPlatformFilename().
	- res changed the way plugins are statically linked when shared
	  libraries are enabled: instead of statically linking into an 
	  application. a shared library is created which contains the desired
	  static plugins, which is then referenced by the application binary.
	  In practice that should be as good as "true" static linking; 
	  however, it's more LGPL compliant, as the static plugins can be 
	  replaced with different versions rather easily, compared to true
	  static linking into a binary.
	- res added dsplex to the walktest plugin list (since it's the 
	  iDocumentSystem set in walktest.cfg).
	- res augmented shaderweaver to optionally prevent merging of input
	  (can be useful when targetting more restricted hardware and such).
	- res moved the "glow" shader snippet to the (perhaps more fitting)
	  directory lighting/.
	- res made the "glow" shader snippet better support PS 1.x hardware.
	- res augmented shaderweaver with the ability to read <input>s from
	  files. This is useful for often reused inputs (e.g. texture 
	  coordinates).
	- res changed csRenderBuffer::GetBufferNameFromDescr() to also accept
	  a 0 buffer name.
	- Andrew Robberts added an #include <limits.h> to weavercombiner.h to
	  fix an undeclared UINT_MAX error.
	- Anders Stenberg changed LoadShader to return a csRef<iShader> instead 
          of a bool, and take an option on whether to register to the shader 
          manager or not (defaulting to true). This should hopefully not break
	  any compilation, unless someone is doing something I didn't think of.
20-Feb-2007
	- res made a number of reftracker-related tweaks:
	    - Made CS compile again with reftracker enabled.
	    - Made it allocate reference information in bigger chunks.
	    - Made it compact some memory when "retiring" reference 
	      information.
	    - Made output slightly better grepable.
	    - Default description of SCF instances to the class ID.
	    - Made scfImplementationX register a reftracker alias for iBase.
	    - Adjusted DecRef() for pooled classes to be reftracker-friendly.
	- res made the callstack-related classes custom allocated.
	- res removed "speed hacks" for reftracking used in some document
	  implementations: these hacks unfortunately trip out the reftracker,
	  causing false leak reports.
	- res made the TinyXML wrapper reftracker-friendlier.
	- res fixed leaks in frustvis.
	- res fixed excessive IncRef()s in csRenderView.
	- res fixed a leak in the software sound renderer.
	- res made the GL renderer lightmap textures more reftracker-friendly.
	- res made the following changes to shaderweaver:
	    - Ability to detect same inputs (to some extent) and avoid
	      duplication of these.
	    - Ability to give inputs "conditions" (have the same effect like
	      manually added <?if?>s; however, they allow merging of inputs).
	    - Leak fix.
	- res added "glow" ability to the std_lighting_2 weaver test shader.
	- res changed csMemoryPool to use cs_malloc().
	- res fixed an uninitialized variable access in shaderweaver.
	- res added "mixmode alpha" support to std_lighting_2.
	- res added the missing "parallax" weaver snippet.
	- res fixed a lack of decrement operators in xmlshader.
	- res added sector fog support to std_lighting_2.
	- res added a missing export marker for the Win32 & pthread threading
	  implementation classes.
	- res fixed old syntax being used in one of the manual tutorials.
	  (Spotted by IRC user runix.)
13-Mar-2007
	- Marten did some more fixes to terrain:
	    - Properly distinguish between factory and terrain object.
	    - Move feeder to be per terrain instead of per cell. Added per 
	      cell feeder properties.
	    - Fixed some things in the API to be more like rest of CS 
	      (sending SCF objects by pointer, transforms by reference).
	    - Unified terrain to use a single interface header file inside 
	      include/imesh.
	    - Fixed the loader to use more standardized names for tags.
8-Mar-2007
	- Marten fixed an error related to accessing already removed objects
	  when collapsing several lod-levels at once in bruteblock renderer
	  of new terrain.
	- Marten added support for large blocks (32-bit indices) in bruteblock 
	  renderer of new terrain.
	- Marten added support for per cell base material. Changed the terraini
	  level to mimic terrainf level.
	- Marten did a small fix for coordinate systems in improved terrain.
2-Mar-2007
	- Marten made a number of fixes to improved terrain:
	    - Changed the cell lru to be a bit more efficient.
	    - Removed all usage of csArray::Length/SetLength
	    - Fixed a block culling bug.
19-Feb-2007
	- Marten made a few changes in lighter2:
	   - Disabled the use of the exposure function and use a simple
	     scale and clamp instead. Gives more consistant result with both
	     old-style lightmaps and "simple" hardware lighting.
	   - Implemented a small optimization to the primitivie setup step.
	   - Removed some dead code.
16-Feb-2007
	- res fixed an issue in xmlshader where conditions were incorrectly
	  folded away.
	- res added an additonal debugging feature to xmlshader to inspect
	  the possible value sets computed.
	- Marten fixed an issue in lighter2 related to multiple submeshes
	  sharing vertices and those vertices getting separate lightmap
	  coordinates.
	- Marten fixed so the profiling plugin isn't unloaded until program 
	  ends or it is explicitly unloaded.
        - Daniel Fryer cleaned up the coreaudio sound renderer and fixed a 
          byte-swapping problem in libs/csplugincommon/sndsys/convert.cpp
15-Feb-2007
	- res fixed the reflect and reflectsphere shaders to actually map the
	  diffuse texture coordinates. (Reported in CS-forum:1557.)
	- Andrew Robberts fixed a potential array out of bounds crash in decals
	- Andrew Robberts fixed a sizing issue with decals if the given  up
	  vector wasn't normalized.
14-Feb-2007
	- res made various fixes to the shader weaver and Cg combiner plugins.
	- res added parallax mapping to the example std_lighting_2.
	- Jorrit fixed a compile error in weavertypes.h.
	- Marten fixed a destruction/iteration order problem in 
	  csGLVBOBufferManager destructor.
	- Jorrit disabled the profiler in ivaria/profile.h because it seems
	  to cause problems for static builds.
	- Marten fixed interleaved render buffers when using VBO.
	- res reverted r26367 (use exceptions in csjpgimg) since it causes
	  an abort on Linux when an exception is thrown (see #256) and I'm
	  at loss at how to fix that. 
	- res made more shader weaver tweaks (fixed wrong emission order of
	  graph nodes; corrected comments in source and config files).
13-Feb-2007
	- Marten hopefully fixed bitoperations on VC7 and VC7.1.
	- res added CS::DocumentHelper::CloneAttributes() to clone only the
	  attributes of a node.
	- res added CS::DocumentHelper::FlattenNode(), a function that flattens
	  a document node hierarchy into a string (can be used for e.g. 
	  hashing).
	- res made a small constness tweak to CS::ScopedDelete<>.
	- res added a missing shared lib export marker for generic
	  csExpandPlatformFilename().
	- res removed the Bsymbolic linker flag - it causes problem with shared
	  libs on Linux. Also, searching a bit around has revealed that this
	  flag is generally problematic with C++. Lastly, the custom allocation
	  issues having caused the initial use of this flag probably went away
	  when the global new/delete override was removed.
	- res added an initial version of a "shader combiner", generating
	  xmlshader documents from snippets of shader code. In the shader
	  itself only the shader building blocks and dependencies between
	  these have to be specified (ie an Abstract Shade Tree).
12-Feb-2007
	- Andrew Robberts updated decals so reduce z-fighting and seams.
	- Marten rewrote the VBO buffer handling to be more robust, contain
	  less cruft and be a bit faster.
	- Andrew Robberts updated decals to better specify a top and
	  bottom clipping plane for decals.
	- res slightly expanded the manual section on smart pointers with
	  information on translation to and from normal pointers as well as
	  information on csWeakRef<> and how to deal with references in
	  function parameters.
	- res replaced the csPtr<> API docs with an excerpt from the user
	  manual description. Also added pointer to section in manual.
	- res made csRenderBuffer use cs_malloc() for buffer data allocation.
	- res marked the new temp file/dir functions for DLL exporting.
	- res fixed an inclusion of a non-existant header in the bullet 
	  plugin. (Probably went undetected due a blunder in cs-win32libs 
	  which actually ships this header [which was removed between bullet 
	  versions]...)
	- res made more Windows SDK 6.0 compatibility fixes.
	- Marten added CSV logging to the profiling plugin. Also added a
	  command to start and stop logging as well as activating automatic
	  reset (and writing) of data once per frame.
	- Marten removed some left-over debugging code in lighter2. Fixes
	  trac #237.
10-Feb-2007
	- Marten hopefully fixed lighter2 compiled with MSVC on win64.
	- res changed csjpgimg to not use setjmp() but exceptions for error
	  handling (setjmp doesn't work right on Win64 MSVC). Also added some
	  wrappers around the JPEG structs so the client code more feels like
	  C++ and less like C.
9-Feb-2007
        - Piotr started implementation of iSkeleton related interfaces in
          Cal3d plugin.
	- res added a csPackRGB::PackRGBpixelToRGB() variant that packs to a
	  given buffer.
	- res fixed a couple of compile errors with VC7.0.
8-Feb-2007
	- Marten added (untested) code for atomic operations on SPARC.
	- Piotr improved choosing pixelformat in wxgl plugin (on win32 only).
        - Piotr made wxgl plugin compilable and working with wxwidgets 2.8
	- Marten made two tweaks to particles:
	    - Exposed initial angular velocity setting on emitters to xml.
	    - Made sure rotation-mode resets the texcoord vectors. Fixes
	      problem when switching from texcoord rotation to none.
	- res split csutil/threading/atomicops.h up into multiple files (one
	  per implementation).
        - Piotr made more backward compatibility safe and improved code quality
          (removed not valid comments and unecesery method) in his latest commit.
	- Andrew Robberts made decals a bit more efficient sharing memory and
	  adding the ability to reuse/change existing decals
7-Feb-2007
	- Genjix changed csWeakRefArray to not use deprecated Length ().
	- res changed configure to normalize sparc* cpu names to sparc (so
	  e.g. sparc64 is treated as sparc).
6-Feb-2007
	- res added CS::ScopedDelete<>, a helper class to delete a pointer 
	  when leaving a scope.
4-Feb-2007
	- res worked around an apparent incompatibility between one of VC8's
	  headers and a header from the latest Windows SDK 6.0.
	- res fixed a couple of compile warnings.
	- res changed the CS_REQUEST_FONTSERVER macro to pull in the font
	  multiplexer plugin instead of the "default" font plugin. (The idea
	  is that nowadays most people would probably like to use TrueType
	  fonts instead of the built-in bitmap fonts; using the font plexer
	  by default this will work out of the box.)
	- Luca fixed the source code of the examples in the Threading 
	  Library section of the manual.
	- res fixed the static plugin dependencies file to contain the correct
	  library names.
3-Feb-2007
	- Jorrit added 'decal_test' to the online help for walktest.
	- Marten fixed a compilation error in sector.cpp that only showed
	  in release mode.
2-Feb-2007
	- res worked around Cg not being properly detected on Linux when
	  -Wl,--as-needed was passed in LDFLAGS.
	- res correctly placed a comment in compiler.m4 and fixed the response
	  file support test. (Previously it didn't work - the used @ sign
	  is internally used by the CS build test macros as a separator.
	  Worked around by not using the CS build macros but the relevant AC_
	  macros directly.)
	- res fixed a couple of warnings and errors after the temp file name
	  stuff change. Also removed an (actually inappropriate) use of
	  GetTempFilename in importkit_glue.cpp.
	- res slightly changed CS_TEMP_DIR and CS_TEMP_FILE to emit a warning
	  when employed.
	- Marten removed deprecated methods from:
	    - csArray and derived types
	    - csPath
	    - csImageBase
	- Marten put back csArray::Length and csArray::SetLength but properly
	  marked them deprecated.
	- Andrew Robberts added the ability to attach arbitrary rendermeshes 
	  with priority and zbufmodes to any iMeshWrapper.
	- Andrew Robberts added an InSphere function to poly3d to test 
  	  if the poly is within a sphere.
	- Andrew Robberts added decal support and a decalmanager plugin
	  to CS.  Decals are currently supported by thing and static
	  genmeshes.
        - Andrew Robberts fixed copyright, interface versions, and comments
        - Andrew Robberts added missing include/igeom/decal.h
	- Andrew Robberts fixed pointer and csRef references in decals.
1-Feb-2007
	- Marten fixed compilation of CS::DataBuffer on gcc.
	- Marten made sure genmesh doesn't return any rendermeshes when
	  there is no triangles. Fix bug #224.
	- Marten implemented functions to get temporary directory and
	  file in CS::Platform / syspath.h. These functions make
	  CS_TEMP_DIR and CS_TEMP_FILE deprecated.
31-Jan-2007
	- Jorrit changed csImageMemory to use a csDataBuffer to keep track
	  of its image memory. That way it can also implement GetRawData().
	- Jorrit changed the png loader to use rawData instead
	  of dataSource.
	- Jorrit reverted the png loader change as it was assigning the raw
	  file data to rawData but rawData is supposed to contain the
	  decoded image data.
	- Jorrit changed the png loader again so that it now correctly sets
	  up the rawData from the decoded image data.
	- res added a memory allocator mixin using new char[].
	- res turned csDataBuffer into template<Allocator> CS::DataBuffer. 
	  This allows to use different allocators for data buffers. (The
	  default DataBuffer now uses cs_malloc(); csDataBuffer still uses
	  new char[].)
	- res fixed the JNG plugin for the change in the way csImageMemory 
	  stores image data.
	- res fixed some deprecation warnings caused by r26260.
30-Jan-2007
	- res rigged (the deprecated) csutil/debug.h to emit a warning when
	  included.
29-Jan-2007
	- Andrew Robberts fixed a warning from checking if an unsigned is >= 0.
	- Jorrit reverted a change from Genjix yesterday. /bin/bash doesn't
	  exist on mingw.
	- res rigged (the deprecated) csutil/profile.h to emit a warning when
	  included.
	- Genjix added fix to cs-config where a switch case is autogenerated for
	  variable indirection for systems like ubuntu.
28-Jan-2007
	- Eric Sunshine made some minor clarifications to the Dev-CPP tutorial
	  suggested by Johannes Schoen <schoen.johannes@arcor.de>.
	- res fixed dllwrap invocation in case the CMD.LINK variable has
	  multiple entries.
	- Genjix fixed problem in cs-config script for systems where /bin/sh
	  doesn't neccessarily symlink bash (like ubuntu where its dash).
27-Jan-2007
	- res re-added an iengine/collectn.h that contains a message about
	  the removal of iCollection and instructs to remove all inclusions
	  of that file. (Complete removal of that header wasn't a good idea
	  on the account that it still appears in sources outside CS.)
	- res fixed a number of deprecation warnings caused by r26260.
	- res changed the library generation to include a version number in
	  the library file name. Adjusted cs-config to cope with that; also,
	  cs-config now correctly deals with the libraries being built shared.
	- res made changed the declaration of CS::Debug::AssertMessage() to
	  not be debug mode only any more. (This enables linking of debug
	  binaries against optimize-built libs.)
	- res fixed separate debug info to be properly installed.
	- res tweaked the crystalspace_python lib to work more nicely when
	  being built shared.
26-Jan-2007
	- Jorrit changed the 'lmscale' parameter in lighter2 to use the
	  slightly more standard 'u,v' notation instead of 'u;v'.
25-Jan-2007
	- Jorrit fixed a compile error in frustum.cpp.
	- res added CS::Memory::CustomAllocated. This class solely implements
	  custom versions of operator new/operator delete/etc. which use
	  cs_malloc()/cs_free() and is intended as a base class to have
	  classes allocated with ptmalloc(if enabled) rather than the default
	  allocator. Addresses #146.
	- res changed scfImplementation to inherit from 
	  CS::Memory::CustomAllocated (ie SCF classes are allocated with
	  ptmalloc). (This shouldn't become an issue for third parties; with 
	  proper SCF class instance usage a mix-up of allocators shouldn't
	  occur.)
	- res removed the global operator new and malloc overrides from
	  cssysdef.h.
24-Jan-2007
	- res moved the movierecorder plugin to the utilities subdirectory.
	- res removed the deprecated engine collection stuff from the source.
	- res fixed warning+oversights caused by the csFrustum 
	  size_t-ification.
	- res changed the engine's standard shader loading to not hardcode
	  the xmlshader compiler.
	- res removed a number of deprecated header files.
	- res removed the deprecated csArray<>::DeleteFast().
	- res excluded the now-deprecated csutil/profile.h and csutil/debug.h
	  from the master headers.
	- res silenced some MSVC warnings in csutil/profile.h.
	- res added docs reflecting the deprecation to csutil/profile.h and 
	  csutil/debug.h.
	- res fixed configure to also emit the directory variable 
	  'datarootdir', as required by autoconf 2.60+. Should address #239.
	- res committed a patch from Ryan Thorik to resolve ambiguities in the
	  ELF reader. Addresses #231.
	- res changed the "CPU optimization" detection in configure to also
	  test for -mtune=generic (supported by future GCCs).
	- res fixed a compiler error in xmlshader with gcc 3.2.
23-Jan-2007
	- res made compileassert.h use the correct namespace (CS instead of
	  CrystalSpace).
	- res fixed some documentation in hash.h.
	- res added a note on iTextureHandle::Blit() behaviour to the docs.
	- res fixed genmeshify to print command line help twice when run
	  with --help.
	- res changed csFrustum to use size_ts for vertex indices. Also made
	  use of csRefCount for refcouting and use cs_malloc() for internal
	  vertex array allocation.
	- res changed tokenlist.h to mention its csstring.h dependency.
	- res added a GetSize() method to csFIFO and deprecated Length() so
	  it handles more like csArray<>.
22-Jan-2007
	- Jorrit fixed profile.h so that it compiles again on mingw.
	  Also removed several warnings.
21-Jan-2007
	- Marten cleaned up some more places where the (now removed)
	  csutil/debug.h was used.
	- Marten added a new profiling system instead of the old one.
	  Advantages include support for profiling without the object registry,
	  no crash if a plugin with profiling points is unloaded and support
	  for counters (simple counters without time information).
	- Marten moved the source for bugplug plugin to utilities subdirectory.
	- res partially undid the csDebuggingGraph removal: the class and
	  macros are still there, but now are no-ops and emit deprecation
	  warnings.
	- res fixed plugins/Jamfile for the bugplug move. Also fixed bugplug
	  for the debugging graph & profiler removals.
	- res moved xmlshader's conditionals & processing instructions code
	  into its own subdirectory.
	- res added some no-op versions of the old profiler so code using it
	  will continue to compile.
19-Jan-2007
	- Marten removed csDebuggingGraph and related classes. They weren't
	  used anyhow.
18-Jan-2007
	- caedes added csRadixSorter and csConfigFile to the swig interface 
	  files.
	- res fixed the genmesh 3DS loader to allocate a correctly sized index
	  buffer. Addresses #236.
	- res made the following changes to lighter2:
	    - Changed main() slightly to ensure proper cleanup.
	    - Silenced "Error parsing mesh" for portal containers.
	    - Changed Scene::GetLightmap() to return the correct PD light map
	      when proxy lights are used.
	    - Fixed regression where the "noshadow" attribute of meshes was
	      ignored.
	- res made lighter2's CollectShadow...() methods more act like the 
	  "real" lighting functions do. Also, for border elements, only the
	  hits for "inside" points should be collected, not all hits.
17-Jan-2007
	- caedes did the following changes to cspace.i:
	    - removed ignore for csStringFast.
	    - added some ignores for csHash members and methods that cant
	      be wrapped.
	- caedes did the following changes to python swig files:
	    - added in and out typemaps for csStringFast to python string 
	      conversion.
	    - added dict like interface for csHash (no iterator yet though).
	- Marten finished support for portals (including space-warping ones)
	  in lighter2.
	- caedes did the following changes to cspace.i:
	    - fixed vector division, was misimplemented as multiplication.
	    - added declaration for some key event macros which are not
	      found automatically by swig.
	- Genjix added fix for iGeneralFactory::AddTriangle() crash in
          Invalidate()
13-Jan-2007
	- Jorrit fixed a problem in the segmentcell header of opcode
	  which handles collision detection for new terrain. It was
	  using 'abs' which is for integers so all floating point
	  things were wrongly truncated. Replaced all 'abs' with 'fabs'.
12-Jan-2007
	- caedes added scfImplementationExt1 template to scf.i swig file so
	  this template can be wrapped.
	- caedes added %template declarations in swig files for csPolygonMesh,
	  csPolygonMeshBox, csObject and csColliderWrapper implementations so
	  class inheritance info is preserved in scripting languages,
	- caedes added csColliderWrapper::UpdateCollider functions to allow
	  updating collider info for a collider wrapper.
	- caedes removed the incref and decref in python event handler ctor and
	  dtor inside swig files as it would cause a memory leak (due to decref
	  in dtor never being called).
11-Jan-2007
	- res committed a number of patches from Ryan Thorik to allow building
	  on Solaris and IRIX:
	    * finite() is declared in ieeefp.h on Solaris 10.
	    * Add MIPS, SPARC, and Alpha to the IEEE float arch list.
	    * Allow dlmalloc to get IRIX's pagesize (otherwise it would be 
	      complaining about _PAGESZ being undefined).
	    * Fix "va_list' has not been declared" issue on Solaris.
	- caedes made the following changes to swig interface files:
	    - added cstool/enginetools, cstool/pen and csgeom/pmtools.
	    - added a macro called ARRAY_OBJECT_FUNCTIONS to add language
	      specific array functions to interfaces.
	    - added a helper function to csMeshedPolygon so vertex indexes
	      can be retrieved (GetVertexByIndex).
	    - removed warnings from CS_QUERY_REGISTRY_TAG by removing all
	      mentions to these macro and also ignoring 
	      CS_QUERY_REGISTRY_TAG_is_deprecated;
	- caedes made the following changes to python swig interface files:
	    - added wrappers for iPolygonMesh GetTriangles, GetVertices and
	      GetPolygons so these can be used from python.
	    - implemented ARRAY_OBJECT_FUNCTIONS for python by using some
	      older macros.
	    - changed PYLIST_* macros a bit so they can be used for non
	      pointer types (like int).
	    - added a workaround for iPen::Rotate giving problems with
	      swig .28.
	    - added iterator to the genmesh and polymesh array helpers.
	    - added list protocol to csMeshedPolygon so it can be handled like
	      a vert index python list.
	    - updated python event handler for new scf.
	- caedes added csPolygonMeshTools::CalculateVertexConnections to get
	  vertex connection information from a polymesh.
	- caedes added csArray<csArray<int> > template declaration to swig
	  interface files so it can be handled.
	- caedes added added %newobject declaration in swig interface files
	  for csPolygonMeshTools::CalculateVertexConnections so it will be
	  cleaned up by python.
9-Jan-2007
	- Marten added a timeout parameter to CS::Threading::Condition::Wait.
	- res fixed the clipping rectangle for walktest's "cubemapshots"
	  command.
	- res made CS::Threading::Condition::Wait() return whether the wait
	  timed out or ended due a change of the condition.
	- res fixed compilation of the pthreads
	  CS::Threading::Condition::Wait().
	- res added a simple translator plugin from Darek Dawidowski.
	- Anders Stenberg added a halfassed water test level (water.zip). 
	  It's not very good right now, but could be a test bed for further
	  testing.
8-Jan-2007
	- Marten did various optimizations and cleanups in lighter2.
	- Marten made sure the core parts of lighter2 are thread safe to
	  later make it mutli-threaded.
	- res fixed some gcc compiler errors and warnings in lighter2.
7-Jan-2007
	- David Bronke fixed the windows joystick plugin and corrected his
	  previous history.txt entry.
6-Jan-2007
	- David Bronke added functions to iCEGUI to enable and disable
	  capturing of mouse and keyboard input events.
4-Jan-2007
	- res made lighter2 add an ambient term to the lightmaps.
	- res moved lighter2's cleanup code from an explicitly called method
	  to the app class destructor.
	- res fixed lighter2 to properly add the ambient term for vertex-lit
	  meshes affected by PD lights.
	- res changed the way lighter2 stores element areas to take less
	  memory. Now, a bit array stores whether an element is empty or full,
	  and only the area of neither empty not full elements is stored.
3-Jan-2007
	- res tweaked ptpdlight to not store light IDs as hex strings
	  internally but as raw data.
	- res augmented the genmesh loader to also take anim controls in
	  objects: it loads the anim control factory, creates a single control,
	  and sets that on the mesh object.
	- res added a genmesh animation plugin for per-vertex PD lighting.
	- res added support for per-vertex PD lighting to lighter2.
	- res tweaked the MSVC build guide to reflect that multiple 
	  directories for projects for different VC versions exist.
2-Jan-2007
	- res renamed 'imagetool' to 'csimagetool', as suggested by Eric
	  (Since the pretty generic name 'imagetool' can easily collide with 
	  other packages when installed in locations like /usr/bin).
1-Jan-2007
	- res changed genmeshify to better handle smoothed Things.

Please see "history.old" for less recent historical entries.
