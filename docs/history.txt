Crystal Space detailed change log.
http://www.crystalspace3d.org/

The overall history is in reverse (descending) chronological order, so that
each new day's entries apears before the previous day's entries.  The
individual changes for each given day, however, are in normal (ascending)
chronological order.

16-Dec-2004
	- Eric Sunshine added the CS_QUERY_REGISTRY_PLUGIN() macro to
	  <iutil/plugin.h>, which is based upon a submission from Reed Hedges.
	  This macro embodies the common idiom of first querying the
	  object-registry for an object, and then asking the plugin manager to
	  load an appropriate plugin if the object was not found. It also
	  registers an object instantiated from the loaded plugin with the
	  object-registry if necessary. Also, as a test of its functionality,
	  altered the shaders and renderers to utilize this new macro.
15-Dec-2004
	- res added a graphical alert box to the xwindow plugin. It is based 
	  upon the xmessage program, utilizes the Xaw toolkit and is enabled
	  if the latter is detected by configure.
	- Vincent Knecht updated vfs.cfg.template:
	    - Added $(CS_DATADIR)$/ttf-vera.zip to VFS.Mount.fonts/ttf.
	    - Added $(CS_DATADIR)$/aws$/ to VFS.Mount.aws.
	    - Fixed VFS.Mount.lev/parallaxtest.
	- res added a message to configure in case zlib is not found,
	  informing about its essential nature to CS.
14-Dec-2004
	- PK replaced the old, CSWS-based viewmesh with a new AWS-based
	  version.
13-Dec-2004
	- Marten removed the old renderer and methods/classes/plugins
	  deprecated together with it, for closer info about which see the
	  apimod100 in doc appendix. CVS has been tagged with PRE_OR_REMOVAL
	  before the change.  One method in CSWS, and a few other places are
	  yet to be fixed (or removed). Together with this a few fixes have
	  been made too:
	    - or_lighting* shaders have been renamed std-lighting*
	    - The "OR compatibility" shader type in the default renderloop is
	      now "standard"
        - Philip Wyett fixed a compile error with software renderer.
	- Philip Wyett removed 'vbufmgr.h' refererence from cspace.i.
	- Marten removed some files which didn't go away last commit.
	- Eric Sunshine completed the removal of old renderer:
	    - Removed all remaining CS_USE_OLD_RENDERER blocks in C++ code.
	    - Removed all remaining USE_OLD_RENDERER Jam variable and
	      {build,oldrenderer} property references.
	    - Removed all references from documentation (Texinfo).
	    - Removed the wksoldrenderer and wkswxoldrenderer MSVC workspaces,
	      and the corresponding Release_OR, Debug_OR, and ExtensiveDebug_OR
	      build modes.
	    - Renamed the `nrall' build target to `renderall'. (The old name,
	      though deprecated, is still recognized for backward
	      compatibility.)
	    - Renamed the glrender3d, softrender3d, and nullrender3d plugins to
	      gl3d, soft3d, and null3d, respectively. (The old Jam target
	      names, though deprecated, are still recognized for backward
	      compatibility.)
	- Eric Sunshine fixed Texinfo mark-up errors, and spelling and
	  grammatical errors in apimod100.txi.
	- Marten fixed an error in the msvcgen where it set the libdir for
	  release but not debug builds.
	- Eric Sunshine relocated the Crystal Space RPM-creation instructions
	  from texinfo/build/platform/unix to texinfo/tutorial/howto, and also
	  performed a small amount of re-writing to make it more sensible in
	  the context of a HOWTO.
	- Eric Sunshine added a "shaders" compile group to the build system.
	- res fixed an occasional csString character access beyond its length
	  in archive.cpp.
12-Dec-2004
	- Eric Sunshine worked around problem in csjava caused by new operator
	  overrides in csColor and csColor4. Although modern C++ can deal with
	  overrides in subclasses having return values which differ from those
	  in the parent class, Java can not.
	- Eric Sunshine fixed a nasty bug in _csWrapPtr_to_Python() (pythpre.i)
	  where it mismanaged (under-incremented) the reference count of the
	  wrapped object. This caused objects to be deleted multiple times.
	  Objects affected by this bug were those returned by the various
	  CS_QUERY_FOO() and SCF_QUERY_FOO() macros.
11-Dec-2004
	- PK added static void ReportWarning (const char* description, ...)
	  to csApplicationFramework.
10-Dec-2004
	- res made the following changes:
	    - Fixed (or worked around in rare cases) uses of non-const
	      csString::GetData().
	    - Added macros to mark methods or types as deprecated. Compilers
	      which support this will emit a warning when such a deprecated
	      method is uses.
	    - Marked some deprecated methods with above macro.
	    - Changed csRenderMeshHolderSingle to use a block allocator instead
	      of new/delete for allocated rendermeshes.
	    - Fixed comment typos in csgeom/box.h.
	    - Added a paragraph to apimod100.txi regarding the iEvent::Find()
	      to Retrieve() renaming a while back.
	    - Fixed invalid use of CSTOOL_EXPORTS macro in stdpt plugin.
	    - Made the Python glue reside in a shared lib for some more space
	      efficiency. The glue code generates object code of significant
	      size which can be shared between the Py module and plugin.
	    - Updated cs-win32libs URLs in documentation.
	    - Fixed viewmesh to compile with memory debugging or mem tracker
	      enabled.
	- Eric Sunshine updated cal3d check in configure.ac so that it also
	  works correctly with the latest drastic API changes to cal3d
	  (i.e. removal of the create() and destroy() methods from many of the
	  classes).
	- Eric Sunshine updated the "sufficiently recent" cal3d check in
	  configure.ac to demand the very latest CVS version of cal3d since
	  these changes are needed by Keith's 9-Dec-2004 enhancements to
	  sprcal3d.
	- Eric Sunshine fixed `viewmesh' so that it builds cleanly even when
	  cal3d is not available.
	- Eric Sunshine upgraded the msvcgen templates so that they distinguish
	  between "release" and "debug" header and library search paths. This
	  change allows projects to take full advantage of the the
	  EXTLIB.INCDIRS, EXTLIB.INCDIRS.DEBUG, EXTLIB.LIBDIRS,
	  EXTLIB.LIBDIRS.DEBUG functionality which was added on 29-Nov-2004.
	- Eric Sunshine performed an audit (and update) of code which might be
	  impacted by the 26-Oct-2004 change to iDocument::Parse() to preserve
	  whitespace by default.
	- Squee made the following changes:
	    - Added GetImageName() and GetTextureTarget() to iTextureHandle.
	    - Modified csparser to load key-value pairs for cubemaps and 3D
	      texutres.
	    - Fixed some bugs in some Write*() functions in the syntax service.
	    - Fixed a bunch of cssaver (especially textures) so that saving a
	      copy of flarge now produces a loadable (though incomplete) map
	      file.
	- Squee added missing check for OR in cssaver.
	- res fixed the modification of a const char* in openglcommon.
9-Dec-2004
	- Keith Fulton added support for new animation callback system in
	  cal3d.  See viewmesh.cpp for very simple example of how to use this.
	  Here is a quick description of how the callback system works in
	  cal3d:
	    Added animation callbacks to cal3d.  The CoreAnimation keeps the
	    master list of callbacks for itself.  The Animation keeps last-
	    called times for each animation for itself.  The Mixer is
	    responsible for causing the Animation to check for which of its
	    callbacks must be called.  There are two callbacks defined--one for
	    continuous calling during anim playback and one on completion of
	    the animation.  The callbacks take the CalModel in question, which
	    they can use to getUserData in order to get their own
	    application-specific data about which entity the callback is
	    referring to.
8-Dec-2004
	- Eric Sunshine removed obsolete warning from Doxygen documentation for
	  iEventOutlet::Post() which warned that only events returned by
	  CreateEvent() were valid as input to Post().  This requirement was
	  eliminated on 9-Feb-2004 when Eric re-wrote all of the highly nasty
	  code in csEvent which made the dangerous assumption that the incoming
	  iEvent was actually a csEvent.
7-Dec-2004
	- Eric Sunshine added new Autoconf macros CS_CHECK_PROG(),
	  CS_CHECK_PROGS(), CS_CHECK_TOOL(), CS_CHECK_TOOLS(), CS_PATH_PROG(),
	  CS_PATH_PROGS(), and CS_PATH_TOOL() in checkprog.m4. These are simple
	  wrappers which, in addition to invoking the corresponding Autoconf
	  macros (whose prefix is `AC_'), augment the search path to include a
	  list of directories likely to contain tools and commands, but which
	  might not be mentioned in the user's PATH. The default list of extra
	  directories searched includes /usr/local/bin and /sw/bin (where Fink
	  on MacOS/X installs programs).
	- Jorrit extended the addon handling in the loader so that it will
	  first try to find the addon classID in the object registry. That
	  way you can more easily make addon's without them having to be
	  real plugins.
	- Jorrit changed the loading of addons so that the loading no longer
	  fails if an addon cannot be found. Addon's are now optional.
	  A warning is still given though.
	- Eric Sunshine added a test to checkpython.py to figure out how to
	  suppress warnings about `long double' when #including Python headers,
	  since some installations on MacOS/X emit excessive warnings over
	  which we have no control (since the problem is in the Python
	  headers).
6-Dec-2004
	- Eric Sunshine changed the Library, ConstructLibraryTarget, and
	  ConstructLibraryLinkTarget rules in library.jam so that they forcibly
	  filter out "shared" from the option list before invoking
	  LibraryStatic, ConstructStaticLibraryTarget, and
	  ConstructStaticLibraryTarget, respectively, if BUILD_SHARED_LIBS is
	  not true.
	- Eric Sunshine added ConstructStaticLibraryTarget,
	  ConstructSharedLibraryTarget, and ConstructSharedLibraryLinkLib rules
	  to macosx.jam.
	- Eric Sunshine fixed bugs in the Library rule (library.jam) and the
	  LinkWith rule (flags.jam) where they incorrectly and unconditionally
	  believed that the target was configured as a shared library
	  regardless of its actual state and the state of BUILD_SHARED_LIBS.
	  Among other issues, this problem manifested during msvcgen runs where
	  the synthesized workspaces had incorrect dependency information for
	  the static library project files.
	- Eric Sunshine fixed bug in jamtemplate introduced on 29-Nov-2004
	  where compiler and linker flags determined by configure script could
	  incorrectly creep into MSVC project files. (These flags are almost
	  always undesirable because they are specific to the host's build
	  tools -- the one running 'msvcgen' -- rather than to MSVC.)
	- Eric Sunshine worked around a problem where some Python installations
	  have an apparently bad prototype for PyRun_SimpleString() taking a
	  (char*) rather than (char const*).
	- res removed a Deactivate() from the destructor of the GL fixed 
	  function fragment program. This should not be needed, and 
	  furthermore, happens after GL context destruction (and causes crashes
	  on platforms sensitive to that).
	- Eric Sunshine added csInitializer::RequestPluginsV(). This is just
	  like the variable-argument RequestPlugins(...), except that the
	  arguments are specified as a `va_list'.
	- Eric Sunshine augmented `jamtemplate' so that the synthesized program
	  invokes the new celInitializer::SetupCelPluginDirs() rather than
	  manually attempting to figure out where the CEL plugins are located
	  and telling SCF where to scan.
	- Eric Sunshine made all arguments to the csConfigManager constructor
	  optional. This makes it more convenient to use csConfigManager as an
	  instance variable when the containing object is not able to populate
	  the manager immediately upon construction.
	- Eric Sunshine added a csConfigFile::IsEmpty() method.
	- Eric Sunshine updated VFS so that, at initialization time, it now
	  merges all vfs.cfg files located during its start-up scan. It
	  searches for a file named vfs.cfg in the application resource
	  directory (csGetResourceDir()), then in the directory containing the
	  application (csGetAppDir()), and finally in the Crystal Space
	  installation directory (csGetConfigPath()).  The full set of
	  directories mounted by VFS following the initial configuration file
	  scan is the union of the entries in all of the discovered vfs.cfg
	  files. If there are conflicting entries, then mounts and variable
	  assignments specified in configuration files discovered earlier in
	  the scan take precedence over those discovered later.  Previously,
	  VFS stopped searching for configuration information at the first
	  directory containing a file named vfs.cfg, and loaded only that file.
	- Eric Sunshine augmented VFS so that it respects the --verbose
	  command-line option. When given, it emits information about each
	  vfs.cfg file it has loaded.
5-Dec-2004
	- res made the following changes:
	    - Fixed the Win32 shared library linking.
	    - Did some re-macroization of the static variable cleanup stuff.
	    - Replaced some printf()s with csPrintf()s in the shader expression
	      code.
	    - Made csGradient::GetShades() return a refeference to a const,
	      rather than non-const, array.
	    - Added some missing CS_CSGEOM_EXPORT invocations to csBox2.
	- res made the following changes:
	    - Changed the LibDepends Jam rule for more LinkWith-like invocation
	      (i.e. after Library, not before).
	    - Hardcoded the section name in bfdplugins.cpp to be more 
	      symmetrical with unix.jam.
	    - Fixed the logic when to use local and csutil static variable
	      cleanup function.
	- res worked around shared library build breakage on Unix.
4-Dec-2004
	- res fixed the GL renderer to not call glDeleteTextures() on super
	  lightmap textures.
	- res added a patch from Karl Dietz <dekarl@users.sourceforge.net> to
	  add support for DDS textures to map2cs. (patch #1078844)
3-Dec-2004
        - res added a missing 0 check to the GL halo cleaning code.
	- Jorrit removed the GetValueNames() from iKeyValuePair again as it
	  is illegal to return a csArray directly in an SCF interface (due
	  to inter-plugin memory management issues).
	- Jorrit temporarily disabled WriteKey() in syntax services since
	  it used the above GetValueNames(). It will have to be rewritten
	  once we have another way to iterate over all values in a key value
	  pair.
	- Squee forgot to use the proper arrays (again). Added GetValueNames()
	  back into iKeyValuePair using the proper iStringArray and re-enabled
	  WriteKey() in the syntax service.
	- Squee changed GetShades() in csGradientShades to return a reference.
	- Jorrit added support for loading library files to viewmesh. In
	  that case the first mesh factory in that library will be shown.
        - res fixed the or_lighting shader to respect the alpha of the vertex
          colors again.
        - Squee did some more work on cssaver.          
2-Dec-2004
	- Eric Sunshine fixed the various extension checks in glextmanager.h so
	  that they won't crash if glGetString(GL_EXTENSIONS) and/or
	  wglGetExtensionsStringARB() return a null pointer for some reason.
	- Eric Sunshine backported into the `glextgen' templates some changes
	  by Matze to glextmanager.h (which is generated by `glextgen').
	- res fixed the GL halos to delete the texture handles before GL 
	  context destruction.
	- Squee added various operators to csColor and csColor4 (like ==).
	- Squee added GetShades() to csGradientShades and GetValueNames() to
	  iKeyValuePair.
	- Squee filled in various Write*() methods on the syntax service. Also
	  fixed some bugs in cssaver, though there's plenty more to be done.
	- Squee added 'saveworld' command to the walktest console to easily
	  test cssaver plugin.
1-Dec-2004
	- res added a patch from Brendan Costa adding support for underline
	  position, underline thickness and line height to iFont.
	- res fixed the Win32 keyboard handling to emit Shift autorepeat 
	  events.
	- Anders made the lesser (prio 50) technique of or_lighting support 
	  fog. or_detail-variants still remain.
30-Nov-2004
	- Eric Sunshine changed the `friend class csHash' mentions in the hash
	  iterators so that they once again specify the full templated name:
	  `friend class csHash<T, K, KeyHandler>'. This reverses a change made
	  some time back (January 2004) to pacify the buggy Borland compiler
	  which failed to understand the fully decorated name, however, MSVC6
	  (at least some versions / patch levels) barfs on the non-decorated
	  name. Since, at present, we are actively supporting MSVC6, but not
	  Borland, it makes sense to use the decorated form which pacifies
	  MSVC6. If, in the future, we need to support both products, we will
	  have to arrive at some other solution (such as conditional
	  compilation).
	- Jorrit added an option to thing to disable lightmapping. This
	  will save some memory (but not as much as I expected) and enhances
	  render speed. You can enable this option in thing.cfg (uncomment
	  the EnableLightmaps=false line) or you can use the
	  '-nolightmapping' commandline option.
	- res added shared libs support for unix platforms.
29-Nov-2004
	- res changed the static variable cleanup code to employ a variable
	  with a pointer to the cleanup function instead of using it directly.
	- res added very crude, very hackish, very experimental, but working
	  shared libs support for MinGW.
	- Eric Sunshine augmented msvcgen to make it possible to specify
	  additional header and library directories, and raw macro definitions
	  (without resorting to compiler-specific option syntax) for external
	  projects.  In addition to EXTLIB.CFLAGS, EXTLIB.LFLAGS, and
	  EXTLIB.LIBS, msvcgen now also recognizes EXTLIB.DEFINES,
	  EXTLIB.INCDIRS, and EXTLIB.LIBDIRS. (You normally set up the
	  EXTLIB.FOO variables with the MsvcGenConfig or MsvcGenConfigFile
	  rule; and the information is consulted by msvcgen when the
	  ExternalLib rule is invoked.) These new settings are reflected in the
	  MSVC project attributes "PreprocessorDefinitions",
	  "AdditionalIncludeDirectories", and "AdditionalLibraryDirectories".
	- Eric Sunshine enhanced `jamtemplate' so that the synthesized
	  Jamfile.in also sets the MSVC search path for CRYSTAL and CEL
	  libraries.  (On 10-Sep-2004, `jamptemplate' was augmented to also set
	  the MSVC search path for CRYSTAL and CEL headers. Prior to that,
	  neither header nor library search path was set for CRYSTAL or CEL.)
	  In particular, it adds these directories to the library search list:
	    ../CS/out/release/libs
	    ../CS/out/debug/libs
	    ../CS/libs/csutil/win32
	    $(CRYSTAL)/out/release/libs
	    $(CRYSTAL)/out/debug/libs
	    $(CRYSTAL)/libs
	    $(CRYSTAL)/libs/csutil/win32
	    ../cel/out/release/libs
	    ../cel/out/debug/libs
	    $(CEL)/out/debug/libs
	    $(CEL)/out/release/libs
	    $(CEL)/libs
	- Eric Sunshine updated jamtemplate/Jamfile-src.template so that it
	  performs a wildcard for all of the common source and header
	  extensions (C, C++, Objective-C, Objective-C++), rather than
	  searching only for *.cpp and *.h.
	- Vincent Knecht updated rpm.txi manual page: --with newrenderer
	  switch has changed to --with oldrenderer.
	- Eric Sunshine augmented the `lcms' test in configure.ac so that it
	  also looks for the header as <lcms/lcms.h> in addition to <lcms.h>,
	  since it is installed in an "lcms" subdirectory on some
	  platforms. (Normally, this should be handled automatically by
	  `pkg-config --cflags lcms' which is invoked by configure.ac, but
	  the necessary pkg-config goop presumably is missing on these rogue
	  installations.)
28-Nov-2004
	- Eric Sunshine made the new-renderer the default. Users wanting to use
	  the old-renderer must select it manually.
	    - The configure script now responds to --enable-old-renderer. The
	      --enable-new-renderer option has been retired.
	    - msvcgen now publishes wkstypical and wksoldrenderer along with
	      build modes Release, Debug, Release_OR, and Debug_OR. The
	      wksnewrenderer workspace, and build modes Release_NR and Debug_NR
	      have been retired.
	    - There is a new preprocessor symbol CS_USE_OLD_RENDERER. The
	      symbol CS_USE_NEW_RENDERER has been retired.
	    - The Jam build variable USE_OLD_RENDERER replaces the retired
	      USE_NEW_RENDERER. Likewise, the Jam property {build:oldrenderer}
	      replaces the retired {build:newrenderer}.
	- Eric Sunshine eliminated numerous compilation warnings.
	- Eric Sunshine updated documentation and other URL's throughout the
	  project to point at Crystal Space's new official domain
	  crystalspace3d.org.  (We also respond to crystalspace3d.net and
	  crystalspace3d.com.)
	- res fixed a crash in OpenGL DrawSimpleMesh() where mesh.dynDomain
	  wasn't checked for 0.
	- res comitted an update to CrystalExport.mel from Mark Sanders:
	    - Fixed bug: When save as box is open and you press Cancel it 
	      continues saving with the previous file name.
	    - Added a "roundoff" feature to round the vertice coordinates in 
	      the exported file.
	    - Changed the progress bar to display a bit more regular on 
	      different sizes of meshes. Also rounded off the percentage 
	      display.
27-Nov-2004
	- Jorrit did a few minor changes to foliage. Nothing significant.
	- Jorrit applied a patch submitted by Marc Prussmeier which adds the
	  following three functions to iImage: Copy, CopyScale, and CopyTile.
	  Only csImage implements the new methods.  The other implementations
	  of iImage simply return false.
	- Andrew Robberts fixed a bug in particles simpphys where a for loop
	  iterated the wrong way.
	- res fixed compiling for non-debug builds of win32kbd.cpp.
	- Anders did the following changes:
	    - Moved key/value reading & writing to syntax services, and added 
	      key/value loading to xml shaders.
	    - Updated bugplug scene info dump to write child meshes too 
	      (and changed the method of indentation a bit)
	    - Made DrawSimpleMesh actually care about the "dyndomain" 
	      member of the mesh
	    - Added fog to NR. There are still issues though:
		- Fog looks crappy when looking perpendicular to a portal. 
		  This is actually due to properties of z-based fog, but 
		  maybe could be tweaked to look better.
		- All shaders aren't updated to support fog, only the 
		  standard or_lighting, best technique.
	- res renamed FogRamp() to csFogRamp().
26-Nov-2004
	- Eric Sunshine added capability to cscript/csperl5/Jamfile to create
	  pure-Perl extension module `cspace' (Jam target `perl5mod'). This
	  revives the long-dead pure-Perl scripting interface for CS.
	- Eric Sunshine fixed problem in Perl5 `freearg' typemap for
	  argc/argv[] in perlpre.i which resulted in the typemap never being
	  applied, thus allocations made by the `in' typemap were never freed.
	- Eric Sunshine fixed nasty bug in Perl5 `in' typemap for argc/argv[]
	  in perlpre.i where it was filling the synthesized argv[] array with
	  pointers to strings which it freed before ever calling the wrapped
	  C/C++ function, thus the wrapped function was receiving garbage.
	- Eric Sunshine changed behavior of Perl5 `in' typemap for argc/argv[]
	  in perlpre.i so that, as a convenience, it now automatically inserts
	  the script name as argv[0]. This fixes the common case where the Perl
	  programmer would pass in only @ARGV, which does not contain the
	  script name; yet C/C++ functions accepting argc/argv[] always expect
	  argv[0] to be the script/program name, thus the bare @ARGV was not
	  interpreted as the Perl programmer would expect.
	- Eric Sunshine changed behavior of Java `in' typemap for argc/argv[]
	  in javapre.i so that it now automatically prepends a synthesized
	  argv[0] to the incoming array since C/C++ functions accepting
	  argc/argv[] expect argv[0] to be the program or script name, but
	  Java's `main(String[] args)' array contains only program arguments.
	  Unfortunately, there does not seem to be any way of determining the
	  location of the .class file in which main() was invoked, so
	  "./csjava" is used as argv[0]. The "./" notation is used purposely so
	  that functions, such as csGetAppPath(), which interpret argv[0] will
	  consider the "current working directory" as the location of the
	  program. (This may not be the best solution for synthesizing argv[0],
	  but it is better than sending a bogus argv[] array to the C/C++
	  function.)
	- res added some facilities for keyboard handling debugging. Can be
	  enabled by setting the KeyboardDriver.EnableDebugging config var to
	  true.
	- res augmented csConfigAccessor to also contain a simple object 
	  registry only constructor.
	- res slightly augmented the iGraphics3D::DrawSimpleMesh() docs to
	  state that use of that method in 2D mode is possible, too.
	- res fixed the flare halos for NR SR.
	- res fixed a problem in the shader conditionals where float-typed SV
	  values where not correctly retrieved. Also fixed float-vs-int 
	  comparisons (ints were not casted to floats).
25-Nov-2004
	- Eric Sunshine enhanced SCF so that it now recognizes the --verbose
	  command-line option. When enabled, it emits the following additional
	  diagnostic information:
	    - Path of each directory scanned for plugins.
	    - Path of each plugin discovered and registered.
	    - Name of each class published by a plugin.
	    - Name of each plugin actually loaded (as a result of a request to
	      instantiate a class contained in the plugin).
	    - Name of each plugin unloaded.
	- Eric Sunshine augmented the behavior of SCF so that it is now legal
	  to ask for it to scan the same directory multiple times for plugins.
	  This may be useful, for instance, by a long-running program which
	  installs plugins dynamically (perhaps downloading them from a
	  server), and wishes for SCF to recognize the new plugins without
	  having to name them individually. Another example is PlaneShift which
	  asks SCF to scan every directory mentioned by PATH, even though some
	  of those directories might already have been scanned by the normal
	  search mechanism.  Previously, the behavior of SCF when asked to
	  re-scan a directory was essentially undefined. (In practice, it
	  issued a slew of potentially misleading warning messages.)
	- Eric Sunshine enhanced several error and warning messages emitted by
	  SCF so that they provide more context information about the problem
	  being reported.
	- Eric Sunshine added Contains() to csStringSet. Previously, there was
	  no way to determine if a given string was a member of the set.
	- Eric Sunshine renamed the 'drivers2d' and 'drivers3d' compile groups
	  to 'canvases' and 'renderers', respectively. (The old names, though
	  deprecated, are still recognized for backward compatibility.)
	- Eric Sunshine fixed bugs in several canvases where they neglected to
	  initialize csPixelFormat::AlphaMask.  A subsequent call to
	  csPixelFormat::complete() then accessed the uninitialized AlphaMask
	  field.
	- Eric Sunshine worked around more Swig 1.2.23 instability in the new
	  "default arguments" features where it generated ambiguous and
	  uncompilable code (at least with gcc 3.4.x) for scfInitialize().
24-Nov-2004
	- res fixed light flare halos for NR.
	- res changed csRenderLoop::Draw() to save the clipper before drawing
	  and subsequently restore it. Needed for proper halo visibility
	  recognition.
	- res changed the NR texture manager to now unload textures upon 
	  clearing (i.e. context closing).
	- res slightly augmented the 
	  csApplicationFramework::SetApplicationName() Doxygen documentation.
23-Nov-2004
	- Eric Sunshine fixed bug in csSCF::GetPluginMetadata() in which it had
	  not been properly (fully) updated to deal with csStringID following
	  the 13-Nov-2004 change to SCF to make the data structures share
	  library and factory names via csStringSet.  This resulted in
	  GetPluginMetadata() sometimes failing to return a valid meta-data
	  document.
	- Marten fixed a few issues in NR software renderer:
	    - Added triangulation of trianglestrips and fans
	    - Added Blit() to texture handle. This is needed for most/all
	      procedural textures.
	    - Made sure DrawPolysMesh() visits the materials before usage.
	    - Added a fallback-technique to the reflection shader.
	- Eric Sunshine improved error reporting in SCF for when an SCF class
	  is detected in more than one plugin module. It now reports the
	  physical DLL in which each declaration is made. This should make it
	  much easier to debug problems, rather than trying to guess about the
	  locations of the plugins.
	- res applied patch from Alvar Jansson <alvar@users.sourceforge.net>
	  which adds csVector2 shader variable support in Cg programs. (patch
	  #1071736)
22-Nov-2004
	- Eric Sunshine added blurb to apimod100.txi regarding newly supported
	  Java bindings.
	- Vincent Knecht made the following changes to rpm/cs.spec file:
	    - Moved cslight invokations to post-install step.
	    - Changed cslight invocations to use `-canvas=null' instead of
	      `null2d'.
21-Nov-2004
	- res fixed a problem in the NR software renderer were wrong renderer
	  lightmaps were selected for polygons, causing problems from visual 
	  glitches to crashes.
	- res fixed the shader list loader in csparser to not stop parsing
	  of the list when a shader is already loaded or under some error
	  conditions.
	- res added csGetPlatformConfigPath(), a function to obtain a platform 
	  specific path for per-user data.
	- Eric Sunshine fixed oversight in 4-Nov-2004 change to jamtemplate
	  where it neglected to copy config.sub, config.guess, and install-sh
	  to the synthesized project.
	- Eric Sunshine renamed csHash<>::PutFirst() to PutUnique(). (The old
	  name is still recognized, though deprecated.) Also clarified
	  documentation for Put() to state that it does not replace an existing
	  key/value tuple.
	- Eric Sunshine fixed bug in csKeyValuePair::SetValue() where it was
	  incorrectly invoking csHash<>::Put() rather than PutUnique(). In
	  practice, this caused all invocations of SetValue(), other than the
	  first, to appear to be ignored; and csKeyValuePair::GetValue() only
	  ever returned the value set by the first invocation of SetValue().
	- Eric Sunshine updated the "simple" example code in sprcal3d.txi so
	  that it agrees with the new simple1 tutorial which is now based upon
	  csApplicationFramework. Also updated out-of-date material in
	  sprcal3d.txi and corrected a number of errors.
	- Eric Sunshine fixed oversight in 4-Nov-2004 change to 'install_data'
	  where it neglected to install config.sub, config.guess, and
	  install-sh into ${datadir}/build/autoconf. These are needed by
	  jamtemplate.
	- res generalized csGetPlatformConfigPath() by removing the 'directory'
	  flag. The function now returns a base for a filename.
	- res changed the simple1, simple2 and simpmap apps to use an 
	  application name of the style "CrystalSpace....". (As suggested by
	  the SetApplicationName() documentation.)
	- PK changed PicView to use csApplicationFramework and AWS.
19-Nov-2004
	- PK fixed the mesh attaching to sockets in viewmesh by adding
	  sprite->GetMovable()->UpdateMove() to ViewMesh::AttachMeshToSocket.
	- Eric Sunshine performed some relatively minor clean up in simple.txi,
	  simple2.txi, and simpmap.txi: mostly grammatical, punctuational,
	  typographical, and small content corrections.
	- Eric Sunshine added the missing ClearAnimCycle(int,float) overload to
	  iSpriteCal3DState which complements the existing ClearAnimCycle(char
	  const*,float). Also added the missing FindAnim(char const*) to the
	  interface.
	- Luca replaced the void return type with the bool one for the 
	  SpriteCal3DState::ClearAnimCycle(int idx, float delay) method.
18-Nov-2004
	- Eric Sunshine changed CS_CHECK_PKG_CONFIG in checklib.m4 so that it
	  also augments pkg-config's search path to reference directories which
	  commonly contain .pc files, but which pkg-config does not search by
	  default. In particular, it now instructs pkg-config to also search
	  /usr/local/lib/pkgconfig and /sw/lib/pkgconfig (the Fink-installed
	  .pc location on MacOS/X).
	- Eric Sunshine upgraded the FreeType2 check so that it is capable of
	  locating the Fink-installed `freetype-config' in the unusual location
	  /sw/lib/freetype2/bin on MacOS/X.
	- PK changed the simple tutorials to use csApplicationFramework.
17-Nov-2004
	- Eric Sunshine fixed a bogus string comparison in
	  csSpriteCal3DMeshObject::FindAnimCycleNamePos() which generally
	  failed (though it would succeed if the input argument was the return
	  value of GetAnimName()).
	- Eric Sunshine fixed bug in the (char const*) overload of
	  csSpriteCal3DMeshObject::ClearAnimCycle() where it incorrectly
	  invoked ClearAnimCycle() rather than ClearAnimCyclePos(). This caused
	  it to be entirely dysfunctional.
	- res added a paragraph about the iTextureManager::FreeImages() removal
	  to the API modifications page.
16-Nov-2004
	- Eric Sunshine enhanced CS_CHECK_LIB_WITH() in checklib.m4 so that it
	  knows about MacOS/X frameworks, and automatically tests for the
	  presence of a framework for the given library or one of its aliases,
	  in addition to performing the normal link library testing.
	- Eric Sunshine upgraded the Cg check in configure.ac for MacOS/X
	  compatibility.
	- Eric Sunshine fixed the SDL check in configure.ac so that it succeeds
	  on MacOS/X. It now #undefines `main' after #including <SDL/SDL.h>,
	  since SDL's `main' #define breaks the test.
	- res replaced the parallaxtest normal map with a better looking one.
	- Anders fixed a nasty bug in genmesh. If the data size of the mesh was
	  increased with a SetVertexCount call, tangent and binormal buffers
	  would be overrun upon next access resulting in memory corruption.
	- Eric Sunshine upgraded javapre.i so that it does not manually provide
	  an overload for iEventOutlet::Broadcast() since this is no longer
	  needed with Swig 1.3.23, and resulted in a Java compilation
	  error. (The manual overload is still provided for earlier Swig
	  versions.)
15-Nov-2004
	- Eric Sunshine fixed _CS_CHECK_LIB_PKG_CONFIG_FLAGS() in checklib.m4
	  so that it no longer checks for `pkg-config' only the very first time
	  it is mentioned in configure.ac. This resulted in incorrect behavior
	  if the first mention of this macro appeared inside the branch of a
	  conditional, and that branch was not taken for a particular
	  configuration run. Instead, the `pkg-config' check is now performed,
	  if necessary, at each invocation of _CS_CHECK_LIB_PKG_CONFIG_FLAGS().
	- Eric Sunshine fixed _CS_CHECK_LIB_CONFIG_FLAGS() in checklib.m4 so
	  that the composed shell variable name is of the form
	  `CONFIG_{library}', rather than `{library}_CONFIG', since {library}
	  might begin with a numeric, which would result in an illegal shell
	  variable name. For instance, the library "3ds" resulted in the
	  illegal shell variable name `3DS_CONFIG'.
	- Eric Sunshine fixed _CS_CHECK_LIB_CONFIG_FLAGS() in checklib.m4 so
	  that illegal characters are transliterated to underscore `_' in the
	  composed shell variable name. For instance, the library alias
	  "lib3ds-120" resulted in the illegal shell variable name
	  `CONFIG_LIB3DS-120'.
	- Eric Sunshine added cache support to CS_CHECK_PKG_CONFIG(),
	  _CS_CHECK_LIB_PKG_CONFIG_FLAGS(), _CS_CHECK_LIB_CONFIG_FLAGS(), and
	  _CS_CHECK_LIB_CONFIG_PROG_FLAGS() in checklib.m4.  This eliminates
	  many unnecessary invocations of `pkg-config' and `{library}-config'
	  during cached runs.
	- Eric Sunshine fixed a few small configuration/build problems which
	  manifested when cross-compiling on Linux for Windows(Mingw).
	- Eric Sunshine added a `GLhandleARB' type check to configure.ac.  A
	  few modern GL headers are starting to declare this type, so we need
	  to avoid re-declaring it in our own glextmanager.h for those cases.
	- res changed the loader to let the <meshobj>s Z buffer mode and render
	  priority always override the <factory> settings.
	- res fixed csosdefs.h to only include <sys/param.h> in case configure
	  detected it.
	- res removed some unnecessary members & methods from the NR GL 
	  renderer lightmap code.
	- Marten updated todo_newrenderer.txt. It needs some more checkup, but
	  I don't have time to fix that right now.
	- Eric Sunshine applied patch from Chris Kuethe <ckuethe@users.sf.net>
	  to resolve a MIN/MAX #define conflict between csdef.h and
	  <sys/param.h>. (bug #1066917)
	- Eric Sunshine applied patch from Chris Kuethe <ckuethe@users.sf.net>
	  to fix a couple places where 'false' was being returned incorrectly
	  from methods declared as returning csRef<>/csPtr<>. (bug #1066948)
14-Nov-2004
	- Eric Sunshine updated cspace.i to take csPoly2D decomposition into
	  account.
	- Eric Sunshine added SendMessage() to the list of names sanitized by
	  CS/include/csutil/win32/sanity.inc since CEL uses this identifier for
	  its own purposes.
13-Nov-2004
	- res made the memtracker also work in optimize builds.
	- res fixed memtracker compilation with MSVC.
	- res changed the default ref owner logic to use a sorted array.
	- res changed csArray<>::SetCapacity() to not round the capacity up to
	  a multiple of the threshold.
	- res fixed a bug in csBlockAllocator<>::Compact() where under certain
	  circumstances non-free blocks were removed.
	- res changed the default csSet<> size/grow rate to 23/5.
	- res changed csStringHash to use csHash<> instead of csHashMap.
	- res made SCF shared libraries and SCF factories share library names.
	- res split csPoly2D up into two classes csPoly2D and 
	  csPoly2DUnbounded; latter one has no automatic bounding box, but 
	  serves as a base class for csPoly2D.
	- res changed csShaderVariableContext to store the SVs in a sorted 
	  array.
	- res removed iTextureManager::FreeImages(). The images are now freed
	  automatically once not needed any more.
	- res simplified the NR texture manager a bit.
	- res put the normalization cube computation in the NR GL renderer 
	  into an SV accessor (so it is only generated when really needed).
	- res changed the Thing plugin to not store the final computed 
	  lightmap. Instead, the final LM is computed into a buffer whose
	  contents are then sent to the renderer. The renderer now has to keep 
	  a copy if it needs one.
	- res fixed the DDS loader to properly clear the CS_IMGFMT_ALPHA flag
	  if no alpha is present.
	- res changed the default font server to store glyphs in a hash 
	  instead of an array of arrays.
	- res added ShrinkToFit() calls for some arrays in dsplex and fixed
	  function shaders.
	- res fixed the Win32 keyboard RAlt quirk to also omit LCtrl up events.
	- res augmented the NR GL renderer with a debug command to visualize
	  the Z buffer.
12-Nov-2004
	- Eric Sunshine fixed pthread check in checkpthread.m4 so that it works
	  correctly with pre-C99 compilers. Previously, it was mixing variable
	  declarations and code, which is illegal under older compilers.
	  (bug #1064990)
	- Eric Sunshine added a MAXPATHLEN check to configure.ac. If present,
	  it is used as the value of CS_MAXPATHLEN. Also changed the default
	  CS_MAXPATHLEN for Unix from the unusually low 256 to the standardized
	  1024, if MAXPATHLEN is unknown.  (bug #1064997)
	- Eric Sunshine fixed some header checks in configure.ac to use
	  AC_CHECK_HEADERS() rather than AC_CHECK_HEADER(), since the former
	  also invokes AC_DEFINE() for the detected header(s). This is needed
	  by some subsequent build tests.
11-Nov-2004
	- Eric Sunshine augmented configure.ac/cstypes.h so that they also
	  consult <inttypes.h> (in addition to <stdint.h>) when checking for
	  intptr_t and uintptr_t since these types are declared in <inttypes.h>
	  on BSD platforms. (bug #1064199)
	- Eric Sunshine augmented the CS_CHECK_LIB_WITH() macro in checklib.m4
	  so that it employs the following additional methods for gleaning
	  compiler and linker flags for the specified library (in addition to
	  the older, existing heuristic of searching a set of directories):
	    (1) If the `pkg-config' command is present and knows about the
	        library (or one of its aliases), then glean information from
	        its --cflags and --libs options.
	    (2) If a command named `{library}-config' or `{alias}-config'
	        exists (i.e. `sdl-config', `wx-config', etc.), and if it
	        responds to --cflags and --libs, then use those options to
	        glean information about the library.
	  Additionally, CS_CHECK_LIB_WITH()'s "ALIASES" argument is now
	  comma-delimited, rather than space-delimited.
	- Eric Sunshine added a check for lcms (http://www.littlecms.com/) to
	  configure.ac. This library apparently is needed by libmng on some
	  OpenBSD installations. (bug #1062197)
9-Nov-2004
	- Jorrit did some further work on foliage.
	- Eric Sunshine added a number of CS_ASSERT()'s to csList<> to catch
	  illegal cases when the iterator-based insertion, deletion, and
	  manipulation methods are invoked with an iterator which does not
	  point at an element.
8-Nov-2004
	- Eric Sunshine fixed problem in csStencilShadowCacheEntry where it was
	  treating its `csArray<> face_normals' as if it was a
	  csDirtyAccessArray<>.  Although this "works" today, it is considered
	  illegal and may not work in the future.
	- Eric Sunshine wrote sections for the CS user manual explaining the
	  Java and Python bindings. Also rewrote portions of the Perl section
	  and the scripting introduction.
7-Nov-2004
	- Eric Sunshine made the following Python-related changes:
	    - Fixed cspython plugin so that it works correctly when installed.
	      In particular, it now knows how to locate its installed adjunct
	      scripts, whereas it previously knew only where the scripts were
	      in the CS source tree.
	    - Added a --python-enable-reporter command-line option to the
	      cspython plugin. When enabled, sys.stdout and sys.stderr are
	      redirected to iReporter (via CS/scripts/python/cshelper.py).
	      Previously, this was a rather useless compile-time option only
	      (i.e. one had to change the C++ source code and recompile).
	    - Added a --python-enable-debugger command-line option to the
	      cspython plugin. When enabled, a Python exception causes the
	      Python debugger to be launched. Previously, this functionality
	      was the default behavior, but it caused problems because it
	      required that the main application be linked against Python,
	      despite the fact that the cspython plugin can otherwise be used
	      by programs which do not link against Python. In practice, the
	      unconditional loading of the Python debugger caused the oft-seen
	      run-time exception regarding cStringIO load failure, which
	      cascaded into initialization abortion for cspython.
	    - The cspython plugin now responds to the cscmdCommandLineHelp
	      broadcast event.
	    - Augmented pysimp so that it accepts an optional command-line
	      argument specifying the script to load (ex. "./pysimp pysimp2").
	      This makes it easy to load the pysimp2.py script in place of
	      pysimp.py. Previously, one either had to edit pysimp.cpp to
	      achieve this, or copy pysimp2.py over top of pysimp.py.
	    - pysimp now links explicitly against the Python library. This
	      allows the cspython --python-enable-debugger option to work.
	      (Other than that, there is no reason for pysimp to link against
	      Python.)
	    - Updated the Python scripts in CS/scripts/python so that they
	      actually work again. Many of them had become dysfunctional over
	      time as changes were made in other parts of the project.
	    - Added file comments to all of the scripts in CS/scripts/python in
	      order to let people know their purpose. Without this, they were
	      mostly just a bunch of uncommented and mostly meaningless pieces
	      of Python code.
	    - Removed several unused, incomplete, or useless Python scripts
	      from CS/scripts/python.
	    - Renamed testpymod.py to tutorial1.py since it approximates nicely
	      the simple1 C++ tutorial. This complements the existing
	      tutorial0.py, tutorial2.py, and tutorial3.py.
	    - The installed vfs.cfg now publishes a CS_SHAREDIR vfs variable
	      which points at the "shared data" directory (parent of the CS
	      "data" directory). Fixed the "scripts/" mount so that it actually
	      points at the installed script directory, rather than the
	      unrelated CS "data" directory.
4-Nov-2004
	- Eric Sunshine changed jamtemplate/configure.template so that it now
	  expects CS and CEL versions 0.99. This way, external projects created
	  with the 0.99 version of jamtemplate will require the corresponding
	  version of the SDK's.
	- Jorrit fixed a bug in the particles mesh object where it would
	  forget to remove itself from the physics plugin in case it was
	  removed. This would cause crashes later.
	- Eric Sunshine added the 'noinstall' option to protomesh and
	  protomeshldr since these plugins are just "examples", and serve no
	  useful purpose at run-time.
	- Eric Sunshine removed the 'noinstall' option from protomesh and
	  protomeshldr since 'flarge' (which is also installed) tries to load
	  these plugins, despite the fact that they are not useful to the
	  end-user in compiled-form.
	- Eric Sunshine fixed jamtemplate/createproject.sh so that it works
	  correctly both when installed and when used from the CS source tree.
	- Eric Sunshine augmented the 'install' target so that it installs the
	  following additional useful resources:
	    ${datadir}/build/autoconf
	    ${datadir}/build/jam
	    ${datadir}/build/jamtemplate
	    ${datadir}/build/maketemplate
	    ${datadir}/build/msvcgen
	    ${datadir}/conversion/hammer
	    ${datadir}/conversion/max
	    ${datadir}/conversion/maya
	    ${datadir}/conversion/qt2aws
	- Eric Sunshine imposed some order on the eclectic collection of
	  resources installed in ${datadir} by grouping related items, which
	  used to reside at the top-level of ${datadir}, into meaningful
	  subdirectories:
	    java   --> ${datadir}/bindings/java
	    perl5  --> ${datadir}/bindings/perl5
	    python --> ${datadir}/bindings/python
	    *.zip  --> ${datadir}/data
	    data   --> ${datadir}/data
	    maps   --> ${datadir}/data/maps
	- Eric Sunshine relocated the external make-based project skeleton
	  resources, Makefile.template and appwrap.sh, from
	  CS/scripts/cs-config to CS/scripts/maketemplate. 'maketemplate' is
	  now installed in ${datadir}/build/maketemplate, alongside
	  'jamtemplate'.
	- Eric Sunshine fixed bug in the Wildcard rule in helper.jam where it
	  produced and returned a bogus list of paths if the optional `dir'
	  argument consisted of multiple subdirectory token; for instance:
	  [ Wildcard foo bar : *.h *.inc ]
	- Eric Sunshine added an InstallProgram rule to install.jam which is a
	  convenience wrapper around DoInstall for installing already-existing
	  invocable targets, such as shell scripts.
        - Eric Sunshine relocated Norman's Qt -> AWS conversion style sheets
	  from CS/scripts/aws to CS/scripts/qt2aws.
3-Nov-2004
	- res also applied the default hash table size and grow rate change to
	  csHashReversible<>.
	- res fixed the Win32 keyboard code to correctly handle AltGr and Shift
	  quirks.
	- res fixed a few gcc warnings in sndwaveout and sndds3d.
2-Nov-2004
	- res reduced the default hash table size and grow rate from 257/64 to
	  23/5 to have hashes use less memory by default.
1-Nov-2004
	- Erotoman added new stencil2 plugin for dynamic shadows. It is working
	  only for perfectly closed meshes
31-Oct-2004
	- Eric Sunshine renamed the following `null' SCF classes in order to
	  make them consistent with the names of all other `null' plugins:
	      crystalspace.mesh.object.nullmesh -->
	          crystalspace.mesh.object.null
	      crystalspace.graphics2d.null2d --> crystalspace.graphics2d.null
	- Eric Sunshine added a lot of missing `const' qualifiers to many
	  methods in a number of SCF interfaces (mostly video-related).
	- Eric Sunshine normalized the names of a number of key-color methods
	  in various interfaces. Some interfaces used FooKeyColor(), while
	  others used FooKeycolor(). All now use FooKeyColor(). (The
	  FooKeycolor() methods are still available, though deprecated.)
	- Anders fixed an error in nullmesh factory saver. It forgot a 
	  <box>...</box> tag wrapping the actual contents of the bounding box, 
	  resulting in a file that couldn't be loaded.
	- res changed the csInputDefinition code to remove the internal
	  'CookedToName()' function. Obtaining a name from a cooked code is
	  only of limited use, as a cooked code is somewhat ambigious as more
	  than one key can produce the same raw code. Instead, 'RawToName()'
	  is now used when the name for a key code is to be obtained.
	  (As a side effect, this also fixed csInputDefinition::GetKeyString()
	  for numpad keys.)
	- res beautified the Numpad key names in csInputDefinition and added
	  a few missing pad keys.
30-Oct-2004
	- res improved the Win32 custom cursor cleanup a bit.
	- res fixed a crash in the software sound renderer source, where a 
	  member variable was written after the instance was possibly 
	  destroyed.
	- res fixed a wrong ref counting in the waveout sound driver.
	- res fixed the '*' appearing on the API doc front page. (Apparently,
	  Doxygen doesn't remove the '*'s at the beginning in \htmlonly 
	  blocks.)
	- Eric Sunshine fixed a few places (csparser, vfs) where the
	  26-Oct-2004 change to preserve whitespace, by default, in
	  iDocument::Parse() had a potentially negative impact. These places
	  now request Parse() to (once again) condense whitespace.
29-Oct-2004
	- Bjorn Hansen fixed sprcal3d->SetVelocity() so that animations blend
	  correctly and allow multiple animations with the same base velocity
	  to blend.  Also updated the documentation to more clearly reflect
	  what the function does.
	- Rhad changed the software renderer to account for the OSS driver
	  blocking for long periods on calls to UnlockMemory().
28-Oct-2004
	- Jorrit did some small work on foliage mesh.
	- Eric Sunshine removed some redundant assignments from Jamrules which
	  were merely duplicating the default assignments. Also changed default
	  value of LOCATE.DOCS from 'out' to 'out/docs' (which is where CS has
	  been placing generated documentation the entire time anyhow).
	- Eric Sunshine fixed 20-Oct-2004 bug in Swig rule (swig.jam) which
	  caused Swig to be invoked with an empty "-outdir" option if caller of
	  Swig rule had not provided an `outdir'.
	- Eric Sunshine (blindly) fixed a bug in csSpriteCal3DMeshObject where
	  it completely mismanaged its active_anims[] and active_weights[]
	  members. AddAnimCycle() would append animation cycle information to
	  these arrays, but ClearAnimCycle() never reversed the operation. The
	  result was that the client's, Cal3D's, and csSpriteCal3DMeshObject's
	  notion of which animation cycles were active were out-of-sync. (The
	  only time animation cycles were ever removed from these arrays was
	  when ClearAllAnims() was invoked.)
	- Eric Sunshine fixed bugs in the csWrapPtr "out" typemap in javapre.i
	  where it was incorrectly returning a corrupt Java object when the
	  wrapped pointer was 0. It should have been returning 'null' in this
	  case. Subsequent Java operations on the returned bogus object would
	  then crash within the JNI glue code. This problem manifested, for
	  instance, when any of the query macros, such as CS_QUERY_REGISTRY(),
	  failed to find the requested object.
27-Oct-2004
	- Eric Sunshine added two mechanisms to msvcgen allowing clients to
	  have control over the generated project name:
	    - The new MsvcGenName rule allows the project name to be set on a
	      per-target basis. It must be invoked before the corresponding
	      Application, Library, Plugin, or MsvcGenWorkspace rule.
	    - MsvcGenConfig can be used to set any of the new variables which
	      control the prefix assigned to project names based upon the raw
	      target name.  These apply to all project and workspace names not
	      overriden by MsvcGenName.  Any of the following variables can be
	      set by the client:
		MSVC.PREFIX.appcon    (default "app")
		MSVC.PREFIX.appgui    (default "app")
		MSVC.PREFIX.group     (default "grp")
		MSVC.PREFIX.library   (default "lib")
		MSVC.PREFIX.plugin    (default "plg")
		MSVC.PREFIX.workspace (default "wks")
	- Eric Sunshine eliminated Swig complaint about new
	  iGraphics2D::GetRGB() overload for alpha.
	- res made a small update to the coding style section, removing a 
	  reference to the now gone csengine library and updating the 
	  cssysdef.h paragraph to reflect the new possibility to include it
	  from headers.
	- Squee added alpha support to iGraphics2D::Blit() in the software
	  canvases and added the transparent Crystalspace logo to g2dtest.
26-Oct-2004
	- Eric Sunshine added an optional argument to iDocument::Parse() which
	  controls whether or not whitespace in CS_NODE_TEXT nodes is
	  condensed.  The new default behavior is for whitespace to be
	  preserved.  (Previously, it was condensed unconditionally.)  This
	  change was made in order to conform to the latest XML specifications
	  which state that XML scanners must preserve whitespace by default.
	  Consult the following documents for more information regarding this
	  issue.
	    http://www.w3.org/TR/REC-xml/#sec-white-space
	    http://www.xml.com/axml/notes/AllWSAlways.html
	- Eric Sunshine worked around a problem reported by Phil Wyett on
	  Solaris where the configure.ac sizeof(wchar_t) check bombed. The
	  libstdc++ could not be found when the sizeof() test program was
	  run. Apparently, Solaris does not search /usr/local/lib (where
	  resides libstdc++) by default.
	- Eric Sunshine upgraded the `pthread' check in checkpthread.m4 so that
	  it works correctly with Solaris 9. Specifically, it also now checks
	  for presence of the semaphore functions (sem_init(), sem_destroy(),
	  etc.) and tries linking with librt.so, which is where the semaphore
	  functions reside on Solaris. These functions are needed by
	  CS/libs/csutil/generic/cspthrd.cpp.
	- Jorrit removed the call to VFS->Sync() in the VFS cache manager.
	  This caused huge overhead when caching lightmaps because for
	  every lightmap file the entire zip would be written.
	- Jorrit added iCacheManager->Flush(). This is a generic way to flush
	  the cache manager data. That way users of the cache don't have to
	  do vfs->Sync() anymore since vfs->Sync() may not be appropriate
	  for the specific cache implementation. Instead they will call
	  iCacheManager->Flush() now.
	- Eric Sunshine worked around warnings reported by Swig 1.3.22 for
	  Perl5.
	- Eric Sunshine worked around a slew of warnings reported by Swig
	  1.3.22 for Python.
	- res added iGraphics2D::GetRGB() methods (one for RGB retrieval, one 
	  for RGBA) to complement the FindRGB() and SetRGB() methods.
	- res augmented cswinIsWinNT() to allow a somewhat more fine-grained 
	  classification of the running Windows version.
	- res augmented csImageMemory with a method to set the keycolor and a
	  method to apply the keycolor to paletted images (ie set all 
	  occurances to the palette index 0).
	- res changed the cursor plugin to postpone the texture registration
	  with the texture manager until really needed (to avoid unnecessary
	  resizing).
	- res changed the Win32 custom cursor support to support 256 color 
	  cursors (needed on older systems like WinNT4.0) and 32bpp cursors
	  (with alpha transparency, on newer systems like Win2000+).
25-Oct-2004
	- Jorrit disabled VBO by default now. It gives too many problems
	  (both on ATI and nVidia). Having this option on by default can
	  give a bad initial impression if it doesn't work. With this option
	  off at least things will work but slower.
	- Eric Sunshine documented the semantic and syntactic changes to
	  csList<>::Iterator in apimod100.txi.
	- Eric Sunshine worked around problem where Doxygen became highly
	  confused early in csutil/array.h, with the result that the majority
	  of methods were not reflected in the generated documentation.
	- Eric Sunshine added extra quoting around usage of several commands in
	  the build system where the paths to the commands might contain
	  spaces.  In particular, these are commands discovered by the
	  configure script via AC_PATH_PROGS(), which is used sparingly but
	  with good reason in a few cases.  Extra quoting where the commands
	  are used is not a particularly elegant solution, but I can not, at
	  present, arrive at anything more generalized.  An obvious example of
	  a path containing whitespace occurs on Windows with "Program Files".
	- Eric Sunshine worked around a bug in the `exec' command in the MSYS
	  shell where it incorrectly interpreted a DOS-style absolute path as
	  relative.  This problem manifested when running Ant for building
	  csjava if the user had the environment variables JAVACMD and/or
	  JAVA_HOME set with DOS-style paths.  Since MSYS's `exec' incorrectly
	  interpreted these paths as relative, it looked for the 'java'
	  executable at a location relative to the current working directory;
	  with the result that the Ant invocation failed.
	- Eric Sunshine improved the Java check in configure.ac so that it
	  respects the environment variable JAVACMD when looking for the `java'
	  command.  Also now searches $JAVA_HOME/bin _before_ searching $PATH
	  for the `java' and `javac' commands.  This should help to ensure that
	  the most desirable Java commands are found rather than the least
	  desirable (which happens to be $WINDIR/system32/java.exe on Windows).
	- Eric Sunshine made the CS_PATH_NORMALIZE() macro in path.m4 more
	  robust when faced with shell meta-characters in the argument string.
	- Eric Sunshine augmented configure.ac so that the JAVACMD and
	  JAVA_HOME environment variables are sanitized with
	  CS_PATH_NORMALIZE() before use.  This is needed to prevent DOS-style
	  pathnames from infecting Jamconfig, since the backslashes in such
	  pathnames tend to get eaten by Jam.
24-Oct-2004
	- Eric Sunshine simplified the 22-Oct-2004 change to DDS loader so that
	  it no longer Clone()'s the image when returning a mipmap.  It is
	  instead sufficient simply to return a reference to the existing image
	  (as done by the original code).  The difference now, however, is that
	  the reference counting logic is obvious and clear rather than obscure
	  and hidden.  Also, the Clone() was unnecessarily expensive.
	- Luca reverted the last change of Eric to the DDS loader, and put
	  again his C++ code which were creating a new image using the Clone()
	  method.  The problem is with the Eric code is that a new image was
	  not created, but the method MipMap must return a new image, so that
	  the method caller could work on it without affecting the original
	  image: in fact subsequent MipMap calls must return the original
	  image, not the modified one.
	- Eric Sunshine augmented configure.ac to check if the linker
	  recognizes --kill-at.  This is needed when linking csjava.dll on
	  Windows in order to make the DLL compatible with JNI.  Without this
	  option, JNI is unable to locate the JNI glue functions exported by
	  the Swig-generated code.  csjava now works properly on Unix and
	  Windows.
23-Oct-2004
	- res fixed the GL iGraphics3D::DrawPixmap() disabling blending, which
	  messed up subsequent text writing.
	- Andrew Robberts fixed some bugs in cal3d sockets.
22-Oct-2004
	- Eric Sunshine fixed a bug in the replacement MakeLocate rule in
	  subdir.jam where it failed to set the LOCATE variable for the target
	  of the rule invocation if the output directory was "." (the current
	  working directory).  This was often the case when the rule was
	  invoked with $(LOCATE.TARGETS) as an argument.  In practice, this
	  bug caused, at least some, Copy invocations to be ignored if the
	  target location was ".".
	- Jorrit worked a bit further on foliage.
	- Eric Sunshine worked around Swig/Perl 1.3.22 bug where it emits
	  illegal expressions, such as `new (sometype)[n]' rather than `new
	  sometype[n]' (at least gcc considers it illegal).
	- Eric Sunshine altered the Java, Python, and Perl Jamfiles so that
	  they deposit generated .jar, .py, .pm, and .dll (.so) files at the
	  root of the build tree rather than somewhere deep inside the build
	  tree. This should make it simpler for developers to test these
	  modules since CLASSPATH, PYTHONPATH, PERL5LIB, and LD_LIBRARY_PATH
	  can now be pointed at the top of the build tree rather than having to
	  point them at specific deeply nested subdirectories within the tree.
	- Jorrit reverted an earlier memory leak fix in the DDS loader
	  because it causes walktest to crash. My guess is that this is not
	  really a memory leak and that the image is cleaned up elsewhere.
	- Eric Sunshine changed the 'outdir' argument of the Swig rule
	  (swig.jam) so that it is used verbatim, rather than being interpreted
	  as relative to $(LOCATE_TARGET). This allows more flexibility in
	  placement of auxilliary generated files.
	- Eric Sunshine fixed bug in Swig rule (swig.jam) where it was invoking
	  MakeLocate unconditionally with $(LOCATE_TARGET) even if `outdir' had
	  been provided.
	- Eric Sunshine augmented Perl and Python Jamfiles so that the *.pm and
	  *.py files are emitted by Swig directly into $(LOCATE.TARGETS),
	  rather than being copied there from $(LOCATE_TARGET) in a secondary
	  step.
	- Eric Sunshine made the following changes to csList<>:
	    - Renamed Prev() and FetchPrev() to Previous() and FetchPrevious(),
	      respectively, to complement existing HasPrevious(). (The old
	      names still exist, however, for backward compatibility.)
	    - Added FetchCurrent() to complement existing FetchNext() and
	      FetchPrevious().
	    - Fixed behavior of HasNext()/Next() and HasPrevious()/Previous()
	      so that they work the same as the other iterators in CS; that is,
	      you can simply use it via:
	        while (i.HasNext()) { foo = i.Next() }
	      Previously, usage required a more complicated:
	        foo = i.Current(); while (i.HasNext()) { foo = i.Next(); }
            - Fixed a number of bugs where constructors were not initializing
	      all member variables.
	- Eric Sunshine made the following additional changes to csList<>:
	    - The iterator methods Next() and Previous() now return references
	      to the items rather than pointers (which was a strange
	      choice). This makes them consistent with all other methods which
	      provide item access, as well as with all other iterators in CS.
	    - Unified and relaxed the 'const' vs. 'non-const' status of
	      returned elements from various methods. Element retrieval methods
	      now allow the elements to be modified by the client. This widens
	      the scope of permissible operations on elements, thus making the
	      class more useful.
	- Luca reverted the revert about the memory leak in the DDS loader, 
	  fixing the memory leak and correcting the csDDSImageFile::MipMap 
	  method: in the last 'return' of the method it was not returning a
	  new image, but it was returning the orignal image: in this way,
	  assigning the return value to a csRef, the original image would have
	  been destroyed when that csRef was destroyed.
21-Oct-2004
	- Eric Sunshine made the following changes to the DDS image loader:
	    - Fixed bug in dds::Loader::ReadHeader() where it could/would
	      attempt to allocate zero bytes, and then unconditionally store a
	      value in the first element of the allocated array, as if the
	      zero-sized allocation was valid.
	    - Fixed bug in dds::Loader::ReadHeader() where it could/would
	      illegally access element -1 of its positions[] member.
	    - Fixed `delete' vs. `delete[]' mixup in dds::Loader::ReadHeader().
	    - Fixed bug in csDDSImageFile::Load() where it was leaking a
	      csDDSImageFile for each mipmap.
	- Eric Sunshine upgraded ivaria/javapre.i to be compatible with Swig
	  1.3.22 which complained (correctly) about unamed operator overloads
	  in several exported classes.
	- Jorrit added a patch from Andrew Dai which adds support for
	  color cursors in the Win32 canvas.
	- Eric Sunshine worked around problem caused by Swig 1.3.22's new
	  'enum' emulation mechanism for Java which is incompatible with its
	  pre-1.3.22 emulation. This caused compilation errors in existing
	  code, such as SimpleRoom.java.
	- Eric Sunshine fixed problem in SimpleRoom.java where it was
	  requesting the null renderer rather than the OpenGL renderer. This
	  explains why it failed to open a window. SimpleRoom.java now works
	  correctly on Unix.
20-Oct-2004
	- Jorrit fixed a critical bug in VFS. In case you tried to
	  call VFS->Sync() while there were still references to open files
	  in ZIP archives then VFS would crash because the archive entry
	  would be deleted and the open files would get a dangling pointer.
	  Fixed this by checking the ref count on the archive entry and
	  only deleting the entry in case there are no open files. If there
	  are open files the entry is only flushed so the effect of
	  Sync() is not lost.
	- Eric Sunshine replaced usage of 'typename' in template arguments with
	  'class' in order to support slightly older compilers. CS fakes up a
	  'typename' keyword, but it is meant to be used only to pacify modern
	  compilers which complain about ambiguous type names within templates;
	  not for declaration of template arguments.
        - Philip Wyett updated OR to eliminate garray.h deprecation warnings.
	- Eric Sunshine augmented the Swig rule (swig.jam) so that it once
	  again utilizes Swig's -outdir option for depositing generated files.
	  This is needed to work around a problem where Swig on Windows was
	  dumping generated .java, .py, and .pm files into the current working
	  directory, rather than into the desired subdirectory of the build
	  tree (ex: ./out/.../csjava/src/com/crystalspace).
	- Eric Sunshine upgraded the Swig check in configure.ac so that it
	  demands at least version 1.3.20 since that is the first version
	  providing the -outdir option.
	- Eric Sunshine fixed problem in csjava/Jamfile which prevented
	  csjava.dll from being built on Windows.  Specifically, the `javamod'
	  Jam variable was being assigned the null string.  Also added gristing
	  for cscript/csjava source files.
	- res augmented annotate.php to mention that the documentation 
	  annotations are not a support forum.
	- Eric Sunshine made the following changes:
	    - Augmented the CS_PATH_NORMALIZE() macro in path.m4 so that it
	      also collapses and strips whitespace.
	    - Added a CS_RUN_PATH_NORMALIZE() macro which runs a
	      client-supplied command and normalizes the output.
	    - Updated configure.ac so that it normalizes the `cflags' and
	      `lflags' reported by these modules: cs-win32libs, Java,
	      FreeType2, SDL, VOS, wxWidgets, AAlib.  (Flags for Perl and
	      Python have been normalized since 15-Feb-2004.
	- Luca fixed another compilation error (in xmlshader) that was 
	  happening on the VisualC++ 6.0 "compiler". The error is always 
	  related to an inner class not being declared friend by the outer
	  class.
19-Oct-2004
	- Jorrit worked further on foliage mesh. Added support for
	  specifying LOD control in a foliage object.
	- Jorrit fixed foliage so that it compiles again.
	- res added alpha blending support to the software canvases.
	- res fixed a crash in the GL canvases when a reporter was not present.
	- res changed the shader manager to only report the loaded shader
	  compiler plugins in '-verbose' mode.
	- Jorrit fixed spr3d so that the alpha which is extracted from
	  mixmode gets a reversed meaning (how it worked with OR).
	- res moved csDirtyAccessArray<> into a new (and sensibly named) file
	  csutil/dirtyaccessarray.h. Usage of csutil/garray.h is now 
	  deprecated.
	- Eric Sunshine fixed problem in include/Jamfile where the
	  MasterHeaderCsUtil rule could emit an orphaned #endif if none of the
	  platform-specific subdirectories of `csutil' contained any
	  publish-worthy headers.
	- Squee added GetMounts() and GetRealMountPaths() to VFS to get more
	  information about current mounts.
	- Squee added commands to vsh to test new VFS methods.
	- Squee fixed GetMounts() and GetRealMountPaths() to use iStringArray
	  rather than csStringArray.
18-Oct-2004
	- res enhanced the OpenGL canvases so blending is always functioning
	  (lack of an alpha channel in the frame buffer isn't really a reason
	  to disable alpha blending) and made the text output properly support
	  transparency in both foreground and background color.
	- res added some more transparent text to the g2d alpha test.
17-Oct-2004
	- Eric Sunshine eliminated a few more warnings in the public CS headers
	  reported by Doxygen.
	- Eric Sunshine augmented the Doxygen configuration files devapi.dox
	  and pubapi.dox so that they filter out the third-party headers which
	  cs-win32libs installs into CS/include/csutil/win32.  Documentation
	  for these extraneous headers does not belong in the CS API reference;
	  and they even were conflicting with the CS headers.  (For instance,
	  cal3d.h contains a \mainpage which conflicts with CS's own
	  \mainpage.)
16-Oct-2004
	- Jorrit resumed work on the foliage mesh. Still unfinished.
	- res added some code to initialize some structs used by the shader
	  conditional code, hopefully fixing some valgrind complaints.
	- res fixed leaks in csRenderMeshHolderMultiple, the cube map texture
	  loader and csBSPTree.
	- Jorrit worked further on foliage. Now the loader.
15-Oct-2004
	- Jorrit temporarily fixed spr3d with <alpha> mixmode for NR.
	  The fix works by using csColor4 for the color buffer and extracting
	  the alpha from the mixmode so that we can put the alpha component
	  as the 4th color component. This is only temporary. We need
	  to avoid using alpha in mixmode and add a new SetAlpha() (next
	  to SetMixMode()) for all mesh objects. Also this fix needs
	  to be propagated to other mesh objects too.
	- Jorrit added a few methods to csColor4.
	- Eric Sunshine eliminated several compilation warnings.
	- Jorrit fixed spr3d so that SetBaseColor() is more efficient
	  and should now also work at runtime.
	- Eric Sunshine eliminated about 350 errors and warnings reported by
	  modern versions of Doxygen for the public API reference.
	- res fixed a recent leak fix in csImage to not subsequently crash
	  when a paletted image is converted to another paletted format
	  (notably, stripping or adding alpha).
	- res fixed some weird line breaks in wxgl.csplugin.
	- Luca fixed a little compilation error (in xmlshader) that was 
	  happening on the VisualC++ 6.0 "compiler".
	- Squee fixed a problem in OpenGL canvases where alpha colors didn't
	  always blend as expected.	  
14-Oct-2004
	- Eric Sunshine added an AAlib (ASCII Art library) check to
	  configure.ac. If the package is present, then the CS `asciiart'
	  canvas is built.
	- Eric Sunshine added a `fontservers' compile group to the build
	  system.
	- Eric Sunshine updated the OpenDivX check in configure.ac to utilize
	  the result of the `-lm' check since libm.a is needed by OpenDivX on
	  some platforms. Also changed the check to look for <divx/decore.h>
	  rather than <decore.h> since ${prefix}/divx is the default
	  installation location.
	- Eric Sunshine upgraded unix.jam so that it respects the result of the
	  configure.ac `-fPIC' check rather than being hard-coded to assume
	  that all compilers understand this option.
	- Jorrit optimized the LOD calculation routines a lot by using
	  csList linked list to maintain a cost-sorted array of
	  vertices.
	- Jorrit added csList<T>::MoveAfter() and MoveBefore() to have
	  a more efficient way to move items around in a list.
	- Jorrit added csList<T>::Iterator::FetchNext() and FetchPrev()
	  to more efficiently get the next and previous item from
	  a list iterator.
	- Jorrit added the triangle connectivity information again to
	  the triangle LOD routines.
	- Jorrit implemented a LOD algorithm in bruteblock using the new
	  LOD routines. This is used for the collision detection mesh
	  (bruteblock still uses its original LOD routines for rendering).
	  To enable this LOD (it is disabled by default) you have to
	  use the lod setting 'cd lod cost' and set it to some useful
	  value. 0.02 is probably good for most cases.
	- Jorrit again changed the triangle connectivity. This speeds
	- Jorrit changed data/terrainf/world to use the new CD mesh LOD
	  reduction.
	- Jorrit fixed genmesh so that it honors the SetColor() call
	  again.
	- Jorrit implemented LOD caching for bruteblock (for the new
	  CD mesh LOD).
	- Jorrit fixed csVfsCacheManager->CacheData() to call vfs->Sync().
	  That ensures that on -recalc the vfs file is correctly updated
	  if the cache dir happens to be in a zip file.
	- Squee fixed the glx canvas locking up under certain alpha conditions.
13-Oct-2004
	- Jorrit removed the triangle connectivity information in
	  the csTriangleVerticesCost class since they were not used there.
	  The basic csTriangleVertices still has that information.
	- Eric Sunshine removed invocation of the non-portable
	  CS_ALLOC_STACK_ARRAY() from isdir() in cssysdef.h since this is a
	  public header, and we want it to be usable by projects with strict
	  requirements (such as those which use gcc's -ansi and -pedantic
	  options). Variable-size stack-based arrays are not allowed by the
	  1998 ISO C++ standard.
	- Eric Sunshine fixed a bunch of problems in the public CS headers
	  reported by gcc's -ansi and -pedantic options; mostly involving
	  orphaned semi-colons and commas, and illegal use of 64-bit
	  constants.
	- Eric Sunshine removed duplicate definitions of CONST_INT64() and
	  CONST_UINT64() from cstypes.h for MSVC.
	- Eric Sunshine augmented joystick.cfg so that it also supports Linux
	  2.6.x's /dev/input/js* devices in addition to the older 2.4.x
	  /dev/js* devices.
	- Eric Sunshine performed minor cleanup of csjoylin.cpp. Fixed problem
	  where it was unnecessarily allocating space for joysticks which were
	  not present. No longer reports about missing joystick devices (unless
	  -verbose is specified); now only reports if a device malfunctioned
	  for some reason.
12-Oct-2004
	- Jorrit changed the way that you can define different algorithms
	  for doing LOD (csTriangleMeshLOD) by making a csTriangleLODAlgo
	  classes from which you can inherit to make your own LOD
	  algorithms. That seperates the algorithm from the vertex data.
	- Jorrit changed xmlshader so that it no longer complains about
	  fragment and vertex programs failing to load unless -verbose
	  is given.
	- Jorrit greatly optimized the routine to setup the vertex
	  table for LOD calculation. This routine was previously doing
	  a loop #vertex * #triangle times which is VERY bad. Now it
	  has been reduced to #vertex + #triangle.
	- res changed the Win32 GL canvas to only employ the WGL pixel format
	  check if really needed (e.g. multisampling was requested), otherwise
	  the GDI method is used.
	- Squee added better alpha color support to iGraphics2D and all
	  canvases. This means FindRGB() now optionally accepts an alpha
	  value.
	- Squee improved the Win32 OpenGL canvas SetFullscreen() and
	  Resize() functions to more properly toggle/resize when called
	  by an app after the canvas is open
	- Squee fixed fonts with backgrounds not displaying correctly
	  after above alpha changes.
	- Squee updated g2dtest to test alpha transparency (currently does not
	  always work).
11-Oct-2004
	- Jorrit generalized the csTriangleMeshLOD class and related
	  so that you can now generate LOD using different cost
	  functions.
	- Jorrit added a new version of csTriangleMeshLOD::CalculateLOD()
	  which generates a simplified mesh.
10-Oct-2004
	- Jorrit committed some unfinished LOD code for bruteblock.
	  Although it gives good results it also causes irregularities
	  in the CD mesh so I will not do it like that. We need a real
	  triangle reduction system.
	- Rhad fixed a race condition in the software renderer that
	  could result in crashes in vorbis.dll.
	- Rhad changed the default sound handle Play() member function
	  so that it always returns an iSoundSource - even if the sound
	  isn't looping.
	- Rhad made the default sound handle Play member function ignore
	  the looping parameter when working with a streaming audio
	  source since it's the handle that loops and not the attached
	  source.
9-Oct-2004
	- Luca fixed a little compilation error (in protomesh) that was 
	  happening on the VisualC++ 6.0 "compiler".
8-Oct-2004
	- res added a missing CS_CSTOOL_EXPORT to csProcAnimated.
	- res added a helper class to quickly write images to disk for
	  debugging purposes.
	- res added custom cursor support to the Win32 canvases.
	- res fixed custom cursors for the X canvases.
	- Jorrit added support to the simpleformer for adding
	  additional data maps. Currently unused and untested.
	- Jorrit added bruteblock, simpleformer, and simpleformerldr to
	  the walktest_static target.
	- Jorrit fixed a bug in debugimagewriter.h. It was using
	  iSCF::SCF->object_reg but that field is only present in debug
	  mode.
	- Jorrit optimized the simpleformer weight function a bit.
	- Jorrit fixed a few string memory leaks in walktest.
	- Jorrit fixed protomesh to compile with OR.
7-Oct-2004
	- Jorrit added a new 'proto' mesh. This is a basic mesh that can
	  be used to start creating a new mesh. It supports the following
	  features:
	    - Primitive geometry (8 vertices, 12 triangles, just enough for
	      a box).
	    - Setting of base color and per vertex color.
	    - Setting of vertices, texels, and normals.
	    - Material per mesh object.
	    - Sharing geometry in the factory.
	    - Collision detection.
	    - Direct creation of render buffers.
	    - Delayed creation of render buffers.
	  The mesh only works in NR but should be compilable with OR
	  because it is used in flarge (it should display nothing with
	  OR).
	- Jorrit added a protomesh to flarge.
	- Jorrit added a new foliage mesh. This mesh does not do anything
	  at this moment. It is just an empty stub. Real implementation will
	  follow soon.
6-Oct-2004
	- Jorrit did various lighting related optimizations to genmesh:
	    - To genmesh pseudo dynamic lighting handling. If the light is
	      near black a loop will be avoided.
	    - To genmesh lighting handling. If dynamic sector ambient is near
	      black a loop will be avoided.
	    - To dynamic lighting. If light at that distance is near black
	      a loop will be avoided.
	- Jorrit fixed a bug in genmesh pseudo-dynamic lighting handling.
	  The lighting was too dark because it forgot to multiply the
	  color with a factor.
	- Jorrit fixed a bug in the simpleformer so that it no longer
	  generates small irregularities.
	- Jorrit optimized the simpleformer a bit.
	- Jorrit fixed a bug in bruteblock which used AddBoundingVertexSmart()
	  inappropriatelly. So the box of the block could be wrong.
	- Jorrit implemented static lighting in bruteblock (enable this
	  by setting <staticlighting/> in the terrain). Shadow casting is
	  not yet supported. Changed data/terrainf/world to use bruteblock
	  now. It works nice now (you have to relight the lighting for
	  terrainf to see it) but there seems to be a problem with normals
	  so the lighting effect is not very visible right now.
	- Jorrit changed the lightmap size in bruteblock to 257x257 by
	  default. In addition added a 'lightmap resolution' LOD value
	  with which you can set this size.
	- Jorrit changed the static lighting calculator so that it picks
	  the highest detail object for shadow casting instead of the
	  lowest detail object. This will be slower but looks a LOT better.
	- Jorrit changed bruteblock so it reports lighting progress on stdout
	  if -verbose is given.
	- Jorrit fixed another visual glitch in bruteblock where it would
	  sometimes miss a material that is used by a splatter because
	  the box dimensions were calculated to exact.
	- res fixed leaks in the custom cursor plugin.
	- res fixed the passing of a bool through '...' in the NR GL renderer.
	- res fixed an array access with an negative index in bruteblock.
	- Eric Sunshine fixed several compilation warnings.
	- res fixed a double-Open() of the renderer in g2dtest.
	- Eric Sunshine changed cspace.i so that it no longer exports the new
	  va_list function csPrintfErrV() (the same change had been made for
	  csPrintfV() on 24-July-2004).  This change was necessary because Swig
	  emits code which is invalid on platforms on which va_list is
	  implemented as a simple array. ISO C++ forbids array assignment, yet
	  Swig-generated code attempts to assign a va_list to a va_list.  Note
	  that the corresponding var-arg (...) function, csPrintfErr() is still
	  exported. (bug #1039809)
	- res augmented xmlshader to also support conditionals in external
	  fp/vp program files specified via a "file" attribute.
	- res augmented the shader conditionals with an <?include?> statement.
	  This will "mount" external documents into a tree.
	- Eric Sunshine applied patch from Mike Gist <xordan@gmail.com> which
	  works around crasher in csImage::Rescale() on AMD64. Very possibly,
	  the problem was result of unintended sign-extension when assigning
	  signed int csQint() result to unsigned long.
	- Rhad fixed coordinate system conversions for the OpenAL software 
	  renderer.  Resolves bug #981288.  Also minor changes in anticipation
	  of some future fixes.
5-Oct-2004
	- Rhad fixed a long standing bug in the Ogg loader.  Per specs,
	  SEEK_END must seek 1 byte past the end of data buffer, not to the
	  last byte.
	- Jorrit fixed a bug with hierarchical objects (and static lod
	  too) that are created using meshref. The children would not get
	  added to the engine with the result that cached lighting wouldn't
	  be saved/loaded. For this purpose I added
	  iEngine->AddMeshAndChildren().
	- res fixed OpenGL 2D Blit() to work when no render target is set.
	- res added a Blit() test to g2dtest.
	- res added a custom cursor test to g2dtest.
	- res changed the custom cursor plugin so a keycolor isn't mandatory
	  any more for a cursor.
	- res changed iCursor->ParseConfigFile () to accept an iConfigFile*
	  instead of a VFS file name.
	- res made iCursor->GetKeyColor() return a const pointer.
4-Oct-2004
	- res fixed xmlshader to correctly deal with shader conditionals 
	  in text.
	- res made some optimizations to the XML shader conditionals.
	- res fixed leaks in chunklod, the engine, the Win32 callstack code,
	  spr3d, bugplug, csparser, csconin.
3-Oct-2004
	- Jorrit added iTextureHandle->Blit() for new renderer. Only the
	  NR OpenGL renderer implements this. This is a faster way to
	  update (part of) a texture.
	- Jorrit modified csProcAnimated to use the new Blit(). This
	  should speed up JNG images a bit.
	- Jorrit changed plasma and fire to use the new Blit().
2-Oct-2004
	- Rhad improved windows waveout sound driver performance through brute
	  force threading.
	- Rhad added an event to trigger buffer filling instead of timeslice
	  based filling.
	- Rhad: Background thread is now set to time critical priority.
	- Rhad applied more fixes to software sound renderer.
	    - Fixed crash when source was deleted while background thread was
	      reading sound data related to the source.
	    - Fixed sound plays at full volume when beyond maxdistance.
	    - Added assertion on handle destruction if sources are still
	    associated with the handle.
1-Oct-2004
	- Rhad added Get,set MinimumDistance and MaximumDistance interface
	  functions to the iSoundSource interface
	    ****** INTERFACE CHANGE AND VERSION BUMP ******
	    iSoundSource interface version changed to 0,0,2
	    - Software, OpenAL and DS3D sound renderers updated to make use
	      of the new interface members.
	    - Fixed software sound renderer reverse channels for 3d
	      positional sounds.
	    - Added simplistic direction-based volume adjustment to software
	      sound renderer.
	    - RollOffFactor is now properly used instead of DistanceFactor
	      in attenuation (sound attenuation is normally not linear).
	      See documentation on SetMinimumDistance in iSoundSource
	      interface for details (or the OpenAL sound guide, or the
	      DirectSound help).
	- PK fixed a msvc6 bug in bezierdlr.
	- res applied patch 1038181 (operators < & > in csString) with some
	  modifications.
	- res fixed a bug in bindoc where requesting a float value when it was
	  stored as an int could return bogus results.
	- res moved PreacheTexture() to iTextureHandle.
	- res removed the NR GL texture cache and merged the relevant code
	  (texture uploading, mainly) with the texture manager.
	- res enabled bindoc compilation on 64bit systems. Seems to work on
	  fine on SF's AMD64 compile farm machine.
30-Sep-2004
	- Jorrit added a new 'copy' flag to CreateRenderBuffer() and
	  CreateIndexRenderBuffer() which is default to true. Meshes can
	  set that to false if they keep the data for the buffer in their
	  own memory. Currently not yet implemented. API change only.
	- Jorrit changed the NR OpenGL texture cache so that it never unloads
	  textures but leaves this for the OpenGL driver. i.e. it is no
	  longer a cache.
	- Jorrit changed the NR OpenGL texture cache so that it removes the
	  image data after uploading the texture to OpenGL. This can save
	  a LOT of memory in big levels (75 megabytes less memory for
	  PlaneShift levels).
	- Jorrit added an iGraphics3D->PrecacheTexture() to precache the
	  texture for the renderer. For the NR OpenGL renderer this will
	  cause the upload of the texture to the renderer and also free
	  of the memory. The other renderers do nothing with this flag.
	- Jorrit changed engine->PrecacheDraw() to also call PrecacheTexture()
	  for all textures.
	- Jorrit simplified the code of the NR OpenGL texture cache a bit now
	  that it is no longer a cache.
	- Jorrit implemented the 'no copy' mode for software vertex buffers.
	  Genmesh now uses that mode.
	- Eric Sunshine fixed problem in wxgl/Jamfile where it neglected to
	  mention `GL' in the ExternalLibs invocation, in addition to
	  `WX'. Typically, this wouldn't matter since the output of wx-config
	  --cflags, --libs, and --gl-libs provides sufficient information to
	  make `GL' redundant, but on MacOS/X, we need the CS_OPENGL_PATH
	  #define which comes from GL.CFLAGS in order to allow the preprocessor
	  to locate the OpenGL headers.
	- Jorrit implemented interleaved buffers for things. This means
	  that vertices, texels, and lightmap coordinates are now in one
	  interleaved buffer. This should improve memory usage considerably
	  since a lot less VBO buffers will be created. This feature can
	  be quickly reverted by setting INTERLEAVED to 0 in
	  plugins/video/render3d/opengl/gl_polyrender.cpp.
	- Jorrit did a small cleanup to particles mesh.
	- Jorrit fixed the API of iGraphics3D->CreateInterleavedRenderBuffers.
	  It would accept a csRefArray and then modify it. This is not legal
	  in a plugin context. Changed it by accepting a normal array which
	  should be allocated by the caller. This is also more efficient as
	  there will be less growing array operations needed.
	- Vincent Knecht worked around an #error single quote error in bindoc.h
	- Rhad made further adjustments to the windows waveout driver:
	    - waveOutUnprepareHeader is no longer called on blocks that have
	      not been prepared.  Fixes "no sound on some C-Media audio
	      devices".
	    - empty blocks are now unprepared on shutdown.
	    - Default buffer length increased from 0.05s to 0.1s
29-Sep-2004
	- Rhad changed csMutexes in the windows software driver to
	  critical sections.  Per MMsystem documentation, critical sections
	  are the only safe syncronization calls to make in the waveout
	  callback.  Fixes "no sound and exit crash when sound buffers run
	  dry" bug with previous version.
	- Rhad added output device enumeration to the windows software driver
	  and Sound.WaveOut.DeviceIndexOverride configuration directive to
	  override the default OS choice of output device.
	- Rhad added some mutex protection around the software renderer calls
	  to start the software driver to avoid potential race conditions 
	  with the mixing function.
	- Jorrit fixed callstack.cpp so that it compiles on Mingw. Please
	  don't use single quotes in #error unless you also close the quote.
	- Jorrit added a new VBOThresshold config value to r3dopengl.cfg.
	  With this setting you can control when VBO buffers are used and
	  when normal buffers are used. By default this is set to 0 which
	  means that VBO is used all the time (if present). If you increase
	  this value then VBO buffers will only be used if the buffer
	  size (in bytes) exceeds that value. This may solve a problem
	  that on some systems using VBO causes big memory overhead.
	- Eric Sunshine made the following changes:
	    - Fixed bug in csjoylin, the Linux joystick plugin, where it was
	      incorrectly iterating over _all_ configuration keys from
	      joystick.cfg, rather than only those specific to that plugin.
	    - Changed the key composition in joystick.cfg so that it is based
	      only upon the platform name (i.e. "Device.Joystick.Win32") rather
	      than both platform and compiler names
	      (i.e. "Device.Joystick.Win32.GCC"). Using the compiler to
	      distinguish key names was inappropriate. If more fine-grained
	      control is needed over key names, then some other, better
	      mechanism should be employed.
	    - Rewrote confusing comments and key names in joystick.cfg which
	      incorrectly led the reader to believe that joystick numbers were
	      0-based, despite the fact that iJoystickDriver and the event
	      system consider them 1-based.
	    - Fixed Doxygen comments in csinput.h which stated incorrectly that
	      joystick numbers were 0-based. (They are 1-based.)
	    - Fixed bugs in csJoystickDriver where it confusedly treated the
	      joystick number as 0-based some of the time, and 1-based other
	      times. Now, all code treats it as 1-based.
	    - Fixed the informational messages reported by csjoylin so that
	      they employ 1-based joystick numbers, rather than 0-based.
	- Jorrit fixed the NR OpenGL polygon renderer so that it only
	  creates buffers for normals if normals are actually asked for.
	  Need to do the same for binormals, tangents, and others but it
	  already helps a bit for memory usage.
	- Jorrit also made binormal and tangent information use accessors.
        - Matze fixed AWS lexer to accept comments. The // and # tokens now
          start a comment till the end of the line
	- Eric Sunshine updated some outdated URL's in the CS manual. Also
	  added some URL's to the release notes.
        - Matze fixed a bunch of 64bit warnings/problems
28-Sep-2004
	- Rhad mutexed some portions of the software renderer to reduce
	  thread contention issues.  This is not a complete fix but should
	  reduce problems to distortion during the stopping, starting
	  and switching of sound sources and handles.
	- Rhad changed the Windows waveout sound driver to properly handle
	  threading issues, buffer sounds better, manage memory better, and
	  not blow up randomly.
	    - Fixes "waveOutUnprepareHeader: 0000000b An invalid parameter was
	      passed"
	    - Should reduce/fix sound stuttering during moderate system load.
	    - The software renderer needs certain changes to be made to thread 
	      safety to go along with this.
	- res fixed a bug in bindoc where a struct member was accessed directly
	  instead of through a method, causing bogus values to be used 
	  sometimes (and subsequent crashes).
	- res fixed a leak in cswinGetErrorMessage().
	- res added some error reporting to the Win32 callstack code and other 
	  various improvements.
	- res fixed leaks in chunklod.
	- res changed the Win32 call stack generator to not start with the 
	  stack in the kernel. This also seems to fix call stack generation
	  on WinXP SP2.
	- res fixed sprcal3d to work with memtracker enabled.
27-Sep-2004
	- dfryer changed "unsigned int" to size_t in
	  csXMLShaderTech::ActivatePass().  Prototype used size_t; size_t is
	  long unsigned int under Mac OS X, which is incompatible with unsigned
	  int.
	- Eric Sunshine fixed problem in wxWidgets check in configure.ac where
	  a couple cache variables were not being assigned values in all code
	  paths.
	- Jorrit added the ability to set zmode flags (ZUSE, ZFILL, ZTEST,
	  or ZNONE) and render priority (object, alpha, wall, ...) to
	  mesh factories too. These will be used as defaults when creating
	  objects from those factories.
	- PK added SaveMap to bugplug. Press F10 to save the map.
	- PK added GetUpdateInterval() to imesh/lghtng.h.
	- PK added GetUVAnimation (int idx, int &style, bool &loop) to 
	  imesh/sprite2d.h
	- PK started with SaveSequence() and SaveTriggers() in csSaver.cpp
	- PK implemented iSaverPlugin for hazemesh.
	- PK implemented iSaverPlugin for lightningmesh.
	- PK added the saving of uvanimations to spr2d
	- Jorrit again fixed a stability problem to thing lightmap cache.
	  Turned out that csQround() of a value VERY close to x.5 can either
	  round down or up depending on system/debug mode. So I made the
	  rounding more robust by forcing a certain direction in case
	  it is close to x.5. This might invalidate lightmap caches for
	  certain objects if you're unlucky. It is still not perfect.
	  There are still cases where there are differences between debug
	  and optimize mode calculations. I'm uncertain on how to solve them
	  though.
25-Sep-2004
	- res copied Matze's change of GLAPI in glextmanager.h (empty instead 
	  of 'extern') over to the GL extension manager templates.
	- res fixed a leak in VFS.
	- res fixed a signed vs unsigned warning in dynavis.
	- res fixed bug 1004889 (GL font cache: glTexSubImage2D() called with 
	  0 length).
24-Sep-2004
	- Jorrit moved csProcAnimated to cstool so that it is easier to
	  use animated textures from code.
	- Jorrit speed up MNG animated images considerably. The problem
	  is that MNG animation used the elapsed time to update the
	  right animation. But if an animated texture is not visible for
	  a long time and then becomes visible again, the elapsed time
	  will be very large and this causes the MNG image calculator to
	  do a lot of work. I fixed this by adding a cap to 500 milliseconds
	  for elapsed time. This is not accurate but it speeds them up
	  a lot.
        - Philip Wyett did some horrid #ifdef'ing in the sprcal3d plugin to
          keep OR build compiling.
        - Philip Wyett eliminated compiler warning in xmlshader.cpp.
23-Sep-2004
	- Eric Sunshine augmented configure.ac so that it is no longer a fatal
	  error for zlib to be missing since that made it unnecessarily
	  difficult to perform maintenance tasks (project file synthesis,
	  documentation regeneration, Swig generation, etc.) on platforms
	  lacking this resource. It also unnecessarily penalized clients
	  interested in utilizing only some of the low-level portions of the CS
	  SDK, such as the utility and geometry libraries, etc.
	- Eric Sunshine fixed bug in cspython/Jamfile where pure-Python
	  `pythmod' module was not being linked against $(LINKLIBS). This could
	  result in failure on some platforms, such as Windows. Reported by
	  Lukas Erlinghagen. (bug #1032928)
	- Eric Sunshine updated URL for libmng in extlibs.txi.
	- Jorrit propagated a fix to frustvis from res2k to dynavis too.
	- Eric Sunshine fixed bug in csjava/Jamfile where Java extension was
	  not being linked against $(LINKLIBS).
	- Eric Sunshine removed a useless csPoly2D::GetVertexCount() overload.
	- Eric Sunshine relocated the remaining const/non-const-disambiguating
	  %ignores from javapre.i to cspace.i. They are sufficiently general
	  that they can be applied to all supported scripting interfaces.
	- Eric Sunshine fixed crasher in csjava's CS.requestPlugin() where it
	  was incorrectly invoking the do-nothing constructor of
	  csPluginRequestArray which did not even create the underlying C++
	  object. Therefore, later method invocations on that object crashed.
	- Eric Sunshine fixed nasty bug in csjava's <iface/iface_ver> typemap
	  (javapost.i) where it incorrectly used the full JNI class name when
	  it should have extracted just the SCF interface name. This resulted
	  in several serious problems. First, it invoked iBase::DynamicCast()
	  with the full JNI name, despite the fact that DynamicCast() expects
	  only the SCF interface name; thus all such invocations
	  failed. Second, other code which tried to reconstruct the JNI name
	  from the interface name would produce incorrect names such as
	  com/crystalspace/com/crystalspace/iVFS. These incorrect names led to
	  crashes later when the "out" typemap tried invoking methods upon the
	  non-existent class mentioned by the incorrect JNI name.  In practice,
	  this caused all query macros (CS_QUERY_REGISTRY, SCF_QUERY_INTERFACE,
	  etc.) to crash and burn.
	- Eric Sunshine fixed bug in csjava where it was invoking the plugin
	  manager's RequestPlugin() method once per desired plugin, rather than
	  one only with a single list of all desired plugins. This prevented
	  the plugin manager from performing proper dependency resolution
	  between plugins at load time. Toward this end, renamed
	  CS.requestPlugin() to CS.requestPlugins(). It now accepts a
	  java.util.Vector filled with csPluginRequest objects, rather than
	  accepting only a single plugin name and interface. (bug #858626)
	- PK implemented the iSaverPlugin for bezier mesh and fixed some bug in
	  the other Savers.
	- res fixed a crash with the terrain map after the recent shader
	  conditions stuff.
	- res fixed some memory leaks in xmlshader.
	- res fixed a compile error in bintree.h.
	- res fixed bug 1033694 (missing objreg.h inclusion in docwrap.h).
        - Andrew Craig fixed a bug in sprcal3d's SetMaterial function where
          the render meshes were not updated for the new material.
22-Sep-2004
	- Jorrit changed the loader so that it only prints certain
	  notifications if -verbose is given on the commandline. These
	  notifications have to do with materials being loaded differently
	  in case they are not found on the requested location.
	- PK added #include <ivaria/ode.h> to
	  CS/apps/tutorial/phystut/phystut.h.
	- PK moved the following files from cstool to plugin/proctex/standard:
	    prdots.cpp   / prdots.h
	    prfire.cpp   / prfire.h
	    prplasma.cpp / prplasma.h
	    prsky.cpp    / prsky.h
	    prwater.cpp  / prwater.h
	- res added functions to print formatted strings to stderr.
	- res eliminated a static var from win32kbd.cpp.
	- res silenced some MSVC warnings in regcomp.c and snprintf.cpp.
	- res replaced some ints with size_ts in csPoly3D.
	- res removed the csextern.h #inclusion from csutil/hashr.h. Not needed
	  there.
	- res added conditionals to XML shaders. Statements like 
	  '<?if vars."some shader var"?>' can be placed in the shader to change
	  its behaviour based on the presence and value of shader vars at the
	  time the mesh is rendered.
	- res changed the generic step to have material SVs override shader 
	  SVs.
	- res fixed wxtest to build as a console app on Win32.
	- res changed the or_lighting shader to also support flat materials.
	- res improved handling of malformed fixed function programs a bit.
	- res added a default white texture to glrender3d.
21-Sep-2004
	- Eric Sunshine fixed a bug in the "subsystem"-related change to
	  msvcgen/project6x.tlib on 19-Sep-2004 which caused the linker's /out:
	  option to be omitted from the generated project files. This caused
	  built .exe and .dll resources to be deposited in the wrong location.
	- Jorrit changed lighter and cslight to look for a "world" file
	  with ChDirAuto() so they can load worlds from VFS more easily.
	- Eric Sunshine fixed logic flaw in the re-written (18-Sep-2004)
	  csGetConfigPath() for MacOS/X in which it would sometimes return the
	  incorrect path.
	- Eric Sunshine made the following changes:
	    - Augmented the 'masterheaders' Jam target so that it now omits
	      several headers from the synthesized master headers because those
	      headers reference external resources which may not be known or
	      available to all clients of the master headers. Prior to this
	      change, clients of the master headers had to utilize the `cflags'
	      of each of these external resources if <crystalspace.h> was ever
	      included. The list of headers now omitted from the master headers
	      follows.
	        csutil/archive.h  -- needs zlib (indirectly via csutil/zip.h)
		csutil/zip.h	  -- needs zlib
		inetwork/vosapi.h -- needs VOS
		ivaria/ode.h	  -- needs ODE
		ivideo/wxwin.h	  -- needs wxWidgets
	      Clients requiring these headers will have to #include them
	      manually; and will need to arrange with the build system that the
	      appropriate `cflags' are used (typically by invoking the
	      ExternalLibs Jam rule).
	    - Agumented configure.ac so that it no longer emits CS_HAS_VOS,
	      CS_HAS_ODE, and CS_HAS_WXWIDGETS to csconfig.h. These control
	      macros have been obsoleted by the above change.
	- res fixed jobber.pl to use 'crystalspace' as the package name in the
	  fake Jamconfig.
	- PK fixed a compile error of vc8 beta 1 in regcomp.c.
20-Sep-2004
        - Andrew Craig fixed memory leak in csparser.
	- PK did the following:
	    - Implemented loader, saver and type for each procedural textures.
	    - Added a iTextureFactory* parameter to the following constructors:
	        csBaseTextureFactory()
	        csProcTexture()
	        csProcDots()
	        csProcFire()
	        csProcPlasma()
	        csProcSkyTexture()
	        csProcWater()
	    - Added csHaloType GetType() to iBaseHalo.
	    - Added iBaseHalo* GetHalo() to iLight.
	    - Added iTextureFactory* GetFactory() to iProcTexture.
	    - Added iTextureType* GetTextureType() to the iTextureFactory.
	    - Implemented iTextureType* csBaseTextureFactory::GetTextureType().
	    - Improved the iSaver.
	    - Corrected some wrong savings in gmeshldr and spr3dldr.
19-Sep-2004
	- Eric Sunshine fixed the Jam 'install' target so that it also installs
	  Marten's new parallax data files.
	- Eric Sunshine propagated Marten's new parallaxtest VFS mounting in
	  vfs.cfg to plugins/filesys/vfs/vfs.cfg.template.
	- Eric Sunshine adjusted the msvcgen templates so that GUI applications
	  are given subtype "windows" in `release' mode, and subtype "console"
	  in `debug' mode. This allows stdout/stderr to be captured easily from
	  debug applications, but avoids the ugly console window popping up
	  automatically for release applications (when launched from Explorer).
	- Eric Sunshine fixed problem in msvcgen/custom.cslib where
	  ExtensiveMemDebug and ExtensiveMemDebug_NR build configurations did
	  not have the appropriate "debug" tag, thus causing important
	  debugging configuration to be omitted from the synthesized project
	  files.
	- Jorrit changed all occurances of csQround() in CS that require an
	  exact correct answer to use the slow version of csQround() (manually
	  in code) which simply does: (int ((x) + ((x < 0) ? -0.5 : +0.5)))
	  The reason for this is that experimentation has showed that the
	  fast versions of csQround() actually give different results on
	  different systems. Places where these different results can have
	  bad effects have been fixed. This includes:
	    - float2short/float2long endian routines.
	    - places where cached data is compared for validity. A different
	      result of csQround() can cause (for example) lightmaps not to
	      load on some system.
	  The faster csQround() versions are still considerably faster then
	  the simple function above so I opted against removal for now.
	- Jorrit also changed the csQround() fallback macro to be an inline
	  function to avoid double evalulation of the argument.
	- Eric Sunshine added include/csutil/win32/sanity.inc which #undefines
	  several Win32 API macros which pollute the global preprocessor
	  namespace, and which interfere with CS's own method and function
	  names. This file is now included by the various csutil/win32 headers
	  after all Win32 API have been included.
	- Marten Svanfeldt fixed some compilation errors Eric's last fix
	  introduced.  If you use Win32 API functions which is listed in
	  sanity.inc, make sure that the windows headers are included in your
	  sourcefile after sanity.inc, otherwise it will not work.
	- Eric Sunshine made the following changes to the wxWidgets check in
	  configure.ac:
	    - Added an "SDK usable" check.
	    - Now checks if wxWidgets has been built with OpenGL support. This
	      is needed by the CS `wxgl' canvas.
	    - Worked around bug in wx-config on Windows where the --gl-libs
	      option emits a reference to a non-existent library
	      (wxmsw_glxxx.lib). To handle this broken case, configure first
	      tries the result of --libs and --gl-libs together; if that fails,
	      then it tries only --libs augmented with the results of CS's own
	      OpenGL checks.
	    - Now emits CS_HAS_WXWIDGETS to csconfig.h if wxWidgets is present.
	- Eric Sunshine fixed ivaria/wxwin.h so that it now #includes <wx/wx.h>
	  in order to get the declaration of wxWindow rather than trying to
	  forward declare wxWindow manually via `class wxWindow'. This is
	  necessary because wxWindow is typically an alias, created with
	  #define, to some platform-specific implementation class, so our
	  forward declaration was incorrect.
	- res fixed the VC7 group projects to also specify intermediate & 
	  output directories and an output file (so cleaning them works 
	  without warnings).
	- res enabled VC project generation for WX-dependent plugins and also
	  added two new workspaces which include the wxgl plugins (they are 
	  not included in the default workspaces as not everyone may want to
	  spend the effort to build wxWidgets or need the wxgl canvas).
	- res updated the "External Libraries" docs to point to the latest
	  cs-win32libs package.
	- Eric Sunshine folded out redundant copy/paste code which was added to
	  msvcgen/workspaces.jam. This will reduce maintenance costs and avoid
	  possible errors attendant with such duplication.
	- Eric Sunshine renamed the recently added `wx-typical' and
	  `wx-newrenderer' MSVC workspaces to `wxtypical' and `wxnewrenderer',
	  respectively, since MSVC6 can not grok hyphens in project or
	  workspace names.
	- Eric Sunshine added missing CS_HAS_WXWIDGETS define to WX.CFLAGS in
	  msvcgen/config.jam.
	- Eric Sunshine applied to the MSVC6 group project templates Frank's
	  fix which allows the "clean" operation to work without warning. Also
	  simplified Frank's change to the MSVC7 templates. Since the content
	  of the `global_common' macro is now shared by all project types, it
	  has been folded directly into the project template proper (in
	  project7.tlib).
18-Sep-2004
	- Eric Sunshine changed the executable subsystem type in the MSVC
	  project files for GUI applications from "windows" to "console". This
	  should allow stdout and stderr to go to the terminal window from
	  which the user started the program (allowing the output to be
	  captures, if necessary), rather than opening a new console window and
	  dumping the output there. This matches the subsystem setting for GUI
	  executables in the old msvcgen templates.
	- Eric Sunshine repaired some outdated references to
	  /usr/local/crystal, the old GNU-make-based installation location, in
	  the CS manual. Also eliminated TeX 'hbox' warnings.
	- Eric Sunshine augmented csGetPluginPaths() in generic/pluginpaths.cpp
	  so that it respects the value of CS_PLUGINDIR if defined, which is
	  configure's notion of where installed plugins will reside.
	- Eric Sunshine upgraded csGetConfigPath() for MacOS/X so that it
	  respects CS_CONFIGDIR if defined, in addition to checking the
	  CrystalSpaceRoot default and the CRYSTAL environment variable. If the
	  above fail, now also checks a couple other likely (hard-coded)
	  locations. Also upgraded to understand LFS installation structure
	  used by Jam build system.
	- Marten Svanfeldt added a parallax mapping (also known as virtual
	  displacement mapping or offset mapping) shader and testlevel to CS.
	  The testlevel and shader requires NR, and a pretty highend card to
	  work.
17-Sep-2004
	- Eric Sunshine fixed a couple methods in odedynam which were returning
	  a value despite being declared as returning void. Reported by Brendon
	  Costa.
	- Eric Sunshine fixed const vs. non-const mixup in xmlshader which
	  resulted in compiler failure in MSVC6. Reported by Brendon Costa.
	- Eric Sunshine fixed phystut MSVC project file so that it defines
	  CS_HAS_ODE.
16-Sep-2004
	- Jorrit fixed several cases in the loader where it would crash
	  in case checkDupes was true and the object that it was loading
	  didn't have a name.
	- Jorrit made the special gmeshanim effect in flarge look nicer.
	- Jorrit enhanced the gmeshanim system so that you can auto-run
	  multiple scripts at once.
	- Eric Sunshine eliminated Swig warnings regarding recently added
	  friend methods in csColor.
15-Sep-2004
	- Eric Sunshine added an `UNCONDITIONAL' argument to
	  CS_EMIT_BUILD_PROPERTY() in emit.m4. This is analogous to the
	  like-named argument accepted by CS_JAMCONFIG_PROPERTY().
	- Eric Sunshine updated configure.ac so that it sets RANLIB
	  unconditionally (via `=') in Jamconfig, rather than conditionally
	  (via `?='). This is needed because the default RANLIB in Jambase is
	  incorrect on some platforms (such as on MacOS/X with Jam 2.4), and
	  because the default setting is inappropriate during
	  cross-compilation. If necessary, despite being set unconditionally,
	  users can still provide a custom value at configuration time:
            ./configure RANLIB=my-ranlib
	  Also removed the MacOS/X-specific work-around for this problem from
	  macosx.jam.
	- Eric Sunshine restored the MacOS/X-specific Jam 2.4 RANLIB
	  work-around in macosx.jam. This will allow external projects to work
	  correctly with the latest macosx.jam even if those projects have not
	  updated their configure scripts to emit an unconditional RANLIB
	  value.
	- Jorrit finished the basic gmeshanim plugin. Moving and rotating of
	  vertex groups works. Still a lot todo but all the basics are there
	  now.
	- Jorrit added a Set(csColor) and a divide operator to csColor. Also
	  added a color multiplication operator.
	- Jorrit implemented color animation in gmeshanim.
	- Jorrit implemented support for hierarchical transforms (both for
	  vertices and color) in gmeshanim.
	- Jorrit did several other small fixes and optimizations to gmeshanim.
	- Jorrit implemented scaling of vertex groups in gmeshanim. Not 100%
	  ok though. There is a new fancy object in flarge demonstrating
	  all this.
14-Sep-2004
	- Eric Sunshine fixed bug in msvcgen.jam's LinkWith override where it
	  did not distinguish between release and debug libraries & linker
	  flags when applying a project library's external dependencies to a
	  target which linked against the project library. In practice, this
	  manifested in CS's release and debug libraries (csutil.lib and
	  csutil_d.lib, for example) incorrectly appearing together in the same
	  "AdditionalLibraries" property in the "Debug" configuration within
	  application and plugin project files of foreign projects.
	- Eric Sunshine updated the msvcgen templates so that the files listed
	  as components of projects are now sorted. This will ensure that the
	  same list of files always generates the same project file regardless
	  of the order in which the "wildcard" operation returns the files
	  composing a project. This is an important consideration for
	  jobber.pl, for instance, which could be fooled into thinking that the
	  project files were outdated if the wildcard operation returned the
	  same list of files in different orders on different runs.
	- Eric Sunshine updated msvcgen/workspaces.jam so that `isotest'
	  appears only in wksnewrenderer, and not in wkstypical, since it is
	  specific to the new renderer.
	- Eric Sunshine augmented cspace.i so that it %ignores non-const
	  csPoly3D::GetVertices(). This fixes build failure in csjava.
	- Eric Sunshine added a Sort rule to helper.jam which returns its input
	  sorted alphabetically.
	- Eric Sunshine added a MasterHeader rule to helper.jam which, given a
	  list of header files, synthesizes a "master header" which #includes
	  all of them, and which is properly multiple-include protected.  The
	  pseudo-target `masterheaders' will synthesize all requested master
	  headers; `cleanmasterheaders' will destroy them; and
	  `freezemasterheaders' will copy them from the build directory into
	  the source tree.
	- Eric Sunshine added a DirectoryMasterHeaders rule to helper.jam which
	  is a convenience wrapper around MasterHeader. Given a list of
	  directories, it recursively scans each directory and creates a master
	  header for each directory which #includes the gleaned list of header
	  files contained within that directory.
	- Eric Sunshine added several "master header" files to the project
	  which should simplify client usage.  Users can choose the level of
	  granularity which suits them best. Users new to the SDK will probably
	  want to #include <crystalspace.h> since it is simplest; whereas more
	  advanced users may want to #include <csutil.h>, <cstool.h>, etc; and
	  power users can continue to #include only the individual headers
	  required by a particular piece of code.  The complete list of new
	  headers is:
            crystalspace.h  -- all public headers in entire SDK
            csgeom.h        -- all of csgeom
            csgfx.h         -- all of csgfx
            cstool.h        -- all of cstool
            csutil.h        -- all of csutil
            csws.h          -- all of csws
            iaws.h          -- all of iaws
            iengine.h       -- all of iengine
            igeom.h         -- all of igeom
            igraphic.h      -- all of igraphic
            imap.h          -- all of imap
            imesh.h         -- all of imesh
            inetwork.h      -- all of inetwork
            isound.h        -- all of isound
            itexture.h      -- all of itexture
            iutil.h         -- all of iutil
            ivaria.h        -- all of ivaria
            ivideo.h        -- all of ivideo
	  These headers can be re-created / refreshed at any time by invoking
	  "jam freezemasterheaders".
	- Eric Sunshine augmented jobber.pl so that it keeps the new master
	  header files up-to-date.
	- Eric Sunshine cleaned up the CS headers so that they are
	  self-contained and responsible for their own needs. This allows them
	  to work correctly in in the context of, and in conjunction with,
	  <crystalspace.h>. (Some headers expected that the .cpp file had
	  #included other headers upon which they depend, but this is incorrect
	  behavior. Other headers had various other problems.)
	- Eric Sunshine removed the long-deprecated csutil/rng.h.  Use
	  csutil/randomgen.h instead.
	- Eric Sunshine augmented configure.ac so that the VOS check emits
	  CS_HAS_VOS to csconfig.h when VOS is present. inetwork/vosapi.h now
	  checks for the presence of this control macro before trying to
	  #include <vos/vos/vos.hh>. This allows vosapi.h to work correctly
	  with <crystalspace.h> and <inetwork.h> even if VOS is not present.
	- Eric Sunshine changed the tutorials so that, for the sake of
	  simplicity, they #include only <crystalspace.h>, rather than the bevy
	  of individual header files which they used to #include, and which
	  served only to confuse new users.
	- Eric Sunshine fixed Texinfo formatting and mark-up problems in the
	  tutorials and HOWTO's.
	- Eric Sunshine removed the now obsolete CS/include/css.h, which
	  included many, but not all, of the public Crystal Space headers. To
	  obtain the same type of functionality, #include the new
	  <crystalspace.h> instead.
	- Jorrit worked further on the genmesh animation system. The basic
	  principles are now working. Removed the jittering test case.
	  Currently no animation is occuring but you can see test messages
	  appear on stdout. Still work in progress.
	- Jorrit fixed initialization errors in the new gmeshanim.
	- PK added multi-include protection to DbgHelpAPI.h.
	- Jorrit added new csArray::DeleteIndexFast() and
	  csArray::DeleteFast() routines. They work the same as DeleteIndex()
	  and Delete() but they don't preserve order of the remaining
	  elements (basically they work by moving the last element of the
	  array in place of the deleted one). When order in the array
	  is not important then it is recommended to use this function.
	- Jorrit changed a few (only a few) cases where DeleteIndexFast() can
	  be used easily.
	- Eric Sunshine augmented configure.ac so that the ODE check emits
	  CS_HAS_ODE to csconfig.h when ODE is present. ivaria/ode.h now checks
	  for the presence of this control macro before trying to #include
	  <ode/ode.h>. This allows ode.h to work correctly with
	  <crystalspace.h> and <ivaria.h> even if ODE is not present.
13-Sep-2004
	- Eric Sunshine renamed the following symbols in order to avoid
	  global namespace pollution:
	    mmioInfo                 --> csMemMapInfo
	    MemoryMapFile()          --> csMemoryMapFile()
	    MemoryMapWindow()        --> csMemoryMapWindow()
	    UnMemoryMapFile()        --> csUnMemoryMapFile()
	    MKDIR()                  --> CS_MKDIR()
	    PATH_DELIMITER           --> CS_PATH_DELIMITER
	    PATH_SEPARATOR           --> CS_PATH_SEPARATOR
	    TEMP_DIR                 --> CS_TEMP_DIR
	    TEMP_FILE                --> CS_TEMP_FILE
	    __NEED_GENERIC_ISDIR     --> CS_USE_CUSTOM_ISDIR
	    __NEED_OPENDIR_PROTOTYPE --> CS_WIN32_USE_CUSTOM_OPENDIR
	- Eric Sunshine retired the following CS_SYSDEF_PROVIDE_FACILITY set of
	  macros, which clients would #define before including cssysdef.h in
	  order to alter the behavior of cssysdef.h. Removal of these macros
	  eliminates the polymorphic behavior of cssysdef.h, thus helping to
	  pave the way toward eventually pre-compiling Crystal Space's headers
	  in order to reduce overall compilation time.
	    CS_SYSDEF_PROVIDE_ACCESS
	    CS_SYSDEF_PROVIDE_ALLOCA
	    CS_SYSDEF_PROVIDE_CASE
	    CS_SYSDEF_PROVIDE_DIR
	    CS_SYSDEF_PROVIDE_EXPAND_PATH
	    CS_SYSDEF_PROVIDE_GETCWD
	    CS_SYSDEF_PROVIDE_GETOPT
	    CS_SYSDEF_PROVIDE_MKDIR
	    CS_SYSDEF_PROVIDE_PATH
	    CS_SYSDEF_PROVIDE_SELECT
	    CS_SYSDEF_PROVIDE_SOCKETS
	    CS_SYSDEF_PROVIDE_SOFTWARE2D
	    CS_SYSDEF_PROVIDE_TEMP
	    CS_SYSDEF_PROVIDE_UNLINK
	    CS_SYSDEF_VFS_PROVIDE_CHECK_VAR
	- Eric Sunshine lifted the age-old restriction that cssysdef.h could be
	  included only by source files (.cpp), and not by header files (.h).
	  This restriction was an unfortunate side-effect of the polymorphic
	  behavior of cssysdef.h in the presence of various
	  CS_SYSDEF_PROVIDE_FACILITY macros. It is now safe, even recommended,
	  to include cssysdef.h in header files. Doing so helps to make header
	  files more self-contained, thus reducing the burden of clients of
	  those headers.
	- Eric Sunshine enhanced the Recurse rule (helper.jam) so that it
	  returns the list of visited files matching the requested type. Also
	  made it legal to omit the 'rule' argument, which allows Recurse to be
	  invoked simply to retrieve a list of matching files (without being
	  forced to apply a rule to each matching file).
	- Jorrit fixed the NR so that it now also calls BeforeDrawing()
	  callbacks before rendering a mesh. This was simply forgotten.
	- Jorrit completely redesigned the genmesh animation system (even
	  before the previous design was implemented :-). There are now
	  three main classes:
	    - iGenMeshAnimationControl: the animation control interface
	      that is set on the genmesh.
	    - iGenMeshAnimationControlFactory: the factory that is set on
	      the genmesh factory.
	    - iGenMeshAnimationControlType: the plugin itself from which
	      one can create factories.
	  In addition there is iGenMeshAnimationControlState which is an
	  interface to set the state parameters specific to the gmeshanim
	  way to do animation. Using this interface one will be able to
	  execute named scripts to control how the animation will work.
	  The advantage of this new system is that it will now be possible
	  to have one animation scripting set defined for the factory but the
	  genmesh objects themselves can actually execute different scripts
	  and be in a different animation state. This wasn't possible in the
	  previous design.
	- Jorrit implemented gmeshanim to support 'jitter' animation. This is
	  just a test to show that the system works. gmeshanim still needs to
	  have a real scripting system. In data/flarge/world there is one box
	  that uses this 'jitter' script.
	- PK fixed a few bugs in csSaver::SaveMaterials().
	- PK implemented about 70% of the particlessaver.
	- PK fixed a bug in the xmlshader by adding a csNewStr() in
	  SetFilename().
	- Eric Sunshine fixed OR compilation error in genmesh.cpp. Also added
	  extremely ugly const_cast<>'s to allow invocation of
	  iVertexBuffer::LockBuffer() to compile. (Someone, please fix this in
	  the cleanest way possible.)
	- Eric Sunshine fixed ambiguous invocations of convert_endian() in
	  spr3d.cpp.
12-Sep-2004
	- Jorrit fixed genmesh so it compiles with OR again.
	- Jorrit did some more work on gmeshanim. Still unfinished.
	- PK did the following:
	    - Fixed genmesh so that it really compiles with OR.
	    - Extended the iShaderVarContext with GetShaderVariables()
	      to get a all shadervariables.
	    - Extended the genmesh API with ->IsAutoNormals()
	      to check if the normals were automatically calculated.
	    - Extended iMaterial with GetShaders() 
	      to get a list of all shaders that material uses.
	    - Extended the iShader API to allow the manual setting of a file.
	    - Changed the csloader so it sets the filename in the shader.
	    - Did a lot in the cssaver.cpp, mainly implementing the following:
	        bool SaveShaders(iDocumentNode*);
	        bool SaveSettings(iDocumentNode*);
	        bool SaveRenderPriorities(iDocumentNode*);
	        bool SaveVariables (iDocumentNode*);
	    - Fixed some lines that were longer than 79.
11-Sep-2004
	- Andrew Robberts updated sprcal3d to allow for transformations of
	  a mesh attached to a socket.
	- Andrew Robberts added the ability to attach multiple meshes to a
	  sprcal3d socket.
10-Sep-2004
	- Eric Sunshine fixed bugs in walktest/Jamfile where it unconditionally
	  attempted to add several optional modules to the "walkall" compile
	  group even if those modules had not been detected/enabled by the
	  configure script. Among other issues, this resulted in a failure by
	  the configure script to set up the makefile emulation layer if some
	  of those modules were absent.
	- Jorrit added support for genmesh animation plugins. There are new
	  interfaces iGenMeshAnimationControl and
	  iGenMeshAnimationControlFactory and you can call
	  SetAnimationControl() on the mesh factory.
	- Jorrit started work on a new gmeshanim plugin that is a script
	  based animation plugin for genmesh. Doesn't work yet.
	- Eric Sunshine removed the 'ignoresubdir" option from the IncludeDir
	  rule (helper.jam) and replaced it with the more generalized 'literal'
	  option.  Also added a 'transient' option which indicates that the
	  specified header directory should not be recorded in generated
	  resources, such as project files.
	- Eric Sunshine upgraded jamtemplate so that MSVC project files
	  generated via 'msvcgen' will now search for CS and CEL headers in the
	  following additional locations:
	    ../CS/include
	    $(CRYSTAL)/include
	    $(CRYSTAL)/include/crystalspace
	    ../cel/include
	    $(CEL)/include
	    $(CEL)/include/cel
9-Sep-2004
	- Jorrit fixed a potential bug in csLoader::LoadMeshObjectFactory()
	  where it would destroy the wrong factory after unsuccessful
	  loading of a new factory. This could happen in case region
	  loading was desired OR check dupes was not enabled AND at the same
	  time a factory with the same name already existed in memory.
	- Jorrit fixed a bug in csLoader::LoadMeshObject() where it would fail
	  to delete the created mesh object if the loading failed.
	- Jorrit added a new iLoader::Load() function which is a smart function
	  that can detect what kind of XML file it is trying to load and act
	  accordingly. Currently it supports world files, library files, mesh
	  factories, and objects.
	- Jorrit changed iMaterialWrapper->Register() and
	  iTextureWrapper->Register() so that they no longer attempt to
	  register again if they were already registered. That makes it
	  safe to call Register() multiple times.
	- Jorrit changed the loader so that it will now automatically
	  register textures and materials if the texture manager is already
	  present during loading. That makes it easier to use the new
	  Load() function because after loading a library you have no way
	  of knowing what textures and materials are new so there was no way
	  to register them.
	- Jorrit fixed a bug in opcode. The new CollideRay() function would
	  crash if there was no collider.
8-Sep-2004
	- Jorrit fixed a bug in all particle systems that depend on
	  csNewParticleSystem (rain and fountain). 'camera_origin' was
	  not set which could lead to bad back-to-front sorting for them.
	- Jorrit changed the OpenGL canvases so that you get a warning
	  when you try to run CS with less then 24 bit displays. Running
	  CS under such conditions is sub-optimal.
7-Sep-2004
	- *** RELEASED STABLE 0.98.4 ***
6-Sep-2004
	- Eric Sunshine upgraded the ODE "sufficiently recent" check in
	  configure.ac so that it demands version 0.5. Also added a check to
	  see if ODE was built with OPCODE support since OPCODE support is
	  required by Mike Handverger's latest changes.
	- Wouter Wijngaards changed the Jamfile for the phystut tutorial
	  application. It failed to examine if ODE.AVAILABLE was set,
	  resulting in trying to compile phystut in the absence of ode,
	  even though ivaria/ode.h includes ode/ode.h.
4-Sep-2004
	- Mike Handverger updated odedynam including the following changes:
	    - TriMesh collisions (that collide with everything except planes,
	      since that is missing in ODE currently) Partly from code posted
	      to crystal-main by Marc Rochel.
	    - Ability to select QuickStep (setting iterations not possible yet)
	      QuickStep is a new solver for ODE that is much much faster.
	    - Ability to use AutoDisableBodies. When turned on, ODE will
	      disable any rigid body that hasn't been moving much recently.
	      Generally, this means the body is on the ground, so it speeds
	      things up by not doing collision-detection with that body.  When
	      an enabled body collides with a disabled body, it will enable it.
	    - More to come...
	    - *Warning* ODE 0.5 required. 
	- Mike Handverger updated phystut to demo odedynam updates:
	    - Added on screen display for various things.
	    - Select Solver with the following keys:
	        1 = WorldStep
	        2 = StepFast
	        3 = QuickStep
	    - Turn on AutoDisableBodies with 'd'.
	    - Create a TriMesh 'm'.
3-Sep-2004
	- Eric Sunshine applied a patch from <cbarney1509@earthlink.net> which
	  changes csgfx/mipmap.inc "from array index to pointer offsetting
	  arithmetic in order to make 64 bit pointer math work without change
	  of sign extension problems." This should fix crashes in mipmap.inc on
	  64-bit platforms which resulted from accidentally applying negative
	  indexes to arrays.
2-Sep-2004
	- Jorrit added a new iVisibilityCuller->IntersectSegmentSloppy().
	  This function will find all objects that might possibly intersect
	  with the given beam. Intersection is not guaranteed but at least
	  the bounding box of the object will intersect. This function is
	  not as accurate but a LOT faster then IntersectSegment().
	- Jorrit added a new csColliderHelper::TraceBeam() function that
	  is a very efficient way to find the closest object that is hit
	  by a beam (uses colliders for the objects). This function is
	  faster then the iSector->HitBeam() functions but in contrast
	  to those TraceBeam() will only work on the colliders while
	  HitBeam() will work on the actual current triangle data. This
	  can matter in cases where animation is used and the collider
	  is a simple box approximating the model. The new TraceBeam()
	  function will correctly transform portals (and space warping
	  portals too).
	- Jorrit added functionality in bugplug to test this new routine
	  in case the third mouse button is pressed.
	- Jorrit changed walktest to also register the iCollideSystem to
	  the object registry.
	- Jorrit fixed csString::DeleteAt() so it no longer tries to do
	  something in case iCount == 0.
1-Sep-2004
	- Jorrit added a new iCollideSystem->CollideRay() and
	  GetIntersectingTriangles(). With this function it is possible
	  to test if a collider intersects with a ray. Only the OPCODE
	  plugin implements this (not RAPID). Note that this function
	  is currently untested.
	- Jorrit added a constructor for csColor to csColor4 and also
	  a Set(csColor) method.
	- Jorrit updated the howto on how to create a pixmap.
31-Aug-2004
	- Jorrit did a huge optimization and cleanup on dynamic lights (old
	  style dynamic lights which do NOT use stencil hardware). Pressing
	  'L' in walktest (which adds a huge dynamic light at the current
	  spot) improved from 22 seconds to something slightly bigger then
	  0 seconds (for a big level). To do this I had to remove support
	  for shadows. I don't think shadows for dynamic lights are that
	  important. They will still correctly shadow if they shine through
	  a portal (i.e. the portal boundary).
30-Aug-2004
	- Jorrit fixed iCameraPosition->Load() so that it will first
	  attempt to find a sector in the current region and if that
	  fails try to find a more global sector.
	- Oktal added UTF-8 support for csInputDefinition strings
	  and fixed a serious bug in csInputDefinition::GetKeyString.
29-Aug-2004
	- Jorrit added a new -enable-leakguards configure option. Instead
	  of disabling or enabling leakguards with debug versus optimize
	  mode it is now enabled with a configure option independent of
	  debug or optimize mode. This means that debug and optimize mode
	  are now again compatible given the same leakguards option.
	  Re-enabled the leakguard in csShaderVariable.
	- Eric Sunshine made the following changes:
	    - configure.ac no longer uselessly emits the Jam variable
	      LEAKGUARDS.
	    - Renamed control macro CS_LEAKGUARDS to CS_USE_LEAK_GUARD.
	    - Renamed configure.ac option --enable-leakguards to
	      --enable-leak-guard.
	- Eric Sunshine fixed a couple problems in the path() macro
	  (msvcgen/macros.tlib). (1) Periods in 'striproot' pattern were not
	  being escaped. The result was that a period incorrectly matched any
	  character rather than a literal period, as intended. (2) When the
	  source and build directories were the same, it was incorrectly
	  stripping single periods from the beginning of paths, even if the
	  periods were part of a larger unit, such as "../".
28-Aug-2004
	- Jorrit removed the leakguard from csShaderVariable since somehow
	  it prevents combination of optimize and debug plugins.
27-Aug-2004
	- Eric Sunshine added intptr_t / uintptr_t check to configure.ac.  If
	  the types are available, CS_HAS_INTPTR_T is defined in csconfig.h.
	- Eric Sunshine augmented cstype.h so that it fakes up intptr_t and
	  uintptr_t if CS_HAS_INTPTR_T is not defined, or if MSVC headers do
	  not provide these types.
	- Eric Sunshine changed the way configure.ac and cstypes.h treat
	  CS_HAS_STDINT_H. Previously, configure.ac would emit this control
	  macro only if <stdint.h> was present _and_ the INT64_C() macro was
	  also available. Now, CS_HAS_STDINT_H is independent of INT64_C()
	  availability and depends only upon presence of <stdint.h>. The new
	  control macro CS_HAS_INT64_C now instead indicates availability of
	  the INT64_C() facility.
	- Eric Sunshine retired the obsolete CS_BUILTIN_SIZED_TYPES control
	  macro.
	- Eric Sunshine replaced the old special-purpose msvcgen.pl facility
	  with a much more generic and easily extensible project generation
	  facility based upon Template Toolkit. A number of benefits result
	  from this new approach:
	    - Reduced maintenance costs. With the old template facility, even
	      seemingly small modifications to the templates required up to 35
	      actual changes on account of significant duplication (five
	      different project types multiplied by five different build modes
	      for CS, plus five project types multiplied by two build modes in
	      the 'jamtemplate' templates). This was a major maintenance
	      problem, and a large source of potential errors. With the new
	      facility, most modifications require only one or two changes. As
	      a corollary, the same templates are now used for CS and
	      'jamtemplate'; the distinct template set for 'jamptemplate' has
	      been eliminated.
	    - Simplify creation of project files for systems other than MSVC,
	      such as Borland and Apple. It is no longer necessary to create a
	      new specialized script for these cases; instead, simply provide
	      an appropriate Template Toolkit input file and add some Jam
	      support functionality.  (When the time comes, we will also want
	      to re-factor msvcgen.jam in order to avoid duplicating
	      functionality which is common to project file generation for
	      other tools.)
	    - Finer-grained control over various project attributes. For
	      example, msvcgen now allows preprocessor defines and additional
	      header and library directories to be specified independently,
	      rather than bundling everything into "cflags" / "lflags". This
	      allows MSVC7 users, for instance, to take advantage of
	      auto-completion of preprocessor defines, etc.
	    - Faster project generation (possibly). Rather than running the
	      Perl msvcgen.pl once per generated project and workspace the new
	      facility invokes Template Toolkit just once.  All projects and
	      workspaces (for a single MSVC version) are generated by the one
	      run. This may make a large difference on Windows (and Windows 9x
	      in particular) where process creation is so extremely
	      expensive. (Unfortunately, this gain is largely offset by the
	      fact that Template Toolkit is much slower than msvcgen.pl on
	      account of the fact that it is a generic templating mechanism.)
	- Eric Sunshine increased the speed of the ResponseFile rule
	  (helper.jam) by several orders of magnitude.
	- Eric Sunshine relocated the MSVC6 and MSVC7 project files from
	  CS/mk/visualc6 and visualc7 to the shared directory CS/mk/msvc. This
	  reduces clutter by eliminating the duplicated .rc files for
	  application and plugin projects.
	- Eric Sunshine fixed bug in msvcgen process where the compile groups
	  created via RegisterCompileGroups (Jamefile.in / groups.jam) were not
	  being emitted as MSVC "group" projects. This had been working at one
	  time when Eric performed the major Jam-based msvcgen clean-up and
	  fix-up several months ago, but broke at a late stage during that
	  work, and went unnoticed until now.
26-Aug-2004
	- res changed the TinyXML unknown element writer to write the value
	  not verbatim but inside pointy brackets (a tag like "<?foo ?>" in a 
	  file will result in an 'UNKNOWN' element with the value "?foo ?").
	- res fixed the binary document system to also create nodes of type
	  UNKNOWN.
	- res silenced the warning 4345 on VC7.1.
	- res made some OR compile fixes (leak guards for NR-only embedded
	  classes).
25-Aug-2004
	- Jorrit fixed spr3d so that it will forcibly recalculate normals
	  (cached) if -recalc cmdline option is given.
	- Jorrit additionally implemented caching for the LOD tables.
	  Also recalculated if -recalc is given.
	- Jorrit added lots of leak guards again.
	- dfryer fixed the atan2f()-faking macro; it was not accepting the
	  correct number of arguments.
24-Aug-2004
	- Jorrit fixed a bug in Dynavis where it would try to use the
	  hint_goodoccluder flag before setting the value of that.
	- Jorrit fixed a crash bug in walktest/flarge when you tried to jump
	  on the car.
	- Jorrit added some leak guards.
	- res made the following changes:
	    - Added some documentation for csFrameDataHolder<>.
	    - Added a Construct() variant to csArrayElementHandler to 
	      initialize elements with the default constructor. So when
	      InitRegion() is called, instead of calling the default ctor one
	      time and the copy ctor for every element in the region, only the
	      default ctor is called for every element.
	    - Changed csRenderMeshHolderSingle to utilize csFrameDataHolder<>.
	    - Fixed the Haze mesh to work with NR.
	    - Added an assertion to 
	      csSectorVisibleMeshCallback::ObjectVisible() to catch cases 
	      where a mesh reports a render mesh count != 0 but returns a 0
	      pointer to the meshes.
	- Remi Bonnet added a call to SetupObject() in the bruteblock terrain
	  plugin as a function could be called before any call to Setup.
23-Aug-2004
	- Jorrit added lots more leak guards.
	- Jorrit fixed a leak in xmlshader where a failing technique was
	  only deleted in case -verbose commandline option was given.
	- Eric Sunshine silenced Swig warnings resulting from Jorrit's new
	  CS_LEAKGUARD_DECLARE.
	- Jorrit made 'look to origin' default in viewmesh. Also cleaned up
	  the code.
	- Jorrit enhanced viewmesh so that you can now (on the commandline)
	  specify a model in the following ways:
	    - <full vfs path including model name>
	    - <vfs path> ':' [ <directory> '/' ] <model name>
	    - <real path to zip> ':' [ <directory> '/' ] <model name>
	    - <real path> ':' [ <directory> '/' ] <model name>
	  Some examples:
	    - /this/data/model.cal3d
	    - data/standard.zip:sprite1
	    - /lib/std:sprite1
	    - data/models.zip:uglyone/uglyone.cal3d
	  This works best (for cal3d models) if you make sure that the
	  cal3d model specifies NO path and the textures also have
	  no path so everything is loaded relative to the current VFS
	  directory.
	- Jorrit fixed a big memory leak in sprcal3d. The csCal3DAnimation
	  and csCal3DMesh structures where never freed and csCal3DMesh
	  kept a reference to the material which caused a number of other
	  leaks as a result.
22-Aug-2004
	- Jorrit fixed a leak in spr3d. Everytime an spr3d was created
	  it couldn't be removed again.
	- Jorrit added more leak guards.
	- Jorrit added a missing SCF_IMPLEMENTS_INTERFACE(iImageVector).
	- Jorrit fixed a leak in genmesh with shader variable contexts. This
	  caused many other things to leak.
	- Erotoman fixed bug in lightning mesh.
	- Jorrit rewrote csPoly3D so it now uses csArray instead of the
	  custom code for growing array. This should also considerably
	  speed up csPoly3D (and thus loading of sprites which makes
	  heavy use of csPoly3D).
	- Jorrit did a small optimization on sprcal3d which avoids the
	  copy of the rendermeshes all the time.
21-Aug-2004
	- Jorrit added more leakguards to CS.
        - Philip Wyett fixed attempts to load
          "crystalspace.graphics3d.shader.soft" instead of the
          correct "crystalspace.graphics3d.shader.software".
	- res made the lightning and bezier meshes work with NR.
	- res changed the lghtngtest app to use the 'alpha' render priority 
	  for the lighting meshes.
20-Aug-2004
	- Jorrit fixed a bug added yesterday in the font multiplexor that
	  would cause crashes at exit.
	- Eric Sunshine fixed bug in csString::Replace(csString const&) where
	  it failed to take into account the case where the replacement
	  csString might be the same as the string on which Replace() was
	  invoked, thus resulting in "undefined" behavior. This problem
	  impacted other clients of Replace(), such as operator=(). For
	  instance, `csString s("foo"); s = s;' resulted incorrectly in 'foo'
	  being cleared.
	- Eric Sunshine added more sanity checks to csString to detect and
	  properly handle near-pathalogical cases such as `s = s.GetData()' and
	  `s = s.GetData() + n'.
	- Eric Sunshine fixed bug in csString::Replace(char const*,count) where
	  it was documented as accepting -1 for `count', but did not correctly
	  handle the case.
	- Wouter Wijngaards fixed compile errors in csbench.
        - Philip Wyett fixed a compile error in prstex.cpp
	- Jorrit added a new leak detector to CS. This class is very easy to
	  use. In the class header you add:
	    class csBla
	    {
	    public:
	      CS_LEAKGUARD_DECLARE(csBla);
	    };
	  In the source you add:
	    CS_LEAKGUARD_IMPLEMENT(csBla)
	  And that's all. When the program exits the number of remaining
	  instances will be printed (if > 0). This is only done in debug
	  mode. In release/optimize mode the code does nothing.
	- Jorrit added the new leak detector declarations to various classes
	  in CS.
        - Philip Wyett fixed a compile error in prstex.cpp.
        - Philip Wyett eliminated compiler warnings in xmlshader.cpp.
19-Aug-2004
	- Jorrit added support for key/value pairs to materials and textures
	  in the loader.
        - Philip Wyett fixed mismatched delete/delete[] in dds.cpp
	- Jorrit fixed csXMLShader so that it holds a weak reference to g3d
	  instead of a real reference. Should reduce the chance of memory
	  leaks a bit.
	- Jorrit fixed csXMLShader so that it now implements iObject.
	- Jorrit fixed the loader so that it adds shaders to the right region.
	- Jorrit fixed the loader so that it no longer adds a shader if
	  a shader with the same name is already there (if CheckDupes() is
	  true).
	- Jorrit added iShaderManager::UnregisterShader().
	- Jorrit fixed regions so that they can now unload shaders.
	- Jorrit added FindShader() to iLoaderContext so that shader finding
	  now also respects the restrictions on finding on region and such.
	- Jorrit reports: the following classes were keeping a csRef to the
	  iObjectRegistry (bad idea):
	      - csSprite2DMeshObjectType
	      - csWaterDemo
	      - csBaseTextureFactory
	      - eiShaderRenderInterface
	      - csSpriteCal3DMeshObject
	      - csBaseTextureLoader
	      - csBaseRenderStepLoader
	      - csBaseRenderStepType
	      - csRenderStepParser
	      - csRenderLoopLoader
	      - csStencilShadowStep
	      - csStencilShadowFactory
	      - csFullScreenQuadRenderStepFactory
	      - csFullScreenQuadRenderStep
	      - csGenericRenderStepFactory
	      - csLightIterRenderStepFactory
	      - csLightIterRenderStep
	      - csTargetRenderStepFactory
	      - csFontServerMultiplexor
	      - csPhysicsLoader
	      - csODEDynamics
	      - csAnimateProctexLoader
	      - csBaseProctexType
	      - csBaseProctexLoader
	      - csFuncTexLoader
	      - csSoundRenderDS3D
	      - csSoundRenderOpenAL
	      - csSimpleFormerLoader
	      - csDDSImageIO
	      - csDDSImageFile
	      - csNullGraphics3D
	      - csGLGraphics3D
	      - csXMLShaderCompiler
	      - csShaderManager
	      - csShaderProgram
	      - csGLShader_ARB
	      - csGLShader_CG
	      - csGLShader_FIXED
	      - csGLShader_PS1
	      - csSoftShader
	      - csSoftShader_FP
	      - csSoftShader_VP
	- Jorrit fixed several plugins to keep weak references to some modules
	  instead of real references in the hope that this minimizes the
	  chances of having memory leaks. And indeed, it fixes the memory
	  leaks with walktest flarge, stenciltest, partsys, isomap, and
	  r3dtest but not with terrain, terrainf, and particles.
	- Jorrit fixed several wrong usages of csRef (forgotten AttachNew()
	  and so on).
	- Jorrit fixed a bug in ODE plugin. It would use a csRef to
	  an event handler but still use DecRef() later.
	- Jorrit fixed circular ref between loader and the mesh loader plugins
	  for particles and terrain. That partially fixes some of the ref leaks
	  in terrain, terrainf, and particles levels (bot not all).
	- Jorrit fixed circular ref in particles mesh object. The problem
	  is equivalent to the problem with embedded event handlers. In this
	  case the embedded struct was an iShaderVariableAccessor. By having
	  this as an embedded struct there was a circular reference.
	- Jorrit fixed circular ref between simpleformerloader and loader.
	  This fixes the remaining ref leaks in terrain and terrainf levels.
	- Jorrit but the unused csBlockBuilder class in #if 0 in bruteblock
	  terrain.
	- res changed the xmlshader plugin so shaders internally have the 
	  notion of techniques.
18-Aug-2004
	- Jorrit fixed the NR null renderer so that it also returns a
	  valid iPolygonRenderer instance on calling
	  g3d->CreatePolygonRenderer(). That way PrecacheDraw() can work
	  fine in combination with null3d.
	- Jorrit did the following lighter changes:
	    - Support for filtering meshes on key value pairs (regexp and
	      normal).
	    - Added the ability to reject bad object selectors (can happen
	      if there is an invalid regexp for example).
	    - Added a portals selector.
	    - Added a selector that selects nothing.
	- Jorrit added support for key-value pairs to portals (only when
	  specified outside things).
	- Jorrit fixed a bug in csBitArray where it would do a memcpy
	  from address X to address X (i.e. same address). valgrind reported
	  this.
17-Aug-2004
	- Jorrit did some more work on lighter config parsing.
	- Jorrit did the following lighter changes:
	    - Several fixes in the config parser.
	    - Generalized the mesh selector class so that it is now useful
	      for any kind of CS object. That way we can also implement the
	      sector and light selector using that.
	    - Started scanning the world and finding all appropriate objects.
	    - Lots of fixes.
16-Aug-2004
	- Steven Geens added an example of how to view a cal3d file with
	  viewmesh to the docs and how to load a cal3d file in code.
	- Jorrit fixed flarge so that the billboard has <ztest/> mode.
	- Jorrit worked a bit more on the parsing of the config file of
	  lighter.
	- Eric Sunshine fixed a significant number of Texinfo mark-up and
	  formatting problems in sprcal3d.txi.
	- Vincent Knecht made corrections in csapplicationframework.h Doxygen
	  sample code.
15-Aug-2004
	- Jorrit extended iEngine->PrecacheDraw() so that it also causes
	  the cullers to precache. To do that it calls a new
	  iVisibilityCuller->PrecacheCulling() function.
	- Jorrit changed iEngine->PrecacheDraw() so that it no longer
	  requires the dummy camera and view parameters.
	- Jorrit added an optional region parameter to iEngine->PrecacheDraw()
	  so that you can precache a region alone.
	- Jorrit renamed '-prepare' option in walktest to '-precache' because
	  that better reflects what it does.
	- Jorrit tried to work around a problem where multiple calls
	  to iVFS->ChDirAuto() doesn't work properly because it is hard
	  to discover if a VFS path is going to be valid or not. To solve this
	  iVFS->ChDirAuto() has an additional filename parameter which causes
	  ChDirAuto() to also check if that file is present in the given path
	  so that it is better able to select the right path. This fixes
	  a problem in walktest where it could not open multiple levels.
14-Aug-2004
	- Jorrit added a new iEngine->PrecacheDraw() function which precaches
	  the GetRenderMeshes() of all meshes in the engine. Walktest now
	  uses this function if you specify '-prepare' option. This speeds up
	  running through a level.
	- Jorrit did further work on lighter:
	    - Mesh selection system.
	    - Started working on a new XML config file for lighter. Not
	      functional yet.
        - Philip Wyett eliminated the redefinition of _POSIX_C_SOURCE warning
          within the CS Python plugin.
13-Aug-2004
	- Jorrit added new versions of csPoly3D::ComputeNormal() and
	  ComputePlane() that accept a csArray<csVector3>.
	- Jorrit did further work on the lighter app. Added 'litPolygon' class.
	- Jorrit did a runtime speedup of thing by moving more of the
	  initialization stuff to the -prepare stage (iThingState->Prepare() or
	  PrepareForUse()). This speeds up moving in a big world when things
	  come into view the first time. I put the speed testing code in
	  #ifdef's because there are still some slowdowns that I want to
	  examine further.
	- Eric Sunshine made the following changes:
	    - Updated apimod100.txi to mention that installation location of
	      the Crystal Space header tree has changed.
	    - Re-wrote portions of perl.txi to be clearer and more polished.
	    - Fixed a bunch of Texinfo mark-up problems and 'hbox' warnings in
	      recently added material.
12-Aug-2004
	- Jorrit temporarily put back the old inpnames.h and inpnames.cpp
	  until the new csInputDefinition class works well for normal keys
	  too.
	- Jorrit added litLightMapMapper classes to the lighter application.
	  This class computes the mapping between a polygon and the lightmap
	  coordinates. Currently not used.
	- Oktal added the missing code that meant csInputDefinition would not
	  parse strings of length 1.
	- Jorrit removed inpnames.* again.
	- Oktal changed the arguments of csInputDefinition::ParseKey so it
	  can output both raw and cooked codes in the same call.
	- Oktal fixed a bug in csInputDefinition that caused parsed modifiers
	  to not be stored ('&=' should have been '|=').
11-Aug-2004
	- PK implemented the SaverPlugin in genmesh, spr3dmesh and fixed a
	  bug in the write down order of the other SaverPlugins.
	- Jorrit added a new iVFS->ChDirAuto() function that is similar to
	  ChDir() but it can automount real paths and zip files if needed.
	  This function replaces similar code that was already duplicated
	  in walktest, cslight, Crystal Core, and soon the new lighter app.
	  ChDirAuto() accepts a normal VFS path, a real path using /, \,
	  or $/ path delimiter and also zip files. It also supports a path
	  in which to look for the given directory.
	- Jorrit fixed VFS so that ChDir() now fails if you give an invalid
	  vfs path. Previously it would simply set the current path to 0
	  and return true anyway.
	- Jorrit added a new lighter app. This tool is currently almost the
	  same as cslight but in the (near) future this tool will calculate
	  super lightmaps for the totally new (yet to be designed) new
	  lightmap system that we'll have in Crystal Space.
	- Jorrit removed the feature in walktest to be able to change the
	  zip file extension. Don't really see why that is useful.
	- Eric Sunshine eliminated a number of compilation warnings reported by
	  gcc on Linux/PowerPC.
	- PK implemented the SaverPlugin in spr2dmesh and fixed a bug in
	  csSaver::SavePortals.
	- Oktal replaced csString::StartsWith and ::StartsWithNoCase with a
	  single StartsWith method that takes a bool ignore_case argument,
	  and fixed bugs in those methods.
	- Oktal added getters and setters to csInputDefinition.
	- Oktal added a bool distinguishModifiers argument to
	  csInputDefinition::ToString to choose behaviour ("LCtrl" vs "Ctrl").
	- Oktal added static helper functions to csInputDefinition that
	  work in a similar way to the old csParseKeyDef and related functions.
	- Oktal added information about the csInputDefinition changes to
	  apimod100.txi.
	- Oktal made a couple of fixes to the input binder so it correctly
	  handles keyboard modifiers.
	- Oktal fixed a problem in the console input plugin where a '%' sign in
	  the input would cause problems because of iConsoleOutput::PutText's
	  printf-style format string.
10-Aug-2004
	- PK implemented the csThingFactorySaver.
	- Jorrit fixed a few places in CS where a reverse size_t loop was done
	  like this:
	  	for (i = Length ()-1 ; i >= 0 ; i--)
	  This does NOT work. I changed it to:
	  	i = Length();
		while (i > 0)
		{
		  i--;
	- Jorrit added csStringArray::InsertSorted() which does sorting
	  on string. This fixes a bug in VFS where it would sometimes fail
	  to delete old entries and this could cause duplicate entries in a
	  zip file (happened a lot with relight).
	- Oktal added FindFirst and StartsWith methods to csString.
	- Oktal fleshed out csInputDefinition and moved it from inpnames.h/cpp
	  to inputdef.h/cpp. Also removed csParseKeyDef and related functions.
	- Oktal added a public SynthesizeCooked(iEvent*) method to the
	  keyboard driver which fills in the cooked code of an event containing
	  only a raw code.
	- Oktal added a GetModifiers method to csKeyEventHelper which performs
	  the opposite of GetModifiersBits, ie. it converts a bitmask back to
	  a csKeyModifiers struct.
	- Oktal added a CSKEY_MODIFIER_COMPARE macro to determine if two
	  modifier bitmasks can be considered equal. Also added extra parens
	  to some other macros in evdefs.h, for safety.
	- Oktal made numerous changes to the input binder to make it a "nicer,"
	  more generalised system. This includes the removal of
	  iInputBinderPosition and iInputBinderBoolean. All bound variables are
	  now accessible by numbered keys through methods in the binder.
	  And it now binds to csInputDefinition's instead of iEvent's with a
	  dodgy hash function.
	- Oktal added a Quick Start section to the Perl chapter in the manual.
	- Oktal changed the csInputDefinition empty constructor from
	  protected to public.
	- Oktal updated AWS to use the new csInputDefinition.
	- Luca fixed the InsertSorted method of the class csStringArray.
	- Luca modified a "for (size_t i = 0" to "size_t i = 0; for (i"
	  to make the VisualC++6 compiler users happy.
9-Aug-2004
	- Jorrit did a fix to csQrount() and other csQ... (except for
	  csQint()).  In case CS_QINT_WORKAROUND was defined only csQint()
	  actually had any workaround code while it was also needed for the
	  others. This fixes a problem with the thing plugin creating
	  incompatible lightmaps between optimize and debug mode.
8-Aug-2004
	- Eric Sunshine reverted the 29 July 2004 change to the cosf() check in
	  configure.ac so that it once again performs the check with the C
	  compiler rather than the C++ compiler. The benefit of using the C++
	  compiler turned out to be illusory since, though the test would
	  succeed because the functions were built-in, the headers failed to
	  declare them, thus we nevertheless need to do extra work to make them
	  usable. (The <cmath> change which was made at the same time is
	  retained since it prevents problems resulting from clients including
	  <cmath> after cosf() and cousins are faked-up.)
	- Eric Sunshine eliminated compilation warnings throughout project.
	- Eric Sunshine fixed bug in macosx.jam where it was emitting a
	  slightly bogus PkgInfo file to the generated Cocoa .app wrapper.
	- Peter Amstutz updated csInputBinder to support specifying modifers 
	  (shift, ctrl etc) to keyboard bindings.
7-Aug-2004
	- Jorrit added a test (debug mode only) in the generic render step
	  to print when a material or material handle is missing.
	- Jorrit added some asserts to a few mesh objects when the material
	  is missing.
	- Jorrit changed the engine so it reports upto 100 missing lightmaps
	  objects if -verbose is used.
	- Vincent Knecht upgraded cs.spec for new headers installation
	  directory.
6-Aug-2004
	- Jorrit changed the engine so that the plane of the portal is always
	  used for culling but only used for exact clipping in the renderer
	  in case the portal has <clip/> specified.
5-Aug-2004
	- Jorrit added a new 'speed' command to walktest to multiply the
	  normal maximum movement speed with some factor (default 10). That
	  way you can move very fast on huge levels. Assigned to the ' key
	  by default. Also swapped assignment of jump and fire (0 and space).
	- PK did the following:
	    - Changing csTextSyntaxService::WriteBox
	    - Extending the csSaver::SaveSectorMeshes to save childmeshes
	    - Adding csSaver::SaveMeshFactories
	    - Implementing FactorySaver for nullmesh
	    - Implementing ObjectSaver for emitmesh, explosionmesh, firemesh
	      fountainmesh, nullmesh, rainmesh, snowmesh, spiralmesh, starmesh
	    - Prepare implementation of sprcal3d's FactorySaver
4-Aug-2004
	- Peter Amstutz fixed window resizing in the Wx GL canvas.  It works
	  now.  Also fixed input handling in the canvas (2nd and 3rd mouse
	  buttons were swapped by accident).
	- Peter Amstutz also improved sector support in the csvosa3dl plugin,
	  so it won't try and load a sector that has already been loaded
	  a second time.
	- Jorrit added a sanity check to the genmesh loader to test if
	  a triangle is not using a bad vertex index.
	- Jorrit added several new commands to move selected meshes in
	  bugplug.
	- Jorrit fixed several bugs in bruteblock plugin which caused it
	  to calculate LOD wrong if the terrain was moved.
3-Aug-2004
	- Eric Sunshine changed the install location of Crystal Space headers
	  from ${includedir} to ${includedir}/crystalspace in order to avoid
	  polluting the top-level of the global header directory
	  (/usr/local/include, for instance). cs-config has been altered to
	  return the new header location in response to --includedir, --cflags,
	  and --cxxflags, thus the header directory relocation should be
	  essentially transparent to clients.
	- Eric Sunshine fixed bug in cs-config where the --libdir option always
	  returned the empty string.
	- res changed the Thing bitangent calculation to use the +Y instead of 
	  the -Y axis. This seems to give better results.
	- res changed the Thing tangent/bitangent calculation to more properly 
	  use the difference to the origin in texture space instead of just 
	  the +X/+Y directions in texture space.
	- res changed phystut so the angular velocity of spawned objects 
	  doesn't cause them to immediately go left when touching a wall.
	- res made the csStringHash::Request() methods const.
	- Jorrit fixed a size_t related bug in the engine. This is 1002540
	  on the tracker.
	- Eric Sunshine fixed bug in partphys_ode/Jamfile where it failed to 
	  invoke ExternalLibs for the ODE library.
2-Aug-2004
	- Eric Sunshine localized the faked-up `socklen_t' from csdef.h to
	  csutil/sockets.h so that the type is faked up only if requested by
	  explicit inclusion of csutil/sockets.h. This helps to prevent it from
	  polluting the type-space of external projects which generically
	  #include <cssysdef.h>.  Also, the socklen_t typedef is now only
	  invoked if some other entity (such as an external project) has not
	  already faked it up via a #define, since the #define would cause the
	  typedef to morph into a semantic error.
	- Eric Sunshine retired the long-deprecated CS_SYSDEF_PROVIDE_SOCKETS.
	  Instead, #include <csutil/sockets.h> explicitly.
	- res made the following changes:
	    - Added remarks to some functions taking UTF-8 strings about the 
	      fact that they take UTF-8 strings.
	    - Changing phystut so it spawns new objects a bit into the 
	      viewing direction.
	    - Updated sprcal3d to latest cal3d CVS.
	- Eric Sunshine updated the cal3d "sufficiently recent" check in
	  configure.ac so that it demands the latest CVS version of cal3d.
1-Aug-2004
	- Eric Sunshine made csBaseEventHandler::HandleEvent() protected rather
	  than private. This makes it possible for subclasses to deal with
	  special cases without having to jump through excessively ugly
	  hoops. For example, a client employing AWS will need to invoke
	  iAWS::HandleEvent() in order to give AWS first crack at the event. If
	  iAWS::HandleEvent() returns false (that is, did not handle the
	  event), then the event should be passed along to
	  csBaseEventHandler::HandleEvent() for dispatch as usual. Added an
	  explicit warning against overriding csBaseEventHandler::HandleEvent()
	  except for special cases, such as this.
	- Eric Sunshine renamed the following global header files in order to
	  avoid possible conflict with headers installed by other packages:
	    platform.h --> csplatform.h
	    qint.h     --> csqint.h
	    qsqrt.h    --> csqsqrt.h
	    volatile.h --> csconfig.h
	- Eric Sunshine renamed the following functions in order to avoid
	  global namespace pollution:
	    QRound() --> csQround()
	    QInt()   --> csQint()
	    QInt8()  --> csQint8()
	    QInt16() --> csQint16()
	    QInt24() --> csQint24()
	    qsqrt()  --> csQsqrt()
	    qisqrt() --> csQisqrt()
	- Eric Sunshine renamed the following macros in order to avoid global
	  namespace pollution:
	    WIN32_VOLATILE --> CS_WIN32_CSCONFIG
	    COMP_GCC       --> CS_COMPILER_GCC
	    COMP_VC	   --> CS_COMPILER_MSVC
	    COMP_BC        --> CS_COMPILER_BCC
	    OS_DOS         --> CS_PLATFORM_DOS
	    OS_WIN32       --> CS_PLATFORM_WIN32
	    OS_UNIX        --> CS_PLATFORM_UNIX
	    OS_MACOSX      --> CS_PLATFORM_MACOSX
	    PROC_FOO       --> CS_PROCESSOR_FOO
	    CS_PROCSIZE    --> CS_PROCESSOR_SIZE
	    DO_NASM        --> CS_USE_NASM
	    DO_MMX	   --> CS_USE_MMX
	- Eric Sunshine removed the obsolete USE_PLUGINS configuration
	  property. The Jam build system now instead provides "variants", such
	  as `static'.
	- Eric Sunshine removed the obsolete JAMCONFIG_READ configuration
	  property. Both CS and 'jamtemplate' now use the more standardized
	  `Jamfile.in --> Jamfile' configuration mechanism for determining if
	  the project has been configured.
	- Eric Sunshine changed configure.ac so that it emits the header
	  property CS_USE_FAKE_SOCKLEN_TYPE to csconfig.h rather than emitting
	  the explicit '#define socklen_t int'. csdef.h now fakes up socklent_t
	  in an appropriate manner if CS_USE_FAKE_SOCKLEN_TYPE is defined.
	- Eric Sunshine fixed bug in the ObjTagMetaData rule (unix.jam) where
	  it was placing plugin meta-data in a section named ".crystal",
	  despite the fact that csGetPluginMetadata() (bfdplugins.cpp) expects
	  the section to be named ".crystalspace" (at least as of 8 July 2004).
30-Jul-2004
	- Eric Sunshine fixed bugs in csInitializer::OpenApplication() and
	  CloseApplication() where they created broadcast events on the stack.
	  This did not work well if clients attempted to take ownership of the
	  received events via csRef<> or IncRef(), for instance.
	- Eric Sunshine fixed several compilation warnings.
	- Eric Sunshine fixed bad side-effect of 29-Jun-2004 change to
	  flags.jam which fixed problem where LFlags invocations within
	  Jamfiles for plugin modules were not being respected during creation
	  a "static" variant. Unfortunately, as a side-effect, this caused an
	  explosive inclusion of multiple copies of LINKLIBS and PLUGIN.LFLAGS
	  to be added to the linker flags for the static variant, which
	  overflowed Jam's command-line length limitation.
29-Jul-2004
	- Eric Sunshine made the following changes:
	    - The cosf() check in configure.ac is now run with the C++ compiler
	      rather than the C compiler.  This allows cosf() to be detected
	      when it is a C++ compiler built-in, thus giving positive results
	      more frequently (such as with older MacOS/X, which previously
	      failed the test).
	    - Added a <cmath> configure.ac check.  If present, then it is
	      included by csdef.h before faking up cosf() and friends (if
	      needed).  This works around potential problem where the faked-up
	      functions could cause errors in <cmath> if it was later included.
	- Eric Sunshine fixed many compilation warnings throughout the project.
28-Jul-2004
	- Erotoman added MEL script for exporting Maya models
	- Eric Sunshine fixed csjava/Jamfile so that it constructs the
	  shared-library name correctly on all supported platforms:
	    MacOS/X : libcsjava.jnilib
	    Unix    : libcsjava.so
	    Windows : csjava.dll
	- Eric Sunshine fixed the Java SDK check in configure.ac so that it
	  adds "-framework JavaVM" to JAVA.LFLAGS on MacOS/X.
	- Eric Sunshine fixed bug in CS_CHECK_PROG_VERSION() (progver.m4) where
	  it would become confused and crash if the version output of a program
	  included multiple lines containing strings which appeared to be
	  version numbers. For instance, on MacOS/X, `swig -version' emits two
	  lines which fit the Swig check version number template:
	    SWIG Version 1.3.21
	    Compiled with g++ [powerpc-apple-darwin7.4.0]
	- Eric Sunshine fixed problem in csjava/Jamfile which caused Jam to
	  complain that it did not know how to create crystalspace.jar at
	  install time if the archive had not already been created by 'all' or
	  'csjava'. This problem also caused the makefile emulation setup by
	  configure.ac to fail.
	- Eric Sunshine applied some corrections to the Swig input files,
	  partly based upon a patch submitted by Brendon Costa. This fixes
	  some, but not all, Java compilation errors in Swig-generated code.
	  Also applied Brendon's patch to SimpleRoom.java. In addition to
	  addressing the remaining Java compilation errors, we still also need
	  to fix the RequestPlugins() bug (tracker #858626).
	- Eric Sunshine worked around Swig 1.3.21 bug where it generates
	  invalid Java code for the iConfigManager enumeration. The illegal
	  emitted code has the form:
	    public final static int ConfigFoo = iConfigManager::PriorityFoo;
	  rather than the legal:
	    public final static int ConfigFoo = iConfigManager.PriorityFoo;
	- Eric Sunshine fixed bug in the iEventOutlet %typemap(javacode)
	  override which prevented the iEventOutlet::equals() method from
	  being synthesized.
	- Jorrit fixed null3d renderer to the Prepare changes that were
	  done yesterday. I forgot to remember that the texture was already
	  prepared which could have bad consequences.
	- Eric Sunshine fixed bug in csArray::DeleteRange() where it failed to
	  destroy (invoke the destructor of) the last object in the range.
	  Reported by Bedrich Zaba <frogbride@seznam.cz>.
	- Peter Amstutz fixed the wxgl canvas to work on Microsoft windows
	  and added the missing wxwin.h header.
27-Jul-2004
	- Peter Amstutz added the wxgl canvas (initially developed by
	  Daniel Fryer) which makes it fairly easy to embed Crystal Space
	  into a WxWindows application using wxGLCanvas.  Mouse
	  and keyboard events are translated from WxWidgets to Crystal
	  Space, so users have the option of using either the CS or
	  WxWidgets event systems for getting input.  Note: currently
	  only supports OpenGL; the software renderer cannot be used
	  with this canvas.
	- Jorrit changed iRegion->Prepare() so that it now also frees
	  images at the end. iEngine->Prepare() already did that but it
	  was forgotten in iRegion->Prepare(). This can save up a lot of
	  memory.
	- Jorrit did a big change and cleanup to the way that the texture
	  manager works. It is no longer needed to Prepare() textures
	  or materials. So iTextureHandle->Prepare(),
	  iMaterialHandle()->Prepare(), iTextureManager->PrepareTextures(),
	  and iTextureManager->PrepareMaterials() are gone. You don't
	  need to replace them with anything. This is now fully automatic.
	  The only thing that must be done when making a new texture or
	  material is using RegisterTexture() and RegisterMaterial().
	- Jorrit also reports that in addition to the API cleanup the
	  register preparation fix also fixes the NR terrain engines so that
	  they work when used in the context of a region. The NR terrain engine
	  created internal textures but didn't prepare them as it assumed
	  they would be prepared later during engine->Prepare(). However, this
	  failed when regions are used because the textures that are internally
	  created will not be part of that region and when region->Prepare()
	  is called those textures will not be prepared.
	- Jorrit fixed a bug in the thing mesh. When it warned about oversized
	  lightmaps it would still allocate the lightmap memory. For some
	  huge oversized objects this could cause a blowup of memory usage.
	  Now lighting is disabled for such polygons.
	- PK worked on the saver.
26-Jul-2004
	- Eric Sunshine made the following changes:
	    - Added 'install' targets to csjava/Jamfile.
	    - Augmented csjava/Jamfile to properly remove built targets at
	      'clean' time.
	    - Changed csjava / Swig rule so that they no longer rely upon the
	      Swig -outdir option since this option is fairly new, and not all
	      users have upgraded.
	    - Changed %ignore csArray<csPluginRequest>::Get(int) to Get(size_t)
	      in cspace.i to fix problem with Java getting confused over const
	      and non-const variations of this method.
	    - Moved SimpleRoom.java from CS/plugins to CS/scripts/java. It is
	      now installed verbatim in $(datadir)/crystalspace/java to serve
	      as an example, rather than being compiled into crystalspace.jar.
	    - Removed legacy csjava/Makefile.
	- PK started with the implementation of the thingmesh saver
	- Keith added APPEND mode flag now for filesystem files in vfs.  APPEND
	  will not work for mem mapped files or archive files--only for regular
	  files.
25-Jul-2004
        - Philip Wyett changed the order of variable initialisation culling a
          compiler warning in chunklod.cpp.
24-Jul-2004
	- Remi Bonnet moved some code from vsh inside vfs to allow other
	  apps to load mount files at run time (new API func: 
	  LoadMountsFromFile)
	- PK made the following changes:
	    - Extended the iSyntaxService for iSaver.
	    - Implemented the iSaverPlugin for ballmesh.
	    - Fixed the texture saving in iSaver for images.
23-Jul-2004
	- Jorrit fixed csbench so it first removes the csbench_report.zip.
	  Not doing that causes corrupted zip files due to bugs in VFS.
	- Jorrit added a new test to csbench to do multiple objects in one
	  sector. Unfortunatelly this breaks bumpmapping for some reason.
	  To be investigated.
	- Jorrit fixed a z-fighting issue in the multi-object room.
	- Jorrit added CS_SYSDEF_PROVIDE_UNLINK to csbench in order to
	  compile on VC which doesn't have unistd.h.
	- Eric Sunshine fixed cspython/Jamfile so that "jam help" emits a
	  help message for the "pythmod" target.
	- Eric Sunshine fixed problem in cspython/Jamfile where invocations of
	  CFlags, LFlags, and ExternalLibs were dysfunctional for 'pythmod'
	  target.
        - Philip Wyett changed the order of variable initialisation culling a
          compiler warning in particles.cpp.
	- Eric Sunshine added an 'outdir' argument to the Swig rule (swig.jam)
	  which controls placement of the generated language-specific support
	  files.
	- Eric Sunshine added (the presently incomplete) cscript/csjava/Jamfile
	  for creation of the csjava module. Completed tasks are:
	    - Creates Swig-generated files.
	    - Builds csjava shared library.
	    - Invokes 'ant' to create the crystalspace.jar file.
	  Still to do:
	    - Implement install targets.
	    - Figure out how to determine correct shared library suffix on
	      MacOS/X, and utilize that suffix.
	    - Ensure that 'clean' targets are accurate.
	    - Remove legacy Makefile.
22-Jul-2004
	- Jorrit started work on adding a new test to csbench to test lots
	  of smaller objects.
        - Peter Amstutz fixed an initialization bug in the csvosa3dl 
          plugin that caused a crash when compiled with visual studio 
          (but not gcc).  The plugin works on Windows now.
20-Jul-2004
	- PK added GetMeshObjectType() to iMeshObjectFactory.
	- PK worked a bit on iSaver.
	- Jorrit added a new feature to bugplug to take all sectors that
	  are loaded and merge them in a single sector. All portal containers
	  will be removed too. The original sectors are still there. You can
	  return to them if you first saved the camera position with 'C'
	  (then press 'c' to return). This feature is assigned to
	  ctrl-alt-o (don't forget ctrl-d first).
	- Jorrit increased resolution of object in csbench to have a better
	  test for high poly object (roughly 32000 tris now).
	- dfryer fixed a bug (or possibly feature) in VFS where $* in vfs.cfg
	  was being treated as the app dir, not the resource dir
19-Jul-2004
	- PK made the following changes:
	    - Changed viewmesh to support the iBinarySaverPlugin.
	    - Started with the iLight dump in iSaver.
	    - Changed some code to fit the codingstyle in iSaver.
	    - Fixed the default code of the iSaverPlugin implementation.
	- Jorrit fixed the GetFactory() in the thing mesh object so that
	  it actually works now.
18-Jul-2004
	- PK changed iSaver and iSaverPlugin to support the iDocumentNode
	  system
	- PK added iBinarySaverPlugin and changed SprCal3dbinldr to support it
	- PK implemented saving of sectors and meshes
	- hangman implemented saving of camera positions
16-Jul-2004
	- res added csColor4, a descendant of csColor, with an alpha component
	  added.
	- res added a new mixmode, CS_FX_PREMULTALPHA.
	- res augmented the 'particles' particle system & physics to support 
	  alpha in particle color gradients.
	- res changed the 'particles' level to vary alpha in the fire system.
	  Together with the PREMULTALPHA mixmode, the bottom part is blended
	  additive, while the upper part is alpha-blended (thus, the fire 
	  looks more "firey" while the smoke stays opaque).
	- res changed csEvent to internally store the property names as string
	  IDs instead of csStrKeys to save some memory (it is expected that 
	  only few distinct property names are used).
	- Anders fixed DrawSimpleMesh to be more usable in 2D drawing mode.
15-Jul-2004
	- Eric Sunshine fixed shell quoting problems from 10-Jul-2004 change to
	  GenerateWin32ManifestRc rule in win32.jam which caused 'sed'
	  expressions to crash and burn on some platforms.
	- *** RELEASED STABLE 0.98.3 ***
14-Jul-2004
	- Jorrit fixed a big bug in csSafeCopyArray.  The problem was that
	  csArray was using 'memmove' but that function is illegal in the
	  context of csSafeCopyArray.  Solved this by adding a new MemMove()
	  function to the memory allocator used by csArray.  This fixes
	  InsertSorted(), Insert(), DeleteRange(), and DeleteIndex().
	- Eric Sunshine made the following changes to the Jam build system:
	    - Added an `options' argument to the ExtraObjects rule (flags.jam),
	      along with the new option "inheritcflags" which causes the added
	      object files to inherit compiler flags set on the target's normal
	      object files (in addition to whatever flags have already been set
	      manually).
	    - Augmented LinkStaticPlugins (static.jam) so that it employs the
	      new "inheritcflags" option for the target's synthesized
	      _static_init.cpp file.  This fixes a problem with use of static
	      targets in external projects where _static_init.cpp was compiled
	      without any special compiler flags, thus it was unable to locate
	      header files, such as cssysdef.h, scf.h, etc.
	- res added an example on how to obtain the global string set to the
	  iStringSet Doxygen documentation.
        - Matze fixed a jam install bug for command-line tools on OS/X where
	  they were not assigned execute permission.
	- aarobber added a Clone() function to the catmul rom spline.
13-Jul-2004
	- Eric Sunshine changed cspace.i so that it no longer exports any
	  va_list functions, such as csPrintfV(), PerformExtensionV(),
	  PutTextV(), etc. This change was necessary because Swig emits code
	  which is invalid on platforms on which va_list is implemented as a
	  simple array. ISO C++ forbids array assignment, yet Swig-generated
	  code attempts to assign a va_list to a va_list. These functions were
	  not especially useful on the scripting side anyhow. Note that the
	  corresponding var-arg (...) functions, such as csPrintf(),
	  PerformExtension(), PutText(), are still exported.
12-Jul-2004
	- Vincent Knecht performed TeXinfo markup corrections pointed by
	  Eric Sunshine in apimod98.txi.
	- Jorrit fixed a size_t related mismatch in csEvent and iEvent which
	  caused compile errors on MacOS/X.
	- Eric Sunshine eliminated underfull 'hbox' warnings from TeX in
	  apimod100.txi.
	- Jorrit fixed a bug in the engine where upon removal of a region
	  it tried to fetch the engine sequence manager even if that plugin
	  was not loaded yet. This caused crashes at exit for Crystal Core.
	- Jorrit fixed a bug in the map loader. It forgot to register portals
	  to the current region. This caused the portal objects to linger when
	  the region was deleted.
11-Jul-2004
	- res made the following changes:
	    - Removed the fake bool stuff. Compilers that are able to deal with
	      CS' usage of templates are deemed to have a 'bool' type.
	    - Some Doxygen documentation fixes.
	    - Replaced the CS_ASSERTs with CS_ASSERT_MSGs in csutil/ref.h.
	    - Removed the flattening from iEvent. Instead, iEvent now offers
	      an attribute iterator which can be used to serialize an event
	      "from the outside". Moved flattening code into a separate helper
	      class, csEventFlattener.
	    - Removed ability to store multiple event attributes with the same
	      name.
	    - Added ability to store iBase data in event attributes.
	    - Renamed iEvent::Find() to iEvent::Retrieve() due changed return
	      value (and semantics change caused by that).
	    - Fixed copy'n'paste error in csendian.h. The int64 variant of
	      convert_endian() would use little_endian_long() instead of
	      little_endian_longlong(), causing bogus results.
	    - Fixed some 64-bit warnings in VFS.
	- res fixed ivaria/cspace.i for the recent iEvent changes.
	- Vincent Knecht added instruction for building RPMs in User Manual.
	- Luca fixed a loop in the file CS\libs\csutil\cseventq.cpp. The loop
	  was behaving not properly after the change of the management of the
	  index in the csArray class.
	- Vincent Knecht modified rpm.txi to avoid an overfull hbox error,
	  and unix.txi to not display package systems advertisement in "nottex"
	  mode.
	- Luca replaced his last commit with a better solution proposed by 
	  Remi Bonnet.
10-Jul-2004
	- res fixed the Win32 manifest resource generation code to not emit
	  non-numerical characters when writing the version number - Windows
	  doesn't like non-numerical characters. Note: Not needed for CS
	  itself, but external projects may have versions with alphabetical
	  characters.
	- Keith completed commit of perf optimizations to sprcal3d loading.
	  This is mostly through avoidance of redundant calls to slow
	  functions.
9-Jul-2004
	- Jorrit fixed the engine so that before removing a sector, all
	  objects in that sector are unlinked from it. Added an
	  iSector->UnlinkObjects().
	- Jorrit fixed the iSectorList implementation in
	  iMovable->GetSectors() so that it is now safe to remove sectors
	  from the returned list.
	- Jorrit fixed the camera so that it only fires the sector listeners
	  if the sector really changes.
	- Reed Hedges added notes to the manual about removed plugins in the
	  0.98 API changes appendix
	- Vincent Knecht simplified and re-enabled levels relighting in cs.spec
8-Jul-2004
	- Jorrit fixed a compile error in partgen.
        - Matze changed some jam/configure things:
            - Install documentation in
	      $datadir/doc/$PACKAGE_NAME-$PACKAGE_VERSION.
            - Change PACKAGE_NAME from crystal to crystalspace.
	- res fixed some casts in hashmap.cpp causing grief on 64bit systems.
	- Eric Sunshine fixed a bunch of fall-out from Matze's change which
	  resulted Crystal Space being unable to find its installation
	  directory or any of its installed resources.
	    - configure.ac now emits CS_PACKAGE_NAME and CS_PACKAGE_VERSION to
	      volatile.h.
	    - Platform-specific code which attempts to determine the
	      installation location now utilizes CS_PACKAGE_NAME rather than
	      the hard-coded string "crystal".
	- Eric Sunshine made the following changes to avoid naming conflicts
	  with other packages which have "Crystal" in their names:
	    - Windows: Now searches for installed Crystal Space at
	      "Program Files\CrystalSpace" rather than
	      "Program Files\Crystal".
	    - Unix: User defaults are now stored at $HOME/.crystalspace rather
	      than $HOME/.crystal.
	    - Unix: Plugin meta-information is now stored in BFD section
	      ".crystalspace" rather than ".crystal".
	- Remi Bonnet fixed a typo in csHash::DeleteElement.     
	- Jorrit added a new iCameraSectorListener interface that you can
	  implement to get notified of when the camera changes sector.
	- res changed configure to emit a CS_PROCSIZE #define to volatile.h
	  containing the processor's bit size, superseding the 
	  CS_PLATFORM_IS_64BITS #define.
	- res changed configure to emit a TARGET.PROCESSORSIZE build property,
	  containing the processor's bit size.
	- res changed the software renderer to not use asm on 64bit machines.
	- res fixed the csddsimg Jamfile to add the plugin to the
	  'imageloaders' compile group.
	- res added a paragraph about data type sizes to the portability 
	  guidelines.
	- Jorrit changed the particles mesh to use a csRef instead of
	  a csWeakRef for the color callback. Using a weak reference there
	  seems wrong since it is very useful to have a callback for which
	  the only reference exists in the object that is holding the
	  callback.
	- Vincent Knecht updated cs.spec:
	    - Adaptation for CS PACKAGE_NAME change.
	    - Changed Group: to Development/C++
	    - Disabled levels relighting since lightmaps aren't written where
	      expected.
7-Jul-2004
	- Jorrit fixed several compile errors for gcc 2.95 as reported by
	  Darius Dawidowski. Darius also reported a warning in spr2d
	  which turned out to be a potentially dangerous uninitialized
	  local variable.
	- Jorrit fixed a bug in the bruteblock plugin. Sometimes when walking
	  around the border the material map would get accessed out of bounds.
	- res changed csEvent to use a csHash<> to store the event attributes.
	- res made a small 64bit warning fix to csHash<>.
	- Keith added function CalculateAllBoneBoundingBoxes in sprcal3d to
	  more closely match the cal3d api.  This function is very slow in
	  cal3d and should only be called when absolutely necessary--i.e. the
	  first time the model is fully loaded. Note that calling the per-frame
	  GetBoundingBox is very efficient once this previous function has
	  setup all the base data for it.
	- Keith modified the sprcal3d loader to automatically call this
	  function when models are loaded from a .cal3d file.  Loading sprcal3d
	  models is about 4x faster now due to this refactoring.
	- *** RELEASED STABLE 0.98.2 ***
6-Jul-2004
	- Reed changed VOSA3DL to load required plugins on demand rather than 
	  assume they were already loaded.
	- Eric Sunshine fixed bug in jamtemplate/app.cpp.template where it
	  asked SCF to scan CEL plugin path multiple times.
	- Eric Sunshine made parsing of MAKEFLAGS in make emulation layer more
	  robust. It should no longer be fooled by equates, such as
	  "make FOOBAR=socks all", which previously would have caused it to
	  think that the user specified -k and -s make options.
	- res made some size_t and 64 bit warning fixes to the dsplex and
	  xmlread plugins.
5-Jul-2004
	- Jorrit fixed the cs096 in csdemo.
4-Jul-2004
	- Eric Sunshine added a "sufficiently recent" test to the Cg check in
	  configure.ac.  This is needed since the CS Cg shader requires
	  features of Cg 1.2.x (at minimum).
	- Remi Bonnet fixed a bug in csColliderHelper::CollidePath. stepsize
	  arg behaved like a nbr_steps one.
	- Jorrit reverted the change from Remi because it is a dangerous
	  behaviour change. Instead Jorrit renamed the parameter and API
	  documentation to reflect what it really is and kept the old
	  behaviour.
	- Vincent Knecht updated cs.spec:
	    - Specified datadir, libdir and sysconfig switches of configure.
	    - Specified CS_CONFIGDIR in cslight commands.
	    - Re-enabled levels relighting when building NR.
	- res fixed csLightIterRenderStep::GetAttenuationTexture() to only
	  allocate the amount of memory actually required.
	- res fixed a crasher on 64 bit platforms.
3-Jul-2004
	- Remi Bonnet fixed a few signed/unsigned comparisons warnings and a
	  bug in aws where unsigned can't be used.
	- res fixed some occasions of wrong array index comparisons.
	- res fixed an MSVC compile error in glcommon2d.h.
	- Jorrit fixed the NR GL renderer so that it doesn't attempt to
	  implement floating portals if the stencil buffer is broken
	  or not available.
	- res (semi-blindly) augmented the glx canvas to use the format
	  picker.
	- res changed the glwin32 canvas to already use the GL driver database
	  during the initial pixel format selection.
	- res added a driver DB entry for old NVidia drivers with apparently
	  not-so-good-working WGL_ARB_pixel_format extensions. (NB: atm only 
	  disabled Venge's particular driver. Need more checks whether other
	  drivers are affected and whether it may be a CS issue after all.)
2-Jul-2004
	- Jorrit fixed compile errors in sprcal3d and terrfunc.
	- res changed the type of csArray<> indices and sizes from int to
	  size_t. CVS has been tagged with PRE_CSARRAY_SIZE_T_INDICES before 
	  the change.
	- res added a new appendix for 0.98->1.00 API changes.
	- res added a paragraph about the csArray<> index type change to the
	  API changes.
	- Jorrit added iRegion->Remove() to remove an object from a region.
	  There was already an Add() but the Remove() was missing.
	- res added a "pixel format picker" to the common GL canvas, a tool
	  that can help the platform-dependent GL canvases to iterate over
	  multiple formats (which are then tested for acceleration).
	- res updated the Win32 GL canvas to use the format picker.
	- res fixed csSCF::ClassRegistered() returning always "true".
	- res changed the mixmode of the terrain_fixed_splatting shader to a
	  sufficient <add /> instead of <destalphaadd />.
	- res added renderer caps for destination alpha and stencil shadow
	  support.
	- res augmented xmlshader to reject techniques that use destination
	  alpha when the renderer doesn't support it.
	- res augmented the stencil shadow plugin to not draw shadows when the
	  renderer doesn't support them.
	- res fixed cube map texture uploading on display modes <= 16bpp; an
	  incorrect size was calculated, causing wrong data to be sent to GL
	  and eventually a crash.
	- Eric Sunshine performed some clean up of the new apimod100.txi. Also
	  linked it into the documentation hierarchy via @import{}.
	- Eric Sunshine added a bunch of missing entries to
	  plugins/filesys/vfs/vfs.cfg.template, which is the vfs.cfg that
	  actually gets installed by "jam install".
	- *** RELEASED STABLE 0.98.1 ***
1-Jul-2004
	- Eric Sunshine augmented "jam install" so that CS/data/cube and
	  CS/data/flarge/mosaic-detail.dds are also installed.
	- Jorrit fixed a problem with meshes that didn't keep their pointer
	  to the material wrapper in a csRef. This could cause problems with
	  games that use regions to load/unload parts of the world and when
	  materials are being shared between regions. Warning! Having the
	  meshes keep materials with a real reference will not avoid the
	  material from being deleted from the engine lists.
	- res fixed the corruption of the graphics on Win32 when Alt+Tabbing 
	  out and back into a fullscreen app with GL canvas.
30-Jun-2004
	- Peter Amstutz added search support to the csvosa3dl plugin,
	  so that VOS servers with search support can send the world
	  as a single large download rather than requiring many
	  separate requests.  This improves performance greatly.
	- Peter Amstutz modified the the log level of logging statements
	  in the csvosa3dl plugin so that there isn't so much
	  logging spew at the default log level.
	- Jorrit modified walktest so that the default 'perftest' command
	  does 200 frames instead of 100. That is more accurate.
	- Jorrit modified Dynavis so that it will now increase the frame
	  counter faster if it detects camera movement. By doing that the
	  history information will be updated faster in case the camera
	  moves faster. This means that Dynavis will react faster to changing
	  conditions.
	- Jorrit increased benchmark test in csbench to 2 seconds.
	- Jorrit finished the optimization in Dynavis where every occluder
	  is being tested to see how useful it was. Also added two new
	  config options to dynavis.cfg to play with this.
	- Jorrit changed csbench to report performance in a format that
	  is easier to parse using some automated processor.
	- Jorrit changed csbench to use the fastest clipping setting for the
	  further tests.
	- Jorrit changed the OR GL renderer to also report number of rendered
	  triangles when -verbose is given (similar to what NR does).
	- Jorrit did a huge optimization to the NR renderer by disabling
	  z=0 plane clipping. We have to see if this gives any problems
	  at all.
	- Luca fixed an internal compiler error which MSVC6 users would get 
	  in the bugplug plugin. He replaced the recent fix he already did
	  with a more clean solution to the problem, avoiding the use of
	  ugly an #idef directive.
29-Jun-2004
	- Jorrit fixed a bug in spr3d where manually specifying sprite normals
	  didn't work.
	- Jorrit started work on a new experimental optimization in Dynavis
	  which will try to measure quality of occluders. Not enabled at
	  the moment.
	- Jorrit optimized Dynavis by allowing to use a coverage buffer that
	  is smaller in size than the screen. This can give very small
	  visibility culling errors but that should be rare (and not wider
	  or taller than a pixel).
	- Jorrit added a new config file for Dynavis where you can set
	  various options (like for example the amount of coverage buffer
	  reduction).
	- Jorrit fixed a bug in csLight for pseudo-dynamic lights. If you
	  specified a pseudo-dynamic light which is initially black the
	  influence radius would be calculated at zero and the light would
	  be ignored. Solved by not calculating the influence radius if
	  the radius is already manually given by the user.
	- Eric Sunshine added a "sufficiently recent" test to the SDL check in
	  configure.ac.
	- Eric Sunshine added csRef<> constructor and assignment operator to
	  csWeakRef<> in order to avoid ambiguous overloads when assigning
	  csRef<> to csWeakRef<>.
	- Eric Sunshine eliminated compilation warnings throughout the project.
	- Eric Sunshine fixed bug in LFlags rule (flags.jam) where it neglected
	  to apply linker flags set on plugin modules to "static" variants,
	  such as walktest_static, thus resulting in link failure.
	- Eric Sunshine fixed conflict between typedef of GLhandleARB in
	  canvas/openglcommon/glextmanager.h and /usr/include/GL/glext.h.
	- Jorrit did a small optimization to Dynavis by keeping the
	  camera transform local. Avoids a few virtual calls and also avoids
	  having to pass the camera along as a parameter.
	- Jorrit fixed a MSVC6 compatibility error with sprcal3d.
	- Reed fixed a bug in VOS/A3DL plugin: color material on static meshes
	  not set properly.
	- Vincent Knecht added building switches to cs.spec file.
	  These can be used when (re)building (S)RPM files:
	    --with debug
	    --with newrenderer
	    --with perl
	  Relighting levels is disabled for now when building NR.
	- res fixed csPixelShaderParser::GetInstructionString() appearing
	  in a "#ifdef CS_DEBUG" in the glshader_ps1 plugin.
	- Jorrit added a new small optimization to Dynavis. If inserting
	  an occluder on the coverage buffer didn't actually modify the
	  coverage and depth buffer then the occluder will be disabled for
	  a few frames (random).
	- Jorrit added a new 'toggle_ignorebadoccluder' debug command to
	  Dynavis to toggle this new feature. Also added a new
	  'Culling.Dynavis.IgnoreBadOccluders' option to dynavis.cfg.
28-Jun-2004
	- Eric Sunshine fixed csApplicationFramework destructor so that it does
	  not bomb out if csApplicationFramework::Main() was not called.
	- Eric Sunshine reverted Andrew Robberts' (aarobber) 17-Jun-2004 change
	  to csVector3 where he added anonymous union and struct around the
	  data members in order to make it simpler to set and get the vector
	  components as a float array. Unfortunately, such an anonymous
	  structure is a non-standard and unportable compiler extension which
	  is not supported by all compilers used by Crystal Space
	  clients. Instead, Eric added Set(float const*) and Get(float*)
	  methods which provide the same functionality without the dangerous
	  and unportable union/struct. Also added similar accessors to
	  csVector2 and csVector4.
	- Jorrit fixed a problem with the new Set(float*) that Eric added
	  to csVector[2-4]. The problem is that some code in CS called
	  csVector[2-4]::Set (0). This worked because that code got
	  automatically converted to Set(csVector3(0)). Now with the new
	  Set(float*) the wrong Set got called. Fixed this by adding an
	  explicit Set(float).
	- Keith Fulton added functionality to sprcal3d.  Now when you set an
	  action in sprcal3d, it remembers this and clears it explicitly when a
	  new animation is set.  If the action has completed and has already
	  been removed this has no effect, but if the action is still in
	  progress then the new animation will play accurately.  This is
	  particularly important for autolock actions which stay on the last
	  frame indefinitely.  YOU NEED CAL3D CVS AS OF 2004/06/28 TO BUILD
	  THIS.
	- Keith Fulton changed sprcal3d so that, now on initial creation of the
	  cal3d model, the bbox is calculated using frame 0 of anim 0 as the
	  base instead of the meshes as loaded.  This is because most of the
	  time 3d modelers model characters with their arms straight out
	  instead of at their sides, which makes collider creation very wrong.
	- Eric Sunshine upgraded cal3d check in configure.ac so that it demands
	  at least the 2004/06/28 version of Cal3D since this is required by
	  Keith's changes to sprcal3d.
	- Jorrit optimized Dynavis a bit. Removed an unneeded optimization that
	  caused more overhead than it is worth and also considerably cleaned
	  up the loop for FlushGeneral(). Overall this gives about a 6-8%
	  speedup on my system.
	- res made the following changes:
	    - Added a helper method to calculate tangents and bitangents for
	      triangle meshes.
	    - Updated genmesh to also provide tangent and bitangent render 
	      buffers.
	    - Improved error handling in the glshader_ps1 plugin a bit.
	- res fixed the csNullCacheManager::CacheData() implementation
	  being different from prototype.
	- res changed stenciltest to vary texture usage some more.
	- Luca fixed an INTERNAL COMPILER ERROR that happens as usually on the
	  VisualC++ 6 compiler. He made a fix only for that compiler, wrapping
	  around the fix with an #ifdef.
	- Luca fixed a problem VisualC++6 users have with inner classes,
	  which by default cannot access to any non-public member 
	  of the containing class.
	- Steven Geens added the ability to ask the CalCoreModel from
	  iSpriteCal3DFactoryState.
27-Jun-2004
	- res worked around a possible VC7 64bit warning in 
	  csIntegralHashKeyHandler<>.
	- Jorrit changed bugplug so that it hides meshes by setting the
	  CS_ENTITY_INVISIBLE flag instead of attempting to remove it from
	  the sectors.
	- Jorrit added the ability to have multiple selected meshes in bugplug.
	  ctrl-alt-m will now accept a regexp pattern which will be used to
	  match all meshes in the current sector.
	- Jorrit fixed a bug in HitBeamObject/HitBeamOutline of bruteblock
	  plugin. Now it appears to work correctly.
	- Luca fixed a problem VisualC++6 users have with inner classes,
	  which by default cannot access to any non-public member 
	  of the containing class.
26-Jun-2004
	- Jorrit added a new bugplug command to switch visibility culler of
	  the current sector. ctrl-shift-1 is assigned to switch to frustvis
	  and ctrl-shift-2 is assigned to switch to dynavis.
	- Jorrit added a new bugplug command to select a mesh by name.
	  Assigned to ctrl-alt-m.
	- Jorrit changed bugplug to use a weak reference to point to the
	  currently selected mesh. That avoids a crash at exit when
	  selecting meshes.
	- Jorrit also changed bugplug to use a weak reference for the
	  visibility culler.
	- Jorrit fixed bounding box and bounding radius drawing for bugplug
	  with the new renderer.
	- Jorrit added four new commands to bugplug to display the base,
	  colldet, viscull, or shadow polygon mesh for the selected mesh.
	  Commands are assigned to ctrl-alt-c, ctrl-alt-v, ctrl-alt-s,
	  or ctrl-alt-b.
	- res fixed a few VC7 64bit portatibility warnings and put down
	  comments like "@@@ FIXME 64bit" at problematic to-be-fixed places.
	- res enabled VC7 64bit portatibility warnings for libraries.
25-Jun-2004
	- res removed a small but unnecessary condition statement from
	  particles.cpp.
	- Jorrit fixed iEngine->GetNearbyObjects() and GetNearbyMeshes() so
	  that they correctly work for space warping portals too. This is
	  untested!
	- Jorrit did an optimization to the OPCODE plugin. Instead of
	  requesting polygons and triangulating it will now directly request
	  the triangles. This is more optimal because many meshes actually
	  support triangle meshes more efficiently than polygon meshes.
	- Jorrit implemented support for real collision detection (using
	  iPolygonMesh) for both chunklod and bruteblock terrain engines.
	  Also removed the specialized support for collision detection in
	  walktest as that is no longer needed.
	- Jorrit added a new 'cd resolution' lod value for bruteblock which
	  controls the resolution of the collision detection mesh.
	  By default it will be 256x256.
	- Jorrit reverted a change to data/terrainf/world as it causes
	  huge z-fighting on GF4 Go.
	- Jorrit attempted to implement HitBeamObject/HitBeamOutline for
	  bruteblock plugin. Untested at this moment.
	- res made the following changes:
	    - Updated OR renderers for the recent iGraphics3D changes.
	    - Fixed plugins/video/canvas/glwin32/directdriver.cpp to compile 
	      on Cygwin. Thanks to Calvin Finch for spotting this.
	    - Made some changes to bindoc to reduce bloat (ie create smaller 
	      files). File format is incompatible to earlier versions, tho.
24-Jun-2004
	- Jorrit fixed a bug in the GL renderer where it would fail to test
	  for the existance of a clipper in some cases.
	- Jorrit disabled MultiSamples in r3dopengl.cfg to make comparisons
	  between NR and OR fairer (on request by Dentoid).
	- res fixed Thing material replacing for NR.
	- res fixed csbench to also set a new material on the walls for the
	  shader benchmarks.
	- res fixed wrong VFS paths to stone2DOT3.png.
	- Vincent Knecht corrected an uppercase typo in app.cpp.template file
	  which prevented inclusion of corresponding header file.
	- Jorrit started working on support for real iPolygonMesh support
	  (for collision detection) in bruteblock terrain mesh. Not functional
	  yet.
	- res changed the render buffer creation to use two distinct methods 
	  for render resp. index buffer creation. When locking a buffer, the
	  previous data is now thrown away; however, this can be explicitly
	  disabled. Also, the expected range of index values has to be 
	  specified upon index buffer creation. These values are later passed 
	  to glDrawRangeElements(). All those changes are supposed to make VBO 
	  implementations a bit happier (so they hopefully deliver a bit more 
	  performance).
22-Jun-2004
	- Jorrit corrected the fps timings for csbench to use a constant.
	- Eric Sunshine augmented jamtemplate so that it creates a
	  well-commented full skeleton application object based upon
	  csApplicationFramework and csBaseEventHandler.  The skeleton even
	  properly instructs SCF to also scan for CEL plugins if the user chose
	  to enable CEL support.
	- Jorrit added iRenderLoopManager->Load(). The function was already in
	  csRenderLoopManager but not in the interface.
	- Jorrit changed csbench to use the new function.
	- Erotoman added camera_transform in csRenderMesh. This helps to fix
	  incorrect cube environment map of moving objects.
	- Erotoman added spherical environment map in glshader_fixed (not
	  fully working).
21-Jun-2004
	- Jorrit attempted to add new tests to csbench to try out a shader
	  with various techniques. Not sure if it works correctly yet though.
	  Needs more testing.
	- res fixed the shader technique test in csbench. A wrong "shader type"
	  parameter was passed to iMaterial->SetShader().
	- Jorrit attempted to extend csbench to also test the light_bumpmap.xml
	  shader. For this I had to create a new renderloop in code. The
	  visual effects seems weird so I'm not sure it is actually working.
	- res changed csbench to attach a normal map to the material used for
	  testing.
20-Jun-2004
	- Christian Bayle adapted debian scripts to the new configuration
	  options
	- Rhad added a radius_changed flag to csParticlesObject which allows
	  radius changes to have an effect without recreating the system.
	- Eric Sunshine made some small corrections to the Plugin HOWTO.
	- Luca added the support to replace a material on a polygon of a 
	  thing mesh object. Actually to use this new support, it is needed
	  to define the symbol __USE_MATERIALS_REPLACEMENT__ at the top of 
	  the file thing.cpp . This has been done to prevent any difficulty
	  due to this change of the source code of the thing mesh plugin. In
	  the future (after more testing and devs feedback) the symbol will
	  be removed and the new source code will be the "default" one. This
	  change has been tested successfully with OR and NR anyway.
	- Luca modified the AWS manager so that when the focus belongs to a
	  hidden component, the keyboard events are not forwarded to it.
	- Jorrit extended iShaderCompiler with a function to get all
	  priorities that a technique supports. Also added a function
	  to force compiling of a specific priority technique in a shader.
	  These new functions will be used by csbench so that it can try
	  out different techniques of a shader.
	- Keith added SetDefaultIdleAnim to sprcal3d, which allows multiple
	  idle anims to be selected from by the caller for use in
	  SetVelocity(0) calls.
19-Jun-2004
	- Rhad fixed a typo in the ode and simple physics plugins for particles
	  that was swapping the green and blue components of constant colors.
18-Jun-2004
	- Eric Sunshine added a bunch of missing 'const' directives to csSpline
	  and its subclasses.
	- Eric Sunshine fixed bug in csGetPluginPaths()
	  (csutil/generic/pluginpaths.cpp).  "jam install" places plugin
	  modules in $prefix/lib/crystal, but csGetPluginPaths() was never
	  referencing that location, so SCF would not find those installed
	  plugins.
	- res fixed csdemo after the csSpline constness changes.
	- Jorrit added a new 'csbench' application. The purpose of this
	  application is to collect benchmark and usability statistics about
	  the NR OpenGL renderer. To do that it will create a simple room with
	  a high poly object and then it will render that room for five seconds
	  with various settings for the NR GL renderer. For every run it
	  will print out the performance and also make a screenshot. All
	  this information is collected in 'csbench_report.zip'.
	  This application is not finished yet. The basic framework is there
	  and it currently also does two tests already but more tests will
	  follow.
	- Jorrit added a new iGraphics3D->SetOption() so that you can set
	  renderer specific options from within the application. Implemented
	  the "StencilThreshold" option for the NR GL renderer.
	- res fixed a compile error in the glwin32 driver detection on some 
	  older MinGW versions.
17-Jun-2004
	- Jorrit changed g3d->ClosePortal() to also have a new use_zfill_portal
	  flag. When this flag is set the renderer will zfill the portal area.
	  Only the NR renderers do this. With OR it is the engine itself
	  that will zfill the portal area so the OR renderers ignore this
	  flag.
	- Jorrit fixed a compilation error with OR GL renderer.
	- Jorrit fixed several issues with the rotating door in flarge so that
	  it now works perfectly in OR (these issues have to do with
	  setting up the correct render priorities and zmode flags).
	- Jorrit fixed a bug in the NR OpenGL clipper which prevented
	  z-plane clipping from working correctly in case the plane clipper
	  was not selected for the portal. This fixes the rotating door in
	  flarge for NR too.
	- Jorrit fixed 'flame' command in walktest so that it puts the
	  flame particle system at the correct position.
	- res made the following changes:
	    - Worked around non-working "inverted fog" (used by the fixed 
	      terrain shaders) on certain GeForce FX cards.
	    - Improved memory usage of bindoc a bit.
	    - Fixed 'int' data handling in bindoc.
	    - Changed csMemFile to not use realloc() to work around problems
	      on VC.
	    - csConfigDocumentIterator now properly handles a 0 subsection.
	- aarobber added an anonymous union to csVector3 to allow for easier
	  accessing/storing of float* data to a csVector3
	- aarobber reverted a wrongly committed r3dopengl.cfg
	- res augmented the glwin32 canvas to also determine the version of 
	  the GL driver DLL. This version can be used for comparisons in the
	  driver database.
	- aarobber extended csSpline to allow for specifying/accessing of data
	  per control point and not just per dimension.
16-Jun-2004
	- Jorrit cleaned up stencil clipping in the NR/OpenGL renderer.
	  Now mask 128 is used for both stencil clipping and floating portals
	  and mask 127 is used for stencil shadows. Also when a floating
	  portal is active normal stencil clipping is no longer used.
	  This fixes several bugs with floating portals (not enough to actually
	  fix the rotating door in flarge but in simpler cases it is working
	  very well now). Note that this is not finished yet. If there is
	  another portal (floating or not) behind the floating portal then that
	  other portal clip area is currently fully ignored. This is something
	  we have to fix too.
        - Matze made the following changes:
            - Fixed some warnings in csHashMap::Iterator.
            - Did a blind fix to csString::RTrim. It was obviously wrong and
              icc reported that. Didn't test it though.
            - Fixed some more pointless consts in tinyxml code.
            - Fixed warnings in csProcCaps.
            - Some more small warning fixes for icc.
	- Jorrit changed g3d->OpenPortal() so that it is now called for
	  every portal instead of only for floating portals. There is a new
	  'floating' parameter which indicates if the portal floats or not.
15-Jun-2004
	- Jorrit fixed two serious problems with the NR floating portals
	  implementations (csGLGraphics3D::SetupClipPortals()):
	    - First SetupClipPortals() (which is being called by DrawMesh())
	      itself calls DrawMesh() which can cause bad things to happen.
	    - Second, SetupClipPortals() simply ignored the portal/polygon
	      normal for setting up the stencil. This means the z-buffer
	      contents of the portal would be incorrect.
	  Unfortunatelly both fixes don't yet solve floating portals completely
	  with NR. Have to investigate further.
	- Jorrit applied a patch to walktest from Pascal Kirchdorfer
	  (kirchdorfer@users.sourceforge.net). This patch makes sure walktest
	  again correctly resizes when the window is resized. This was broken
	  when this resizing functionality was added to csView by Pascal.
	- Jorrit added a missing clipportal_dirty = true to the NR GL renderer
	  BeginDraw() implementation.
	- Jorrit added dumping of material and textures to bugplug
	  'dumpeng' command.
	- Jorrit extended iLoader->LoadLibraryFile() so that it now also
	  has a checkDupes parameter (default false). Also the checkdupes
	  parameter from LoadMapFile() is passed along to LoadLibraryFile()
	  if the map contains 'library' statements.
	- Jorrit added a new attribute 'checkdupes' to 'library'.  So, if you
	  say:
	    <library checkdupes="true">somelib.lib</library>
	  Then during loading of the library it will check for duplicate
	  objects (factories, textures, materials, ...) and don't load them
	  if they are already loaded in the engine.
	- res added iterator support to csConfigDocument.
	- res added an assignment operator to csStrKey.
	- res fixed a crash in the glwin32 canvas due a non-opened ext manager.
14-Jun-2004
	- Jorrit implemented correct static lighting for static lod. In case
	  of casting shadows, the lowest detail object that has a shadow
	  caster will be used. In case of receiving shadows all children
	  will get the shadows.
	- res made some small comment changes in ivideo/shader/shader.h and
	  csutil/csuctransform.h.
	- Remi Bonnet added DeleteElement() and NextNoAdvance() to csHash.
	- res augmented the cslibs configure check to pass a "--compiler" flag
	  along to cslibs-config. This will be utilized by the next
	  cs-win32libs version to choose correct compiler-specific libs.
	- res updated the docs for a new cs-win32libs release.
	- res (with help from Manolo Padron Martinez) fixed a crash with 
	  terrainf that seemed to occur on certain NV hardware.
13-Jun-2004
	- res changed the Win32 thread error reporting to be less 
	  macro-centric.
	- Rhad fixed use_manual_colors in genmeshes by adding handling to
	  csGenmeshMeshObject::PreGetShaderVariableValues.
	- Rhad altered csGenmeshMeshObject::PreGetShaderVariableValues to use
	  the existing renderbuffer if the new data set will still fit inside.
	- res fixed constness support in the GL extension manager.
	- res changed the simple mesh to use some const members.
	- res changed iRenderBuffer->CopyToBuffer() to accept const data.
	- res slightly changed the genmesh color buffer size check to use
	  '!=' instead of '<'.
	- Eric Sunshine upgraded the "Creating an External Application" HOWTO
	  so that it discusses the 'jamtemplate' utility, and so that it
	  discusses MacOS/X in the older Makefile-based section.
	- Eric Sunshine fixed cs-config/Makfile.template and the
	  cs-config/makevar.macosx fragment so that it works for creation of
	  external Makefile-based projects on MacOS/X.  Previously, it was
	  quite broken.  Added cs-config/appwrap.sh, which allows external
	  application Makfiles to create proper Cocoa application wrappers on
	  MacOS/X when using a Makefile-based build.  (This is now documented
	  in the HOWTO.)
12-Jun-2004
	- res made all Win32 platforms, not only VC, use CS' own opendir() etc 
	  functions.
	- res changed CS' Win32 opendir() etc to use native Win32 functions
	  instead of the VC only _findfirst() etc.
	- res fixed VfsNode::FindFiles() to not remove a trailing backslash
	  from drive letters on Win32.
	- Neil Mosafi made a few fixes to the csvosa3dl plugin to make it build
	  on Windows
11-Jun-2004
	- Peter Amstutz added support for setting animation loops on
	  models to the csvosa3dl plugin
	- Peter Amstutz added code to support the iMozilla plugin in
	  csvosa3dl (but #ifdef'd out since the iMozilla plugin has
	  not been comitted yet).
10-Jun-2004
	- res fixed the OR renderers for the recent DrawSimpleMesh() changes.
	- res fixed the Fixed FP plugin to reset the multitexturing setup on
	  deactivation.
	- res fixed the software shader plugin. They don't really do anything,
	  but even failed that. Instead of the SW shaders, a multipass 
	  lighting shader, intended for GL only, was used, causing suboptimal
	  quality.
9-Jun-2004
	- Jorrit fixed a bug in the engine where it would ignore (and not
	  cache) lighting generated for hierarchical objects. This would
	  make the door too dark because it is a child object.
	- Jorrit fixed a bug with a hardcoded alpha render priority for
	  explosions in walktest. This could cause particles to be
	  rendered after other objects sometimes.
	- Jorrit fixed the OR OpenPortal() command (for floating portals).
	  The function to do a z-fill of the buffer (to clear the z-buffer
	  for geometry in the portal) was backface culled and thus didn't
	  do anything.
	- Jorrit fixed a bug in the NR OpenGL renderer. It would sometimes
	  call glCullFace() which would bypass the statecache.
	- Jorrit attempted to fix the NR OpenPortals() command by trying
	  to use better ways to fill the portal but it didn't seem to have
	  worked very well.
	- res added a member to csSimpleRenderMesh containing the 
	  transformation.
	- res augmented DrawSimpleMesh() with a 'flags' parameter.
	- res added a DrawSimpleMesh() flag to specify coordinates in screen
	  space.
	- res fixed bug 762021, 'Win32: "Sticky" main window after app quit',
	  by adding DestroyWindow() calls to the Win32 canvases Close().
8-Jun-2004
	- Jorrit fixed a bug in the FindByNameWithChild() function in the
	  engine. This function would crash if there were unnamed meshes
	  in the map file.
	- Jorrit discovered that the csMath3::Area3() function was wrong
	  in CS. It didn't actually calculate the area. Because changing
	  this function is pretty dangerous I decided to make two new
	  functions:
	    csMath3::DoubleArea3(): which will calculate the real
	    double area (but not signed) with a working formula.
	    csMath3::Direction3(): which will return something <0 or
	    >0 depending on the direction of the triangle.
	- Jorrit renamed csPoly3D::GetSignedArea() to GetArea().
	- Neil Mosafi changed odedynam's default move callback to not call
	  UpdateMove() unless something has actually changed.
	- Eric Sunshine fixed 2-Jun-2004 bug in msvcgen.jam which caused
	  --accept and --reject patterns to be ignored by msvcgen.pl.
	- Eric Sunshine removed the `eventtest' program.  Although useful when
	  making low-level modifications to the event system, it is not
	  otherwise especially meaningful to have around.  To make it easy to
	  recover the program if revival is warranted or if testing needs to be
	  done, it has been tagged in CVS as EVENTTEST_OBSOLETE.
	- Eric Sunshine fixed bug in csExpandPath() for Windows
	  (csutil/win32/winsyspath.cpp) where it neglected to convert
	  Cygwin-format paths to Windows format before invoking the low-level
	  Win32 path manipulation functions on the path.  Hopefully, this will
	  resolve problem where csGetConfigPath() (csutil/win32/instpath.cpp)
	  failed to respect CRYSTAL environment variable under CYGWIN.
	- res did the following changes for map2cs:
	    - Fixed map2cs to use csStrings instead of fixed-size buffers for
	      map parsing. map2cs can now handle much longer tokens.
	    - Added a sanity to entity property parsing to detect malformed
	      maps.
	    - Added a hack to the map2cs parser to correctly return "" tokens. 
	    - Fixed map2cs to not emit an empty "_defaultsky" thing if no
	      skybox was specified.
7-Jun-2004
	- Jorrit added an assignement operator to csHashMapReversible.  This
	  actually fixes the crash at exit bug for some of the CSWS apps.
	- Jorrit also added fixed the csEvent assignement operator so that
	  it copies the 'attributes' field too.
	- Jorrit enhanced the build instructions so they invite people to try
	  out the new renderer first.
	- Jorrit updated the FAQ. Removed a few outdated entries, fixed a
	  few wrong statements, and clarified a few entries.
	- Jorrit updated the wrong link to the related projects page in
	  the documentation.
	- Jorrit updated the features list in the documentation.
	- Jorrit updated the collision detection howto to talk more about
	  OPCODE plugin and also changed this in some other parts of the
	  documentation.
	- Jorrit did some additional updates to the documentation:
	    - Updated link to the sunsite data directory from cs096 to cs098.
	    - Updated feedback chapter a bit.
	- Jorrit removed the terrbig terrain engine. It is old, obsolete
	  and unmaintained. It is better to use the NR terrain engines in any
	  case. Before removing I tagged with TERRBIG_OBSOLETE.
	  Note that tbconv and tbtut are also removed.
	- Peter Amstutz removed #ifndef CS_USE_NEW_RENDERER from
	  sprbuild.cpp which caused models loaded using the crossbuilder
	  plugin to not work in NR!
	- Jorrit fixed the parsing of <portaltraversal> so that you can now
	  also safely say <portaltraversal/> instead of
	  <portaltraversal>yes</portaltraversal>. Same for <zoffset/>.
	  Fixed a few other cases in CS where synldr->ParseBool() was used
	  wrong (parsing of heightmap generation, <alwaysanimate/> for
	  procedural textures, <persistent/> for render steps, and terrfunc
	  parser).
	- Jorrit added two entries to the FAQ.
	- res fixed halos for OR (and also a mem leak related to NR halos).
	- res removed the bumpmap stuff from csgfx, which was only used by the
	  (deprecated some time ago) bumptest app.
	- Eric Sunshine removed hard-coded version number from map2cs in
	  several locations; replaced with CS_VERSION.
	- Eric Sunshine fixed a lot of Texinfo errors and warnings in material
	  recently added to the CS manual.
	- Neil Mosafi added GetObject3Ds() function to iVosSector.  This
	  returns all the loaded objects in the sector.
6-Jun-2004
	- Jorrit modified the Jamfile so that the isotest application
	  is only build with new renderer.
	- res made the following changes:
	    - Some places in GL where the COMBINE texenv mode was used also
	      check for the presence of the COMBINE ext (and not only the
	      multitexturing ext.)
	    - For Cg FPs, you can now also bind render buffers to a texture
	      coordinates by specifying "texture coordinate <Texture parameter
	      name>" as the destination.
	    - Augmented the Cg plugin with a facility to dump out debug info of
	      the used programs. Can be enabled by enabling the
	      "Video.OpenGL.Shader.Cg.DebugDump" config setting.
	- res disabled static lighting for the mesh in waterdemo, added a
	  missing FinishDraw() call and made some code cleanups.
	- Eric Sunshine fixed the Jamfile modfications by Jorrit so that they
	  work correctly with msvcgen project generation.
	- Jorrit modified the parser so that you can now nest libraries
	  (i.e. include a library from another library).
	- res added csBitArray::AreSomeBitsSet().
	- res changed the Cg VP part to have a "special" path for NV VPs where
	  the compiled VP is changed to have input matrices aligned on 
	  4-register boundaries (as needed by TrackMatrixNV()). Can be turned
	  off by disabling the "Video.OpenGL.Shader.Cg.NvVpRealign" config
	  setting.
	- res added glMatrixMode to the state cache.
	- res fixed the Fixed FP to better work when no combine ext is present.
	  In this case, a fixed FP will only refuse to load if texture layers
	  are used.
	- res fixed NR halos.
	- res fixed msvcgen to properly handle template variable assignments
	  with '='s (e.g. --set=%cflags%='/D foo=bar').
	- Neil Mosafi changed the csvosa3dl plugin
	    - Fixed some confusing log messages
	    - Plugin-wide relight system which should _almost_ work perfectly
	- MatzeB reports:
	  Replaced crystal spaces VERY poor stringhashfunction with something
	  better (D.J. Bernstein algo). It's also totally unnecessary that the
	  CS hashmap only uses prime numbers has hashtablesize. That is only
	  necessary if you have a poor hash function as we had before. A more
	  efficient way is to make the hashtable use size of 2^n, this allows
	  for efficient & mask for clipping hashfunction to hasharea and allows
	  for efficient lazy algorithms for dynamically growing hashtables.
	  If I just had time to implement this stuff...
5-Jun-2004
	- res made the following changes:
	    - Added the *f versions of floor and ceil to csdef.h.
	    - csBox2 can now be constructed from a csRect.
	    - Added a method to iClipper2D to return whether the clipper is a
	      simple box or a poly clipper.
	    - Changed bugplug to also clear the Z buffer when frame buffer
	      clearing is enabled.
	    - Made csSectorIt in the engine pooled.
	    - Throughout the GL canvas and renderer(s) (primarily NR, with
	      some necessary OR fixes), changes were made to reduce the state
	      switches needed.
	    - The pixel write mask and vertex data array client states are now
	      cached by the GL state cache.
	    - The GL NR clipper now also sets a 2D clipping rect (effectively
	      a scissor rect) when using stencil clipping.
	    - Setting the "stencil threshold" to -1 essentially means "always
	      prefer plane clipping".
	    - Changed the OR to use the GL extension manager, too (instead of
	      the "custom" ext management).
	- Rhad fixed the NV specific vertex program paths for the Cg shader
	  plugin.
	- Neil Mosafi added some more dynamics code to csvosa3dl plugin, and
	  the iVosObject3D interface now exposes it's collider to the user.
4-Jun-2004
        - Andrew Craig removed misplaced return in sprcal3d as reported by
          Ingie from the mailing list.
	- Jorrit finally bit the bullet and removed the iso engine. The old
	  iso engine sources (and loader) are tagged with the ISO_OBSOLETE
	  tag so you can get them back if you want. Note that I did NOT
	  remove the 'isotest' application! Instead the isotest application
	  has been rewritten to use the 3D engine and it 'simulates' isometric
	  view only in the way that the camera moves. It does require new
	  renderer though as it uses stencil shadows.
	- Jorrit added views to the new isotest. You can switch with tab.
	- Peter Amstutz fixed an mistake in an entry in the driver database
	  "Rage128" -> "Rage 128"
	- Jorrit optimized genmesh so that with NR the lighting update
	  routine is only called if the shaders actually need color
	  information. That speeds up levels that use stencil shadows or
	  other shaders that don't require software vertex lighting.
	- Jorrit did a significant optimization in
	  csShaderVariable::SetValue() for matrices. The current
	  implementation would do 'new/delete' all the time and this is
	  VERY bad (especially with MSVC) for performance. Now it only
	  does 'new' if needed.
	- Neil Mosafi added support for a3dl:sphere to the csvosa3dl plugin.
	  Neil Mosafi added support for a3dl:cylinder to the csvosa3dl plugin.
	  It will now automatically load these objects into the engine.
3-Jun-2004
	- Eric Sunshine added MsvcGenVariable rule to msvcgen.jam, which allows
	  clients to create msvcgen %foo%-style template variables on-the-fly.
	  This rule provides access to msvcgen.pl's new --set option.
	- Eric Sunshine completely rewrote documentation for the ExternalLibs
	  rule in flags.jam.  The existing documentation was 100% incorrect and
	  highly misleading.
	- Eric Sunshine augmented jamtemplate/createproject.sh so that it can
	  optionally set up a dependency upon CEL in the generated Autoconf and
	  Jam support files.
	- Jorrit removed CollidePath() from iCollideSystem and instead
	  added that function to csColliderHelper. It is not specific to any
	  CD system so it fits better in csColliderHelper.
	- aarobber added a Clone function to iMeshObject.  None of them are
	  currently implemented and will return 0.
	- Jorrit changed the order of the include directories in Jamfile.in
	  so that $(BUILDTOP) include is used before the global include
	  in CS. That fixes compilation of CS in another build dir.
	- Jorrit started work on updating the isometric engine to NR. The
	  tiles display but there is a problem with scrolling. Also mesh
	  objects don't display yet.
	- aarobber fixed the iMeshObject's Clone function to return a csPtr.
	- aarobber added a Clone function to iMeshObjectFactory.  None of them
	  are currently implemented and will return 0.
	- aarobber implemented csParticlesObject's Clone function.
	- Jorrit fixed bruteblock. It would allocate a color buffer with
	  only room for two components per color instead of three. This
	  would crash in many cases.
	- Jorrit did a small optimization to bruteblock. Instead of getting
	  g3d from the object registry all the time it is now cached
	  in the mesh object.
	- Eric Sunshine fixed msvcgen/workspaces.jam so that librenderercommon
	  appears only in wkstypical, and librender3dcommon appears only in
	  wksnewrenderer.
        - Andrew Craig uncommented out the lock variable for sprcal3d
          animations. It was preventing animations from "locking" on the
          last frame.
2-Jun-2004
	- Jorrit reverted the change from Andres Freund that checks on the
	  presence of <params> in a mesh object. There are cases where
	  <params> doesn't have to be given so this test is invalid.
	- Jorrit fixed a bug in OPCODE where it would ignore meshes that
	  have only one triangle.
	- Jorrit fixed a bug in OPCODE that would cause it to calculate
	  wrong collision in case two transforms different from identity
	  were given.
	- Eric Sunshine added acosf() and asinf() to set of functions faked up
	  when CS_USE_FAKE_MATH_H_FLOAT_FUNCS is defined.  Needed by OPCODE.
	- Jorrit added a warning to the loader when objects are being scaled
	  in the <move>. This is not allowed by CS.
	- res fixed a copy'n'paste error in the DDS loader.
	- Jorrit and MatzeB fixed a bug in OPCODE which only occurs in optimize
	  mode and using X86 processor.  The problem is again an aliasing
	  problem between different types on the same memory address.  This is
	  not guaranteed to work in C++.  This fixes a falling through the
	  floor problem in walktest.
	- Eric Sunshine made the following changes to msvcgen:
	    - Added --set option to msvcgen.pl which allows clients to
	      create their own template interoplation variables. For example,
	      --set=cflags='/D "__CRYSTAL_SPACE__"' creates a variable which
	      can be interpolated into template files as %cflags%.
	    - Eliminated hard-coded knowledge of almost all template variables
	      from msvcgen.pl.  (The only ones still remaining are those which
	      msvcgen.pl creates itself for referencing generated material.)
	      Instead, clients now create, via --set, whichever variables they
	      require.  Consequently, removed the following options and related
	      interpolation variables:
                  --build-root          %buildroot%
                  --cflags              %cflags%
                  --debugcflags         %debugcflags%
                  --debuglflags         %debuglflags%
                  --debuglibrary        %debuglibs%
                  --lflags              %lflags%
                  --library             %libs%
                  --meta-file           %metafile%
                  --name                %name%, %upcasename%
                  --project-extension
                  --project-name        %project%, %makefile%
                  --source-root         %sourceroot%
                  --target              %target%
                  --workspace-extension
	    - Worked around corruption in generated files caused by MSYS
	      shell's insistence upon transmogrifying absolute-path-like
	      command arguments into Windows format pathnames.  For example, /D
	      would be corrupted into something like C:/Path/To/Msys/Root/D.
	      This caused havoc with MSVC compiler and linker options, such as
	      /D, /I, /nologo, etc., which were passed to msvcgen.pl on the
	      command-line.  To side-step this issue, msvcgen.jam now prepends
	      the literal "%null%" to any values passed to msvcgen.pl on the
	      command-line which are likely to trigger this unfortunate MSYS
	      behavior.  msvcgen.pl treats the %null% as just another
	      interpolation variable reference, and replaces it with the null
	      string (since %null% happens to be undefined).
	    - Changed msvcgen.jam so that it no longer passes tuples created
	      with MsvcGenConfig from msvcgen phase 1 to phase 2 via the
	      command-line since these tuples were subject to the same MSYS
	      corruption as the information passed to msvcgen.pl via the
	      command-line.  Instead, MsvcGenConfig tuples are now collected
	      directly by phase 2.
	    - Augmented the MsvcGenConfigFile rule in msvcgen.jam so that it
	      can be invoked multiple times to specify additional configuration
	      files.  Previously, clients were restricted to specifying only a
	      single configuration file.
	    - Added MSVCGEN_VERBOSE option to msvcgen.jam which makes the
	      msvcgen process very verbose when set to 'yes'.  This complements
	      the existing MSVCGEN_SILENT option.
1-Jun-2004
	- Jorrit fixed a bug in the particles loader. The test to see if a
	  factory is ok was wrong.
	- Jorrit removed unneeded copy of transformation from OPCODE plugin.
	- Jorrit fixed collision pair handling in OPCODE plugin. It was
	  assuming that the code using the CD system would call
	  GetCollisionPairs() right after calling Collide() but that
	  assumption is not true. This bugfix fixes a problem with OPCODE
	  and flarge were it would let the camera jump a bit in the main hall.
	- res changed the DDS loader to be more endian-agnostic.
31-May-2004
	- Jorrit added "IncludeDir plugins" back to Jamfile.in (it was removed
	  yesterday).  Otherwise, many video plugins failed to compile.
	- Eric Sunshine removed the ugly "IncludeDir plugins" again from
	  Jamfile.in and fixed the potentially ambiguous #include statements in
	  the various video plugins which were incorrectly referencing files
	  relative to $(TOP)/plugins rather than $(TOP).  (CS/bin/efed.pl to
	  the rescue.)
	- Vincent Knecht updated cs.spec:  Added %files entries for .inc and
	  .fun files in include/csutil/
	- Eric Sunshine applied patch from Bedrich Zaba <frogbride@seznam.cz>
	  (plus minor cleanup by Eric) which addresses the following issues:
	    - Added iSpriteCal3DState::GetAnimationTime(),
	      GetAnimationDuration(), and SetAnimationTime().
	    - Fixed bug: csSpriteCal3DMeshObject destructor failed to remove
	      the vertex buffer manager client it had registered (when
	      configured for old renderer).
	    - Fixed bug: awsCmdButton was mismanaging the reference count of
	      its `caption' member.
	    - Modified AWS manager to be able to destroy (and hide) AWS
	      components without crashing or leaking resources.
	    - Modified AWS component class to be able to catch more events
	      (such as "draw" and "preprocess").
	    - Fixed serious bugs with embedded components when awsComponent was
	      acting as a proxy for awsEmbeddedComponent.  It failed to invoke
	      methods of the wrapping object, and also was linking itself
	      rather than the wrapping object into the component chain.  The
	      bugs rendered awsEmbeddedComponent technology fairly inoperative
	      except in the simplest cases.
	- Eric Sunshine fixed awstest so that it builds again following Bedrich
	  Zaba's patch.
	- Anders Stenberg fixed splatting in bruteblock which was broke
	- Marten fixed an #include statement in csutil/win32/instpath.cpp. Also
	  fixed a typo in a comment in same file.
	- Rhad fixed csPNGImageIO::Save to correctly handle the default NULL
	  mime string by presuming the only supported format of 'image/png'.
30-May-2004
	- Jorrit fixed the lightning plugin so that it correctly gets the
	  bounding box and radius from the genmesh.
	- Eric Sunshine made the following changes to the new --with-vos
	  configure option:
	    - Now disables the VOS test if --without-vos or --with-vos=no is
	      specified.
	    - Now behaves sanely if given only --with-vos or --with-vos=yes,
	      rather than assuming that "yes" is the path to the VOS pkg-config
	      files.
	    - Fixed --help message so that it shows how the path for the VOS
	      pkg-config files can be given.
	- Eric Sunshine removed the OPCODE compile-time assertion that
	  sizeof(bool)==1 since this assertion is not satisfiable on all
	  platforms (such as MacOS/X), and since the OPCODE library itself does
	  not actually require bool to be one byte.
	- Eric Sunshine eliminated compilation warnings in csBitArray. Also
	  made minor fixes to Doxygen comment.
	- Eric Sunshine made the following changes:
	    - configure.ac now checks for MacOS/X-specific libmx.a.
	    - configure.ac now checks if libm.a or libmx.a provide
	      floating-point variations of the standard math.h functions
	      (cosf(), sinf(), etc.).  If not, CS_USE_FAKE_MATH_H_FLOAT_FUNCS
	      is emitted to volatile.h
	    - csdefs.h now fakes up floating-point variations of the standard
	      math.h functions if CS_USE_FAKE_MATH_H_FLOAT_FUNCS is defined.
	- Eric Sunshine fixed compilation errors and warnings in
	  csGLFontCache::csGLFontCache() and csGLFontCache::WriteString().
	- Eric Sunshine applied patch to csparser from Andres Freund
	  <anarazel@users.sourceforge.net> which causes it to emit a meaningful
	  error message rather than crashing if <params> is not given for
	  <meshobj> or <meshfact>.
	- Eric Sunshine fixed bug in ApplicationIcon rule in resource.jam where
	  it ignored the "platform" argument.  This caused macosx.jam, for
	  instance, to use cslight.ico (which is for Windows) as the MacOS/X
	  cslight.app icon.
	- Eric Sunshine made the following changes to the Jam build system:
	    - Changed the IncludeDir rule usage.  It must now be invoked with
	      only a single directory at a time, rather than multiple
	      directories.  The directory is now specified as a
	      whitespace-delimited list of tokens (much like with the SubDir
	      rule, except that the path is relative to the current directory),
	      rather than a raw pathname.  It now understands the
	      "ignoresubdir" option, which tells it to use the directory
	      literally rather than assuming it is relative to the current
	      subdirectory.
	    - Augmented msvcgen.jam so that it now also overrides the
	      IncludeDir rule.  It collects the specified directories and
	      applies them automatically (via /I directives) to the generated
	      project files.
	- Eric Sunshine added an example to the jamtemplate-synthesized
	  Jamfile.in which shows how to set additional compiler and linker
	  options for msvcgen.
	- res fixed the moving light in terrain. Due the Y offset it would
	  move higher and, until eventually the terrain was considered "out of
	  influence radius" for the light, causing the diffuse pass not to be
	  drawn.
	- res augmented the syntax services to also recognize the <zequal />
	  zmode.
	- res added edge drawing support (not really all edges, but close
	  enough) to the GL NR plugin.
	- res changed terrainf to use the zequal mode for the splatting
	  passes. This reduces the visibility of the seams.
29-May-2004
	- Peter Amstutz added a "--with-vos" option to the configure
	  script to set the PKG_CONFIG_PATH environment variable when
	  searching for VOS.
	- res updated bruteblock to not emit render meshes for a material for
	  a block if the material in question doesn't appear on the material
	  map (for that block).
	- res added a sanity check to the opcode glue.
	- res changed csBitArray to support resizing after init.
	- res fixed a VC6 compile error in libcanvascommon.
28-May-2004
	- Eric Sunshine fixed bug in CS/include/Jamfile where it failed to
	  install APIdeclare.inc and DbgHelpAPI.fun from csutil/win32.
	- Eric Sunshine fixed bugs in the Cc, C++, ObjC, and ObjC++ Jam rules
	  (compiler.jam and objectivec.jam) where -I/usr/local/include was
	  being mentioned before -I$SRCDIR/include, which meant that installed
	  Crystal Space headers would be found before (possibly more recent)
	  local development headers.
	- res updated Opcode to version 1.3.
	- res fixed the Opcode plugin to compile on non-Win32 platforms.
	- Jorrit made the Opcode plugin the default plugin in walktest. Also
	  changed 'walkall' target to build opcode instead of rapid.
	- Jorrit submitted a patch from Pascal Kirchdorfer
	  (kirchdorfer@users.sourceforge.net) so that the csView will by
	  default fix the view and perspective center when the window is
	  resized. He also added a new function (iView->SetAutoResize()) to
	  disable this again. Disabling this will not get back to the old
	  behaviour because if this is disabled the new csView will not even
	  attempt to fix the view rectangle.
27-May-2004
	- Jorrit fixed a bug in the engine so that engine->RemoveObject()
	  will correctly link a mesh from its parent if it is a hierarchical
	  mesh.
	- Jorrit extended thing so that when it gives an oversized lightmap
	  warning it will also show the name of the mesh instead of only
	  the name of the polygon.
	- Jorrit fixed a bug reported by Bedrich Zaba (frogbride@seznam.cz).
	  In the thing mesh the min_static_color_values csRGBpixel value
	  was initialized with 256,256,256. However csRGBpixel can only hold
	  unsigned char and 256 wraps to 0 then. This could cause performance
	  degradation.
	- Anders added a color buffer to bruteblock, currently just initialized
	  with (0.5, 0.5, 0.5) to avoid overbright terrain.
	- res optimized the GL text writer. It now does less state changes and
	  draws text with background more efficiently (via some GL blend mode
	  setup instead of using quads to create a background).
26-May-2004
	- Keith Fulton fixed bug in HitBeam code which assumed that all meshes
	  for a sprcal3d were attached to the model instance.  This is not
	  required.
25-May-2004
	- Eric Sunshine updated references to the SourceForge CVS server in the
	  user manual from cvs.crystal.sourceforge.net to cvs.sourceforge.net
	  since the former address no longer works.
	- Eric Sunshine disabled generation of the MSVC wksall workspace for
	  now since it generally just confused people who failed to read the
	  manual to learn that they should be using wkstypical.  Also, wksall
	  was not providing any specific benefit at this time since we do not
	  presently have any experimental modules (those which would not appear
	  in wkstypical).  Anyhow, experimental modules ought probably populate
	  a wksexperimental workspace, which would be much less confusing for
	  non-manual-reading users.
	- Jorrit fixed chunklod terrain engine so it calls Cleanup() on the
	  terraformer sampler after using it. This cleans up a lot of memory.
	- Jorrit fixed castshadows for chunklod. It was using a
	  CS_ALLOC_STACK_ARRAY but with a huge array. So the stack would
	  overflow. It now uses a normal memory allocation instead.
	- Jorrit removed several tests in the software renderer to correct
	  for inaccurate clipper. As far as I can see these tests are not
	  needed and they cause entire polygons to be removed if such a test
	  succeeds. This could cause severe render errors when using the
	  software renderer.
	- Keith Fulton added functions to sprcal3d to set animations by index
	  number instead of only by name.
24-May-2004
	- Jorrit added a proper copy constructor to csHashMapReversible.
	  Without that copy constructor doing a copy of such a hashmap
	  will cause the pointers to the internal hashmaps to be copied
	  instead of making new objects. This fix makes sure that it is
	  now safe to assign 'csEvent' structures. This in turn should
	  have fixed crash at exit in cswstest but that doesn't seem
	  to be the case.
	- Jorrit changed the engine plugin so that it now reports the
	  number of sectors that are drawn in case bugplug is present
	  and -verbose commandline option is given.
	- Anders made brute block terrain plugin honour the movable transform
	- res fixed some bogus ARB code in the terrain shaders.
        - Philip Wyett reduced the arithmetic within SetupMesh () in brute.cpp.
23-May-2004
	- Eric Sunshine fixed ambiguous assignment from csRef<> to csWeakRef<>
	  in csEngine::GetEngineSequenceManager().  Reported by David
	  Hendrickson <onyxkana@hotmail.com>.
22-May-2004
	- res changed CS_EMIT_BUILD_RESULT to CS_EMIT_BUILD_PROPERTY in the
	  ODE 'extern "C"' test to fix the build property emission.
21-May-2004
	- res added some cleanup code to NR halo drawing to fix the problem
	  with the disappearing HUD (or, more general, stuff not being drawn).
	- res removed the support for "normalized texture coordinates" from
	  chunklod. (The unnormalized TCs where scaled to [0..1] in the shaders
	  anyway).
	- res fixed the texture coord generation in simpleformer.
20-May-2004
	- res updated map2cs to not write <camera /> into the sky render
	  priority.
	- res re-added the ability to map2cs to have a sky without having to
	  explicitly mark faces as sky portals. Can be avoided by setting the
	  "skyportalsonly" property of worldspawn to 1.
	- res fixed worldspawn in the Hammer script.
19-May-2004
	- res fixed the VBO render buffer to bind a 0 buffer after buffer
	  creation and releasing.
	- res augmented the glwin32 canvas to support an extension
	  "setglcontext" which allows it to set it's GL context as the current
	  (useful if CS is used alongside other GL stuff).
	- res augmented the glx canvas with "setglcontext" support.
	- Eric Sunshine changed jamtemplate so that it synthesizes a Jamfile.in
	  rather than a Jamfile. The synthesized configure script creates a
	  Jamfile from Jamfile.in at project configuration time. This scheme is
	  more normalized, more standardized, requires less special-case
	  handling (there is now no difference between building in the source
	  tree or at some other location), and makes the 'distclean' target
	  100% accurate (previously, it would leak a Jamfile if the build
	  directory differed from the source directory).
18-May-2004
	- Eric Sunshine made the following change to msvcgen.jam:
	    - Fixed bug in LinkWith where, though Frank changed it to properly
	      resolve library dependencies, it nevertheless neglected to
	      consult the EXTERNALLIBS .LFLAGS and .LIBS properties for the
	      fully resolved library list.
	    - Fixed LinkWith so that it removes duplicates from the library
	      list which it assigns to DEPEND.
	- Eric Sunshine disabled MSVC6 warning C4503 "'identifier' : decorated
	  name length exceeded" which is triggered by thing.cpp/ref.h.
	- Eric Sunshine augmented the ODE check in configure.ac so that it also
	  determines if `extern "C"' should be used for the functions exported
	  by ODE.  This is needed for the cs-win32libs package which exports
	  functions with `extern "C"' to avoid name mangling so that the
	  package can be used with many different compilers.  Other platforms
	  do not need `extern "C"', nor do Windows installations in which ODE
	  has been installed manually.
	- Jorrit changed iEngine->CreateTexture() so that it asks the
	  texture format from the texture manager instead of just
	  loading CS_IMGFMT_TRUECOLOR. By doing that it is now possible
	  to load textures with alpha channel using CreateTexture().
	- res fixed sorting for partgen-type meshes. The camera_origin member
	  of the render mesh wasn't set correctly.
	- res made some optimizations to partgen: the render buffers are now
	  DYNAMIC instead of STATIC (results in an FPS boost for me) and the
	  indices aren't copied over every time, only when the index buffer
	  is created, as they don't change.
17-May-2004
	- Eric Sunshine made the following msvcgen-related changes:
	    - Added --source-root and --build-root options to msvcgen.pl, as
	      well as %sourceroot% and %buildroot% substitutions.  If
	      specified, these should be paths (typically relative) pointing at
	      the roots of the source and build trees. Template files can
	      utilize these values rather than hardcoding those paths. For
	      instance, %sourceroot% might be used to compose /I directives
	      pointing at the project's header directory, and %buildroot% might
	      be used to copy built targets to the top-level build location.
	    - Augmented msvcgen.jam so that it invokes msvcgen.pl with the
	      --source-root and --build-root options with relative paths
	      computed from invocations of the MsvcGenSubDir rule. This makes
	      it simple to refer to resources and locations within the source
	      and build trees without hardcoding the paths into the templates.
	    - Augmented jamtemplate's msvcgen template files to utilize
	      %sourceroot% and %buildroot%. It should now be possible for many
	      external projects to utilize these template files without
	      modification (even if those projects have different directory
	      structures than projects created by jamtemplate).
	    - Augmented the CS msvcgen templates to utilize %sourceroot% and
	      %buildroot%.
	- Eric Sunshine fixed CS_CHECK_PTHREAD (checkpthread.m4) so that it
	  sets cs_cv_sys_pthread_recursive=no if cs_cv_sys_pthread==no.  This
	  fixes problem where AS_IF() in configure.ac following invocation of
	  CS_CHECK_PTHREAD() resulted in a shell error if pthread was not
	  found.
	- Eric Sunshine made Jam test and usage in configure.ac more tolerant
	  of whitepsace in Jam path.
	- Eric Sunshine worked around BoostJam incompatibility triggered by the
	  Jamrules files synthesized by jamtemplate.  It was invoking FDefines
	  before jamcompatibility.jam emulated this rule for BoostJam.
	- Eric Sunshine eliminated compilation warnings in viewmesh.cpp.
	- Eric Sunshine fixed cspython/Jamfile so that the 'pythmod' module is
	  now a dependency of the 'all' and 'plugins' pseudo-targets.
	  Previously, it was a dependency only of 'install', which meant that
	  it got built only at installation time (unless the user built it
	  explicitly).
	- Jorrit removed DeleteNext() from the iterators in csHash.  These
	  functions could not compile (the 'hash' that is given to the
	  iterators is const so it cannot be modified) and since nobody seems
	  to be needing them (they are broken anyway).
	- Eric Sunshine fixed bug in Jam build system where .csplugin file (if
	  not embedded) was being installed by 'install_plugin' and 'install'
	  even if Plugin rule had been invoked with "noinstall" option.
	- Eric Sunshine added "nohelp" option to Plugin invocation for
	  'dynavis_debug' target in dynavis/Jamfile.
	- res made the following changes:
	    - Fixed msvcgen to correctly honor LibDepends dependencies.
	    - Augmented msvcgen.pl to remove duplicate supplied dependencies.
	    - Sanitized the VC7 library template. Some experimental dynamic lib
  	      related stuff crept in.
	    - Fixed a problem in jamtemplate's template7/ws.tpl that prevented
	      the Release build config from being useable.
16-May-2004
        - Philip Wyett eliminated gcc compiler warnings in simpleformer.cpp.
        - Andrew Craig enhanced viewmesh by letting the user select a mesh
          file to load when using a socket on a model.
	- Jorrit extended iKeyValuePair so that you can now attach multiple
	  values (by name) to a key value pair. GetValue()/SetValue() are
	  still supported and will set the 'value' value. Also extended the
	  map loader for this new feature.
	- res updated the "External Libs" manual page for the new cs-win32libs
	  release.
	- Steven Geens made the HitBeam methods of sprcal3d faster.
	  They require the newest cal3d cvs.
        - Andrew Craig updated viewmesh again.  You can now specify
          hardtransform rotations (via dialog box) to use when attaching
          a mesh to a socket.
15-May-2004
	- Eric Sunshine added implementation of FReverse rule to 2.4 section of
	  jamcompatibility.jam since it is missing in Jam 2.4 but is needed by
	  the overridden SubDir rule in jamcompatibility.jam and by other
	  custom rules we define.
        - Philip Wyett eliminated gcc compiler warnings in brute.cpp.
	- Eric Sunshine made the following changes to 'jamtemplate':
	    - Added 'msvcgen' support.
	    - Added --without-cs option to synthesized configure.ac so that
	      routine maintenance tasks (such as MSVC project generation) can
	      be accomplished without having CS installed.
	    - Upgraded build instructions in generated README.
	    - Fixed aesthetic problem with reported result of "build mode"
	      check in configure.ac.
	- Eric Sunshine fixed cspython/Jamfile so that it installs _cspace.so
	  (_cspace.dll) alongside cspace.py.  This was the intention from the
	  beginning, but a minor oversight placed it in the CS plugin
	  directory. Reported by Michael Franz Aigner
	  <crystal-space@amfranz.com>.
	- Eric Sunshine corrected a number of problems in the msvcgen templates
	  in CS/scripts/jamtemplate which were copied from 'crystalcore': (1)
	  removed incorrect and unnecessary defines; (2) removed incorrect
	  library paths; (3) removed incorrect library references; (3) removed
	  unused build modes; (4) fixed incorrect paths; (5) general cleanup
	  and unification.
	- Eric Sunshine made the following changes to 'jamtemplate':
	    - Now synthesizes config-msvc.h, which is used by MSVC builds in
	      which the configure script is not invoked (thus, config.h is not
	      available).
	    - Now synthesizes a project-global header which performs the
	      appropriate abstraction of importing config.h or config-msvc.h,
	      depending upon the build circumstances.
	- res added a declaration of iBase to weakref.h.
	- res added a sanity check for the sector in the NR part in
	  csEngine::Draw().
	- res changed a few header files that incorrectly had a GPL
	  boilerplate rather than LGPL.
	- res added a "struct" hash element handler.
	- res fixed a typo in Jamrules.template.
14-May-2004
	- Eric Sunshine worked around VS.NET warning C4345 in blockallocator.h.
	- Eric Sunshine augmented the Jam check in configure.ac so that it now
	  rejects 'ftjam' and other overly old versions (in addition to the
	  Apple-modified Jam, which it had already been rejecting).
	- Eric Sunshine moved the GNU libtool / Apple libtool check out of
	  configure.ac and into the project-agnostic
	  mk/autoconf/checklibtool.m4 so that it can be used by external
	  projects.
	- Eric Sunshine generalized the CS_CHECK_PTHREAD() check and moved it
	  out of configure.ac and into the project-agnostic
	  mk/autoconf/checkpthread.m4 so that it can be used by external
	  projects.
	- Jorrit fixed explo, fire, snow, spiral, and emit so that they
	  now use a single csRenderMesh (if NR is enabled) instead of
	  one for every particle. In case of a very complex emit particle
	  system that I tested with this improves performance from 10
	  to 40 fps! The explo particle systems seems broken though.
	  I have to investigate that.
	- Eric Sunshine generalized the Python SDK check from configure.ac and
	  moved it to the project-agnostic mk/autoconf/checkpython.m4 under the
	  name CS_CHECK_PYTHON(). There is also a convenience macro,
	  CS_EMIT_CHECK_PYTHON(), which emits the build properties expected by
	  the Jam system. These macros are now suitable for use by external
	  projects.
	- Jorrit fixed the explo mesh object so that it works correctly
	  again.
	- res fixed the partgen Jamfile to also contain a LibDepends statement.
	- res changed the way the texture coordinates are used in the terrain
	  plugins. chunklod now behaves like before Anders' recent terrain
	  changes, bruteblock is unfortunately not 100% compatible to this yet.
	- Jorrit added constructor and = operator to csWeakRef for assigning
	  csPtr directly. It is very common to do the following:
	    csRef<T> bla = ...; // Something that returns csPtr<T>.
	    csWeakRef<T> weakbla = bla;
	  This constructs avoids the need for the indirect assign.
13-May-2004
	- Eric Sunshine generalized the CS_EMIT_PACKAGEINFO() macro in
	  packageinfo.m4 so that it can work with any suitable emitter macro,
	  such as CS_JAMCONFIG_PROPERTY() or CS_MAKEFILE_PROPERTY(), rather
	  than being hardcoded to recognize only the literal strings "make" and
	  "jam".  (For backward compatibility, the "make" and "jam" emit
	  targets are still recognized.)
	- Eric Sunshine generalized the CS_OUTPUT_INSTALLDIRS() macro in
	  installdirs.m4 so that it can work with any suitable emitter macro,
	  rather than being hardcoded to always use CS_JAMCONFIG_PROPERTY()
	  (though it still defaults to CS_JAMCONFIG_PROPERTY() if an emitter is
	  not specified).
	- Eric Sunshine added CS_CHECK_MKDIR macro (mkdir.m4), which determines
	  the commands to create a directory and a directory tree. Assigns them
	  to shell variables MKDIR and MKDIRS, and invokes AC_SUBST(). This
	  macro is a generalization of the same functionality from CS's
	  configure.ac, which now instead employs the new macro.
	  jamtemplate/configure.template also now invokes this macro.
	- Steven Geens made some improvements to sprcal3d's HitBeam methods.
	- res fixed static lighting for chunklod.
        - Philip Wyett elimenated gcc compiler warnings in chunklod.cpp.
12-May-2004
	- Jorrit added iMaterial->GetTextureLayerCount() and GetTextureLayer()
	  to NR too (but with an empty implementation) so that we can get
	  the swig stuff to work compatible between NR and OR.
	- Jorrit removed 'waterdemo' from walkall target.
	- Jorrit removed the gtreeldr plugin. It is pretty useless.
	- Eric Sunshine augmented the Doxygen comments for iMouseDriver and
	  iJoystickDriver so that they give an indication of legal values for
	  button and joystick numbers.
	- Vincent Knecht removed calls to iTextureManager::SetVerbose() and
	  iMeshWrapper::DeferUpdateLighting in tutorial2.py script.
	- Eric Sunshine generalized the CS_EMIT_BUILD_PROPERTY(),
	  CS_EMIT_BUILD_RESULT(), and CS_EMIT_BUILD_FLAGS() macros in emit.m4
	  so that they can work with any suitable emitter macro, rather than
	  being hardcoded to always use CS_JAMCONFIG_PROPERTY() (though they
	  still default to CS_JAMCONFIG_PROPERTY() if an emitter is not
	  specified).
	- res augmented msvcgen with the ability to specify debug versions of
	  the cflags/lflags/libraries.
11-May-2004
	- Eric Sunshine made some clarifications and corrections to the
	  'simple' tutorial, AWS "getting started", and iGraphics3D Doxygen
	  comments based upon reader feedback.
	- Eric Sunshine fixed bugs in cstool/initapp.h where it failed to
	  include the headers declaring the interfaces it used in the various
	  CS_REQUEST_FOO macros it defined.  This resulted in each macro
	  querying the non-specialized version of the scfInterface<> template
	  rather than the version specialized for the particular interface if
	  the client had not itself #included the appropriate header.
	- Eric Sunshine changed the methods of the non-specialized version of
	  scfInterface<> so that they throw an assertion failure if invoked.
	  It is _always_ illegal to invoke these methods since they have no way
	  of gleaning correct information about an interface.  They exist only
	  as place-holders for the interface-specific specialized versions of
	  scfInterface<>.
	- Jorrit reverted the removal of Free() from csApplicationFramework.
	  It must work like that since it is illegal to call
	  DestroyApplication() from the application class destructor (the
	  csRef's are not cleared yet at that point)
	- Steven Geens removed the include to iutil/fontserv.h from
	  include/cstool/initapp.h.
	- res reverted Jorrit's reversion of the Free() removal. Added a note
	  to the source explaining why calling DestroyApplication() in the
	  csApplicationFramework destructor is legal.
	- res fixed include/cstool/initapp.h to correctly #include
	  ivideo/fontserv.h.
	- Vincent Knecht made the following changes to cs.spec:
	    - Prefixed source file name with URL.
	    - Building is done by the make emulation layer, which will
	      automatically call system installed jam if present, else use CS
	      provided jam.
10-May-2004
	- Jorrit added a missing file in the new 3dsmax exporter from Luca
	  Pancallo. Now it should work.
	- Eric Sunshine changed LinkPlugin rule in unix.jam so that it only
	  uses the plugin's basename as an argument to -soname rather than the
	  full path to the plugin in the build directory, since that was not
	  especially meaningful.  As a side-effect, this fixes a problem with
	  the _cspace.so module and RPM building where it complained that it
	  was unable to find "required and provided libraries".  Reported by
	  Vincent Knecht and Andre Duclos.
	- res made some minor changes to csApplicationFramework: some
	  nomenclature changes (DisplayError -> ReportError, mp_object_reg ->
	  object_reg), made object_reg protected, made dtor protected, added
	  new Free() method (to delete the instance and call
	  DestroyApplication() afterwards).
	- res removed csApplicationFramework::Free(). DestroyApplication() is
	  now called in the destructor.
	- Eric Sunshine fixed a couple resource leaks in
	  libs/generic/scanplugins.cpp where it was incorrectly copying strings
	  with csStrNew() before pushing them onto iStringArrays.  iStringArray
	  makes its own copy, so the manual copy was not needed.
	- Eric Sunshine removed the following obsolete, unused, unmaintained
	  and/or buggy modules. To simplify revival of these modules from the
	  CVS Attic, they have been tagged as indicated.
	    mdltest --> MDLTEST_OBSOLETE
	    svgalib --> SVGALIB_OBSOLETE
9-May-2004
	- Vincent Knecht made the following changes to cs.spec:
	    - Added current dir to PATH when invoking jam, so building
	      Crystal Space by rpm can be done with CS provided jam if not
	      present.
	    - Specified null2d canvas on cslight invokation.
	    - Removed reference to include/csappframe directory.
	    - Added include/ivaria/*.i to the list of devel %files section.
8-May-2004
	- res fixed csApplicationFramework to be CS_CSTOOL_EXPORT.
	- res fixed simpmap to compile again.
	- res fixed the compilation of OR renderers after the DrawMesh()
	  recent change.
7-May-2004
	- Jorrit fixed a problem with the terrain loader when parsing
	  booleans.
	- res split up csRenderMesh in 3 structures. csRenderMesh was used to
	  transport both data needed by the actual rendering and data only
	  needed by the preparating steps (e.g. shader pass setup). Now, the
	  renderer is using a stripped-down version of csRenderMesh only
	  consisting of render-relevant stuff. Also, the mesh/mix/alpha modes
	  should be modificable by the preparating steps, so they were moved
	  into a new struct as well. Now, the preparating steps can't modify
	  the csRenderMesh anymore (passed in as const), but can return mode
	  data.
	- res made csSet<>::In() const.
	- res added "shader technique tags". They allow some finer control over
	  what techniques validate than the default hardware-capability based
	  fallback system. For example, you can tag some techniques with a tag
	  "bumpmap", and later offer an option in the app to disable
	  bumpmapping, which would instruct the tag system to reject shaders
	  with a "bumpmap" tag.
	- res added some multipass techniques for the or_lighting_detail*
	  shaders.
	- res added a CS_ASSERT_MSG macro to make it possible to attach a
	  message to an assert condition (eg explain a possible reason for the
	  triggering of the assertion).
	- res added some docs to csutil/callstack.h.
	- Eric Sunshine made the following changes to csList<>;
	    - Fixed strange logic where IsEmpty() was implemented as 'return
	      (head == 0) && (head == 0)'.
	    - Made IsEmpty() const.
	    - Fixed brokeness of InsertBefore() and InsertAfter().
	      InsertBefore() was actually inserting the new item _after_ the
	      indicated item; and InsertAfter() was inserting the new item
	      _before_ the indicated item.
	    - Fixed some crash-worthy code in csList<>::Iterator.
	- Eric Sunshine updated simpmap.txi to reflect Frank's changes to
	  keyboard event handling from several months ago.
	- Eric Sunshine fixed bug in jamtemplate/Jamfile.template which
	  prevented 'clean' targets from being removed when 'distclean' was
	  invoked.
	- Eric Sunshine merged the csappframe library into cstool. Also updated
	  out-of-date csApplicationFramework documentation.
	- res added some more documentation to ivideo/rendermesh.h.
	- Eric Sunshine fixed bugs in awsEmbeddedComponent::LinkAbove() and
	  LinkBelow() where they were linking the embedded component into the
	  component list rather than the subclassed wrapper, with the result
	  that methods, such as awsManager::RecursiveDrawChildren(), were
	  invoking methods in the wrong object. (I think that other methods,
	  such as Unlink(), and possibly those dealing with 'parent' and
	  'top-child', suffer from the same shortcoming. Someone needs to
	  perform a thorough audit.)
6-May-2004
	- res fixed the NR GL renderer to handle resize events.
	- res fixed texture downsampling in the NR GL renderer. It could
	  happen that a dimension of the image became 0.
	- Anders did the following changes to terrain in NR
	    * Made chunklod use terraformer
	    * Added a new terrain renderer (bruteblock)
	    * Did various updates to terraformer (like implementing bicubic
	      filtering of heightmap data)
	    * Changed the "lod distance" lod value to "splatting distance",
	      since that is more descriptive
	    * Updated the terrain world files to reflect changes
	    * Changed the materialmap colors to... look better
	  Some problems with materialmap was introduced though (in case it
	  was not already there.) Seems to be problems related to terrain size
5-May-2004
	- Eric Sunshine worked around problem caused by Jam2.4/BoostJam
	  work-around of 2-May-2004 for problem where Jam complained about
	  inability to locate $(BUILDTOP)/Jamrules.  Unfortunately, that work
	  around resulted in volatile.h not being installed when the build
	  directory differed from the source directory.  Now employs a
	  different work-around which should make everyone happy.
	- Eric Sunshine fixed the definition of INSTALL_DATA in install.jam so
	  that it employs whitepace after the -m directive in order to be
	  compatible with older 'install' programs.
	- Eric Sunshine eliminated several gcc 2.95.4 compiler warnings in
	  chunklod.cpp.  Also a couple places in csTerrainObjectLoader::Parse()
	  where code was returning a boolean when a csPtr<> was called for.
	- Eric Sunshine worked around a bug in Swig's Perl5 module where it
	  generates garbage code when a class and instance method have the same
	  name, and when an overload of an instance method accepts variable
	  arguments.  The garbage code takes the form of accesses to
	  non-existent variables and completely illogical control flow.
	- Eric Sunshine removed the following obsolete, unused, unmaintained
	  and/or buggy modules. To simplify revival of these modules from the
	  CVS Attic, they have been tagged as indicated.
	    cssocket --> NET_OBSOLETE
	    ensocket --> NET_OBSOLETE
	    milk2spr --> MILK2SPR_OBSOLETE
	    netman   --> NET_OBSOLETE
	    netmtst  --> NET_OBSOLETE
	    rlecodec --> RLE_OBSOLETE
	- Jorrit added a new version of the 3dsmax exporter script from
	  Luca Pancallo. This version adds terrain (for NR only) and static
	  lod support.
	- Jorrit fixed a compile problem in cstool after removal of the
	  network driver.
	- Eric Sunshine fixed bug in Swig rule (swig.jam) where it failed to
	  search for the input Swig .i file in the current directory (as
	  documented) if a directory was not explicitly provided.
	- Eric Sunshine split the MsvcGenConfig rule (msvcgen.jam) into two
	  rules: MsvcGenConfig and MsvcGenConfigFile.  The problem with the old
	  unified rule was that it was impossible to assign a property a null
	  value.  Also fixed a bug in MsvcExternalLibrary where it could add an
	  empty entry to the LIBRARIES list, which would then cause a bogus
	  `--library=' option to be passed to msvcgen.pl.
	- res augmented the generated Win32 resources with a manifest.
	- res replaced the SetLODDistance() and SetErrorTolerance() terrain
	  options with the more flexible SetLODValue() mechanism.
	- Eric Sunshine fixed bug in msvcgen.jam where tokens the 'sed'
	  expression which transformed path references in the generated icon
	  .rc file were not properly protected. For instance, if the generated
	  'sed' expression was supposed to strip "$(TOP)/" from the emitted
	  icon reference, and TOP was ".", then "./" would unexpectedly match
	  any character followed by a slash, rather than matching a period
	  followed by a slash (as intended).
	- Eric Sunshine fixed bugs in jamtemplate/Jamfile.template where it was
	  invoking incorrect rules and failed to clean up generated files when
	  the 'clean' target was invoked.
	- Neil Mosafi changed the csvosa3dl plugin.  A sector will now listen
	  to updates and respond when children (obj3d and light are changed.
	  There is a separate relight thread which regularly checks if things
	  need relighting.  Added some dynamics support:
	    - Set up dynamic system.
	    - Cube to iRigidBody.
	    - Convert PolygonMesh (if static) to iRigidBody.
4-May-2004
	- Eric Sunshine made the following changes to the build system:
	    - Added ApplicationIconDefault and ApplicationIcon rules to
	      resource.jam.  ApplicationIconDefault allows querying and setting
	      the default icon(s) for all GUI and/or console applications.
	      ApplicationIcon allows querying and setting the icon for a
	      particular application, thus overriding the default icon.  These
	      rules are platform agnostic and work for all supported platforms.
	    - Added application icon support to win32.jam.  It now respects
	      icons assigned by ApplicationIconDefault and ApplicationIcon.
	    - Augmented Jamrules so that it sets a default icon for GUI
	      applications on Windows.  This means that all GUI Crystal Space
	      applications now get an icon; not just Walktest, csdemo, and
	      cslight.
	    - Added a flashy new Windows ICO in place of the old drab one.
	    - Removed the MacOS/X-specific ApplicationIconDefaultOSX and
	      ApplicationIconOSX rules.  Instead, macosx.jam now respect icons
	      assigned by the generic ApplicationIconDefault and
	      ApplicationIcon.
	- Jorrit changed iMeshWrapper->GetShadowCaster() and
	  GetShadowReceiver() so that they now only query for the respective
	  interfaces when being called. That will make it easier later to build
	  those multiplexing versions for static lod on demand.
	- Jorrit fixed a bug in the engine when it would try to do lighting.
	  It would also attempt to init and cache lighting for meshes that
	  were not in any sector. This could cause crashes as some meshes
	  assumed that they were in a sector. This fixes a bug when relighting
	  a level that defines 'meshobj' outside sectors (this is useful in
	  combination with libraries) and where you use 'meshlib' to pull
	  the object in a sector. If the 'meshlib' was not used then the
	  'meshobj' would remain in the engine without any sector.
	- res changed the ApplicationIcon Jam rule to set the icon path to
	  SEARCH_SOURCE if no path was explicitly provided. Without this
	  change, was apparently not utilized and the icon file not found.
	- Eric Sunshine applied the same SEARCH_SOURCE fix to the
	  ApplicationIconDefault rule.
	- res updated msvcgen.jam to honor application icon specified by
	  ApplicationIconDefault and ApplicationIcon.
	- res changed the cslight Jamfile to use the ApplicationIcon rule to
	  set its custom icon.
	- Eric Sunshine made the following changes to msvcgen.jam:
	    - Fully generalized msvcgen (finally) for use by external projects
	      by removing hardcoded assumptions about resource and tool
	      locations, availability, and configuration.
	    - Added new user-visible MsvcGenSubDir rule which informs msvcgen
	      where in the source tree the project files are expected to live,
	      and provides sufficient information for msvcgen to compose
	      relative paths for reference to other resources from within the
	      generated project and .rc files.  (In the future, this
	      information will also be used for "freeze" rules which copy the
	      generated files from the build directory back to the source
	      tree.)
	    - Added new user-visible MsvcGenTemplateDir rule which informs
	      msvcgen where the project template files reside.
	    - No longer blindly publishes various top-level msvcgen targets.
	      This did not make sense when msvcgen support was not enabled for
	      a particular client.  Now, only publishes targets appropriate to
	      the MSVC versions requested by invocations of MsvcGenSubDir.
	    - Eliminated dependency upon ugly libs/csutil/win32/mergres.sh
	      script
	- Eric Sunshine fixed memory leaks in csSpriteCal3DMeshObject's
	  HitBeamOutline() and HitBeamObject().  Reported by Ben Thomas
	  <ben.thomas@wickedstudios.com>.
3-May-2004
	- Eric Sunshine augmented all the "build" instructions in the user
	  manual to indicate that the project can be built with both Jam and
	  'make'.  Also added information explaining how to obtain, build, and
	  install Jam.  Finally, updated much outdated or incorrect information
	  in the "Introduction" and "Build and Install" chapters.
	- res fixed a VC6 compile error in chunklod.
	- Eric Sunshine fixed a bug in the Swig rule (swig.jam), which was
	  introduced with the large re-write of 15-Apr-2004, where it failed to
	  respect the global SWIG.FLAGS, which might be set by the configure
	  script, for example.  This problem manifested when the project was
	  configured for the new renderer (--enable-new-renderer), for
	  instance, since Swig did not know that it should generate code
	  applicable to the new renderer.
2-May-2004
	- Eric Sunshine changed pubapi.dox so that it no longer excludes
	  $(TOP)/include/csutil/win32 and csutil/unix.  In the past, these were
	  excluded because Doxygen complained about finding multiple
	  declarations of SysSytemDriver (one per platform); however
	  SysSytemDriver was finally eradicated on 23-Jul-2003, so it is no
	  longer necessary to make this exclusion.  Furthermore, these
	  directories may contain useful classes which the user might wish to
	  use (such as csWin32RegistryConfig).
	- Eric Sunshine augmented crystal.m4 so that it applies
	  CS_PATH_NORMALIZE() to the results of several cs-config invocations.
	  This should resolve a problem for some Windows users in which the
	  paths returned by cs-config were in DOS format (containing
	  backslashes), which were interpreted incorrectly by the Bourne shell
	  invoked by Jam to compile and link programs.
	- Eric Sunshine performed Texinfo mark-up correction and cleanup in new
	  material added to engine/internal.txi.  Also cleaned up the grammar
	  and performed some re-writing to make the discussion more idiomatic.
	- Jorrit started working on implementing lighting correctly for
	  static lod meshes. Currently the children of a static lod mesh
	  are not registered to the visibility culler. Since lighting
	  (precalculated lighting) is handled through the visibility culler
	  this means that these child objects are basically being ignored.
	  To solve this I'm going to work on having a iShadowReceiver and
	  iShadowCaster in the mesh itself which is going to delegate shadow
	  handling to the appropriate child(ren). Currently I only
	  added iMeshWrapper->GetShadowCaster(). This doesn't do anything
	  yet except return the shadowcaster of the mesh itself.
	- Eric Sunshine removed the difficult-to-maintain, legacy, GNU
	  make-based build system. However, in order to avoid alienating users
	  by forcing them to download, install, and use Jam, the CS configure
	  script now performs these additional tasks:
	    - If Jam is not installed, then it is built automatically on behalf
	      of the user from a local copy of the Jam source
	      (CS/apps/tools/jam) and deposited into the root of the build
	      directory.
	    - A makefile is synthesized which responds to all of the top-level
	      targets to which the Jam build system responds. The makefile
	      simply forwards these requests over to Jam with appropriate Jam
	      options to simulate 'make' output and behavior as closely as
	      possible.
	  These changes make it possible for users to continue using 'make'
	  without ever having to know or care about Jam.
	- Eric Sunshine propagated the CS_EMIT_BUILD_PROPERTY(),
	  CS_EMIT_BUILD_RESULT(), and CS_EMIT_BUILD_FLAGS() Autoconf macros out
	  of configure.ac and into the new CS/mk/autoconf/emit.m4.  These
	  macros are sufficiently generic for use in external projects now that
	  the legacy GNU make-based build system has been removed.
	- Eric Sunshine added a --disable-make-emulation switch to configure.ac
	  which allows the user to disable synthesis of the new makefile
	  emulation layer.
	- Eric Sunshine worked around problem where Jam 2.4 and BoostJam
	  complained of failure to locate $BUILDTOP/Jamrules when the source
	  and build directories differed.
	- Eric Sunshine worked around shortcoming in Jam 2.4 and BoostJam which
	  caused all buildable targets to be built when 'dumptargets' was
	  invoked. This fixes a problem where Jam would want to build all these
	  targets when the configure script invoked 'dumptargets' to synthesize
	  the 'make' emulation layer
	- res augmented the documentations for the platform-specific APIs with
	  a notice about the platform-dependency.
	- res updated snapshot.py to use 'cvs.sourceforge.net' as a hostname in
	  the CVS/Root files for generated CVS snapshots. This seems to be
	  required after some recent apparent changes in SF's CVS.
	- Erotoman fixed spr2d uvanimation in NR
	- res undid an accidential commit of csutil/win32/volatile.h.
	- Eric Sunshine augmented configure.ac's "jam" check so that it will
	  reject the seven-year old, Apple-modified Jam which ships with
	  MacOS/X.  Although, this Jam resides in a private location
	  (/Developer/Private/jam) in recent OSX releases, some users might
	  have it in their PATH anyhow.  Also, with older OSX releases, it was
	  in a publicly accessible location (/usr/bin/jam).
	- Eric Sunshine fixed bug in csperl5/Jamfile where Jam complained
	  "don't know how to make <plugins!cscript!csperl5>cswigpl5.inc" if
	  Swig was not installed.  As a side-effect, this problem caused the
	  'make' emulation synthesis performed by the configured script to fail
	  if Swig was not installed and the user had given the --with-perl
	  configure option.
	- Eric Sunshine removed the following obsolete, unused, unmaintained
	  and/or buggy modules. To simplify revival of these modules from the
	  CVS Attic, they have been tagged as indicated.
	    cloth       --> CLOTH_OBSOLETE
	    clothldr    --> CLOTH_OBSOLETE
	    cocoa2d     --> COCOA2D_OBSOLETE
	    cs2xml      --> CS2XML_OBSOLETE
	    demosky     --> DEMOSKY_OBSOLETE
	    demosky2    --> DEMOSKY_OBSOLETE
	    simplecloth --> CLOTH_OBSOLETE
	- res added a note about the CS_FX_GOURAUD removal to the API
	  modification appendix.
1-May-2004
	- Jorrit added a new data/terrainf/world which is a variant of
	  data/terrain/world that uses the fixed shaders. Keep in mind that you
	  have to do -relight on this level to get lighting.
	- res fixed some left occasions of CS_FX_GOURAUD in OR code.
30-Apr-2004
	- Eric Sunshine changed the Install* rules in install.jam so that they
	  grist the source files with $(SUBDIR). This fixes a bug where
	  like-named resources would be installed at the wrong location. For
	  instance, win32/csosdefs.h was being installed as csutil/csosdefs.h,
	  macosx/csosdef.h, unix/csosdefs.h, and win32/csosdefs.h.
	- Jorrit unified the NR and OR engine a bit more. The csEngine::Draw()
	  and StartDraw() functions are now almost the same. To do that
	  I moved some stuff out of the render loop into the engine again
	  (I don't know why that stuff was put in the render loop in the
	  first place). Removed one version of Draw() from iRenderLoop. It
	  is no longer needed now.
	- Jorrit added iSector->GetRenderLoop() and SetRenderLoop(). With
	  this function it is possible to set a different renderloop for
	  one specific sector. If this is not set (default) then the default
	  engine renderloop will be used.
	- Jorrit added a new <renderloop> tag to the sector definition so
	  that you can specify a renderloop for a sector in a world file.
	- Jorrit changed some warnings into notifies and others into errors
	  in the XML shader compiler plugin.
	- res updated the iDocument documentation by adding that a 0 iterator
	  is never returned.
	- res fixed xmlread to not return a 0 attribute iterator.
	- res slightly clarified a message in xmlshader.
	- Jorrit fixed a bug in the new portaltraversal flag. The
	  portals would be traversed anyway.
	- Jorrit started a new document that explains the inner workings of
	  the engine.
	- res changed the sprcal3d plugin to not read from the pointer to the
	  locked normals render buffer. While this doesn't make a difference
	  on drivers that don't have VBO support, it improves performances
	  when VBO is available.
	- Eric Sunshine augmented Jamrules so that it sets the property
	  "standalone" in the container "build" when the build directory
	  differs from the source directory.  Client Jamfiles can query this
	  property to conditionalize behavior.  Changed Jamfile.in so that it
	  utilizes this new property to determine if it should perform special
	  processing for the configure-generated 'include/volatile.h', rather
	  than performing the check manually.
	- Jorrit added csddsimg to the walkall target. Walktest now needs it.
	- Eric Sunshine performed a significant amount of Texinfo mark-up
	  correction and cleanup in the new engine/internal.txi.  Also cleaned
	  up the grammar and performed some re-writing to make the discussion
	  more idiomatic.
	- Jorrit worked a bit further on the internal engine document.
	- res updated the NR software renderer so that simple1 and 2 work.
	- res replaced CS_FX_GOURAUD with CS_FX_FLAT, which is doing the
	  opposite. Nowadays, gouraud shading is common and flat shading the
	  exception, so it makes more sense to have the latter explicitly
	  specified.
	- res made some smaller changes & workarounds to NR SW. Works with
	  flarge with the sense of 'work' as in 'does not crash instantly'.
	- res fixed a missing quoted string termination in csconf.mak.
29-Apr-2004
	- Marten fixed a bug in xmlshader where it assumed the syntax-service
	  was already loaded.  Now it loads it if needed.
	- Eric Sunshine rewrote gobs of unportable shell programming in the
	  jamtemplate/createproject.sh script. Also generally cleaned up and
	  unified the rest of the jamtemplate resources.
	- Eric Sunshine removed obsolete crystalspace.motion.manager.*
	  reference from csparser.csplugin.  Reported by Matthew Hawn
	  <steamraven@yahoo.com>.
	- res made the following changes:
	    - Changed the cs-config generator to not have a harcoded list of
	      libs or their dependencies, but rather extract this info from
	      the Library Jam rules.
	    - Added some new shaders and used them in walktest:
	      or_lighting_detail_alpha and or_lighting_detail_add, mimicking
	      some layer effects used by OR; reflect.xml, a simple reflection
	      shader, now used by the "car" in flarge; an OR lighting
	      compatible shader for detail textures. Those are relatively
	      cheap, but give the illusion of a higher res texture. Applied
	      to the "mosaic" material(s) in flarge.
	- res "fixed" csconf.mak for the cs-config changes by having it emit
	  hardcoded lib dependencies again.
28-Apr-2004
	- Eric Sunshine applied a few scripting-related patches from Michael
	  Franz Aigner <crystal-space@amfranz.com>:
	    - Fixed inverted logic bug when testing result of PyList_Check() in
	      TYPEMAP_IN_ARRAY_BODY().
	    - Fixed bug where TYPEMAP_IN_ARRAY_BODY() was improperly invoking
	      Swig's $descriptor() pseudo-macro with the result that it was
	      entirely dysfunctional.
	    - Published additional interfaces: iMeshWrapperIterator, iPortal,
	      iPortalContainer, iStandardReporterListener.
	- Jorrit reverted the crash fix in genmesh made by res2k earlier.
	  Better to leave the crash there until the REAL bug is fixed.
	- Jorrit fixed all mesh loaders to test if the factory is actually
	  the same type as the mesh object. That's better than just crashing.
	- Jorrit fixed the engine so that objects created from a hierarchical
	  mesh factory (<meshref> in loader) will also have SetLogicalParent()
	  called.
	- Jorrit fixed genmesh so that it now does CS_ASSERT to test for
	  the crashing condition. This bug is actually a problem in the map
	  file. The problem is that it is impossible to detect at load time
	  and we have no facility to report these kind of errors at
	  render time yet... So a CS_ASSERT will have to do for now.
	- Steven Geens fixed sockets in sprcal3d. The alignment of the
	  object in the socket was incorrect.
	- Jorrit added 'const' to several methods in iGenericRenderStep.
	- Jorrit added methods iGenericRenderStep->SetPortalTraversal()
	  and GetPortalTraversal(). These methods indicate to the render
	  step if it should traverse (draw) portal containers or not. By
	  doing this we will solve the problem that using portals in a
	  level with a complicated renderloop will cause huge overhead
	  because the portal is traversed for every step in the render loop.
	- Jorrit added a <portaltraversal> keyword for the renderstep loader.
	  If this is specified then portals will be rendered in that
	  renderstep. In most cases this should probably be specified
	  for the first step (i.e. ambient).
	- res replaced the 'inUse' member of csRenderMesh with a frame number
	  counter. If this counter is equal to the engine's frame count, it
	  means the render mesh is still in use. This change removes the need
	  to set inUse to false (and fixes some bugs where this occasionally
	  didn't happen).
	- res changed WT to allow disabling crash dumps via the
	  Walktest.Win32.Minidumps config setting. Also, for non-VC compilers
	  it's now disabled by default (not much useful there anyway).
	- res fixed a crash in bindoc when 0 was set as a node value.
	- Eric Sunshine made the following changes to the Jam build system:
	    - Introduced a new rule named Description which can be used to
	      both set and query a target's description.
	    - Changed all invocations of the Help rule (except the ones using
	      the "verbatim" option) to invocations of the Description rule
	      throughout the project.
	    - Removed the "verbatim" option from the Help rule and changed the
	      Help rule to _always_ treat its argument as verbatim.
	    - Eliminated the anomaly where Help was hard-coded to prepend
	      "Build the" to the incoming text.
	    - Augmented the Application, Library, Plugin, and ShellScript rules
	      to invoke Help automatically with the text "Build the
	      $(description)".
	    - Augmented msvcgen.jam and win32.jam to utilize the target's
	      description string (as collected by the Description rule) rather
	      than the help string (which was not necessarily appropriate in
	      the context of project files and .rc files).
	- Eric Sunshine fixed bug in Doxygen rule (docs.jam) where it was
	  invoking MakeLocate on a pseudo-target.
	- Eric Sunshine fixed bug in aws/Jamfile where the 'awsfreeze' target
	  was gristing the built source files in such a way that Jam would
	  complain that it did not know how to create those files if they were
	  needed.
	- res enabled the glRasterPos hack in glcommon2d.cpp for NR, too.
	- res fixed the interpretation of some header fields in the DDS loader.
27-Apr-2004
	- Jorrit removed ClipBSphere() from iRenderView.
	- Jorrit added a private implementation of ClipBSphere() to
	  csRenderView which is used by the portal container.
	- Jorrit cleaned up a few more routines in csRenderView. Changed
	  TestBSphere() to use the new clip planes internally. It now expects
	  a sphere in world space.
	- Jorrit changed GetRenderMeshes() in partgen/particle.cpp to
	  use CalculateClipSettings().
	- Jorrit modified terrfunc so it uses the same ClipBBox() routine
	  that is also used by the NR terrain engine.
	- Jorrit removed the now unused version of iRenderView->ClipBBox()
	  that is based on screen and camera space bbox. These are not
	  used any more.
	- Jorrit changed levtool so that it no longer validates the input
	  file (checks if it is a <world> file) if -inds or -outds is
	  used. By doing that the tool can be used to convert mesh factories
	  and other type of XML files too.
	- Jorrit added code to the chunklod (NR terrain) mesh loader so that
	  it tests the following two things:
	      - Material palette must be specified BEFORE material map.
	      - LodDistance must be set before material map too.
	- Jorrit fixed the terrain level for this change.
	- res augmented the Jam build system to support ExternalLibs for
	  libraries. The required link flags are propagated to clients of the
	  library. csutil now uses ExternalLibs to express it's dependency on
	  zlib and pthread. The hardcoded linking of all apps resp. binaries
	  against zlib and pthread has been removed from Jamrules. Also updated
	  Jam msvcgen to handle ExternalLibs for libraries.
	- Jorrit fixed an initialization error in the NR OpenGL renderer
	  with current_drawflags.
	- res fixed an occasional crash in genmesh (happens when multiple maps
	  are loaded at once for some reason).
	- Eric Sunshine added a "pythmod" Jam target to cspython/Jamfile, which
	  builds the pure Python "cspace" module. Builds and loads correctly on
	  Linux. Other platforms not yet tested.
	- Eric Sunshine fixed bugs in cspython.mak and csperl5.mak where the
	  generated cspace.py and cspace.pm files did not get installed if Swig
	  was present.
26-Apr-2004
	- Eric Sunshine fixed bugs in cross-product functions of csVector4 and
	  csDVector4 where it was accessing 'x' component of wrong vector.
	  Reported by Bernd Waibel <waebbl@gmx.dew>. Also fixed some incorrect
	  Doxygen comments.
	- Eric Sunshine augmented csperl5.mak and scripts/perl5/Jamfile so that
	  they also install *.pl files from scripts/perl5, rather than only
	  installing *.pm files.
        - Philip Wyett removed old motion manager plugin entry from
          walktest.cfg.
	- Jorrit moved the list of camera meshes from RenderQueues to
	  the sector. This change means that it is no longer required for
	  a mesh using CS_ENTITY_CAMERA to be in a render priority that
	  has the camera flag set.
	- Jorrit removed the iEngine methods which control the camera
	  render priorities.
	- Jorrit removed the 'camera' flag for render priorities in the
	  engine and the loader. The keyword is still recognized by the loader
	  but only a deprecated warning is given.
	- Jorrit modified RenderQueues for OR so that it also keeps the
	  frustum_mask. That way we can finally pass along the frustum_mask
	  to the meshes and use the same kind of clipping as is now
	  present in NR.
	- Jorrit removed iMeshWrapper::Draw(). This is not useful to have
	  as it is OR specific and only the engine is really capable of
	  drawing meshes.
	- Jorrit extended iMeshObject->DrawTest() with a frustum_mask
	  parameter (OR only).
	- Jorrit changed all mesh objects to use the new frustum_mask in OR
	  too.
	- Jorrit fixed the NR GetRenderMeshes() for the portal container class
	  so that it no longer ignores the movable transform. Moving portals
	  simply didn't work with NR.
	- Neil Mosafi added forward declare for iGraphics3D to
	  ivideo/custcursor.h.
	- Jorrit changed the 'particles' mesh object so that it now also
	  uses CalculateClipSettings.
	- Eric Sunshine augmented scripts/python/Jamfile so that it also cleans
	  up the evil .pyc and .pyo files which are excreted by Python.
	- Eric Sunshine augmented configure.ac to determine the file extensions
	  of pure Python and pure Perl modules. cspython.mak and csperl.mak now
	  utilize the results of these checks.
	- res fixed an issue with proctex flippedness in NR.
	- res augmented chunklod to also cast shadows. Activated with
	  <castshadows> mesh object parameter.
	- res fixed some coordinate swappage in chunklod, causing it to cast
	  wrong shadows.
	- res removed the user-defined exception feature from the Win32
	  assistant. This can be handled as well (if not better) by the app.
	- res added some helpers for Win32 to easily create minidumps that
	  contain some extra useful info and set up an exception handler
	  (which creates such minidumps).
	- res augmented walktest to create such minidumps.
	- res fixed some gcc warnings & errors in the minidump code.
	- Luca fixed a bug in the csIntersect3::Plane () method. It was using
	  the wrong formula to calculate the x value along the segment
	  U + x (V - U): the unknown 'x' value is got by:
	  x = [(A,B,C) * U + D ] / (A,B,C) * (U - V) and NOT got by
	  x = [(A,B,C) * U + D ] / (A,B,C) * (V - U). Look to the comments in
	  the code for more clarifications. He also set some default values
	  (and documented it) for the output arguments.
	- res changed the walktest Make-/Jamfile to link against zlib (needed
	  by the minidump code).
25-Apr-2004
	- Jorrit changed the way render priorities work in the engine. The
	  RenderQueues field no longer contains all meshes for all render
	  priorities but only the meshes with CAMERA flag set. The other
	  meshes are not needed there.
	- Jorrit added a new 'visible' array to RenderQueues. This array
	  is used with OR only and updated during visibility testing. This
	  replaces the SetVisibilityNumber() that was otherwise used. It
	  also makes OR handling of more meshes more efficient.
	  The RenderQueues.SortAll() method no longer has to test for
	  visibility as it will use the 'visible' array instead of the
	  'queues'.
	- Eric Sunshine augmented jobber.pl so that the Crystal Space version
	  number and copyright are now gleaned from the configure script rather
	  than being hard-coded into jobber.pl.
	- Eric Sunshine updated Python SDK check in configure.ac to take into
	  account new Python.framework in MacOS/X 10.3.
	- Eric Sunshine fixed bug in csPerl5::Init() where it was using the
	  unreliable VFS /this/scripts directory to initialize the interpreter.
	- Wouter Wijngaards changed plugins/aws/Jamfile. The section where
	  the awsfreeze rule is generated was using the FILES variable,
	  however, this variable was already being used for holding the
	  files for the Plugin rule. By overwriting the FILES variable with
	  only the files needed for awsfreeze, the main target was caused
	  to compile only skinlex and skinpars. All other aws*cpp files were
	  not compiled. To fix this, replaced FILES with FREEZEFILES for
	  the awsfreeze rule construction (but not for the main plugin rule).
	- Eric Sunshine fixed bug in csperl5/Jamfile where it failed to run
	  Swig to create cswigpl5.inc, upon which the csperl5 plugin depends.
	- res removed the hard-coded WAVEOUTSND settings from win32.jam and
	  instead added a configure check.
	- res also changed win32.jam to not add /usr/include/directx  as an
	  include dir to CCFLAGS resp. C++FLAGS, as this directory is already
	  checked for in the DirectX configure test.
	- res changed the PLUGIN.LFLAGS value to only include -mwindows.
	  (The old line "-mwindows -mconsole" was self-contradicting as it
	  first set the "GUI subsystem", then the "console subsystem" flags.)
	- res fixed the waveout sound driver to convert error descriptions from
	  the system to UTF-8.
	- Wouter Wijngaards changed the csfx DrawPartial() to work under the
	  new renderer, it forgot to flip the y coord.
	- res fixed a problem in csGLGraphics3D::BeginDraw(). It set
	  "current drawflags" to the "new drawflags" at the very beginning of
	  the method, causing the test for whether G2D BeginDraw() should be
	  called to always fail.
	- Eric Sunshine made the following changes to deal with recent versions
	  of Swig's Perl support:
	    - Worked around a nasty bug where Swig transforms invocations of
	      function-like macros taking zero-arguments in inline code into
	      invocations of non-function-like macros. For instance, it
	      transforms SCF_DESTRUCT_IBASE() into SCF_DESTRUCT_IBASE, which
	      later causes a compilation error since the C-preprocessor does
	      not know about this non-function-like macro.
	    - Worked around problem where Swig unconditionally #undefs Perl's
	      'ENTER' macro. This causes inline code in perlpost.i, which
	      utilizes that macro, to fail to compile.
	- Wouter removed test for images.IsValid() in GetOrigSize(), since
	  the orig size fields are set correctly already. Also the routine
	  was returning without touching the w and h, causing unpredictable
	  results. This fixes an Image View component in AWS.
	- Eric Sunshine augmented the Swig rule (swig.jam) so that it creates a
	  dependency between the "additional files" (typically generated
	  scripting files) and the main target (typically a generated C or C++
	  files). This makes it possible for the other generated files to be
	  created automatically when needed, such as when some other target (an
	  "install" target, for instance), depends upon them.
	- Eric Sunshine augmented the various Install rules (install.jam) so
	  that they grist the incoming files only if they have not already been
	  gristed. This allows those files to be properly created if missing
	  (assuming that Jam knows how to create them), whereas the old scheme
	  of unconditionally gristing the incoming names made it impossible for
	  Jam to create those files at install time.
	- Eric Sunshine fixed problems where the Jam "install" targets were
	  incorrectly installing cspace.py and cspace.pm from the
	  CS/scripts/python and CS/scripts/perl5 directories, respectively,
	  rather than installing the most recent Swig-generated versions from
	  the build directory (if Swig was available).
	- Eric Sunshine fixed bug in csPerl5::Init() (csperl5.cpp) where it was
	  passing corrupt argc/argv to perl_parse().
	- Eric Sunshine fixed bug in csperl5/Jamfile where it failed to
	  re-compile cswigpl5.cpp if cswigpl5.inc had been re-generated by
	  Swig.
	- Eric Sunshine made the following changes to the csPerl5 module:
	    - Fixed nasty bug in csPerl5::CallV() where it was returning an
	      already destroyed Perl object. Since all of the NewObject(),
	      Call(), Get(), Set(), Retrieve(), and Store() methods are
	      predicated upon this one method, everything broke; either by
	      crashing or misbehaving in highly strange and dangerous ways.
	    - Fixed several other bugs relating to reference-counting of Perl
	      and CS objects; mostly involving leaks.
	    - Fixed bugs in all iScriptObject::Get() and Set() methods where
	      they were calling non-existent methods in the corresponding Perl
	      object, thus they were entirely dysfunctional.
	    - Fixed totally broken behavior of csPerl5::Query(), which is
	      supposed to determine if an iScriptObject is actually an
	      implementation of csPerl5::Object. The query always failed.
	    - Changed the Get() and Retrieve() methods for strings in the
	      iScript and iScriptObject interfaces to deal with a properly
	      reference-counted iString, rather than a char** pointer, which
	      was quite ugly; and which, in csPerl5, would return a pointer to
	      a string inside an actual Perl object, which might disappear at
	      any time. It was highly dangerous.
	    - Augmented perl5test to also exercise iScriptObject::Set(), in
	      addition to Get().
	- Neil Mosafi fixed crash in plugins/cursor/cursor.cpp where it was
	  passing a null char* into strcmp, due to it using the internal
	  data in an uninitialised csString.
24-Apr-2004
	- Jorrit fixed a compile bug in glshader_fixed. 'friend' needs
	  'struct'.
	- Jorrit started unifying the engine a bit between OR and NR usage
	  (involves bringing the OR a bit closer to the NR in way of
	  operations).  The advantage of this is that I can clean up a lot of
	  OR specific code that way.  This unification currently involved
	  sharing the ObjectVisible callback in csSector so the same callback
	  code is used in OR and NR.
	- res fixed the rain and partgen Jamfiles to also depend on csgfx.
	- res added PACKAGE_VERSION and PACKAGE_STRING to the jobber Jamconfig.
	- res changed the render mesh holder to automatically set the inUse
	  flag of the returned mesh.
	- res added a fallback to csGLGraphics3D::SetAlphaType().
	- res augmented the chunklod mesh to support static lighting.
	  Is enabled by specifying "<staticlighting>yes</staticlighting>" in
	  the mesh object params. Although the terrain can receive shadows,
	  it can't cast them yet.
23-Apr-2004
	- Eric Sunshine fixed crasher in csSimpleConsole::Initialize()
	  (simpcon.cpp) where it would blindly access its G2D member without
	  first checking if it had managed to actually locate a canvas.
	- Eric Sunshine added check to configure.ac to determine how to disable
	  warnings about uninitialized variables. The result of this check is
	  useful for tool-generated code over which we have no control, and is
	  now utilized when building Swig-generated code for Python and Perl.
	  (To be fair to gcc, however, Swig _is_ generating crash-worthy code,
	  so the warning message is warranted.)
	- Luca fixed a compilation error that the VisualC++ 6.0 was complaining
	  about.
	- Eric Sunshine made the following changes to the build system:
	    - Augmented cspython/Jamfile so that it creates python.cex.
	    - Augmented csperl5/Jamfile so that it creates perl5.cex.
	    - Made the cspythonclean and csperl5clean targets depend upon the
	      pythonswigclean and perl5swigclean targets, respectively, so that
	      they also remove the Swig-generated files.
	    - Fixed generation of perl5.cex by cspython.mak. The script it
	      created was entirely dysfunctional and completely useless.
	- Eric Sunshine resolved a precedence issue with CS_CHECK_LIB_WITH()
	  (checklib.m4) in which it could be fooled into ignoring the path
	  given via --lib-withfoo=path if 'foo' was also installed in one of
	  the standard locations searched by the compiler and linker.
	  Specifically, it would check "path" first before checking
	  "path/include" and "path/lib", however if a version of 'foo' was also
	  installed in a standard location (other than "path"), then it would
	  never get around to trying "path/include" and "path/lib" because it
	  would find the installation at the standard location.
	- Eric Sunshine fixed bug in csGLGraphics3D::Initialize()
	  (gl_render3d.cpp) where it neglected to check if the canvas plugin
	  load request failed; leading to a crash if the canvas did not load.
	- Eric Sunshine fixed bug in csObjectRegistry::Register() where it
	  would crash if handed a null pointer. Also improved Doxygen
	  documentation of iObjectRegistry.
22-Apr-2004
	- Jorrit removed motion and motldr from Jamrules for static
	  compilation.
	- Jorrit fixed a compilation error of the engine with OR.
	- Jorrit removed the almost unused CS_CLIP_PORTAL flag for clipping
	  (was only used in the OR GL renderer). This greatly simplifies the
	  clipping routines.
	- Jorrit added a new iRenderView->CalculateClipSettings() routine
	  which calculates the clip settings out of the frustum mask. This
	  can be used by GetRenderMeshes() implementations of meshes instead
	  of calling the complicated ClipBBox()/ClipBSphere() routines. This
	  will be a lot faster.
	- Jorrit extended thing and genmesh to use the new system already.
	- Jorrit extended spr2d, spr3d, ball, and sprcal3d to use the new
	  system.
	- Jorrit temporarily fixed the clipping bug in the NR GL renderer.
	  Have to think about this a bit more though.
	- Eric Sunshine re-engineered the Doxygen rule in docs.jam to correct
	  a problem where its actions would emit warnings of the form:
	    Copy ./out/docs/html/api
	    rm: cannot remove `./out/docs/html/api': Is a directory
	- Eric Sunshine fixed problem in jobber.pl where the shell was
	  inadvertently interpreting $'s in Jamconfig creation code.  Also
	  installed on shell.sf.net the new version of jobber.pl which utilizes
	  Jam for its maintenance tasks, rather than GNU make.
	- Jorrit fixed two compile errors in CS: one in iso engine and one
	  in OR/engine.
21-Apr-2004
	- Jorrit fixed compilation of the engine plugin with OR after
	  breaking it yesterday.
	- Jorrit extended the genmesh version of HitBeamObject() so that
	  it will now return the index of the triangle that was hit.
	  That way it will also work with iSector->HitBeam() and
	  HitBeamPortals().
	- Jorrit removed the csRenderContextFrustum class and merged it with
	  csRenderContext. There is a one-to-one relationship between
	  those classes so it doesn't make sense to have the additional
	  overhead (more pointer redirection, more object management) for this.
	  Also I'm planning a big redesign of this anyway.
	- Jorrit removed several of the methods in iRenderView and put them
	  non-virtual and private to the engine in csRenderView instead.
	  All these methods are internal for the engine and should not be
	  exposed to the outside (methods like CreateRenderContext and so on).
	  This has the nice benefit of making the engine a bit faster again
	  (less virtual function calls).
	- Jorrit started a unification of the frustum culling that happens
	  in the cullers (Frustvis and Dynavis), and also the frustum
	  culling that every object does in DrawTest() (for OR) and
	  GetRenderMeshes() (for NR) using iRenderView->ClipBSphere() or
	  ClipBBox(). Currently the following steps are done:
	    - csRenderView has a new SetupClipPlanes() method that sets up the
	      current clip planes in world space for the current clipper and
	      camera.
	    - Extended iVisibilityCullerListener->ObjectVisible() with a new
	      frustum_mask parameter.  This parameter will be given by the
	      cullers and contains a bit mask telling the engine which planes
	      (out of csRenderView) are relevant (i.e.  which planes
	      potentially intersect with the object).  This is compatible with
	      csIntersect3::BoxFrustum().
	    - Enhanced Dynavis and Frustvis to pass along the frustum_mask to
	      ObjectVisible.  Both Dynavis and Frustvis already use
	      BoxFrustum() and a frustum_mask to hierarchically do frustum
	      culling on the kdtree for all objects.  So passing this bitfield
	      along comes naturally.
	    - Extended iMeshObject->GetRenderMeshes() with an extra
	      frustum_mask parameter.  The ObjectVisible() function will call
	      GetRenderMeshes() with that parameter.  Note that for OR we will
	      not support this optimization as it is hard to do there and NR is
	      the future anyway.
	    - Removed the unused iMeshWrapper->GetRenderMeshes().
	    - Extended all mesh objects to accept this new parameter in
	      GetRenderMeshes().  None of the mesh objects will actually use it
	      yet.  This is the next stage.
	    - Enhanced the Frustvis and Dynavis plugins to use the clip planes
	      as setup in csRenderView instead of having them make their own
	      clip planes.  This saves a bit of processing there.
	- Eric Sunshine eliminated Cygwin compiler warnings about types not
	  matching printf-format directives in win32/callstack.cpp.
	- Eric Sunshine fixed problem in Recurse rule in helper.jam where it
	  was using 'rule' as a variable name. This confused BoostJam since
	  'rule' is also a keyword.
	- Jorrit fixed a big booboo in the clipper enhancements he did
	  yesterday on chunklod. The results of the BoxFrustum() routine
	  were interpreted wrong which causes them to cause unneeded
	  clipping.
	- Eric Sunshine made the following changes to the Jam-based msvcgen
	  mechanism:
	    - Fixed bug where msvcgen was inserting Unix-style compiler and
	      linker flags from Jamfile invocations of CFlags and LFlags into
	      generated project files.
	    - Enhanced the MsvcGenConfig rule so that it can accept
	      configuration for the msvcgen process in both the form of an
	      external file, and in the form of key/value tuples.
	    - Removed a couple CS-specific configuration options (USE_PLUGINS
	      and USE_NEW_RENDERER) from the project-agnostic
	      mk/jam/msvcgen.jam and placed them into the new CS-specific
	      mk/msvcgen/Jamfile.
	    - Refined the way modules are selected for project-file generation
	      candidacy so that it more closely parallels the way modules are
	      selected for building by the Autoconf configure script.
	    - The new mk/msvcgen/Jamfile creates a custom Jamconfig.msvcgen
	      file for the msvcgen process on-the-fly.  This is a hybrid of a
	      filtered version of the local Jamconfig file and a boilerplate
	      file containing setting specific to MSVC.  This allows the
	      msvcgen process to take advantage of local tools (discovered by
	      the configure script) while still producing project files
	      suitable for MSVC.
	    - This set of changes concludes the high-priority work on the
	      Jam-based msvcgen facility.  The generated project files are now
	      (finally) compatible with the ones produced by the GNU make-based
	      msvcgen facility, and are suitable for actual use.
	- Eric Sunshine fixed bug in "missing file type" warning in
	  CompileObject rule in objects.jam.  It was referencing wrong input
	  argument.
	- Eric Sunshine converted jobber.pl to utilize Jam for all maintenance
	  tasks, rather than using GNU make.  (Unfortunately, this is not yet
	  installed on the SourceForge shell machine.  With CVS access so
	  critically slow -- nearly two hours for a "cvs update", let alone an
	  actual checkout -- it is not possible to check if the changes to
	  jobber.pl are entirely correct.  Consequently, it can not yet be
	  placed into production.)
	- Neil Mosafi added a #include directive to ivideo/custcursor.h because
	  it was not able to find the definition for csRGBcolor.
	- Eric Sunshine fixed bug in joywin.mak where it was trying to install
	  the non-existent data/joywin.zip.
20-Apr-2004
	- Jorrit added 'camera_origin' to csRenderMesh. The meshes will
	  fill this field with the origin of that mesh in camera space. This
	  will be used for sorting alpha render priority.
	- Jorrit optimized the alpha render priority sorter by using
	  the new camera_origin field in csRenderMesh.
	- Jorrit removed the unused and non-functional bcterr mesh object.
	- Jorrit changed iEngine->GetTopLevelClipper() to return an
	  iRenderView instead of an iClipper2D.
	- Jorrit added iRenderView->ClipBBox() that doesn't want the 2D
	  box argument (only does rview frustum check with the 3D box).
	- Jorrit changed several of the important csRenderView methods
	  to use internal engine cs classes instead of interfaces (avoids
	  virtual function calls).
	- Jorrit replaced the 'frustum' in csRenderContextFrustum with an
	  array of csPlane3 instead of an array of csVector3.
	- Eric Sunshine made the following changes to the Jam-based msvcgen
	  facility:
	    - Added --response-file option to msvcgen.pl, which allows
	      msvcgen.pl to collect pathnames (one per line) from the contents
	      of specified files in addition to collecting them from the
	      command-line.
	    - Added a ResponseFile rule to helper.jam which creates a file from
	      a set of items (items are emitted one per line).  This rule can
	      be invoked multiple times for the same file, allowing it to be
	      populated incrementally.
	    - Augmented msvcgen.jam to work around a fatal limitation in Jam
	      which caused project file creation to bomb out frequently except
	      when $(TOP) and $(BUILDTOP) were very short pathnames (such as
	      "C:\CS" or "/home/foo/CS").  Jam places a fairly restrictive
	      limit on the length of a command-line which it will invoke from
	      an 'actions' block, and rudely aborts if the command exceeds that
	      limit.  Even moderately sized projects, such as csutil, easily
	      exceed Jam's command-line length limit when mentioning its source
	      and header files in the msvcgen.pl invocation command.  Ditto for
	      workspaces, which are typically composed of many, many project
	      files.  To work around this limitation, msvcgen.jam uses the new
	      ResponseFile rule, and --response-file mechanism of msvcgen.pl to
	      avoid having to create such lengthy command-lines.
	    - Renamed the msvcgen6 and msvcgen7 targets to msvc6gen and
	      msvc7gen, respectively.  Also added mvsc6clean and msvc7clean
	      targets.
	- Eric Sunshine fixed several Jamfiles throughout the project to
	  utilize the portable FDefines and FIncludes rules instead of
	  harcoding -D and -I.
	- Jorrit fixed a compile error in spr3d for OR.
	- Jorrit added a new iRenderView::ClipBBox(). This versions works with
	  an object space bbox instead of a camera space bbox. This has the
	  advantage of being much more accurate. Instead of transforming the
	  object bbox to camera space (which will make it larger) the frustum
	  is now transformed from camera to object space.
	- Jorrit changed chunklod mesh object plugin to use this new
	  ClipBBox() routine.
	- Jorrit split the new iRenderView->ClipBBox() routine in
	  iRenderView->SetupClipPlanes() and ClipBBox(). That way it is
	  possible to call SetupClipPlanes() in advance and then reuse
	  it multiple times. Chunklod now uses this technique.
	- Jorrit made iRenderView->ClipBBox() return a modified frustum
	  mask so it can be used for hierarchically culling bbox trees.
	  Chunklod now uses this.
	- Eric Sunshine fixed bug in the SetProperty rule in property.jam.  It
	  was ignoring the incoming value and unconditionally setting the
	  property to 'true'.
19-Apr-2004
	- Eric Sunshine added LGPL license notice to the .m4 and .jam files.
	- Jorrit fixed a bug in iEngine->CreatePortalContainer(). If there
	  is a portal render priority then the created mesh will automatically
	  get that render priority.
	- Jorrit removed support for skeletal sprites. Instead you should
	  now use sprcal3d objects.
	- Jorrit removed the mottest program since it depends on skeletal
	  sprites. One should wonder if the entire motion plugin still
	  makes sense now.
	- Jorrit removed the walktest 'setmotion' command.
	- Jorrit removed the walktest 'addghost' and 'addskel' commands.
	- Jorrit removed the motion manager plugin. It was not very nicely
	  designed and I question the usability of the plugin.
	  Also removed associated iSkeletonBone.
	- Eric Sunshine made the following changes to the Jam build system:
	    - Augmented msvcgen.jam so that it is capable of generating
	      multiple workspaces, rather than being hardcoded to produce only
	      a single workspace named "wksall" containing all
	      projects. Workspaces are controlled by client invocation of the
	      new MsvcGenWorkspace rule. This rule allows clients to specify,
	      not only which workspaces to create, but also the contents of
	      each workspace.
	    - Added CS/mk/msvcgen/workspaces.jam, which specifies the
	      workspaces to create for CS. CS/Jamrules includes this file.
	      (Unfortunately, there are now so many projects being included in
	      workspaces, that the command to actually build a workspace
	      overflows Jam's maximum command-line length, causing it to
	      abort. Working around this Jam limitation is the next task.)
	    - Removed code from the MsvcProject rule which was copied directly
	      from win32.jam. Instead, now calls MakeVersionRc in win32.jam to
	      achieve the same result. Also cleaned up other portions of
	      MsvcProject.
	    - Added an invocation of Help for the 'msvcclean' target.
	    - The MakeVersionRc rule in win32.jam now prefers
	      $(PACKAGE_LONGNAME) if available rather than $(PACKAGE_NAME).  If
	      neither is available, it just uses the bare target name as the
	      package name.
	- Eric Sunshine eliminated TeX 'underfull hbox' warning from
	  apimod98.txi.
	- res added a workaround to csArray<>::Push() for the case an element
	  from the array itself was pushed. Under certain circumstance, bogus
	  data was pushed onto the array.
18-Apr-2004
	- Eric Sunshine fixed CS/bin/autogen.sh so that it returns the exit
	  status of 'autoconf' as its own exit status. This allows invokers of
	  autogen.sh to determine if Autoconf failed.  Also removed out-of-date
	  comment in autogen.sh.
	- Eric Sunshine fixed bug in CS/docs/doxygen/Jamfile where it failed to
	  mention doxygen.css in the argument list for the Doxygen rule.
	- Eric Sunshine relocated the HTML-specific ScanDocDirs rule from
	  CS/docs/Jamfile to CS/docs/html/Jamfile, and also renamed it to
	  InstallHTMLDocs to better reflect its function.
	- Jorrit re-enabled the clipping optimization in NR GL renderer
	  after fixing partsys so it has a 'portals' render priority.
	- Eric Sunshine added a general-purpose Recurse rule to helper.jam
	  which recursively scans a directory tree for files matching types
	  specified by the client, and invokes a client-specified Jam rule for
	  each discovered file.
	- Eric Sunshine removed the InstallHTMLDocs and ScanHeaders rules
	  (docs/html/Jamfile & include/Jamfile), and replaced them with simple
	  invocations of the new Recurse rule.
	- Eric Sunshine added missing lghtngldr.csplugin, lghtngldr.mak, and
	  mesh/lghtng/persist/standard/Jamfile.
	- Eric Sunshine removed the unused and unmaintained Arts and EAX sound
	  renderers. For easy revival, they have been tagged in CVS with
	  ARTS_OBSOLETE and EAX_OBSOLETE, respectively.
	- Eric Sunshine removed the unused and unmaintained GLX/Glide driver.
	  For easy revival, it has been tagged in CVS with GLXGLIDE_OBSOLETE.
	- Eric Sunshine fixed aesthetic problem with "jam help" message for
	  install target. It read "Build the Install crystal", which was not
	  especially sensible. Made install help message more robust; it now
	  prefers PROJECT_LONGNAME before PROJECT_NAME, and falls back to
	  "Install the project" if neither is defined.
	- Eric Sunshine added help messages for the all, apps, libs, plugins,
	  clean, and distclean pseudo-targets.  Also fixed some other minor
	  aesthetic problems with the output of "jam help".
	- res made the following changes:
	    - Added Doxygen documentation for macro-generated csString members.
	    - Fixed Doxygen documentation for
	      CS_INITIALIZE_PLATFORM_APPLICATION.
	    - Fixed some compiler errors in minidump.cpp.
	- Eric Sunshine made the following changes to the Jam build system:
	    - Added a general-purpose "property bag" mechanism.  Jamfiles are
	      free to create property containers and populate them as
	      desired. Other Jamfiles can then query the containers in order to
	      conditionalize build behavior.
	    - CS/Jamrules now assigns to the 'build' container the property
	      'newrenderer' with value "true" when the project is configured
	      for the new-renderer.
	    - msvcgen.jam now assigns to the 'build' container the properties
	      'projgen' with value "msvc", and 'projgen_version' with value 6
	      or 7 when building project files. (Future project file
	      synthesizers will use other values for 'projgen'. For instance, a
	      generator of Borland project files might set the value to
	      "cbuilder", and a generator of Apple project files might set the
	      value to "xcode".)
	    - Fixed problem where msvcgen.jam was creating project files for
	      numerous modules for which it made no sense to generate MSVC
	      project files, such as those specific to MacOS/X and Unix.
	    - Fixed problem where msvcgen.jam failed to create project files
	      for both the old- and new-renderers (needed for wksall, for
	      instance).  Previously, it was capable of creating projects for
	      either only the old-renderer or the new-renderer, but not both at
	      the same time.
	    - Added 'noinstall' option to a lot of modules which were being
	      installed despite the fact that they have no practical value
	      when installed.
	    - Fixed numerous cases where Unix-style pathnames were hard-coded
	      into Jamfiles, rather than relying upon the portable ConcatDirs
	      rule.  Likewise, converted serveral Jamfiles to utilize the
	      portable $(DOT) and $(DOTDOT) rather than hardcoding "." and
	      "..".
	- Eric Sunshine removed the unused and incomplete PicoGUI plugin and
	  test program.  For easy revival, they have been tagged in CVS with
	  PICOGUI_OBSOLETE.
	- res removed ivaria/gconnect.h and gserver.h which were only used to
	  interface PicoGUI.
	- res made a small documentation fix to vosa3dl.h.
17-Apr-2004
	- Aren Blondahl updated map2cs to have newly optimized render priority
	  on entities ('priority' tag in the .map) and fixed map2cs to support
	  new alpha flag under <mixmode> instead of under each polygon.
	  ('alpha' tag in the .map)
	- Aren Blondahl patched map2cs's light format to comply with <radius>
	  tag, and added in brightness / influence radius support.
	- res fixed a crash bug in the Win32 GL canvas when the WGL "extension
	  string" extension was not present.
16-Apr-2004
	- Jorrit fixed a crash at exit for genmesh with NR.
	- Eric Sunshine fixed bug in Jam build system where msvcgen target
	  would insert AWS's Bison and Flex input files into AWS project file
	  rather than the related .cpp and .h files.
	- Eric Sunshine worked around problem where msvcgen.jam reported that
	  it did not know how to locate or create <grist>csperlxs.c when
	  PERL5.AVAILABLE was "yes".  (A more correct fix will involve a
	  paradigm shift in the way this glue file is handled.  The present
	  scheme is completely incompatible with the notion of project files.
	  Details of the problem are avalable in cscript/csperl5/Jamfile.)
	- Jorrit added an entry to the GL driver database so that stencil
	  clipping is prefered for ATI Radeon style cards.
	- Jorrit removed the entry from the GL driver database that forced
	  stencil clipping for GeForce4 Go cards. Don't know why in the
	  past that seemed to cause massive slowdown. It no longer does that.
	- Jorrit made stencil clipping default again for the new renderer.
	  It does make flarge slower but that's because flarge is really
	  not designed for good hardware (objects don't have sufficient
	  number of triangles).
	- Jorrit optimized the NR GL renderer by only setting up the stencil
	  clipper if the clipper is not optional. That seems to help a
	  great deal already.
	- Jorrit removed the Video.OpenGL.PreferClipPlane setting. Instead
	  there is now a Video.OpenGL.StencilThreshold setting. This is
	  the number of triangles for a single object after which the
	  NR GL renderer will use stencil clipping instead of plane
	  clipping. By default this is set to 500. With this optimization
	  I managed to improve performance in walktest flarge from 87
	  to 209 fps! (for new renderer).
	- Eric Sunshine fixed bug in msvcgen.jam where the overriden
	  Application rule was employing an incorrect mechanism for detecting
	  console applications.  Also eliminated hard-coded use of Unix-style
	  pathnames.
	- Eric Sunshine performed project-wide spelling correction:
	    thresshold --> threshold
	- Jorrit added csKDTree::NewTraversal() so that it is now possible
	  to safely traverse the KDtree manually. This function will calculate
	  and return a new timestamp.
	- Jorrit added csKDTree::TraverseRandom(). This will also traverse
	  the kdtree but in random order. Changed Frustvis and Dynavis to use
	  this when appropriate.
	- Jorrit optimized Frustvis a bit by doing a manual custom traversal of
	  the tree instead of calling Front2Back().
	- Eric Sunshine augmented the CompileGroups rule in groups.jam so that
	  it complains if handed a compile group which was not registered via
	  RegisterCompileGroups.
	- Eric Sunshine augmented msvcgen.jam to make it possible to invoke the
	  'msvcgen', 'msvcgen6', and 'msvcgen7' targets directly, instead of
	  having to run the stand-alone mk/msvcgen/msvcgen.sh shell script.
	  (The 'msvcgen' target is just a shortcut which invokes the other two
	  targets.)  Removed the msvcgen.sh script.
	- Jorrit added some initialization code to Data in the chunklod
	  terrain engine in an attempt to fix the strange texture swaps.
	  Didn't help though.
	- Jorrit temporarily disabled one of the NR GL optimizations he
	  did earlier. Have to rethink it. Walktest is now down to 160 fps
	  (still better than 87!).
15-Apr-2004
	- Eric Sunshine added a blurb to the Unix and MacOS/X build
	  instructions cautioning about potential problems caused by
	  carelessness when transfering the project source code from Windows to
	  Unix, and how not all Unix utilities deal gracefully with Windows
	  line-terminators.  Also updated quite outdated Unix build
	  instructions.
	- Eric Sunshine added an 'options' argument to the Help rule in
	  help.jam.  Presently, the only recognized option is "verbatim", which
	  tells Help to emit the 'description' string verbatim, without
	  prepending "Build the".
	- Eric Sunshine upgraded installation of $BUILDTOP/include/volatile.h
	  by Jam so that it employs the more robust check used by
	  $TOP/Jamfile.in to see if the build directory differs from the source
	  directory.  (The old scheme of checking could be fooled.)
	- Eric Sunshine added a 'repairdoc' target to texinfo/Jamfile which
	  invokes CS/docs/support/nodefix.pl to repair broken Texinfo @node and
	  @menu directives.
	- Jorrit fixed a bug in the nullmesh factories. They didn't
	  implement iNullFactoryState.
	- Jorrit made iNullFactoryState a subclass of iNullMeshState since
	  they were exactly the same.
	- Jorrit fixed the null mesh NewInstance() so that the parameters
	  of the factory are copied to the null mesh.
	- Eric Sunshine made the following changes to docs.jam and the other
	  documentation-related Jamfiles:
	    - Added documentation-specific 'clean' targets ('manualinfoclean',
	      'manualhtmlclean', 'apihtmlclean', etc.).
	    - Added a 'cleandoc' target (and a 'docclean' alias).
	    - Updated the global 'clean' target to also remove built
	      documentation.
	    - Fixed several cases in docs.jam where it was hard-coding
	      Unix-style pathnames when referencing supporting resources.
	- Jorrit completely changed the way static lod culling works. A static
	  lod mesh is basically a hierarchical mesh. So you have a parent mesh
	  (which typically uses null mesh so that it is not visible) and
	  then several children. Which child is rendered depends on how
	  far the mesh is from the camera. By default CS will register
	  EVERY mesh and child mesh to the visibility cullers. So even
	  for a hierarchical mesh it will register all meshes in that
	  hierarchy seperately. For normal hierarchical meshes this makes
	  sense as it is possible for a child to be visible while the parent
	  is not (i.e. imagine the hand mesh of an actor to be visible but
	  all the rest obscured). However, for static lod this doesn't make
	  much sense as typically all meshes for static lod should have
	  roughly the same bounding box. So if one is visible they are all
	  visible (except that the lod mechanism will choose one to display).
	  So when static lod is detected the engine will only register
	  the parent mesh to the culler. If the parent mesh is considered
	  visible then it will itself find out which child meshes are relevant
	  for the given camera position and then call make them visible
	  in turn. Doing that static lod meshes causes a LOT less
	  overhead in the visibility culler and it also makes the handling
	  of static lod meshes a bit easier. In case a hierarhical mesh
	  is used as a child of a static lod mesh, when the hierarchical
	  mesh is considered visible for the given distance to the camera,
	  then the entire hierarchy is made visible. In this sense
	  a hierarchical mesh as part of a static lod will be culled entirely
	  or not (as opposed to each individual child which normally happens
	  with hierarchical mesh objects).
	- Eric Sunshine fixed bug in aws/Jamfile where it neglected to invoke
	  NotFile for the target which copied the generated Bison/Flex files
	  back to the source directory.  Also added a Help invocation for this
	  target.
	- Eric Sunshine fixed aws/Jamfile so that it utilizes the portable
	  FIncludes rule rather than hard-coding -I directives.
	- Eric Sunshine changed the Copy rule in helper.jam so that it
	  overrides Jambase's default value of $(CP) "cp -f" to avoid using the
	  -f flag, since older platforms do not support it.  Also removed the
	  obsolete SearchSubdir rule.
	- Jorrit extended csKDTree class with GetChild1() and GetChild2().
	  This allows manual traversal of the tree.
	- Jorrit optimized Frustvis so that it detects when a node is fully
	  in the frustum. In that case it will stop traversing the tree
	  in front to back mode but instead just mark all objects inside
	  that node (and inside children of that node) as visible. This
	  greatly reduces visibility processing and also avoids the need
	  to distribute that part of the tree. This optimization will help
	  in all cases but especially in large open areas (i.e. landscape
	  with many objects on it). Note that the effectivity of this
	  optimization is currently reduced because the bbox of the kdtree
	  is too big. Have to find a solution for that first.
	- Jorrit removed un unused field in frustvis. This field was being
	  tested but never filled. So totally useless.
	- Jorrit changed the chunklod mesh object (NR terrain engine) so that
	  it now returns an accurate bbox instead of the previous bbox
	  that was WAY too big. It now uses the bbox of the root quad.
	  Also fixed GetRadius() to use this bbox.
	- Jorrit fixed nullmesh so it properly implements iNullMeshState
	  now.
	- Jorrit changed frustvis so that it now keeps a global bbox of
	  everything that enters the kdtree. This box will always grow
	  (never shrink). When testing nodes against the frustum this box
	  will be used to calculate the REAL bbox of every kdtree node.
	  This makes the kdtree nodes much smaller (they are now artificially
	  big) and this will greatly increase the efficiency of frustvis
	  (and especially in combination with the optimization above).
	- Jorrit also changed Dynavis in a similar manner.
	- Eric Sunshine made the following Swig-related changes to the Jam
	  build system:
	    - Re-designed and re-wrote the Swig rule almost completely from
	      scratch.  It is now much more functional, thus allowing
	      near-duplicated code invoked manually by callers to be
	      eliminated.
	    - Fixed the Swig rule so that it now emits generated files to the
	      build directory rather than the source directory, since the
	      source directory might be read-only or shared.
	    - The Swig rule now publishes a "$(tag)swig" pseduo-target for each
	      client which allows production of the Swig-generated files by
	      explicit user request.  Likewise, it publishes a
	      "$(tag)swigclean" target which removes the generated files.
	    - The Swig rule now optionally publishes a "$(tag)freeze"
	      pseudo-target which copies the generated files back to the source
	      tree at explicit user request.
	    - Fixed the Swig rule so that, upon explicit request, it writes
	      files to the source tree at the _correct_ locations, rather than
	      placing them in completely foreign positions.
	    - Fixed cspython/Jamfile and csperl5/Jamfile to take advantage of
	      these new facilities so that they no longer emit generated files
	      to the source tree, which was broken behavior since that
	      directory migth be read-only or shared.
	- Remi Bonnet added a scriptable action in aws for the notebook
	  component. This allow a program using Crystal Space to change the
	  active tab dynamically.
	- Remi Bonnet made csSet::Delete returns whether an object was deleted
	  or not.
	- res added a facility to the common shader plugins to simplify the use
	  of program parameters that can either be constants or shader
	  variables. (Functionality overlaps with variable mappings; would be
	  nice colllapse var mappings and shader params at some point.)
	- res augmented the light iter step to also provide the light position
	  in world coordinates.
	- res fixed the GL fixed vertex program to correctly use the light
	  world position by default.
	- res added fixed function-only terrain shaders. Support splatting and
	  fading to flat, but not yet lighting.
14-Apr-2004
	- Eric Sunshine fixed bugs in csString where GetData() and the (char
	  const*) operator would incorrectly return a null pointer at times.
	  (These methods should always return a zero-length C-string when the
	  csString is empty; they should never return null.)
	- Eric Sunshine updated Doxygen comments for csStringHash.
	- Jorrit fixed an initialization error in the NR OpenGL renderer
	  with the new clipportal_dirty flag. Please people! Initialize
	  your variables!!!!!
	- Jorrit fixed missing SCF_CONSTRUCT_IBASE in the
	  eiShaderVariableAccessor instances of genmesh.
	- Jorrit removed the non-functional GetHeightMap() function
	  from iTerrainFactoryState and made some other small changes
	  to the API (mostly adding 'const' where needed). Also removed the
	  non-functional GetMaterialMap() function from iTerrainObjectState.
	- Jorrit discovered that MeshTreeNode in the NR terrain engine
	  was doing some SCF stuff for no reason at all (it didn't even
	  inherit from iBase).
	- Eric Sunshine added a backward-compatibility hack to csString to
	  allow projects to recover the old, buggy, undocumented, accidental
	  behavior where csString::GetData() and the (char const*) operator
	  returned a null pointer instead of a zero-length string in certain
	  indeterministic cases if the string was empty.  Projects should
	  #define CSSTRING_BUGGY_NULL_RETURN before #including
	  <csutil/csstring.h> to enable this temporary transitional hack.
	- Jorrit changed iTerrainFactoryState->SetMaterialMap() so that
	  it uses a const csArray<>& instead of a csArray<> as a parameter.
	- Eric Sunshine applied a simple fix to stdrep's
	  csReporterListener::HandleEvent() to work around a bug where the line
	  wrapping code would loop infinitely once it got to the last line in
	  wrapped message if that line contained only a single word.  (A more
	  correct fix would be to re-write this code completely, since it is
	  unnecessarily obfuscated and convoluted, and about three times as
	  long as it needs to be.)
	- Eric Sunshine upgraded csString so that it makes a distinction
	  between a null-string and a zero-length string.  This distinction is
	  now clearly documented.  Client code can check for these conditions
	  in the normal fashion by invoking csString::GetData() or operator
	  char const*() to retrieve a C-string representation of the string.
	  If the result is zero, then it is a null-string.  If the result is
	  non-zero but csString::Length() returns zero, then it is a
	  zero-length string.  This means that existing code in external
	  projects which incorrectly relied upon the broken, indeterminate, and
	  undocumented accidental null-string vending of the past can now rely
	  upon the behavior as supported and deterministic.  The new
	  convenience method csString::GetDataSafe() will always return a valid
	  C-string, even if the underlying csString represents a null-string
	  (in which case a zero-length C-string "" will be returned).  This
	  means that the result of GetDataSafe() can be used directly without
	  performing a null check.  Fixed several csString methods which would
	  crash when the underlying representation was a null-string.  Also,
	  completely overhauled the remaining csString and iString
	  documentation.
	- Jorrit optimized the NR terrain engine by removing an unneeded
	  call to ClipBBox(). If ClipBSphere() is used then that's sufficient.
	- Eric Sunshine fixed bug in the deprecated csutil/hashmap.h where it
	  was re-declaring the csHashCompute() functions with signatures
	  different from the ones in csutil/hash.h.
	- res removed a commented-out debug printf() in
	  csHashMap::ChangeBuckets(). The comment was errorneously line-broken,
	  causing compile errors.
	- Eric Sunshine fixed CS_TEXT_CACHE_OUTPUT() in textcache.m4 to do a
	  better job of cleaning up after itself.
	- Jorrit disabled the use of fputws for now until we find out a way
	  to discover buggy implementations of fputws.
	- res augmented the fixed function FP tp support GL fog.
	- res fixed a bug where binding a vertex buffer to multiple
	  destinations didn't work (was only bound to the first destination).
	- res augmented the chunklod plugin to also provide normalized tex
	  coords (ie go from 0 to 1 over the area of the terrain).
	- Eric Sunshine fixed a silly oversight in install.mak where the
	  'install' target failed to be recognized by the sub-make invocation,
	  despite the fact that the other targets, such as 'install_config',
	  'install_plugin', etc., were recognized.  Reported by Atis Elsts
	  <prophet@balticom.lv>.
13-Apr-2004
	- Jorrit changed the PreferClipPlane default to enabled for the new
	  renderer. Now clipping planes are enabled by default and only
	  disabled in some cases (like on GF Go hardware).
	- Jorrit changed csKeyValuePair and csMapNode so that they no
	  longer use embedding to implement iKeyValuePair and iMapNode.
	- Jorrit started enhancing the API documentation by adding three
	  sections to every common interface definition:
	    - Main creators of instances implementing this interface
	    - Main ways to get pointers to this interface
	    - Main users of this interface
	  The idea is to make it easier for the user to find out how
	  to obtain instances of some interface and how those interfaces
	  are supposed to be used.
	- Jorrit removed the unused iDataObject and csDataObject.
	- Luca improved the speed of csLoader::CollectAllChildren method.
	- Jorrit found out that walktest was actually using iDataObject.
	  Instead of reviving iDataObject, fixed Walktest so that it no
	  longer requires it.
	- res fixed a bug in the AVI handler where a loop counter was
	  incremented twice.
	- Jorrit implemented a considerable optimization in Dynavis
	  and Frustvis by replacing csHashSet with csSet<T>.
	- res augmented the GL fixed shader program plugin to allow
	  manipulation of the texture matrix.
12-Apr-2004
	- Luca added some code to csloader.cpp/*.h to recursively handle the
	  flags in meshes' children if needed.
	- res ported OpenPortal() to NR. Still has issues, though.
	- res updated todo_newrenderer.txt.
	- res ported the halo stuff to NR. Work somewhat (except flares), but
	  could be better.
	- res augmented the csPolygonRenderData struct so normals for smoothed
	  things are passed along to the poly renderer.
11-Apr-2004
	- Eric Sunshine applied a patch from Andres Freund <andres@anarazel.de>
	  to several of the templated csArray<> subclasses which ensures that
	  all names mentioned by the templates are "dependent".  This allows
	  the templates to build correctly with modern compilers, such as gcc
	  3.4.x.  For details of "dependent" template contexts, see:
	  http://gcc.gnu.org/onlinedocs/gcc/Name-lookup.html
	- Eric Sunshine fixed bug in csModelConverterSPR where it informed
	  clients that it could neither load nor save sprites, thus rendering
	  itself quite useless as a sprite importer/exporter.
	- Eric Sunshine fixed a bug in install.mak where the sub-install rules,
	  such as install_config, install_doc, etc., would uselessly create an
	  empty subdirectory within the build directory with the same name as
	  the rule (i.e. "install_config", "install_doc", etc.).
	- Eric Sunshine fixed bugs in several rules in docs.jam where NotFile
	  was being invoked for actual files.
	- Eric Sunshine fixed bug in group.jam where it failed to invoke
	  NotFile for the registered group names.
	- Eric Sunshine fixed bug in cs-config/Jamfile (and install.jam) where
	  the install target did not know how to build cs-config if it did not
	  already exist at installation time.
	- Eric Sunshine fixed bugs in glshader_cg and renderloop/stdsteps where
	  they were returning boolean values from methods declared as returning
	  csPtr<>.
	- Eric Sunshine added a ShellScript rule to application.jam, which
	  roughly parallels the Application rule, except that it builds a shell
	  script, rather than an application.  The ShellScript rules takes care
	  of all the typical housekeeping, such as setting up the installation
	  and clean targets, and ensuring that the script is executable once
	  created.  The actual content of the generated shell script is
	  provided by a client-supplied "content creation" rule.  The cs-config
	  script is now created via this new mechanism.
	- Jorrit did more API documentation enhancements
	  (iEngineSequenceManager) and also added a few constants
	  instead of 0, 1, and 2 for AddConditionLightChange().
	- Eric Sunshine fixed Doxygen configuration so that it properly
	  propogates documentation to group members when only the first member
	  is documented.  (This is common, for instance, when all elements of a
	  group want the same documentation string.)
	- Eric Sunshine fixed csEngine::CreateDefaultRenderLoop() so that it
	  does not crash outright if it fails to load the
	  crystalspace.renderloop.step.generic.type plugin.
	- Eric Sunshine fixed bug in stdstep/rlsstd.mak where link libraries
	  were mis-ordered, thus resulting in plugin load failure on account
	  of missing symbols.
	- Eric Sunshine fixed bug in csperl5.mak where csperl5 was not linked
	  against csgfx, thus resulting in load failure on account of missing
	  symbols.
10-Apr-2004
	- Jorrit fixed a bug in spr3d with new renderer. It would try to
	  tween vertices also for skeletal animation. That would cause
	  crashes for skeletal sprites.
	- Jorrit fixed a memory leak in genmesh with new renderer. Please
	  don't use embedded interfaces for SharedVariableAccessor since that
	  will cause a circular reference.
	- Jorrit removed the unused, unimplemented, and badly designed
	  iCollideSystem->CreateSphereCollider() and CreateBoxCollider().
	  Fixed RAPID and OPCODE plugins for this change.
	- Jorrit augmented the API documentation of iCollideSystem.
	- Luca has fixed a tiny error in the engine plugin. The error was
	  returning a value in a function whose return value is void. He
	  also updated the Doxygen's comment for the iMeshWrapper::GetFlags()
	  method.
	- Aren Blondahl revised <settings> block in map2cs and added ambient
	  lighting, clearscreen, and maxlightmapsize support to map2cs.
9-Apr-2004
	- Jorrit added iMeshWrapper->SetZBufModeRecursive(),
	  SetFlagsRecursive(), and SetRenderPriorityRecursive(). These
	  functions will do the same as their respective non recursive
	  variants but they will also perform the operation on the
	  children of the mesh (and their children).
	- Jorrit extended the map loader so that when you use 'meshref' the
	  flags like render priority, zbuf mode and so on will be propagated to
	  the children too.
	- Eric Sunshine simplified the unnecessarily obfuscated map2cs
	  prototype for CMapPolygon::CheckIfInside() since it caused grief for
	  gcc 3.4.x which considered one invocation of the method ambiguous.
	- Eric Sunshine fixed a couple problems reported by Andres Freund
	  <andres@anarazel.de> in maya2spr's BinaryTreeIterator<> template.
	  (1) Last() was modifying the non-existent variable 'bWentLeft'. (2)
	  Prev() calls printf() in a non-dependent manner, which caused gcc
	  3.4.x to fail with a compiler error since <stdio.h> had not been
	  #included. See http://gcc.gnu.org/onlinedocs/gcc/Name-lookup.html for
	  an explanation of why printf() must be declared before it is used in
	  a non-dependent template context.
	- Eric Sunshine augmented the CPU-specific optimization flag check in
	  configure.ac so that it first attempts the -march= variations before
	  attempting -mcpu=, -mpentiumpro, and -mpentium since the latter flags
	  are officially deprecated in gcc 3.4.x.
	- Eric Sunshine fixed bugs in ivaria/ode.h where it was protecting the
	  types int8, uint8, int32, uint32 by #defining them as ode_int8,
	  ode_uint8, etc. before #including <ode/ode.h>, but was then
	  incorrectly #undefining ode_int8, ode_uint8, when it should actually
	  have been undefining int8, uint8, etc.  This cause compilation errors
	  for any use of int8, uint8, etc. after ivaria/ode.h was included
	  since the compiler still saw ode_int8, ode_uint8, etc. in their
	  stead.
	- Eric Sunshine simplified the Python SDK check in configure.ac
	  considerably by removing support for the obsolete csmingwlibs
	  package, which involved interrogating the csmingwlibs-specific
	  environment variables PYTHON_INC and PYTHON_LIB in lieu of querying
	  distutils.sysconfig (since the Python executable was absent from
	  csmingwlibs); and by dropping support for Python 1.x, which involved
	  manually parsing Python's installed makefile.  (The cspython module
	  dropped Python 1.x support a long time ago.)
	- Eric Sunshine added a hack to sound/loader/ogg/oggdata.h which works
	  around a build problem with some installations of Ogg/Vorbis on
	  Cygwin where it attempts to #include the non-existent <_G_config.h>.
	- Eric Sunshine added a patch to win32.jam to work around a problem
	  with natively-built Jam on Cygwin where it fails to perform library
	  scanning properly, with the result that it thinks that the contained
	  object files need to be rebuilt (along with all targets which depend
	  upon those files).
8-Apr-2004
	- Jorrit committed a patch to map2cs from Aren Blondahl:
	    - Added Support for "_color" tag in light entities for support
	      with proper q3 .map format and GtkRadiant compatibility.
	    - Added Support for keys on the "worldspawn" entity to be added
	      in as a <key /> tag. This will allow developers to add keys to
	      their "worldspawn" and access them in their code through
	      Engine->QueryObject()->GetChild("name here"); Returning a
	      iKeyValuePair*
	    - Added Support for info passed in the config file to be
	      specified in the .map, I had some people I knew annoyed about
	      creating a .cfg each time they made a new map, now the scaling
	      factor can be set in the "worldspawn" entity under the key
	      "world_scale". And also by adding in a key "archive" to the
	      world spawn (or perhaps any entity at this time **will clean
	      that up in the future**) the value of the key is loaded as a
	      pk3 file (will add support for other archive types later).
	      This will essentially exclude the need for the .cfg (for now
	      at least). I will be adding more options in the future.
	- Jorrit added the following persons to the contributors document:
	    - Aren Blondahl
	    - Frank Richter
	    - John Harger
	    - Daniel Fryer
	    - Reed Hedges
	    - Vincent Knecht
	    - Fritz Elfert
	    - Luca Cappa
	    - Andrew Craig
	    - Bjorn Hansen
	    - James Thompson
	    - Chris Matuszewski
	    - Andrew Mann
	    - Andreas Busch
	    - Andrew Topp
	  Also updated a few other entries.
	- Eric Sunshine made the following changes to the 'make install'
	  machinery:
	    - Published the component sub-install targets to give the user
	      finer control at install time.  For instance, to install plugins,
	      "make install_plugin".  The sub-install target names match the
	      Jam sub-install names as closely as possible.  The available
	      installation targets are:
		install
		install_bin
		install_config
		install_data
		install_doc
		install_include
		install_lib
		install_plugin
		install_root
		install_script
		uninstall
	    - Fixed bugs: At install time, with Swig present, cspython.mak and
	      csperl5.mak would attempt to copy Swig-generated files from the
	      build directory back into source tree even though this was not
	      requested (and might fail if source tree is read-only).
	    - Fixed bugs: With Swig present, cspython.mak and csperl5.mak
	      incorrectly installed the Swig-generated files from source tree,
	      rather than the ones from the build tree. (The ones from the
	      build tree will be newer if Swig is installed.)
	    - Fixed bug: cspython.mak attempted to install _cspace.so as if it
	      was as CS plugin rather than a Python extension module.  This
	      failed on MacOS/X because CS plugins have a .csbundle extension,
	      whereas Python modules have a .so extension, and it was looking
	      for the non-existent _cspace.csplugin.
	    - Changed cspython.mak and csperl5.mak so that they now install the
	      pure Python (_cspace.so) and pure Perl (cspace.so) extensions in
	      scripts/python and scripts/perl5, respectively, rather than
	      installing them alongside the CS plugins.  This change allows
	      Python users to set their PYTHONPATH environment variable to
	      simply point at scripts/python and have Python find both
	      cspace.py and _cspace.so.  Ditto for Perl's PERL5LIBS variable.
	    - cspython.mak and csperl5.mak are now responsible for requesting
	      installation of their related scripting files from scripts/python
	      and scripts/perl5, respectively.  install.mak no longer has any
	      hard-coded knowledge about these directories.
	    - Simplified and clarified the implementation of install.mak to
	      some extent by introducing re-usable macros which do much of the
	      difficult or dirty work.
	- res augmented the win32 minidump facility to optionally include the
	  heap in the dump.
	- res slightly changed the way lightiter creates the attenuation
	  texture.
	- res made some VC6 compile fixes.
	- Eric Sunshine performed a major overhaul of intro/contrib.txi:
	    - Eliminated and rewrote much outdated information so as to avoid
	      misleading readers.
	    - Added a good deal of missing information to entries for various
	      contributors.
	    - Re-wrote almost all entries to improve grammar and follow
	      standard English idiom more closely.
	    - Folded together several duplicate entries, including those for
	      Frank Richter.
	    - Alphebatized the list of contributors. (Previously, the document
	      claimed to be ordered by date of initial contribution, however,
	      in reality, there was much randomness of entries, and the
	      date-based claim was more misleading than not.)
	- DeSigna began the implementation of the sexp parser, for use with
	  shader-expressions.
	- Jorrit changed genmesh so that iGeneralFactoryState is now a
	  subclass of iGeneralMeshState. All methods in iGeneralFactoryState
	  that are also in iGeneralMeshState (except for the material methods)
	  will now serve as defaults for creating mesh objects from the
	  factory. For example, you can now set a default mixmode for
	  a factory. All objects created from that factory AFTER changing
	  the default mixmode will also get that mixmode.
	- Jorrit enhanced the genmesh factory loader so that the following
	  keywords can now be used in factories: 'mixmode', 'manualcolors',
	  'lighting', 'noshadows', 'localshadows', and 'defaultcolor'.
	  'defaultcolor' is the same as 'color' for mesh objects but 'color'
	  was already taken for factories.
7-Apr-2004
	- res added a small helper class to create minidumps on Win32.
	- res augmented the Win32 assistant to allow user-defined exception
	  handlers.
	- res fixed spr2d & csNewParticleSystem to correctly appear in mirrors
	  on NR.
	- res augmented stdrep to allow retrieval of the debug log file name.
	- res added a Win32-only variant of csCallStackHelper that allows a
	  bit more control over the call stack creation.
	- Jorrit fixed a bug in the NR rendermesh sorter. The back2front
	  and front2back sorting (used for alpha render priority) were
	  not correctly sorting. The fix makes the sorter sligthly less
	  efficient though but this shouldn't be too hard since it should
	  only happen for objects in alpha render priority. Nevertheless in the
	  future we should consider precomputing the z information so we
	  don't have to calculate it in the sort routine itself.
	- res tweaked the flags for minidump generation a bit.
6-Apr-2004
	- Jorrit finished the implementation of csBSPTree.
	- Jorrit implemented back2front for genmesh. This new feature works
	  only in NR mode. OR will ignore this.
	- Jorrit fixed the autoresolve keyword so that it avoids searching
	  the sector when the keyword is given. i.e. previously if you used
	  autoresolve but the destination sector was already present then
	  the autoresolve keyword would not do anything because the callback
	  would not be created.
	- res changed the OR/NR GL texture managers to free up super lightmap
	  handles upon closing of the renderer. This should fix the problem
	  where texture handles were deleted after the GL context closed (this
	  had no apparent side effects on Win32, but lead to a crash on OS/X).
	- res augmented configure to check for fputws().
	- res changed the generic csPrintf() implementation to use fputws(),
	  if available.
5-Apr-2004
	- Peter Amstutz added the iVosApi interface to the csvosa3dl plugin.
	  This interface allows the application to access the underlying
	  Vobjects that have been loaded by the plugin.
	- Eric Sunshine reverted Peter Amstutz's change to csvosa3dl.mak from
	  yesterday since it broke static link mode; it caused 'ar' to be
	  invoked with linker flags.  Instead, Eric fixed the copy/paste error
	  which resulted in link failure, which is what Peter was attempting to
	  address.
	- Jorrit disabled the 'softgl' rule (Software GL tweaks) in the
	  gldrivers database. This rule prevents the use of hardware GL
	  features in some situations so I'm not sure why it even exists.
	- Jorrit added the iTextureManager->RegisterTexture() for NR also
	  to OR builds (but with empty implementation in the OR 3D renderers).
	  That way the renderstep plugins also compile with OR.
	  This change also makes sure that the python plugin can now compile
	  with NR too.
	- Jorrit added back the render steps so that they again compile in
	  OR too. The plan is to merge OR and NR builds. Not bring them
	  further apart.
	- Jorrit added a new Video.OpenGL.BrokenStencil flag. When this flag
	  is set stencil clipping is considered broken and will never be
	  used. If there are too many planes to clip then it will just ignore
	  the extra planes and not clip on those.
	- Jorrit added an entry for the Linux Rage128 drivers to set
	  the BrokenStencil option to true (in the gldrivers.xml database).
	- Jorrit fixed a bug in the Opcode collision detection plugin. It
	  would crash if it tried to check collision with an object that
	  has no triangles.
	- Jorrit found out that RAPID and OPCODE interprete csCollisionPair
	  differently. RAPID interpretes it as returning a triangle in
	  object space, while OPCODE interpretes it as returning in world
	  space. The RAPID interpretation is correct so I fixed OPCODE
	  to conform to that. By doing this walktest can now finally work
	  properly with the OPCODE plugin.
	- Jorrit clearly documented how csCollisionPair should be
	  interpreted in the API documentation.
	- Jorrit applied a patch from Andrew (Khaki from PS) so that walktest
	  collision detection correctly transforms the collision pairs. Jorrit
	  improved his patch by using the full transform instead of the
	  normal transform and also testing if the transform is identity or
	  not to avoid the work.
	- Jorrit started work on a small csBSPTree class. Unfinished.
	- Jorrit started work on actually implementing back2front sorting
	  in genmesh. Unfinished.
	- Jorrit did a quick untested change to mdl2spr so that it should
	  now output XML instead of the old map format.
	- Jorrit also fixed the MDL part of mdl2spr (not only MD2).
	- res made the following changes to the standard render steps:
	    - Add the ability to create the texture and use a persistent
	      render target in the 'target' step.
	    - Changed the 'fullscreen' step to accept a shader instead of a
	      material/shadertype combo, textures, mixmode, alpha mode and
	      shader vars, as well as optionally different behaviour when it's
	      drawn the first time. Also changed it to use DrawSimpleMesh().
	- res augmented the Win32 keyboard handling to support input from an
	  IME, based on some code from 'fusilli'.
	- Eric Sunshine fixed several errors in Jorrit's untested changes to
	  mdl2spr where it was emitting a tag without a terminating "/>" token,
	  and where it was incorrectly terminating tags with ">" when "/>" was
	  called for.
4-Apr-2004
	- res moved the attenuation texture generation to the light iter
	  plugin. Still the same texture for all lights, though. Plan is to
	  have individual attenuation textures, reflecting the light's
	  actual attenuation settings.
	- res added non-const versions for csHash<>::Get() and
	  GetElementPointer().
	- res made spr2d's SV accessor a non-embedded interface. Fixes a leak.
	- Eric Sunshine re-added 'ranlib' step to Library build rule in Jam.
	  This is needed since Apple's 'ar' command apparently does not update
	  the symbol index when creating the library.  (What was misleading was
	  that the make build system only runs ranlib at install time, however
	  the make system creates the library with Apple's 'libtool', whereas
	  Jam creates it with 'ar'.)  Consequently, Jam build now runs ranlib
	  at both build and install times.
	- res fixed leaking of render meshes and the SV context in the new
	  particle system.
	- res fixed the haze plugin to use the _EXT versions of SCF macros for
	  descendants of csHazeHull.
	- res fixed some GCC warnings & errors in the shader plugins.
	- res changed the render steps to only compile in NR builds.
3-Apr-2004
	- Jorrit fixed a new compile error in the simple console plugin.
	- Jorrit added a new 'back2front' keyword for the genmesh factory
	  loader. This keyword is currently still a placeholder but the idea
	  is that when this keyword is present then the triangles of the
	  genmesh will be rendered from back to front. This is useful when
	  you the mesh is transparent (or uses a transparent material). In
	  that case you need this flag to have correct rendering. At this
	  moment the keyword is simply parsed but not used yet.
	- Jorrit also added iGeneralFactoryState->SetBack2Front() and
	  IsBack2Front() for this functionality. Still doesn't do anything
	  yet.
	- res augmented Cg VPs to modify the compiled ARB VP to use the
	  built-in GL state matrices for the ModelView etc. matrices resp.
	  use glTrackMatrixNV() for nVidia VPs.
	- res added the ability to load ARB VPs from raw text.
	- res augmented csRenderMeshHolderMultiple to allow optional
	  non-deletion of the contained csRenderMesh*es.
	- res fixed csParticleSystem to disable render mesh deletion in the
	  holder.
	- res added a facility to allow shader programs to resolve a texture
	  binding destination in shaders. This way you can have 'custom' names
	  for TUs.
	- res augmented the Cg shader plugin to resolve texture bindings that
	  are named like a program parameter.
	- res added a simple vertex lighting shader utilizing Cg.
2-Apr-2004
	- res made the following changes:
	    - Replaced the CS_SHADERVAR_STACK #define with a csShaderVarStack
	      typedef.
	    - Added a new base class for shader plugins, containing some
	      common stuff.
	    - Updated the glshader_arb program classes to use that new base
	      class.
	- res augmented the Cg configure check to use pthread, required by
	  Cg for Linux.
	- Eric Sunshine added a "default" comparison function to csArrayCmp,
	  and made the "comparison function" argument to the csArrayCmp
	  contructor optional.  If the client does not supply a function to the
	  constructor, then the default function is used.  This makes it much
	  simpler to perform searches in csArrays in cases when the element and
	  keys can be compared via standard comparison semantics (such as when
	  their types are the same, though type equivalence is not required).
	- Eric Sunshine added an invocation of AC_REQUIRE([CS_CHECK_PTHREAD])
	  to the Cg check in configure.ac to ensure that the pthread cflags,
	  lflags, and libs variables are available since the Cg check now
	  utilizes those variables.
	- Jorrit fixed a bug in the new shader code from res2k. It would
	  use SCF_DECLARE_IBASE instead of SCF_DECLARE_IBASE_EXT and this could
	  cause crashes in some circumstances.
	- Jorrit added an entry to the drivers database to disable stencil
	  clipping on a Rage128 card on linux.
	- Jorrit added a new data/shader/specifyambient.xml which is a variant
	  of data/shader/ambient.xml but one that doesn't hardcode the
	  ambient color (STANDARD_LIGHT_AMBIENT). So you can use this to
	  set another ambient value on a material. This is useful to make
	  fullbright materials for example.
	- Jorrit improved error reporting for shader loading a bit.
	- Jorrit removed some error reporting in csShaderProgram about
	  destination attribute missing. I'm not sure this is the correct
	  fix though. Perhaps in some cases it IS an error if this is
	  missing.
	- Jorrit added a new 'autoresolve' tag for portals. If this tag is
	  given the portal will automatically reconnect to the sector if
	  the sector is removed and later added again. Without this flag
	  it works as follows:
	    - Portal is created, if sector doesn't exist a callback is
	      created which will attempt to find the sector as soon as the
	      portal is needed (for rendering for example).
	    - As soon as the callback manages to find the sector it will
	      connect the portal to that sector and remove itself.
	    - When later the sector is removed the portal will be cleared
	      again because it keeps a weak reference to the sector.
	    - However when the sector then comes back again the callback
	      is removed so the portal will not be able to relink again
	      to the sector.
	  With the 'autoresolve' flag the callback will not remove itself
	  so it will always be able to relink to the sector. This is not
	  default because this callback takes some memory which is not
	  needed in most cases. Using this flag helps with games that do
	  dynamic loading and unloading of levels.
	- Jorrit slightly improved performance in the engine by using
	  csMeshWrapper instead of iMeshWrapper to control the socket
	  positioning. That way a lot of virtual calls are avoided.
	- res fixed the splatting_bump shader for the new <variablemap> syntax.
	- res augmented the R300 driver db entry to prefer clip planes.
	- res re-activated reporting of a missing 'destination' report in the
	  shader program <variablemap> parser.
	- res changed the fixed and PS1 shader plugins to use the new shader
	  plugin base class.
	- Jorrit fixed a problem with the new autoresolve and the old
	  style portal specification using the <portal> keyword in a
	  thing mesh. In this particular case it wouldn't actually work
	  and it would also use an uninitialized variable.
	- res augmented the swig-generated output for cspython to #undefine
	  _DEBUG before including Python.h. This way, python23.lib instead of
	  python23_d.lib is used on MSVC.
	- res fixed some VC6 compile errors in some shader plugin and updated
	  some shader plugin makefiles to utilize the common shaderplugin code.
	- res changed char arrays on the stack to csStrings in stdrep and
	  simpcon to avoid buffer overflows.
	- Eric Sunshine applied a Swig-related patch from Andrew Sutherland
	  <sombrero@alum.mit.edu> (patch #925053).  Andrew writes:
	    The problem, long story short: iGeneralFactoryState has a number
	    of methods that return arrays.  However, the signature is just
	    csVector3* or the like, which SWIG interprets to be a point to a
	    single object, rather than an array.  The specific methods are
	    GetVertices, GetTexels, GetNormals, GetTriangles, and GetColors.
	    The changes are:
	    - Swigs csgeom/tri.h, which defines csTriangle.  This is exposed by
	      GetTriangles/GetTriangleByIndex, but was previously just treated
	      as an opaque pointer.
	    - Introduces GetVertexByIndex, GetTexelByIndex, GetNormalByIndex,
	      GetTriangleByIndex, GetColorByIndex.
	    - Introduces (tiny manual) python replacements for GetVertices,
	      GetTexels, GetNormals, GetTriangles, and GetColors via the SWIG
	      python binding's 'shadow' feature.  These replacements create
	      instances of the next class, providing it with the proper
	      by-index-getter and count-getter.
	    - Introduces a new Python class that takes a by-index-getter and
	      count-getter and exposes them as an object that implements
	      __len__ and __getitem__.  This is sufficient for 'for' loops and
	      (index-guarded) subscript access to work properly.  This has the
	      benefit of presenting a 'lazy' list view to the user.
	      Specifically, there's no getting around the wrapper object being
	      constructed for each index retrieved (after all, we're just
	      calling GetFooByIndex), but at least it doesn't happen all at
	      once.
	  In addition, Eric added iSprite2DState::GetVertexCount(), and added
	  %ignore directives for non-Python platforms to ignore the methods
	  which are incorrectly exported by Swig, and which the new
	  GetFooByIndex() methods are meant to replace.
	- res changed the Cg shader plugins to use the new shader plugin base
	  class.
	- res added two simple example Cg programs.
1-Apr-2004
	- Eric Sunshine fixed include/Jamfile so that it installs Swig (*.i)
	  files.  These are needed by CEL, for instance.
	- Eric Sunshine fixed mk/install.mak so that it installs Swig (*.i)
	  files and Perl5 support files (scripts/perl5/*.pm).
	- Jorrit fixed a problem in the fixed shader where it would fail
	  to initialize the 'primcolvar' variable (VERTEX_COLOR token).
	  In vertex_color was not given in the shader then the result would
	  be essentially undefined because of this.
	- Jorrit enabled VBO support in NR OpenGL renderer again. There is
	  still a problem on linux with ATI and drivers 3.2.8 but for that
	  we need to add something to the gldrivers database so that we
	  can disable VBO for that situation alone.
	- Jorrit fixed a slight problem in the PlaneGlyphElementHandler which
	  is used in the font cache. It would not correctly copy the source
	  element in the 'Construct()'. This fix does not fix the problem with
	  the huge slowdown in CS though.
	- res changed the csArray<> comparison functor to not store the key as
	  a ref. This seems to fix the slowdown.
	- Eric Sunshine fixed cs.mak so that "-L$(OUT)" appears in the link
	  command before other platform-specific -L directives.  This ensures,
	  for instance, that application and plugin targets will link against
	  the libraries in the build directory, rather than any installed
	  versions.  Without this change, the linker was preferring installed
	  CS libraries over developmental ones, which was incorrect.
	- Jorrit added a rule to gldrivers.xml to disable VBO for the 3.2.8
	  ATI drivers on linux. I haven't yet tested the more recent ATI
	  drivers so I don't know if the rule has to be applied there too.
	- Eric Sunshine updated outdated information in the KDevelop HOWTO and
	  fixed some incorrect examples.  Also updated the snap5 screenshot so
	  that it no longer mentions the obsolete cssys library.
	- Eric Sunshine augmented the Jam DoInstall rule so that it accepts an
	  optional list of post-install rules to invoke upon the installed
	  target.
	- Eric Sunshine fixed Jam build system bug where it failed to run
	  `ranlib' on the installed libraries.  (Instead, it incorrectly
	  invoked ranlib just after building the libraries, which is completely
	  ineffectual.)
	- res fixed a cut'n'paste error in spr2d: the vertex/color/texcoord
	  render buffers were errorneously flagged as 'index buffers', causing
	  display corruption when VBO was enabled.
31-Mar-2004
	- Jorrit fixed a bug with iSector->HitBeamPortals(). It would not
	  be able to register hits on meshes that don't return a polygon
	  index.
	- Jorrit fixed an initialization error in the csGLStateCache for
	  GL_STENCIL_BITS. This bug was reported by valgrind.
	- Eric Sunshine fixed user.mak so that it only builds glshader_arb,
	  glshader_fixed, and glshader_ps1 if GL.AVAILABLE is 'yes'.
	- Eric Sunshine worked around a slew of MSVC6 compiler bugs ("internal
	  compiler error" and several others) which were triggered by changes
	  to csArray<> aimed at making FindKey() and FindSortedKey() type-safe.
	  The new approach wraps the comparison function in a functor which
	  falls back to unsafe void* if and only if the compiler fails to grok
	  the strongly typed approach.  The functor wrapper hides this MSVC6
	  anomaly from client code.
	- Steven Geens made sprite socket update their position in the new
	  renderer.
30-Mar-2004
	- Eric Sunshine added missing "#define CS_SYSDEF_PROVIDE_SOFTWARE2D"
	  to null_render3d.cpp.  Reported by Steven Geens.
	- Jorrit disabled the sphere culling for the generic render loop
	  that was recently added. This adds a very big overhead to the
	  main rendering loop in csSector which is not acceptable. We need
	  another solution for this.
	- Jorrit fixed two bugs with portal containers in the engine:
	    - First when moving to a sector the portal container would
	      unregister itself instead of registering.
	    - Second the portal container registration was broken in case
	      the portal mesh is a child mesh (which is a very common case).
	- res fixed spr3d on NR (actually, just the obj2cam transform wasn't
	  set). Also slightly changed the way it's drawn, now uses shader var
	  accessors (instead of setting all the data in GetRenderMeshes()).
	- res fixed a GCC warning in the PS1 plugin.
	- res fixed glrender3d to use the actual perspective center instead
	  of a hardcoded "center of screen".
	- res changed glrender3d to set up the projection matrix lazily. Also
	  updates this matrix when the perspective center or aspect changes
	  (which can happen if multiple views are drawn subsequently).
	- res changed csList<>::csListElement to not be dllimported any more.
	  That caused linking problems (as the actual instantiation of
	  csListElement would eb required in csutil).
29-Mar-2004
	- Jorrit changed the NR null3d renderer so it uses the soft canvas
	  instead of the OpenGL canvas by default.
	- Jorrit fixed a bug in the NR null3d renderer. It would call
	  g2d->BeginDraw() too many times.
	- Jorrit fixed another bug in the NR null3d renderer. It was using
	  csRef and DecRef() at the same time.
	- Jorrit added 'chunklod' to the list of static plugins for Jam.
	- res worked further on the PS1.x->1.4 converter. Improved register
	  aliasing.
	- res made the NR normalizer cubemap size changeable via a config
	  setting. Also increased the default size to 256.
28-Mar-2004
	- Eric Sunshine moved csutil's copy of TinyXML into a private namespace
	  to avoid clashes with other external libraries which also embed
	  TinyXML.  This corrects, for instance, a problem on MacOS/X where
	  modules requiring both csutil and cal3d failed to link on account of
	  symbolic collisions (since cal3d also embeds TinyXML).
	- Eric Sunshine greatly expanded the Doxygen documentation fo iVFS and
	  iFile.
	- Eric Sunshine augmented iVFS::PushDir() so that, as a convenience, it
	  optionally accepts a path as an argument and invokes ChDir() for that
	  path after pushing the current working directory.
	- Eric Sunshine fixed shadermgr.mak so that it also installs the
	  contents of CS/data/shader/, since these data files are required when
	  configured for the new renderer.
	- Eric Sunshine upgraded csEngine::HandleEvent() so that it deals more
	  gracefully with failure to load /shader/or_lighting.xml (rather than
	  crashing outright).
	- res made the following changes to map2cs:
	    - Applied a patch from Calle Lejdfors <calle.lejdfors@cs.lth.se>
	      to generate 'new' portal statements.
	    - Improved texturing for HL maps in some cases.
	    - Allow more control where a library is referenced in the map file;
	      "end:lib" puts lib at the end (useful for e.g. sequences).
	    - The player start angle is correctly evaluated.
	    - Added possibility to exclude certain textures from being
	      generated and written to the .zip (so they are supplied by the
	      user).
	    - Added possibility to specify the renderloop to use.
	- res augmented the rotation sequence action loaded to automatically
	  determine a rotation center (the middle of the object's bounding
	  box) when <autoffset /> is specified.
	- res slightly improved the error handling when reading shader files
	  from world files.
	- res fixed the simple console to draw text in PutTextV() only if the
	  method hadn't been called recursively (on rare occasions, something
	  was reported from inside the 2D functions, causing the 2D stuff to
	  be called again, where again something was reported and so on,
	  leading to an infinite recursion resp. stack overflow).
	- res changed csShaderVariable::SetValue(csVector2) to set the 3rd
	  component of the internally stored Vector4 to 0 instead of 1.
	- res added a small hack to the material shader storage to clear the
	  assigned OR compatibility shader if a shader for some shader type
	  is set. This was done to allow the removal of the implicitly set
	  OR compatibility shader.
	- res virtualized some methods in the standard proctex plugin.
	- res augmented csRenderMeshList with a method to remove all meshes
	  outside a sphere.
	- res changed the generic renderstep to not draw meshes that are
	  outside the influence of the light passed in.
	- res added a method to iTextureLoaderContext to retrieve the name of
	  the texture to be loaded.
	- res un-inverted the <mipmap> texture flag parse logic.
	- res added a texture loader to generate a (static) texture from a
	  shader expression.
	- res added a sanity check to csShaderVariableContext::PopVariables().
	- res fixed the shader expressions so atomic expressions are accepted
	  and added pow, min and max functions.
	- res did various changed and fixes to the glshader_ps1 plugin:
	  changed the way instruction are declared, the version is parsed,
	  fixed replication for ps1.4 programs, fixed dealing with phase in
	  ps1.4 programs, fixed parsing of the destination write mask for 1.4
	  programs, now deals with the pairing modifier.
27-Mar-2004
	- Anders Stenberg did the following NR changes:
	    - Added the possibility to route Cg programs through
	      the Pixel Shader plugin, to make Cg available on lower end ATI
	      cards. This means the Cg plugin should now be able to cover all
	      cards with some kind of pixel shading ability. (I.e. GF3+ and
	      ATI 8500+). Routing will be enabled by default on cards where
	      ATI_fragment_shader is supported, but ARB_fragment_program isn't.
	      It can also be manually forced on or off by setting
	      "Video.OpenGL.Shader.Cg.PSRouting" in a config file.
	    - Fixed variable mapping in the Cg plugin, which apparantly was
	      broken.
	    - Added an overloaded Load function to shader plugins, which
	      allows for loading shaders from raw text buffers instead of
	      via iDocumentNode. (Useful for programmatic loading of shaders.)
	      Currently only the Pixel Shader plugin actually implements this.
	- Jorrit fixed a bug in sprcal3d->HitBeamOutline() routine.
	  The routine forgot to set the 'isect' return value AND in
	  addition to that it even used that value. Hitting cal3d
	  sprites with HitBeam() should now work.
	- Anders Stenberg added scissor clipping to NR. This means a GL
	  scissor clipping box is applied to the bounding box of the clipper,
	  which in practice means some fillrate is saved.
	- Anders reverted the latest addition (or at least commented it out)
	  since it'll probably conflict with scissor settings in the canvas.
	  A solution for them to live in harmony should be done eventually.
26-Mar-2004
	- Marten added csMatrix as a type a csShaderVariable can store.
	- Marten made the shadermanager responsible for handling the shader-
	  variablestack used during rendering. This to allow other plugins to
	  access it without having to pass it around everywhere.
	- Marten comitted first steps toward making NR use fog. It does not yet
	  work though, but its progressing.
	- res started to work on a PS1.x -> 1.4 converter. Not useable yet,
	  though.
	- Eric Sunshine eradicated all ugly, unsafe, type-agnostic void* usage
	  from csArray's sorting and searching methods.  Now, all arguments to
	  these functions and their comparison helpers are type-specific and
	  type-safe.
	- Eric Sunshine fixed compilation errors and warnings in the various
	  shader plugins.  Also added 'softshader' to user.mak.
	- Anders Stenberg fixed a problem with fog calculation. Still not
	  working though.
	- res fixed a compile error in partphys_ode after the recent array
	  changes.
	- res further worked on the PS1.x -> 1.4 converter. Can handle veeery
	  simple programs now.
	- Jorrit disabled outline splatting in the Dynavis plugin. This can
	  be enabled again as soon as it works properly.
	- Luca reflected the change to the signature of the method
	  iMeshObject::GetRenderMeshes to the csMeshObject class.
	- Eric Sunshine worked around an MSVC6 compiler bug where it was unable
	  to determine the type of template argument K in
	  csStringArray::FindSortedKey().  Hopefully, we will be able to find a
	  more suitable solution in the near future so that the ugly hack
	  presently in use can be eliminated.
25-Mar-2004
	- res ported code to properly handle keycolored procedural textures
	  over from the OR.
	- res changed the NR glrender3d texture manager so that the images of
	  a texture aren't replaced with the lowest mipmap(s).
	- res slightly changed the behaviour for retrieving shader var texture
	  values: now, a handle is requested from a wrapper when it's needed
	  the first time. Some wrappers don't have a handle yet when the value
	  is set, but get one later.
	- Matt Reda changed the MacOS X OpenGL canvas to use a 32 bit depth
	  buffer (it was 16) and added 8 bit stencil and alpha buffers when
	  compiling for the new renderer
	- Jorrit added a new csStringReader class to csutil. This class takes
	  a const char* input buffer as input and will split that buffer
	  in lines. You can then read the lines one by one. It will correctly
	  read lines for both CR and CR/LF format.
	- Jorrit fixed a few bounding box calculation errors in sprcal3d.
	  Completely untested due to lack of cal3d library.
	- Marten made chunkedlod display something again. It does not yet work
	  with mirrors. Maybe someone who understands the plugin can fix that.
	- Eric Sunshine performed project-wide spelling corrections:
	    conveniance --> convenience
	    conveniant	--> convenient
	- res ported the csParticleSystem based particle systems to NR.
	- res fixed spr2d not always respecting it's position when used as a
	  particle.
24-Mar-2004
	- Jorrit extended the standard output console so that it now also
	  supports setting of the font through the config file. Added
	  a data/config/standardcon.cfg file. Currently the only setting
	  that the standard output console supports is StandardConsole.ConFont
	  which can have the following values:
	    - auto: select font based on size of display, similar like what
	      simple output console does.
	    - select the specified font.
	- Jorrit fixed a bad bug in the standard output console which caused
	  it to crash when the total size of the buffer would be exceeded and
	  the top line would be deleted.
	- res updated spr2d to work with NR.
	- res made some changes to how the render mesh holders work internally.
	- res added some documentation to csRenderMesh, csAlphaMode, the
	  render mesh holders and csRenderBufLock.
	- res changed csRenderMesh to have the db_mesh_name member not only in
	  debug mode (mostly for binary compatibility between debug/release
	  binaries).
	- res fixed a bug in csRenderMeshHolderSingle where it reported the
	  first returned mesh as 'not created', tho the opposite would've been
	  correct.
	- Eric Sunshine fixed run-time syntax error in Java header directory
	  check in configure.ac.  Problem was introduced on 22-Mar-2004 when
	  Java check was augmented for MacOS/X.
	- Eric Sunshine fixed csconout.mak so that it installs the new
	  standardcon.cfg configuration file.  Also upgraded the makefile to
	  the new style which does not directly pollute $(OUT).
23-Mar-2004
	- Anders Stenberg brought stencil shadows back to life in NR.
	  They should get along well with stencil clipping.
	  Possible todo: Not assume 8-bit stencil, but allow different
	  bitcounts. Also somehow avoid glClear of the stencil buffer.
	- Anders Stenberg updated shader plugins to actually not load
	  if the wrong renderer (software) is used. Todo is to give a
	  better error message.
	  Also changed the "environment" syntax of FixedVP a bit to
	  allow for future texgen modes. Look at water shader for reference.
	- Anders Stenberg fixed a bug in windows threading, where a
	  semaphore "LockWait" would return instantly due to wrong
	  usage of the timeout value.
	- Eric Sunshine upgraded the iCursor documentation and interface so
	  that it uses the term "transparency" rather than "alpha" (since
	  "alpha" was misleading), and also indicates the range of transparency
	  values and their meanings.  Also cleaned up some other anomalies in
	  the interface.
	- Eric Sunshine fixed a potential crasher in
	  csRenderMeshHolderMultiple::GetUnusedMeshes() where it blindly
	  accessed element zero of the renderMeshes[] array without checking if
	  the array contained any elements.
	- Eric Sunshine changed scripts/cs-config/Makefile.template to look for
	  *.cpp files in the current directory, by default, rather than in a
	  src/ subdirectory.  The assumption is that an unsophisticated user
	  will probably just dump all sources into the main directory rather
	  than trying to impose some sort of organization.  More sophisticated
	  users, of course, are probably Makefile-wise and will know enough
	  to edit the makefile to suit their needs.
	- Eric Sunshine added libtool check to configure.ac.  This check is
	  smart enough to identify GNU libtool and Apple's own libtool (which
	  is unrelated to the GNU command, and which serves a totally different
	  purpose).  The check will be able to identify Apple's libtool even if
	  a GNU's libtool appears in PATH before Apple's libtool.
	- Eric Sunshine fixed bugs in configure.ac where it was composing
	  search paths using a literal ":" delimiter rather than
	  $PATH_SEPARATOR.
	- Eric Sunshine worked around a problem where INT64_C() and similar
	  macros from <stdint.h> were not getting defined when building
	  cs_pyth.cpp.  This happened because the Swig-generated cs_pyth.cpp
	  includes <Python.h> very early, which includes <stdint.h> (on some
	  platforms) before we have a chance to define __STDC_LIMIT_MACROS.
	  __STDC_LIMIT_MACROS must be defined before <stdint.h> is included in
	  order for <stdint.h> to define INT64_C() and cousins.  To solve,
	  cs_pyth.cpp is now post-processed to ensure that __STDC_LIMIT_MACROS
	  is defined before <Python.h> is included.
22-Mar-2004
	- Anders Stenberg fixed several places where mesh objects would
	  return "false" from GetRenderMeshes (which is supposed to return
	  a pointer), and didn't initialize the "number of meshes returned"
	  variable. This could cause the culler to crash.
	- res changed glrender3d to support changing the texture filter mode
	  and texture cache size via a config setting.
	- res started on converting spr2d to NR. Still needs work, tho.
	- res added a GL driver DB entry for software GL implementations.
	- Jorrit fixed spr2d so that it compiles again with OR.
	- Jorrit fixed spr2d Jamfile so that it no longer trys to use
	  the bcsgeom library (whatever that is :-).
	- Jorrit fixed the NR glrender3d target. You can't declare variables
	  without a type like this:
	    static const textureMinFilters[3] = {GL_NEAREST_MIPMAP_NEAREST,
	      GL_NEAREST_MIPMAP_LINEAR, GL_LINEAR_MIPMAP_LINEAR};
	- Jorrit fixed a harmless initialization error in Frustvis and
	  Dynavis.
	- Jorrit fixed a bug with NR and handling of visibility culling and
	  portals. Previously the NR would reuse the same visibility culling
	  result if you entered some sector twice (through different portal
	  paths). But this is invalid since the portal contributes to
	  visibility culling so for the same sector the visibility culling
	  result can be different because the portal you entered is different
	  (and other objects will be visible/invisible). Solved this by adding
	  a context_id to csRenderContext. This id is used instead of comparing
	  pointers. Comparing pointers was not safe because render contexts are
	  reused. The id is never reused (for the same frame).
	- Jorrit fixed the chunklod terrain engine (NR) so that it no longer
	  returns bounding boxes that have huge floating point values in them.
	  The visibility cullers (more specifically the kdtree) cannot cope
	  with that.
	- Jorrit removed the obsolete render context data system from
	  iRenderView. Nothing was using it.
	- Eric Sunshine fixed bug in scripts/cs-config/Makefile.template where
	  it incorrectly defined DO.EXEC rather than DO.EXE, thus causing the
	  build to fail.
	- Eric Sunshine augmented the Java SDK usability test in configure.ac
	  so that it succeeds on MacOS/X.
	- Eric Sunshine changed cspace.i so that it %ignores almost all
	  functionality of iString.  All higher-level languages for which CS
	  bindings exist already have powerful string classes, so we can safely
	  export a bare-bones iString interface.  As a happy side-effect, this
	  change also eliminates the compilation error "cs_pyth.cpp: error: ISO
	  C++ forbids assignment of arrays" which occurs on 64-bit x86_64
	  systems when SWIG tries assigning a va_list to a va_list in the
	  iString::FormatV() wrapper.
21-Mar-2004
	- Luca Cappa committed the res fix to the problem regarding the lack
	  of the regex.c file in the CSUtil library. The problem was
	  related to the VisualC++ compiler environments only.
	- Marten made a new, hopefully permanent, fix for the csRenderMesh
	  problem. This fix replace removed res workaround from the 15th March.
	  This change also means that DrawTest no longer is used in the NR
	  way of doing things. Instead GetRenderMeshes now does the job of both
	  DrawTest and GetRenderMeshes.
	- res fixed the ball plugin to correctly update the lighting and use
	  the set mixmode on NR.
	- res fixed a few compiler warnings after the cs-win32libs update.
	- res fixed csInputDriver so it actually can receive focus changed
	  event.
	- res updated the Win32 keyboard driver to do more sophisticated key
	  state restoration after the CS window gained focus.
	- res fixed csImageMemory to also not delete the Palette if the image
	  isn't to be deleted.
	- Eric Sunshine reverted Luca Cappa's change to msvcgen/win32.mak.  The
	  file msvcgen/required.mak already forcibly sets REGEX.AVAILABLE=no,
	  so there should be no need to do so again in win32.mak.  If there is
	  some configuration in which this is failing, please report so that it
	  can be fixed correctly.
	- Eric Sunshine fixed a number of Texinfo errors in the CS manual which
	  were introduced yesterday.
	- John Harger fixed the particles plugin to reflect Marten's recent
	  change to iMeshObject::GetRenderMeshes
	- Jorrit fixed the ball plugin so that it compiles again after res2k
	  'fixed' it.
	- Duhprey added a IBASE constructor/destructor for csSimpleSampler
	- res changed csMaterial::SetShader() to override any already set
	  shader for a type.
	- res fixed bugplug's spider camera catching in NR after Marten's
	  recent changes to GetRenderMeshes() and DrawTest().
	- res augmented map2cs with the ability to specify libraries included
	  in a map and exclude certain materials from being generated (so they
	  are supplied by the user).
	- res fixed map2cs so that q3 invisible textures are handled properly.
	- res fixed the PS shader plugin so constants are honored for ATI
	  programs.
	- res changed the glrender3d to also call G2D->BeginDraw()/FinishDraw()
	  before beginning/finishing 3d graphics.
	- res moved the NV/ATI fragment shader setup to the ps1 plugin.
	- res updated sprcal3d after Marten's recent changes.
	- res tried some more to get NR softrender3d to work. Not there yet,
	  though.
20-Mar-2004
	- Anders Stenberg fixed procedural textures in NR. Visit for
	  textures wasn't called, and is now called on access in the shader
	  plugin (XMLShader). Not sure that's the correct place, but it works
	  for now.
	- Anders Stenberg fixed a bug in SimpleFormer which made it reallocate
	  texture data on each access, i.e. leak enormous amounts of memory.
	- Jorrit disabled the use of VBO in the new renderer since this doesn't
	  appear to be working right at the moment.
	- res applied some changes needed by the cs-win32libs package.
	- res changed the manual to state cs-win32libs instead of msvc_libs
	  resp. csmingw-libs as the Win32 support package.
	- res generally updated some of the information in the Win32 build
	  docs.
	- res extended the "External Libraries" list somewhat.
	- res fixed a small formatting error in the VC build docs.
        - Philip Wyett eliminsted signed/unsigned warnings in simpleformer.
19-Mar-2004
	- res fixed compilation of the aseie plugin.
	- duhprey overrided the correct Write in null2d (from Jorrit)
	- Jorrit fixed a compile error with MSVC6 and the generic render
	  loop plugin. The following construct is not valid with that compiler:
	    for (int i = ...)
	    for (int i = ...)
	- Eric Sunshine updated MSVC build instructions in the manual so that
	  they state explicitly that the "Release" or "Debug" build modes must
	  be used when building wkstypical, and that "Release_NR" and
	  "Debug_NR" must be avoided.
	- Eric Sunshine augmented msvcgen/workspaces.mak so that the csjava,
	  csperl5, and cspython modules are not included in the wksnewrenderer
	  workspace.  The reason for this change is that the Swig-generated
	  code in these modules is configuration-specific.  For instance, if
	  Swig generates the code when configured for the old-renderer, then
	  the code will not be buildable when configured for the new-renderer.
	  Since the Swig-generated code stored in CVS is generated for the
	  old-renderer, it should not be built by wksnewrenderer.
	- Eric Sunshine re-ordered the "!MESSAGE "%project% - Win32 ..." lines
	  in the msvcgen/template6 project templates so that the "Release" or
	  "Debug" line is listed last rather than "Release_NR" appearing last.
	  This was necessary because MSVC6 chooses its default build
	  configuration by consulting the last such line it finds in the
	  "active" project, and we want people who use wkstypical, wksall, or
	  wkswalkall to build with "Release" or "Debug", not with "Release_NR"
	  (which is reserved for wksnewrenderer).  Defaulting to "Release_NR"
	  for the project files used by most people was a Bad Thing.
	- Eric Sunshine augmented the csRef<T> and csPtr<T> `out' typemaps in
	  javapre.i, perlpre.i and pythpre.i to work around MSVC complaint
	  about ambiguous assignment of SwigValueWrapper<csRef<T>> to csRef<T>
	  (or SwigValueWrapper<csPtr<T>> to csRef<T>).  GCC, on the other hand
	  did not have a problem such assignments.
	- res removed code from the plugin finalization code that set iSCF::SCF
	  to 0. As the documentation states, iSCF::SCF can be, dependent on the
	  platform, either module global or "truly" global. In the latter case,
	  setting it to 0 can be dangerous.
	- Eric Sunshine fixed bug in configure.ac where Java SDK check would be
	  run even if Java development tools were not found.
	- Eric Sunshine attempted to work around compile failure of glwin32 on
	  some Cygwin installations where it complained about missing
	  SetupWGLextStr(), and `extstrWGL'.
	- Eric Sunshine attempted to work around problem reported by Martin
	  Henne <martin.henne@web.de> where Flex on Debian 'sid' does not seem
	  to emit a #define for YY_PROTO().  This macro is used by the YY_DECL
	  macro in aws/skinlex.ll.
18-Mar-2004
	- Anders Stenberg changed the terraformer interface a bit (made Sample
	  functions return pointers to data instead of filling out supplied
	  preallocated blocks). Also made it actually work, at least to some
	  degree.
	- res augmented csappframe with CS_CSAPPFRAME_EXPORT. Also changed it
	  to not implement main(). The startup code is now in
	  csApplicationFramework::Main() and has to be called explicitly by the
	  client.
	- res augmented csgeom CS_CSGEOM_EXPORT.
	- res fixed an oversight from adding CS_CSGEOM_EXPORT to csgfx.
	- res augmented cstool with CS_CSTOOL_EXPORT.
	- res removed the csImage::dither variable.
	- res fixed csutil/tree.h. csTree is purely inline but was declared as
	  CS_CSUTIL_EXPORT, causing missing symbols when csTree was used
	  elsewhere.
	- res hacked around the fact that cs_static_var_cleanup was defined in
	  the app/plugins but used in the libs by using only one
	  cs_static_var_cleanup (contained in csutil) when building shared
	  libraries.
	- res changed the nada reftracker to being not exported via
	  CS_CSUTIL_EXPORT.
	- res augmented csws with CS_CSWS_EXPORT.
	- res removed a superflouos csTriangle from the ASE plugin.
	- Jorrit added better error reporting to walktest in order to find
	  out why CS is now broken.
	- Jorrit added better error reporting to the csparser plugin. From
	  this I discovered that the image loader plugins are not working.
	- Jorrit fixed a compile error in the image loader multiplexer. This
	  fixes CS again.
	- Jorrit added CS_ENTITY_INVISIBLEMESH and CS_ENTITY_NOHITBEAM flags.
	  The first flag controls the visibility of the mesh (ONLY the
	  visibility of the mesh, HitBeam() is not affected). The second flag
	  controls if HitBeam() will hit the mesh. The original
	  CS_ENTITY_INVISIBLE flag is redefined as a combination of
	  CS_ENTITY_INVISIBLEMESH and CS_ENTITY_NOHITBEAM.
	- Jorrit added equivalent flags to the loader: 'invisiblemesh'
	  and 'nohitbeam'.
	- Jorrit modified the culler plugins to respect the new
	  CS_ENTITY_NOHITBEAM flag. They will ignore CS_ENTITY_INVISIBLEMESH.
	- Jorrit modified the engine to respect CS_ENTITY_INVISIBLEMESH and
	  ignore CS_ENTITY_NOHITBEAM (for drawing).
	- Jorrit modified the engine to respect CS_ENTITY_NOHITBEAM when
	  calculating intersections.
	- Jorrit fixed the visibility cullers so that they now respect the
	  CS_ENTITY_INVISIBLEMESH flag when doing visibility
	  culling. Previously the engine had to do that later on after the
	  visibility culler did its job. This even fixes a bug with Dynavis
	  where an invisible mesh would still contribute to culling.
	- Jorrit did a significant change in the way visibility of child
	  meshes is handled. A child mesh is no longer considered to be
	  automatically invisible when the parent is invisible. You have to
	  set the invisible flag individually on every child if you want that.
	- Jorrit added a -silent commandline option for the standard reporter
	  listener plugin. If you give that option then it will no longer
	  pop up the yellow messages for warnings at startup.
	- Keith Fulton fixed very obvious bug in
	  csSpriteCal3DMeshObject::RecalcBoundingBox() where old bbox was not
	  cleared out before new points were added.
	- Keith Fulton added a skeleton update as soon as an animation cycle is
	  added, which makes the bbox update. This enables accurate colliders
	  to be created.
	- res changed the imgplex plugin to set the dither flag on all image
	  loaders.
	- Eric Sunshine augmented cspace.i to take into account the new
	  CS_CSUTIL_EXPORT, CS_CSTOOL_EXPORT, etc. export macros in order to
	  keep Swig from barfing on them.
	- Eric Sunshine augmented pubapi.dox and devapi.dox to take into
	  account the new CS_CSUTIL_EXPORT, CS_CSTOOL_EXPORT, etc. export
	  macros in order to keep Doxygen from barfing on them.
	- John Harger fixed the copying method in csAnonRenderBufferManager
	  that would cause a crash if you ever tried to actually use one in
	  certian configurations
	- John Harger added some necessary includes to make mdltool.cpp compile
	  as a DLL.
	- John Harger fixed genmesh, so that the anonymous buffers are
	  actually retrieved.
17-Mar-2004
	- Duhprey added a simple terraformer loader plugin
	- Eric Sunshine fixed copy/paste error in terraformer loader makefile
	  which broke it.  DIR.SIMPLEFORMERLDR referenced the wrong path.  Also
	  fixed formatting of help message.  Added appropriate SubInclude
	  invocation to its parent Jamfile to ensure that it gets built.
	- John Harger exported functions in csutil, via CS_CSUTIL_EXPORT, to
	  make csutil viable for compilation as a shared library.  So far I
	  have tested it on MSVC 7.1 and it has worked without error.
	- res removed '#define CS_CSUTIL_LIB' from the csutil sources. The idea
	  is to #define with a compiler (resp. preprocessor) option.
	- res augmented libcsgfx with CS_CSGFX_EXPORT.
16-Mar-2004
	- Jorrit fixed a bug in iSector->HitBeamPortals(). It would not
	  initialize the mesh to 0 which could cause bad errors in some
	  cases.
	- Eric Sunshine fixed copy/paste error in win32/csosdefs.h.  It defined
	  CS_IMPORT_SYM as __declspec(dllexport) rather than as
	  __declspec(dllimport).  Also fixed a few minor issues in csexport.h.
	- res fixed the software NR and software shader plugin to compile
	  again.
	- John Harger fixed csparser and xmlshader to report an error when
	  a shader file could not be found, rather than dereferencing a null
	  pointer.
	- Eric Sunshine worked around MSVC6 limitation where it barfed on
	  csRef<> when confronted with copy-constructors and assignment
	  operators for types T and T2.  It turns out that MSVC6 will accept
	  these as long as the templated versions (T2) appear before the
	  non-templated versions (T).
	- res renamed T& csHash<>::Fetch(key, fallback) to Get() and
	  T* csHash<>::Fetch(key) to GetElementPointer(). This way, familiar
	  name(s) are kept, but code utilizing the old-style Get() syntax will
	  fail to compile, thus forcing examination of the code as well.
15-Mar-2004
	- Anders Stenberg added a first version of a TerraFormer plugin. It
	  will be responsible for feeding data to other plugins like terrain
	  and vegetation renderers. Also introduced a new concept to CS:
	  Thoroughly commented code!
	- Eric Sunshine changed cs.mak so that "mkdir -p" for $(OUTDIRS) is now
	  performed silently since it provided very little useful information
	  to the viewer yet was extremely verbose.
	- Eric Sunshine re-enabled the assignment-compatible (<class T2>)
	  copy-constructor and assignment operator in csRef<>.  It turns out
	  that if T and T2 are the same class, then the compiler will not
	  invoke the T2 copy-constructor or assignment operator, but will
	  instead just perform memberwise copy/assignment.  For this reason, we
	  need to have copy-constructors and assignment operators for both T
	  and T2.
	- Eric Sunshine made the following changes to the new TerraFormer
	  plugin:
	    - Fixed nasty copy/paste errors in the makefile.
	    - Updated makefile to new style which does not pollute $(OUT).
	    - Added reference for plugin to user.mak.
	    - Added missing Jamfile.
	    - Added missing .csplugin meta-information file.
	    - Fixed several compilation errors and warnings.
	- Eric Sunshine renamed the csHash<>::Get() methods to Fetch(), and
	  GetAll() to FetchAll().  This was done in order to force people to
	  examine invocations of these methods and to adjust the code
	  appropriately.  This was necessary because the recent changes to the
	  Get() methods radically changed the return semantics but, in numerous
	  cases, did not cause the compiler to emit a diagnostic.  The result
	  of this situation was that the behavior of previously valid programs
	  would silently change, usually by breaking.
	- Eric Sunshine fixed a few cases where code had not been updated to
	  reflect the new return semantics of csHash<>::Get() -- now renamed to
	  Fetch().  The new name, Fetch(), made it possible to find and repair
	  these otherwise difficult-to-diagnose bugs, the most notable of which
	  was csKeyboardDriver::GetKeyState() which was returning bogus
	  results.
	- res changed some more occasions of csHash<>::Get() to Fetch().
	- res fixes some signed vs unsigned warnings in the xmlshader, cg, arb
	  and fixed shader plugins.
	- Eric Sunshine added java, javac, ant (Java build tool), and Java SDK
	  checks to configure.ac.  Also added new --with-java option which is
	  enabled by default.
	- Eric Sunshine made some changes to pacify SourceForge.  They are
	  concerned that we have been using >500MB of web server space even
	  though we are alloted only 100MB.  Therefore, CVS snapshots are now
	  only distributed in .tar.bz2 format (rather than .tar.bz2, .tgz, and
	  .zip), and we only keep one snapshot around at a time rather than
	  two.  This should free up about 130MB.  Further, we no longer publish
	  "apidev" for online viewing or download.  This will save another
	  100MB.  Finally, documentation offered for download is now only
	  published in .tar.bz2 format (rather than .tar.bz2, .tgz, and .zip).
	- John Harger fixed the warnings in glshader_ps1.
	- res fixed a problem in csPortalContainer::Draw() where a ref to an
	  object on the stack was stored (and thus the data was subsequently
	  corrupted).
	- res added a workaround to the generic render step for the issue that
	  the transforms in the rendermeshes will be changed to reflect the
	  portal transform. However, as meshes usually keep just 1 copy RM,
	  it'll affect the original mesh as well. Now the RMs are copied before
	  drawing behind the portal and restored afterwards. Makes the shape
	  room mirror in flarge work, but a better solution should be
	  researched.
	- John Harger added the beginnings of the macros for the DLL
	  compilation on Windows. Added include/csextern.h, modified
	  include/csdef.h and csutil/win32/csosdefs.h
14-Mar-2004
	- Keith Fulton committed Performance enhancements to sprcal3d
	  giving about 3x FPS in debug mode in viewmesh for a cal3d model.
	  Most of the enhancements are to minimize calls to
	  CalRenderer::getNormals due to a lot of unnecessary lighting updates.
	- Jorrit added back the Get() to csHash that res removed a while ago.
	  Having that Get() there does NOT restrict the csHash to be used on
	  objects that have a default constructor.  It only adds that
	  restriction if that Get() is actually used.  [Eric notes that for
	  slightly older compilers, the restriction is placed upon the entire
	  template, even if the Get() method is never invoked.]
	- Eric Sunshine reverted Jorrit's reversion to Frank's csHash<>::Get()
	  changes (after explaining why the original Get() method was so
	  undisirable that it warranted removal).
	- Eric Sunshine removed obsolete #include "iengine/statlght.h" from
	  simple.txi tutorial.
	- Eric Sushine augmented the csRef<> copy-constructor and assignment
	  operator so that they allow assignment from compatible csRef<> types,
	  rather than requiring assignment from the exact same type of csRef<>.
	  This means that the following type-compatible assignments will now
	  work as expected:
	    struct iFoo : public iBase {...};
	    csRef<iFoo> f = ...;
	    csRef<iBase> b(f);
	    b = f;
	- res disabled Eric's new csRef<> copy-constructor and assignment
	  operator, as it caused problems on VC7. Specifically, MSVC7 doesn't
	  seem to call that constructor, messing up reference counting.
13-Mar-2004
	- John Harger fixed the nVidia part of the PS1 plugin so that it will
	  use the correct texture target on a 'tex' instruction.
	- Jorrit reverted a change res made to the sprite3d normal calculation
	  on 7 August 2002. This change caused access to uninitialized memory.
	- Jorrit fixed the 'addghost' command in walktest so that it no longer
	  uses the deprecated SCF_QUERY_INTERFACE to get the polygon mesh
	  for collision detection.
	- Jorrit fixed a problem with the 'addghost' command. It caused an
	  overflow in the collision detection routine because that routine
	  was hardcoded to max 1000 triangles. The ghost was colliding with
	  the camera because it ended up at the same spot and also made sure
	  the table cannot overflow and cause memory corruption).
	- Jorrit fixed movement of ghosts in walktest.
	- res fixed a crash in CSWS caused by csApp::GetFont() having a wrong
	  prototype.
	- res changed glrender3d to not call G2D->FinishDraw() when finishing
	  3D graphics. This makes more sense as BeginDraw() isn't called when
	  beginning 3D gfx and fixes CSWS (it used to come up with black
	  components).
	- res changed the OR compatibility shader to respect the primary
	  color's alpha value.
12-Mar-2004
	- res augmented configure.ac to look for the OpenAL, Cg, and CgGL
	  libraries under a couple different names (differing by case) to
	  ensure that the libraries will be found when cross-building for
	  Windows from Linux.
	- Eric Sunshine fixed win32/csosdefs.h so that it only defines
	  CS_IMPLEMENT_PLATFORM_APPLICATION and CS_IMPLEMENT_PLATFORM_PLUGIN if
	  the client has not already provided definitions for these macros.
	- Eric Sunshine re-simplified the Cg and CgGL checks in configure.ac by
	  reverting Frank's changes and instead using the library name
	  "aliases" feature of CS_CHECK_LIB_WITH().
	- res added another alias for Cg resp. CgGL: the Linux Cg libs use a
	  mixed case 'Cg' in the names.
	- Eric Sunshine reverted Frank's last change to the Cg and CgGL checks.
	  The "Cg" and "CgGL" capitalizations are already accounted for by the
	  first argument of CS_CHECK_LIB_WITH(), which is the library's most
	  common name.
11-Mar-2004
	- Eric Sunshine performed an overhaul of the "Creating an External
	  Crystal Space Application" HOWTO since it was extremely outdated.
	  Also overhauled and simplified the related
	  cs-config/Makefile.template.
	- Eric Sunshine performed some minor cleanup of material recently added
	  to apimod98.txi.
	- Jorrit fixed a bug in csImageMemory. If the 'destroy' flag was set
	  to false it would still destroy the memory at destruction because
	  the superclass (csImageFile) does that. Solved by overriding the
	  destructor and FreeImage() and clearing the 'Image' pointer if
	  destroy_image is not set. This fixes a bug with map2cs.
	- res silenced some VC compiler warnings in regcomp.c.
	- res fixed some constness issues on VC6 in the freefnt2 and fontplex
	  plugins.
	- res removed some unused stuff from csfont.
	- duhprey removed collision detection for the sky in terrain
	- John Harger fixed a the constants, the SUB and the PHASE instructions
	  in the PS1 shader plugin for ATI cards.
10-Mar-2004
	- res made the following changes related to fonts:
	    - Removed iFontServer::GetFont() and GetFontCount().
	    - Removed iFont::SetSize(). The size is now a parameter to
	      LoadFont().
	    - Changed the behaviour of LoadFont() accordingly; now, only for
	      same font name/font size pairs instances of the same font will
	      be returned.
	- res added a note to the movie recorder HOWTO that the plugin can
	  also be loaded via the command line.
	- res partially rewrote the Custom Font HOWTO. It stated that the
	  best approach for custom fonts would be bitmap fonts converted from
	  truetypes. However, using fontplex offers better I18N support.
	- Eric Sunshine fixed `--plugin=' example in the movie recorder HOWTO
	  so that it shows the proper full SCF class name (which is required by
	  --plugin=), rather than only the final component of the name.  Also
	  fixed some typographical, grammatical, and Texinfo mark-up problems;
	  as well as TeX `hbox' warnings.
	- res updated cslight and g2dtest for his recent font changes.
	- res added an example of setting the font size in the old vs new way
	  to the resp. API mod paragraph.
	- res changed csHash<> interface to contain two variants of Get(); one
	  that returns a pointer to the contained data or 0, the other returns
	  a reference to the data or a user-specified fallback value. This
	  change removes the need for contained types to have a constructor
	  accepting a single parameter, which would be used to construct a
	  'zero' return value in case a key wasn't found in the hash.
	- res changed the csRefDocumentation slightly; at one place, 'csRef'
	  was used, tho 'csRefCount' would make more sense there.
	- res fixed the xwindow plugin after the csHash<>::Get() change.
9-Mar-2004
	- Wouter clarified a comment on iLightingInfo::InitializeDefault().
	- Reed added "relight" command to Walktest.
8-Mar-2004
	- Philip Wyett eliminated warning in odeparticles.cpp.
	- Jorrit fixed the old OpenGL renderer so that disabling texture
	  mapping again works correctly (only lightmaps are rendered).
	- Wouter removed old comment from iSector::GetLights() that
	  instructed the user not to add dynamic lights to the list,
	  but to use SetSector() instead. This method has been removed.
	- John Harger finally implemented the cylinder emitter type in
	  particles.
	- res fixed the movie recorder to emit a proper warning when the movie
	  couldn't be created.
7-Mar-2004
	- Jorrit added a db_mesh_name field to csRenderMesh (but only
	  in debug mode!). This field is updated by the engine (before
	  calling AddRenderMeshes()) and can be used for debugging
	  purposes. Without this field it is extremely hard to discover
	  the source of a csRenderMesh.
	- Jorrit again fixed a few errors throughout the Crystal Space
	  project as reported by valgrind.
	    - engine: portal containers didn't initialize the material field.
	      Although this material field is strictly not needed it was used
	      by the csRenderMeshList to sort two portals relative to each
	      other.
	    - NR OpenGL renderer: in the csVBORenderBuffer implementation there
	      was a potentially serious lack of initialization with the
	      'lastLock' field.
	    - Thing mesh: the useLightmap field was not initialized.
6-Mar-2004
	- Anders Stenberg finally found and fixed a clipper problem in NR,
	  which actually turned out to be more than a clipper problem.
	- Jorrit fixed a few errors throughout the Crystal Space project
	  as reported by valgrind. Please people! Remember to initialize
	  your variables!!!
	    - engine: current_visnr was not initialized in csSector.
	    - engine: with NR enabled the fog structure was not initialized
	      (but it was used in csPortalContainer).
	    - spr3d: single_step field was not initialized to false.
	    - spr3d: frame_increment field was not initialized to 1.
	    - explosion mesh: lighted_particles was not initialized to false.
5-Mar-2004
	- Jorrit changed 'userobject' in csKDTree to a csRef<iBase>.
	- Eric Sunshine increased robustness of CS_STATIC_VARIABLE_CLEANUP by
	  making it operate gracefully if invoked multiple times; rather than
	  simply crashing.  Also fixed it so that it does not realloc() a null
	  pointer since doing so is not portable.
4-Mar-2004
	- Eric Sunshine renamed the CS Java bindings package to
	  com.crystalspace (was net.sourceforge.crystal).
	- Jorrit fixed a 'verbose' message to use the reporter instead
	  of printf in thing mesh plugin.
	- Jorrit removed the iTextureManager->SetVerbose() function. This was
	  not used and it is also better to handle this using -verbose
	  commandline option if needed.
	- Jorrit fixed the handling of CS_ENTITY_CAMERA objects in the new
	  renderer. This fixes stuff like skyboxes (like the one used in the
	  csdemo space demo).
	- Jorrit fixed a few broken CS_ASSERT's in glrender3d.
	- Jorrit attempted to fix the stencil clipper in combination with
	  stencil shadows but failed so far (NR OpenGL renderer).
3-Mar-2004
	- Eric Sunshine added REGEX.AVAILABLE=no to msvcgen/required.mak to
	  ensure that generic/regex.c gets included in csutil project file.
	- Jorrit did a considerable cleanup of the NR OpenGL clipping system.
	  Only two options are now possible: stencil and glClipPlane. Stencil
	  is now default because it is usually (a lot) faster then glClipPlane.
	  This gives a huge performance boost in some cases.
	- Jorrit also added MaxTextureSize config option to r3dopengl.cfg.
	- Jorrit added PreferClipPlane config option to r3dopengl.cfg.
	- Jorrit added some more reporting to the NR OpenGL renderer if
	  -verbose is used. More specifically the maximum texture size,
	  VBO support, point sprite support, the use of nVidia extensions,
	  the use of ATI extensions, and if glClipPlane is prefered are now
	  all reported.
	- Jorrit optimized NR GL clipping a bit more by caching the current
	  values given to SetupClipper().
	- Jorrit added more reporting to the NR GL renderer. Also removed
	  the bugplug counter for triangles and meshes if verbose is not
	  given.
	- Jorrit added a small optimization to the NR GL renderer with
	  ApplyObjectToCamera().
	- Eric Sunshine converted csappframe.mak, csgeom.mak, csgfx.mak,
	  cstool.mak, and csws.mak to the new style where built resources are
	  placed in a target-specific subdirectory of $(OUT) rather than
	  directly polluting $(OUT).
2-Mar-2004
	- Jorrit modified the stdrep plugin (standard reporter listener) so
	  that it now prints all messages on standard output if the
	  -verbose commandline option is given.
	- Jorrit disabled the rule for GF Go and MX in gldrivers.xml since
	  it prevents proper operation of the r3dtest map (i.e. stencil
	  shadows no longer work then).
	- Jorrit fixed cs-config. For some reason it was adding
	  csappframe as a standard library. But csappframe should not be
	  standard because it adds things like CS_IMPLEMENT_APPLICATION
	  which many applications already have on their own.
	- John Harger added an experimental plugin to provide fragment program
	  support for DX8 type video cards (GF3/4,R8500-9200) using the
	  DX8 pixel shader language. Please read the readme.txt file before
	  you try to use this. I would like anyone interested to test it out
	  using PS 1.4 programs (for ATI) and PS 1.1 (for nVidia). Let me know
	  of any problems or errors. PS 1.4 emulation will work on all Radeon
	  8500 and up, while PS 1.1 will only work on nVidia GeForce 3 and up.
	- Norman Kraemer added the missing csGetMouseDesc, csGetJoystickDesc
	  and FromEvent methods/funtions in the csInputDefinition class.
	- John Harger fixed the Cg plugin so it works again. Also added a
	  <profile></profile> option to force a profile instead of using
	  whatever the newest supported profile is. (Useful for forcing
	  arbvp1 vertex programs so you can use the "glstate") Newest profile
	  is still the default behavior.
	- Eric Sunshine eliminated a few compilation warnings about potentially
	  uninitialize variables in glfontcache.cpp
	- Eric Sunshine eliminated a slew of compilation warnings from the new
	  glshader_ps1 plugin.
	- Eric Sunshine updated user.mak and shaderplugins/Jamfile so that the
	  new glshader_ps1 plugin actually gets built.  Also augmented
	  msvcgen/workspaces.mak to take this new plugin into account.
	- res removed regex.c from msvcgen/win32.mak again. Seems it appears
	  in some other place, and thus occurs twice in the generated VC
	  libcsutil project.
1-Mar-2004
	- res augmented the Win32 canvas to allow retrieval/setting of the
	  window rectangle (via PerformExtension()).
	- Eric Sunshine added missing LibDepends rule invocations to the
	  various "common" library Jamfiles throughout the project.  This
	  should fix the problem where "static" linking failed because the
	  libraries appeared in the wrong order in the emitted link command.
	  Also added explicit documentation to various Jamfiles stating that
	  the Jam rules are presently (and unfortunately) order-sensitive, such
	  that Jam must see LibDepends invocations before it sees associated
	  LinkWith invocations.
	- Eric Sunshine updated the OpenDivX "sufficiently recent" configure
	  check so that it tests for DEC_PARAM::color_depth rather than just
	  checking for DEC_PARAM.  Apparently, the color_depth member was added
	  to OpenDivX some time after DEC_PARAM was introduced.
	- Eric Sunshine fixed 'regexp' check in configure.ac so that it
	  actually works.  It needed to include <sys/types.h> before <regex.h>
	  as mandated by POSIX.
	- Eric Sunshine refactored csRegExpMatcher in order to avoid duplicated
	  code.  Also improved robustness of error handling.
	- Eric Sunshine privatized CS's copy of glibc's "regex" implementation.
	  It now resides in libs/csutil/generic, including regex.h which had
	  been in include/csutil.
	- Eric Sunshine restored csutil.mak and csutil/Jamfile so that they
	  once again perform wildcard on *.c.
	- Eric Sunshine eliminated compilation complaint from unix/instpath.cpp
	  about CS_CONFIGDIR and CS_PLUGINDIR being undefined when building
	  with GNU make.
	- res fixed a problem with the link library order when doing static
	  builds: the LinkStaticPlugins Jam rule didn't respect that the last
	  occurance of a lib has to remain when filtering out duplicates from
	  the list of libs later passed to the linker; instead, it preserved
	  the first.
	- Eric Sunshine converted csutil.mak, macosx.mak, unix.mak, and
	  win32gcc.mak to the new style where built resources are placed in a
	  target-specific subdirectory of $(OUT) rather than directly polluting
	  $(OUT).
	- res changed the data/config/Jamfile to also install .xml files.
	  Needed for the GL driver db.
	- res fixed mk/msvcgen/win32.mak to include generic/regex.c into the VC
	  projects of csutil.
	- Eric Sunshine fixed glrender.mak and gl_render3d.mak so that they
	  install data/config/gldrivers.xml, which is needed by the OpenGL
	  driver database.
	- Eric Sunshine fixed bugs in aws.mak and aws/Jamfile where they
	  neglected to set up a dependency for the derived skinlex.cpp upon the
	  derived skinpars.hpp.  As a result, by happenstance, skinlex.cpp,
	  which includes skinpars.hpp, was being compiled before skinpars.hpp
	  had been generated by Bison, thus skinlex.cpp incorrectly #included
	  the factory-supplied skinpars.hpp rather than the generated one.
	  This problem manifested, for instance, when Bison 1.875 was
	  installed.  skinlex.cpp would find the factory-supplied skinpars.hpp
	  (created by Bison 1.35) and define awslex(yystype), yet the generated
	  skinpars.cpp (created by the installed Bison 1.875) would be
	  expecting awslex(YYSTYPE).
	- res removed references to the old gl*.cfg configs from glrender.mak.
	- res disabled ARB_vertex_program ext in the GL driver db for GeForce
	  MX and Go hardware (known to emulate it in software.)
29-Feb-2004
	- Eric Sunshine augmented the configure.ac Python check so that it can
	  detect a working Python installation on MacOS/X despite the fact that
	  the Python link library is missing.  Apparently, the Python
	  installation on MacOS/X is still using the one-level linker
	  namespace, which means that undefined symbolic references in
	  extension modules will be satisfied by the executable itself as the
	  extensions are loaded, rather than being resolved by a link library.
	  This allows CS's pure Python `pythmod' extension to work on MacOS/X.
	  Unfortunately, however, it does not help for the CS plugin `cspython'
	  since none of the CS Python example programs will be able to link
	  against the missing link library.
	- Eric Sunshine augmented cspython/pythmod_setup.py so that it now
	  accepts additional compiler and linker flags, and so that multiple
	  library directories can be specified rather than only a single one.
	  It is also now possible to tell pythmod_setup.py which compiler to
	  use, rather than hard-coding g++.
	- Eric Sunshine added "-framework AppKit -framework Foundation" to the
	  linker flags for the `pythmod' extension to ensure that it can be
	  loaded on MacOS/X.
	- Eric Sunshine augmented pythmod_setup.py so that it filters out
	  "-arch i386" from the linker arguments if present.  This allows the
	  `pythmod' extension to build cleanly on MacOS/X for PowerPC.
	- Eric Sunshine fixed problem with Cygwin when linking the `pythmod'
	  extension where "-lgdi32 -lshell32" appeared in the link statement
	  before the standard CS libraries (cstool, csutil, etc.).  This
	  resulted in unresolved symbolic references since the CS libraries
	  rely upon gdi32 and shell32.
	- Eric Sunshine sanitized the definitions of CC, CXX, OBJC, and OBJCXX
	  in the makefile build system so that they no longer contain a
	  trailing "-c".  This makes these variables more consistent with
	  like-named variables in makefiles the world over.
	- Eric Sunshine fixed copy/paste bug in cspython.mak where
	  `cspythonclean' rule did not get defined if Swig was not detected.
28-Feb-2004
	- Philip Wyett removed reference to 'include/imesh/thing' dir from
	  CS spec file.
	- Vincent Knecht augmented CS spec file to compute flarge and partsys
	  lightmaps.
	- res simplified the GL color (de)composition in the canvases. No need
	  to juggle with pixel formats here.
	- res changed the GL canvases to use scissor instead of manual
	  clipping.
	- res fixed a few memory leaks in VFS.
27-Feb-2004
	- Jorrit enabled the Dynavis write queue again since it appears to
	  be giving better fps in most cases. Perhaps we need to come up with
	  a way to avoid the write queue overhead in cases where it would
	  be worse.
	- Jorrit fixed the walktest movement recording feature to also record
	  'perftest' command. That way it is possible to make walkthroughs
	  through a level with performance tests included.
	- Jorrit fixed playback of a recorded file in walktest so that it
	  ignores the sectors it cannot find. In that case it will simply
	  stay in the current sector. This makes it possible to use a
	  recorded sequence that was recorded while in a multi-sector
	  level and reuse that same sequence in a single-sector level (provided
	  it represents exactly the same geometry).
	- Jorrit removed the last remnants of perfstat usage in Walktest and
	  then he removed the perfstat plugin itself.
	- Jorrit added 'playonce' command to Walktest. This is similar to
	  'play' but it doesn't loop the recorded demo. Assigned alt-r to
	  this command.
	- Jorrit extended walktest demo playback so that it shows the fps after
	  finishing one run.
	- Jorrit fixed a bug in portals. The default polygon mesh for
	  visibility culling would be empty (because the VISCULL flag was
	  not set for the portals).
	- Jorrit extended Dynavis with a special case for single polygon
	  objects (portals are often such objects). Since portals are
	  expensive to render it is worth the effort to try to do a little
	  more work on them.
	- Jorrit changed Dynavis so that the polygon based culler is selected
	  if there are less then 10 polygons.
	- res fixed csutil.mak to not use all .c files, but only regexp_impl.c.
26-Feb-2004
	- Eric Sunshine fixed the old renderer gl3d, soft3d, null3d, and the
	  ISO engine plugins so that they once again build successfully
	  following Anders Stenberg's rewrite of the shader variable system.
	  Also eliminated some related compilation warnings.
	- Jorrit put a pointer to the meshwrapper in csPortalContainer so
	  that getting the movable is more correct and more efficient.
	- Jorrit added an optimization to Dynavis where it would insert
	  an inverted version of the portal clipper to the coverage buffer
	  to improve culling.
	- Jorrit added the 'toggle_invertedclipper' command to Dynavis to
	  switch the new feature on/off (default on).
	- Jorrit made all Dynavis switches static so that they operate on
	  all instances of Dynavis at once.
	- Jorrit fixed a bug in the NR texture manager for OpenGL. If the
	  sourceType of the texture is equal to GL_UNSIGNED_SHORT_5_6_5
	  (i.e. 16 bit) then it would allocate not enough memory to keep
	  the image_data in.
	- Jorrit modified the thing plugin so that by default it will only
	  give 10 warnings about bad UV coordinates unless the -verbose
	  commandline option is given.
	- Jorrit did a big optimization to the NR by removing a
	  CS_QUERY_REGISTRY in a critical spot (csGLShaderFVP::SetupState()).
	- Jorrit fixed a bug in the NR texture manager. It would use
	  SCF_QUERY_INTERFACE to get the shader manager from the object
	  registry instead of CS_QUERY_REGISTRY in some case.
	- Anders Stenberg optimized rendermesh sorting in NR to minimize
	  vertex buffer switches. This requires mesh plugins to supply an
	  ID for geometry to be effective, which currently only genmesh
	  and thing (through polygonmesh) is augmented to do.
	- Jorrit fixed a BIG BIG bug in Dynavis which had the effect that
	  Dynavis would do nearly all the work needed to cull objects but
	  nothing would be culled. This bug was introduced 19-Feb.
	- Jorrit temporarily disabled the write queue in Dynavis since it
	  now seems to cause a lot of overhead. To be investigated!
	  This might be related to nodes which don't get culled if the
	  write queue is enabled. This can possibly be solved by letting
	  the nodes respect the write queue too.
	- Eric Sunshine changed SCF_QUERY_INTERFACE(context, iMeshWrapper) in
	  csThingLoader::Parse() to use SCF_QUERY_INTERFACE_SAFE() since
	  `context' might be null.  Reported by Atis Elsts <atisel@inbox.lv>.
	- Eric Sunshine augmented the OpenDivX check in configure.ac so that it
	  tests for presence of DEC_PARAM since at least one user's
	  installation seems to be lacking this necessary typedef.
	- res made the following changes:
	    - Added sanity check to some csStrNew() variants.
	    - Added a iConfigFile implementation for XML format config. Only
	      reading, though.
	    - Added support for regular expressions. Uses implementation from
	      the system's runtime, if available, otherwise uses built-in
	      implementation borrowed from glibc.
	    - Added a "GL driver database". Depending on a set of rules
	      the GL canvases now load certain config settings. See
	      data/config/gldrivers.xml.
	- res fixed a cut'n'paste error in the regexp configure check.
	- Eric Sunshine removed empty & unused data/config/render3d/opengl.cfg
	  and data/config/render3d/render3d.cfg.  Also fixed a couple other
	  configuration file-related problems.
	- res fixed regexp_impl.c to actually honor the result of the regexp
	  check.
	- res merged the old config/gl*.cfg configs into the the new driver
	  database and removed the old mechanism for driver-specific settings.
	- res changed the driver DB implementation to report what rules have
	  been applied.
25-Feb-2004
	- Fritz Elfert fixed the following lighting related crash in sprcal3d:
	  Previously, csSpriteCal3DMeshObject managed a set of relevant lights
	  in a private set.  Since introduction of the new iLightManager API,
	  this internal set ran badly out of sync, resulting in various crashes
	  when lights were removed from a sector.  Now, csSpriteCal3DMeshObject
	  properly uses the light manager's GetRelevantLights() function.
	- Jorrit added a new 'colorsectors' command to BugPlug (default
	  assigned to ctrl-shift-c).  This command will set dynamic ambient of
	  all sectors to a different color (max 14 different colors).  This is
	  useful for debugging complex portal based levels so you can easily
	  see what object belongs to what sector.
	- Jorrit fixed a bug with the ball mesh where colors generated by the
	  special 'PaintSky()' and related routines were no longer being
	  honored.
	- Jorrit fixed the default clip plane that is set by csEngine::Draw().
	  It was currently not used by anything but it will now be used.
	- Jorrit enhanced Dynavis and Frustvis to use the clip planes as
	  defined by the last portal that was traversed. This can benefit
	  performance a bit.
	- Jorrit fixed a bug in waterdemo.  It would forget to call
	  Invalidate() after changing the genmesh vertices.  This bug triggered
	  after Jorrit made a modification so that simply calling GetVertices()
	  on a genmesh does not make the vertex buffers dirty in NR.
	- Eric Sunshine augmented the csRGBpixel constructor so that client can
	  optionally specify alpha value.
	- Anders Stenberg reworked the shader variable system, and hopefully
	  improved the performance of it quite a lot.
	- Anders Stenberg fixed a broken shader (lightmap.xml)
	- Duhprey fixed the scattering base, it probably wouldn't show up
	  otherwise
	- Eric Sunshine fixed vfs.cfg so that it mounts $@data/aws/.  This
	  allows the AWS example programs to locate their .def files following
	  relocation of those files from data/temp to data/aws on 10-Feb-2004.
	- Eric Sunshine removed the ugly "additional object files" hack from
	  the Library rule in library.jam which allowed clients to associate
	  additional object files with a library target.  This hack was needed
	  for a while before the cssys sources were merged physically into the
	  csutil sources.
	- Duhprey fixed a couple bugs with the shader vars change.
	- Eric Sunshine fixed bug in bison.jam where it was not
	  variant-friendly (variant.jam).  When the Bison rule was invoked
	  indirectly via the Plugin rule, this problem would cause generated
	  non-variant files to depend incorrectly upon generated files in the
	  "static" variant.  Also corrected some other inconsistencies and
	  strangeness in bison.jam.
24-Feb-2004
	- Fritz Elfert fixed conversion of bezier mesh factories in map2cs
	  and re-enabled them (With wrong cvs log-message: "Before big
	  camera change", sorry).
	- res added a "mesh" mixmode. Works similar to the "mesh" zmode, if
	  used as the mixmode in a shader pass the rendered mesh's resp.
	  mixmode will be used.
	- res made some fixes so NR properly respects the "alpha" mixmode.
	- Fritz Elfert fixed an msvc compile error in the null renderer.
	- Eric Sunshine added some content to the front page of the API
	  reference manual since people seem to be regularly been confused by
	  its emptiness and easily miss the links at the very top of the page.
	- Eric Sunshine fixed bugs in odivx.mak and odivx4.mak where $ prefix
	  was missing in a variable expansion.
	- Jorrit fixed a bug in the thing mesh object which he introduced
	  yesterday. This bug caused weird stripes on lightmapped polygons.
	- Duhprey made the software renderer compile with NR, but broke the
	  polyrenderer
	- Eric Sunshine replaced a few forward declarations in some Thing
	  headers with #includes to ensure that class declarations are seen
	  before the classes are used in csArray<> templates.  This should
	  pacify some older compilers.
	- Jorrit fixed the <float/> keyword for portals (g3d->OpenPortal())
	  for the OR OpenGL renderer. The problem was that with some clipping
	  modes the portal clipper would be disabled AFTER setting up the
	  clipper. This would cause the stencil clipper to be disabled
	  again with bad effects.
	- Jorrit partially reverted Eric's changes to including headers in
	  the thing mesh plugin because they break compilation. This will
	  now most likely break compilation on the older compiler but I'm
	  uncertain how to fix this.
	- Eric Sunshine re-applied Eric's changes which Jorrit reverted, but
	  this time with sufficient changes to work around the incredible
	  number of circular dependencies between Thing headers which tripped
	  it up the first time.
	- Eric Sunshine added a few more csGeom classes and interfaces to
	  cspace.i at user request.
	- Eric Sunshine augmented msvcgen/required.mak to ensure that null3d
	  renderer is included in wkstypical and wksall.
	- Eric Sunshine made the Jam 'distclean' rule safer.  If the build
	  directory differs from the source directory, then 'distclean'
	  attempts to remove the 'include' directory which is created by the
	  configure script.  If the build and source directories are the same,
	  then it deletes only volatile.h from include (since it would be
	  incorrect to delete all of CS/include).  Previously, though, the
	  logic for detecting if the build directory differed from the source
	  directory was flawed, and it was possible to fool it into deleting
	  the entire CS/include.  Now, 'distclean' deletes the 'include'
	  directory if and only if the directory contains one file: volatile.h.
	- Eric Sunshine updated several modules to reflect the fact that
	  iSCF::QueryClassList() now returns a csRef<> rather than a raw
	  pointer.
23-Feb-2004
	- Jorrit moved the Engine.Lighthing.LightmapQuality config option
	  from engine.cfg to thing.cfg (and renamed it
	  to Mesh.Thing.LightmapQuality). In addition also moved the flag that
	  is controlled by this option from csEngine to csThing. Lightmaps
	  are part of thing and the engine has nothing to do with them.
	  This move also fixes the -lightqual option which was broken since
	  things moved out of the engine.
	- Jorrit modified the engine to print out more information during
	  lighting only when -verbose is specified on the commandline.
	- Jorrit moved csPolyTextureMapping from include/imesh/thing/polygon.h
	  to include/ivideo/polyrender.h where it belongs.
	- Jorrit moved include/imesh/thing/thing.h to include/imesh/thing.h.
	- Jorrit made all fields in csPolyTextureMapping private and
	  added appropriate getters. Also added an '=' operator so that
	  the Clone() in csThings can use that. This also fixes a bug
	  because res2k added fields to csPolyTextureMapping and forgot
	  to update Clone().
	- res fixed a crash-at-exit in xmlread. An object was deleted,
	  although apparently instances of it were referenced in other places.
	  Now the object isn't forcibly deleted any more, and further, the
	  xmlread plugin won't get unloaded as long as documents (or document
	  systems) of it are still floating around.
22-Feb-2004
	- Duhprey made null renderer for the NR.  (Shaders currently try to
	  load with error, but it appears to be harmless.)
	- res made the following changes:
	    - Updated csRefArray<> to support the reference tracker.
	    - Leak and circular reference fixes.
	    - Fixed some classes which confused the reference tracker.
	    - Removed the custom DecRef() code from the stdrep plugin.
	    - Moved the code to access DbgHelp.dll on Win32 out of
	      callstack.cpp into a separate file. Also created a header for it.
	- Eric Sunshine fixed several makefile and Jamfile problems with the
	  new null renderer for the NR, including a sizable number of
	  copy/paste errors.
	- Eric Sunshine adjusted msvcgen/workspaces.mak to take into account
	  new nullrender3d module.
	- Andrew Craig fixed a ref problem in imgplex plugin that caused it
	  the initialization function to segfault.
	- res unified the shader var syntax for materials and shaders. Both
	  the material parser in csloader and the shaderparse in xmlshader
	  utilize iSyntaxService->ParseShaderVar(). The syntax for a shadervar
	  is now:
	    <shadervar name="..."
	     type="[float|vector2|vector3|vector4|int|texture]">
	     texture|x[,y[,z[,w]]]</shadervar>
	  For SV blocks in shaders the syntax is now
	  <shadervars>...</shadervars>.
20-Feb-2004
	- Jorrit added a csArray::GetIndex() function which will return the
	  index of an element in the array (as input you give a pointer to
	  the element in the array).
	- Fritz Elfert eliminated several MSVC6 compiler warnings.
	- Jorrit removed the index from every polygon. The polygons are
	  now stored in a csArray<csPolygon3D> instead of a
	  csArray<csPolygon3D*>. This saves memory and also makes polygon
	  handling a bit faster.
	- Jorrit made the rapid plugin a bit more optimal (memory usage) by
	  using indexed triangles instead of triangles containing vectors.
	- Jorrit optimized csHash by allocating the buckets with empty
	  elements instead of one.
	- Jorrit did a big optimization in genmesh by allocating the
	  hashes more efficiently (they don't need a hash that is preallocated
	  at 257 items).
	- Jorrit fixed a weird bug in walktest (introduced by res2k) which
	  simply disabled `coordshow' directly after enabling it.
	- Jorrit rewrote the csFrustum code to avoid the old vertex pools.
	  Instead the code now uses csBlockAllocator.
	- Eric Sunshine upgraded Jam's msvcgen.sh so that it can be invoked
	  from a build directory which differs from the source directory.
	- Eric Sunshine applied another ugly patch to msvcgen/Jamconfig to
	  allow it to inherit platform-specific configuration properties from
	  the generated Jamconfig instead of blindly using hard-coded values
	  for items which it could not possibly guess correctly.  (In the
	  future, as noted on numerous occassions previously, the entire ugly
	  hack embodied by msvcgen.sh and msvcgen/Jamconfig must be retired.
	  People should be able to build project files by invoking "jam
	  -sMSVC_VERSION=7 msvcgen" directly.)
	- Eric Sunshine eliminated an entirely superfluous and ugly hack in
	  msvcgen.jam which tried to insure that the resource file (.rc) had
	  the correct path in the generated project file.  The more correct fix
	  involved slightly re-ordering the --strip-root options given to
	  msvcgen.pl.  As a happy side-effect, removal of the hack also fixes a
	  bug in which it was unconditionally referencing mk/visualc7, despite
	  the fact that MSVC_VERSION might be "6".  Also fixed a couple other
	  minor bugs and did a bit of cleanup.
	- Eric Sunshine fixed problem in csXMLShaderCompiler::CompileShader()
	  where some compilers considered the return expression ambiguous.
	  Also fixed bug in ~csXMLShaderCompiler where it failed to invoke
	  SCF_DESTRUCT_IBASE().
	- Norman fixed the frequency conversion routine in the software sound
	  renderer where a float factor was determined by dividing two
	  integers.  When downsampling was performed the downsampled data was
	  zero bytes long (muted).
	- Eric Sunshine augmented cspace.i so that it also publishes csPixmap.
19-Feb-2004
	- res made the following changes:
	    - A few minor cosmetic changes.
	    - In the common texture manager code, 0 was assigned to a struct
	      in NR builds.
	    - The iBase implementation of csGenericRenderStepFactory
	      errorneously used SCF_IMPLEMENT_EMBEDDED_IBASE_END instead of
	      SCF_IMPLEMENT_IBASE_END.
	    - Enabled RTTI for VC debug builds.
	    - Commented out "RTTI enabled" #error in opcode.
	    - Added an interface to obtain call stacks.
	    - Added an call stack implementation for Win32. Pretty much only
	      supports VC debug symbols atm, tho.
	    - Added a mechanism to track where interfaces and references are
	      increased resp. decreased.
	- Neil Mosafi changed csvosa3dl plugin to listen to children as well
	  as properties and use child changes to initiate property listening.
	  This is a more correct way of doing things.
	- res removed a char too much.
	- Neil Mosafi changed vospolygonmesh to use iMeshObjectFactory to set
	  the CS_THING_NOCOMPRESS flag which was previously a flag of
	  iThingFactoryState.
	- res removed SCF_CONSTRUCT_IBASE/SCF_DESTRUCT_IBASE from the
	  csImageMemory ctor/dtor. csImageMemory inherits from csImageFile
	  which already invoked those macros.
	- res fixed a leak where shadervars were created with new, but not
	  properly DecRef()ed.
	- Jorrit fixed a bug in Dynavis with empty occlusion objects. It would
	  try to put those on the coverage buffer with bad initialized arrays.
	  The current solution is very optimal in that objects with no
	  occlusion objects will now be completely ignored for occlusion
	  writing as the old code always attempted to process them (and
	  failed later).
	- Jorrit removed another 16 bytes per polygon by removing the world
	  space plane from every polygon and putting that in a seperate array
	  in csThing. The array in csThing is only created if the object has
	  moved so for most static geometry this optimization will be useful.
	- Jorrit did some small optimizations on thing lighting.
	- Jorrit removed four bytes in every polygon by removing the unnused
	  material there. Also removed the API to set materials on polygons
	  in a thing. This should be done by using the ReplaceMaterials api.
	- Jorrit made thing a bit more memory efficient by calling
	  ShrinkBestFit() on the various arrays that are used during setup of
	  a thing. These arrays are typically not modified after they are
	  created so it is best that they have exactly the size that they need.
	- Jorrit removed 16 bytes from every lightmapped polygon by removing
	  unneeded fields from csGLRendererLightmap (in the GL renderer).
	  Also for software renderer.
	- Jorrit fixed a bug in csBlockAllocator::Compact() so that it actually
	  works.
	- Jorrit optimized thing a bit more by deleting the csSubRectangles2
	  structure after calculating the optimal lightmap distribution.
	- Jorrit fixed a problem with dynamic lighting and things. It would
	  call lm->CalcMaxStatic() all the time which is very slow. The
	  static lightmap doesn't change with dynamic lighting so calling
	  this function is totally wasted.
	- Jorrit implemented a big memory savings in the thing plugin. If a
	  lightmap contains all the same values it will be compressed to that
	  single value. This saves a considerable amount of memory on big
	  maps.
	- Eric Sunshine augmented the OpenAL check in configure.ac so that it
	  utilizes -lm (if available).	This seems to be needed by Suse 7.3
	  Linux.
	- res unbroke the VC7 plugin project templates which he broke (by
	  accident, presumably :-).
	- Eric Sunshine performed more cleanup and clarification of the Smart
	  Pointer HOWTO (smartptr.txi).
18-Feb-2004
	- Jorrit added the ability to specify defaults for mesh object types
	  in the map loader. Here is an example to demonstrate how this works:
	      <plugins>
		<plugin name="thingFact">
		  <id>crystalspace.mesh.loader.factory.thing</id>
		  <defaults>
		    ...
		  </defaults>
		</plugin>
		...
	      </plugins>
	  Basically you attach the defaults to the short plugin name that you
	  can later use in meshobj or meshfact definitions. These defaults
	  can be anything you can specify directly in the meshobj or meshfact
	  (NOT in the params section!). For example, priority, zfill, and
	  zuse are commands you can place there.
	- Jorrit addes the 'staticpos' and 'staticshape' keywords for mesh
	  objects and factories (only 'staticshape' for factories). These
	  options are hints for the engine. When you specify 'staticpos'
	  for a mesh object the engine knows that the object will never move
	  and can optimize for that (in the future, there are no such
	  optimizations at this moment). If you specify 'staticshape' for
	  mesh objects or factories then you tell the engine that the object
	  will never change shape (or animate). If you specify one of these
	  hints for an object but you violate what the hint means (i.e. you
	  move an object that has 'staticpos' set) then the result will
	  be undefined.
	- Jorrit added iMeshObject->GetFlags() and
	  iMeshObjectFactory->GetFlags() so that it is possible to specify
	  flags for mesh objects and factories.
	- Jorrit added the following flags:
		- CS_MESH_STATICPOS for mesh objects
		- CS_MESH_STATICSHAPE for mesh objects
		- CS_FACTORY_STATICSHAPE for mesh factories
	  These flags will be set by the 'staticpos' and 'staticshape'
	  keywords in the map loader.
	  Mesh objects may implement their own additional flags but these
	  flags must be equal to 0x00010000 or higher.
	- Jorrit removed iThingFactoryState->GetFlags(). The only flag that
	  was there (CS_THING_NOCOMPRESS) has now become a flag of
	  iMeshObjectFactory->GetFlags().
	- Jorrit also updated the level building document with information
	  on the new staticpos and staticshape flags.
	- Jorrit added csBlockAllocator::Compact(). This function will remove
	  all blocks that have no items.
	- Jorrit renamed 'static_data' to 'static_poly' in the thing mesh
	  object. This way it is less confusing because csThing also uses
	  'static_data' to refer to the static thing.
	- Jorrit removed two unnused functions from thing mesh plugin.
	- Jorrit removed 4 bytes for every polygon (removed a pointer back
	  to the polygon in csPolyTexture).
	- Jorrit removed 4 bytes for every polygon (removed lightmap_up_to_date
	  field which was actually not needed).
	- Jorrit removed at least 4 bytes by putting csPolyTexture directly
	  in csPolygon3D. This also avoids one of the block allocators.
	- Jorrit removed another 4 bytes from every csPolyTexture by avoiding
	  the redundant csPolyTextureMapping pointer.
	- Eric Sunshine augmented the OpenAL check in configure.ac so that it
	  utilizes -ldl (if available).	 This seems to be needed by Suse 7.3
	  Linux.
	- Eric Sunshine added a couple missing invocations of
	  SCF_IMPLEMENTS_INTERFACE(iParticlesStateBase) to the 'particles'
	  plugin.
	- Eric Sunshine made the following changes to configure.ac:
	    - Fixed typographical problems in OpenDivX check which resulted in
	      syntax error at run-time.
	    - Fixed bug where the OpenDivX version <4 check was not invoked
	      when the version >=4 check failed.
	    - Generalized the -I/usr/local/include and -L/usr/local/lib checks
	      so that the results apply to all subsequent checks automatically
	      rather than having to be applied manually to selected checks.
	- Eric Sunshine made some minor Texinfo mark-up corrections to
	  levbuilding.txi.  Also eliminated several 'hbox' warnings emitted by
	  TeX.
	- Fritz Elfert fixed a trivial compile error, introduced by the
	  addition of the pure virtual GetFlags() earlier today:
	  Implementation was missing in csChunkLodTerrainObject.
17-Feb-2004
	- Jorrit fixed a bug in csPolygonMeshTools::Triangulate(). It would
	  try to allocate a 0 size array in some cases.
	- Jorrit added support for csArray and csBlockAllocator to the
	  memory tracker. Unfortunatelly I found no way to convert the
	  templated type name 'T' to a string I could print out to make
	  the output more usable. So I'm now using the size of the
	  item that is in the array or block allocator. That should help
	  identify which array is using the memory but it is far from perfect.
	- Jorrit changed the csArray and csBlockAllocator memory tracker stuff
	  to use the 'typeid' RTTI function to get the type information. This
	  way we can produce better output.
	- Jorrit fixed another case where a 0-sized memory chunk is allocated.
	  This time in Dynavis.
	- Jorrit fixed csPolygonMeshTools::CalculateEdges() so it doesn't
	  allocate 0-sized chunks.
	- Jorrit added a bool parameter to Dump() for the memory tracker
	  so that you can get a summary alone. Also cleaned up the
	  total summary line a bit.
	- Jorrit fixed a memory leak in the NR OpenGL renderer which would
	  prevent texture images from being cleaned up properly. On big
	  maps this can save a lot of memory.
	- Jorrit fixed a few more ref-leak problems in the NR texture
	  manager.
	- Jorrit fixed a problem with memdebug which fails the build if
	  you build in optimize mode.
	- Fritz Elfert changed sprcal3d loader so that it defers scaling
	  until loading of all model data is completed. Before, scaling
	  randomly either crashed in cal3d or had no effect at all, depending
	  on the position of the <scale> attribute in the xml file. Standard
	  models that come with cal3d should work with this fix now (at least
	  skeleton does), providing a scale of ~ 0.02.
	- Eric Sunshine added an OpenDivX check to configure.ac.
	- Eric Sunshine fixed bugs in glshader_cg.mak, odvix4.mak, and
	  odivx.mak where they would send linker flags to $(AR) when
	  USE_PLUGINS=no.
	- Eric Sunshine moved more PLUGINS.DYNAMIC assignements out of
	  platform-specific makefiles and into user.mak.
	- Norman Kraemer introduced a csWrapTypedObject function to the swig
	  wrapper to get around those swig versions having SWIG_TypeQuery and
	  others declared as defines and not as functions. So refering to them
	  in the main cspython module would fail.
	  He also modified cspython.cpp to utilize the new function.
	- Steven Geens cleaned up the fountain creation code in the socket
	  test of viewmesh. You still have to move around a bit before you can
	  see the fountain, probably a culling problem.
	- Neil Mosafi added support to the csvosa3dl plugin for automatic
	  listening to movement and orientation changes of a3dl metaobjects
	  Also fixed orientation which was incorrectly using degress instead
	  of radians to set the CS angle.
16-Feb-2004
	- Jorrit fixed rain mesh object so it now has a reasonably default
	  box in case the user doesn't call SetBox().
	- Jorrit fixed csNewParticleSystem so that it first calls
	  SetupObject() before getting the bounds of the particle system.
	- Jorrit added csBox2 and csBox3 functions: AddBoundingVertexTest()
	  and AddBoundingVertexSmartTest(). These functions work the same
	  as the old none-Test() functions but in addition they return
	  true if the box was modified by adding the vertex.
	- Jorrit fixed the fountain particle system so that it correctly
	  updates the bounds. This avoids crashes in some cases. In addition
	  the code will also fire a 'ShapeChanged' to the object model
	  listeners (i.e. cullers) in case the bounding box changes.
	- Jorrit made csNewParticleSystem::UpdateBounds() a bit faster by
	  using AddBoundingVertexSmart() instead of AddBoundingVertex().
	- Jorrit fixed a bug in sprcal3d. It would not set the 'polygon_idx'
	  to -1 in HitBeamObject().
	- Jorrit added a new configure --enable-memory-tracker option. With
	  this option you can compile CS with memory tracking enabled
	  (CS_MEMORY_TRACKER define). Using memory tracking CS will keep
	  track of the amount of memory used per source file.
	- Jorrit implemented a new memory tracker (enabled with the
	  --enable-memory-tracker configure option) which tracks, per module
	  and per source file, the number of allocations and how much memory
	  is being allocated (both maximum and current). There is a new
	  object in the object registry that is registered at
	  'crystalspace.utilities.memorytracker' and that implements
	  iMemoryTracker. This object will keep track of all allocations per
	  'module' (plugin or app).
	- Jorrit added a new 'memorydump' command to BugPlug. This command
	  will try to find the memory tracker and then call Dump() on it.
	  Assigned to ctrl-m key.
	- Eric Sunshine applied some additional corrections to .chm creation
	  scripts/configurations to reflect documentation unification.
	- John Harger cleaned up the particles interface a bit, using Eric's
	  suggestion of the iParticlesBase SCF interface for all shared
	  functions
	- Andrew Craig added a GetDefaultMaterial() to the sprcal3d factory
	  that returns the name of the default material on a submesh.
15-Feb-2004
	- Norman Kraemer removed inclusion of recently removed av3dtxt.h in AWS
	  screencanvas header.
	- Norman Kraemer fixed the call to iEventOutlet::Key() method in SDL
	  and SVGA canvas where -1 was used instead of 0 to force a simple
	  cooked code computation from the supplied raw code.  This also
	  silenced the compiler comlaining about converting -1 to unsigned int.
	- Eric Sunshine improved the robustness of the new ALSA check in
	  configure.ac.
	- Eric Sunshine fixed copy/paste error in MSVC6 template files which
	  caused Release_NR and Debug_NR configurations of all projects
	  (applications, plugins, etc.) to appear to be static link libraries.
	- Eric Sunshine added a number of missing `const' qualifiers to
	  arguments of methods in video- and graphics-related interfaces.
	- Norman Kraemer added support for pre-1.0 version of ALSA.
	- Eric Sunshine changed msvcgen.mak so that the pseudo-group projects
	  are now named 'subproj_workspace' rather than 'subproj-workspace'
	  since MSVC6 seems incapable of groking the hyphen in the name.  Issue
	  reported by Luca Cappa (groton); debugged by Fritz Elfert
	  <fritz.elfert@millenux.com>.
	- Eric Sunshine added CS_PATH_NORMALIZE() macro to new path.m4.	 This
	  macro normalizes a pathname by transliterating Windows/DOS
	  backslashes to forward slashes.
	- Eric Sunshine augmented configure.ac so that it invokes
	  CS_PATH_NORMALIZE() on the CFLAGS, LFLAGS, and LIBS resulting from
	  the Perl and Python checks.  This should help to prevent build
	  problems on MSYS/Mingw and Cygwin since the backslashes tended to get
	  interpreted as escapes at inappropriate times.
	- Eric Sunshine made the following documentation-related changes:
	    - Normalized the stored documentation locations so that they are
	      now organized by output format and type:
		CS/docs/html/manual (was CS/docs/html)
		CS/docs/html/api    (was CS/docs/pubapi)
	      If, in the future, we decide to store an 'info' conversion of the
	      manual, for example, it would be placed in CS/docs/info/manual.
	    - Normalized the location of the documentation when installed via
	      GNU make so that it reflects the above layout:
		${prefix}/crystal/docs/html/manual (was crystal/docs/html)
		${prefix}/crystal/docs/html/api	   (was crystal/docs/pubapi)
	      This better mirrors the way documentation is installed by the Jam
	      build system.
	    - Normalized the built documentation locations for both Jam and GNU
	      make so that they mirror the above layouts:
		${builddir}/out/docs/html/api
		${builddir}/out/docs/html/apidev
		${builddir}/out/docs/html/manual
		${builddir}/out/docs/info/manual
		${builddir}/out/docs/dvi/manual
		${builddir}/out/docs/ps/manual
		${builddir}/out/docs/pdf/manual
	    - Normalized the documentation build target names in both Jam and
	      GNU make so that they reflect the documentation which is being
	      built and the output format:
		manualhtml (was htmldoc)
		manualinfo (was infodoc)
		manualdvi  (was dvidoc)
		manualps   (was psdoc)
		manualpdf  (was pdfdoc)
		manualchm  (was chmsupp)
		apihtml	   (was pubapi)
		apichm	   (was chmsupp)
		apidevhtml (was devapi)
	    - Fixed a lot of shell programming portability problems in the Jam
	      build's docs/support/runmakeinfo.sh, runtexi2dvi.sh, and
	      runtexi2html.sh scripts which caused documentation generation to
	      crash and burn horribly on some platforms.
	    - Fixed docs.mak so that it respects the discoveries of configure
	      rather than hard-coding texi2dvi, dvips, and makeinfo.
	    - Fixed bug in docs.mak where building public and developer API
	      references failed if build directory was not the same as source
	      directory.
	    - Eliminated some convolution from docs.mak by utilizing the
	      relatively new $(MKDIRS) and $(SRCDIR) variables.	 (These
	      variables did not exist when docs.mak was created, thus the
	      convolution was necessary at that time.)
14-Feb-2004
	- Norman Kraemer added an ALSA sound driver.  It can be used if you
	  disabled OSS emulation in your ALSA configuration.
	- Norman Kraemer changed the software renderer to check the commandline
	  for the -sounddriver option.	If that ain't given, the configuration
	  will be checked for Sound.Driver entry to contain a sounddriver to
	  use.	If that fails as well, the default system driver
	  (CS_SOUND_DRIVER) is tried.
	- Norman Kraemer changed unix.mak to include the ALSA plugin if
	  available as well as the configure.ac to check for the alsa
	  requisites.
13-Feb-2004
	- Jorrit updated the todo_newrenderer.txt document and added a list
	  of visual differences between walktest/NR and walktest/OR.
	- Jorrit changed csSubRectangles2 to use a global block allocator
	  instead of one allocator per instance.
	- Jorrit changed Dynavis so that it no longer checks the model
	  when it is inserted in dynavis but instead adds it to the queue
	  of models that need to be checked. By doing that the operation of
	  checking the model is delayed until the materials are prepared and
	  this means that things prepare a lot more efficiently. The way it
	  was before the checking of the object model would force a premature
	  prepare of the thing (before materials are ready) which causes the
	  thing to do only a partial prepare. This is inefficient as it will
	  then have to do the prepare again later. Also for some reason it
	  caused memory leaks. This is probably a bug in thing as there
	  should be no leak on multiple prepare calls.
	- Jorrit added a new bugplug 'unprepare' command to unprepare all
	  thing meshes. Assigned to alt-u.
	- Jorrit enhanced the iThingState->Prepare() function so that the
	  lighting is now also done in that stage. This means that the
	  -prepare option with WalkTest will now prepare things a bit
	  more. This option causes lag to disappear when new things come
	  into view.
	- Eric Sunshine completely overhauled the Texinfo formatting in the new
	  sprcal3d.txi so that it formats properly on the printed page, and
	  rewrote much of the discussion.
	- Jorrit changed the lightmap allocator in the OpenGL renderer to
	  use a global block allocator instead of one per superlightmap.
	  Also did this optimization to the NR OpenGL renderer.
	- Keith added iEngine::FindNamedMaterial() and FindNamedTexture() to
	  allow loaders to get materials and textures which have different
	  names from their filenames while not breaking backward compability
	  with prior behavior. This material change required changing .cal3d
	  file format so that <mesh> tags now require material names instead of
	  filenames.
	- Eric Sunshine fixed bugs in aws.mak and aws/Jamfile where they
	  neglected to link the plugin against txtmgr.o (from renderer/common)
	  despite the fact that AWS's csTextureHandleNull is derived from
	  csTextureHandle in txtmgr.o.
	- Jorrit added a note to levbuilding.txi talking about how thing
	  polygons should be quads for most optimal results.
	- Eric Sunshine removed the unused av3dtxt.{h|cpp} and av3dtxtm.{h|cpp}
	  from AWS.  As a happy side-effect, this eliminates AWS's ugly
	  dependency upon renderer/common/txtmgr.o.
12-Feb-2004
	- Jorrit did several documentation enhancements:
	    - Added a link to the new level building section in the
	      documentation guide.
	    - Added a link to the new genmesh creation HOWTO from the
	      features section.
	    - Added a link to the new genmesh creation HOWTO from the
	      genmesh object documentation.
	    - Added links to the meshobject documentation from the level
	      building section (in the node explaining the different mesh
	      object types).
	    - Added a new (but empty) document for the sprcal3d mesh object.
	      Someone please write this :-)
	    - Added links to the new sprcal3d document from the features
	      section.
	- Jorrit did several other documentation enhancements:
	    - Added mention of the isometric engine to the plugin overview
	      section and removed the sentence that claimed you could use
	      the engine as a library. That's no longer possible.
	    - Removed mention of the obsolete effect system from the
	      graphics section.
	    - Replaced 'effects' with 'shaders' in the XML format document.
	- Luca Pancallo added a new 3DS Max export script (in scripts/max).
	  The following things were changed:
	    - Fixes to genmeshes and thingmeshes, added documentation on how
	      to model those, pivot and rotation issues explained.
	    - Added support for right-handed and left-handed genmeshes and
	      sprites.
	    - Added ability to avoid export of some objects "_n_" prefix.
	    - Changed documentation to be more readable and complete (a new
	      guide!).
	- Eric Sunshine fixed bugs in xmlfmt.txi where it was using incorrect
	  section nesting directives (@section vs. @subsection, etc.).
	- Eric Sunshine fixed a lot of Texinfo markup problems in recently
	  added material.  Also fixed numerous grammatical and spelling
	  mistakes.
	- Jorrit did several particle system related changes:
	    - csNewParticleSystem now also implements iParticleState.
	    - csNewParticleSystem supports all the features of iParticleState
	      (more in particular: the rotation, scale, color, alpha, and
	      the self destruct).
	    - The fountain particle system now works through
	      csNewParticleSystem. This means that it is faster and also
	      works with the new renderer.
	- Jorrit fixed a bug in csNewParticleSystem. If lighting was enabled
	  it would pass an invalid color array to the renderer. This could
	  cause very funky but invalid lighting effects.
	- Eric Sunshine augmented the Python SDK check in configure.ac so that
	  it now works correctly with the Python package for Windows which is
	  distributed by www.python.org.
	- Steven Geens added some documentation about sockets and
	  morphanimations in sprcal3d.
	- Andrew Craig fixed a possible uninitialized idle_action in sprcal3d.
11-Feb-2004
	- Jorrit optimized the csNewParticleSystem slightly (used by the
	  rain mesh plugin) and also cleaned it up a bit.
	- Jorrit also simplified csNewParticleSystem by removing all
	  functions to use seperate materials, rotation, scale, ... for
	  particles. By doing that Jorrit managed to significantly optimize
	  csNewParticleSystem again.
	- Jorrit did a small optimization to csNewParticleSystem. If lighting
	  is not enabled it will not call GetRelevantLights() from the
	  light manager.
	- Jorrit restored bugplug screenshot to put screenshot back to /this
	  instead of /tmp.  Having them in /tmp is very confusing as this will
	  mix screenshots of different apps with no way to distinguish them.
	  [Note from Eric Sunshine: Placing them in /this is a bad idea since
	  /this is unpredictable on some platforms.  For instance, on
	  Macintosh, when you double-click to launch an application, /this is
	  not under your control (it may be your home directory, or it may be
	  /, or it may be within the application's wrapper directory).
	  Likewise, on Windows, if you double-click to launch a directory,
	  /this is entirely dependent upon whatever Windows thinks your current
	  directory is at any given moment (which is often not known to the
	  user).  In the long run, this should be changed back to use VFS /tmp
	  since it is more reliable and safer.]
	- Eric Sunshine updated movierec.txi HOWTO.  It still had a reference
	  to the obsolete user.cfg.
	- Jorrit added a new section in the documentation that tries to explain
	  how to build levels for Crystal Space. It discusses various
	  techniques and tells people what tricks they can use to get most
	  optimal performance.
	- Jorrit extended the new documentation about level building with a
	  note about closed vs non-closed objects and Dynavis.
	- Eric Sunshine added iSCF::GetPluginMetadata() which, given an SCF
	  class name, returns an iDocument containing the meta-information for
	  the plugin module which exports the named class.  This complements
	  the existing csGetPluginMetadata() which returns the same information
	  but expects the physical pathname of the plugin module.
	- Eric Sunshine fixed iSCF::QueryClassList() so that it returns
	  csRef<iStringArray> rather than a raw `iStringArray*'.
	- Eric Sunshine fixed a few Texinfo mark-up errors in levbuilding.txi
	  and untabified the @examples in order to ensure that they display
	  properly when formatted.  (Fixing other Texinfo mark-up problems will
	  have to wait until this document stabilizes.)
10-Feb-2004
	- Eric Sunshine fixed CS/data/Jamfile so that it no longer tries to
	  install the non-existent unifont.csf file.  (Bug reported by Frank
	  Richter.)
	- Eric Sunshine made the following changes:
	    - Relocated AWS resources (.def files) to CS/data/aws from
	      CS/data/temp.
	    - Renamed the VFS volume /temp to /varia in order to avoid
	      confusion with the like-named VFS volume /tmp, which is intended
	      to be user-writable, whereas /varia potentially will be read-only
	      since it represents ${prefix}/etc/crystal/varia.
	    - Walktest now tries to read and write the camera file using the
	      VFS volume /tmp rather than /varia (nee /temp) since /tmp is more
	      likely to be writable by the user.  If, at load time, it fails to
	      find a camera in /tmp, then it will fallback to /varia.
	    - Fixed partedit so that it no longer looks for its resources using
	      the unreliable /this directory.  Now looks in /varia.
	    - Fixed several applications and plugins to use more sensible VFS
	      directories (depending upon context) instead of using the
	      unreliable /this.
	- Jorrit fixed an initialization error in DrawSimpleMesh() of the
	  NR OpenGL renderer.
	- Jorrit fixed a bug in the NR OpenGL renderer DrawMesh implementation
	  which would not correctly set alpha and keycolor mode in some
	  situations.
	- Eric Sunshine made the following changes:
	    - Augmented configure.ac so that it propagates CS_USE_NEW_RENDERER
	      to $(SWIG.FLAGS).
	    - Fixed csperl5.mak, cspython.mak, and csjava/Makefile so that they
	      respect $(SWIG.FLAGS).
	    - Fixed several bugs in, and performed minor cleanup of
	      csjava/Makefile.
	- Eric Sunshine fixed bug in glrender.mak from 4-Feb-2004.  The
	  SRC.GL3D and INC.GL3D variables were not populated correctly when the
	  build directory differed from the source directory.  Specifically,
	  everything from the opengl/effects subdirectory was missed.
	- Eric Sunshine devised and implemented a scheme which allows `msvcgen'
	  to synthesize the familiar pseudo-group projects "grpall", "grpapps",
	  "grplibs", and "grpplugins" despite the fact that the contents of
	  these groups differ from workspace to workspace.  (These groups were
	  originally removed on 4-Feb-2004 with the introduction of multiple,
	  customized workspaces, because the old scheme of createing the group
	  projects was incompatible with customized workspaces.)
9-Feb-2004
	- Eric Sunshine fixed bug in csKeyValuePair where it was incorrectly
	  invoking SCF_CONSTRUCT_IBASE() even though it should not have been
	  doing so because its parent, csObject, already did so.
	- Eric Sunshine made the following changes to the event system:
	    - Eliminated extremely dangerous and potentially fatal assumption
	      in csEvent where, in several places, it blindly assumed that an
	      iEvent passed in by a client was a csEvent or csPoolEvent.
	    - Corrected very bizarre code in csEvent::UnflattenCrystal() which
	      performed a static cast of `this' to csPoolEvent, checked if the
	      result of the cast was zero (which will never be the case), and
	      then performed conditional behavior based upon that result.
	    - Fixed bug in csEvent::UnflattenCrystal().	 When unserializing a
	      data buffer, it incorrectly assigned CS_DATATYPE_STRING as the
	      attribute type rather than CS_DATATYPE_DATABUFFER.
	    - Unified the signatures of the iEvent::Find() methods so that they
	      all accept a reference in which to place the found item.
	      Previously, some Find() methods accepted a reference, while
	      others accepted a pointer.
	    - Added a number of missing `const' qualifiers to iEvent method
	      signatures.
	    - Rewrote the event-related section of apimod98.txi in order to
	      clarify what was otherwise confused mumbo-jumbo.
	- Eric Sunshine changed cspace.i so that it does a much more thorough
	  job of restricting the portions of csString which it exports to the
	  scripting side.  (All higher-level languages for which CS bindings
	  exist already have powerful string classes, so we can safely export
	  a bare-bones csString interface.)
	- Eric Sunshine pared down the methods exported by cspace.i for
	  csArray<csPluginRequest> to avoid problems with languages, such as
	  Java, for which Swig does not correctly handle the case of both const
	  and non-const versions of the same method.
	- Eric Sunshine renamed csString::GetData() to toString() in javapre.i
	  to be consistent with other Java classes from which a string
	  representation can be extracted.
	- Eric Sunshine fixed javapre.i and javapost.i so that they work
	  correctly in the presence of the CS_MICRO_SWIG and CS_MINI_SWIG
	  macros.
	- Vincent Knecht changed %doc to %docdir in cs.spec so documentation is
	  installed only once by rpm file. Also changed %prefix to /usr instead
	  of /usr/local/crystal.
8-Feb-2004
	- Eric Sunshine corrected Reed Hedges' changes to evdefs.h so that they
	  are correct for plain-C compilers.  This file is processed by non-C++
	  compilers (as noted by the comment at the very top of the file), so
	  please be careful when making changes.
	- Eric Sunshine made minor Texinfo mark-up changes to creategenmesh.txi
	  and converted tabs in @example blocks to spaces in order to ensure
	  proper formatted output.
	- Eric Sunshine moved handling of special `ranlib' requirements out of
	  configure script and m4 fragments, and into macosx.jam and
	  macosx.mak.  Specifically, work-around for Jam 2.4 bug which sets
	  RANLIB to "", and use of "-s" option with ranlib for MacOS/X Panther.
	  This allows the issues to be addressed in centralized locations, thus
	  giving external projects simpler access to the solutions.
	- Vincent Knecht updated cs.spec so we can build RPMs from CS current
	  snapshot.  Building is now done with Jam.
7-Feb-2004
	- Philip Wyett fixed make build of gl3d plugin after recent effects
	  changes.  Make did not know how to build the source files from the
	  'effects' subdirectory of 'engine/3d'.
	- Keith Fulton fixed bounding box calculation on setup of a sprcal3d
	  model, which was causing SECONDS of lag the first time any sprcal3d
	  was created and made visible.	 Now it happens more or less instantly.
	- Keith Fulton fixed compiler errors in Null Renderer for NR settings.
	- Luca fixed some uninitialized stuff in csEvent class (ie 'count').
	- Luca fixed some memory leaks in csMouseDriver and csJoystickDriver.
6-Feb-2004
	- Jorrit clarified the comment for iEngine::CreateBaseMaterial().
	- Jorrit corrected the HOWTO on creating a Thing. It was still
	  mentioning that Things support portals. But this is no longer true.
	- Jorrit added a HOWTO on creating genmesh objects.
	- Reed Hedges made some changes to Doxygen comments, and named some
	  anonymous enums, for event type codes.
5-Feb-2004
	- res added a small convenience wrapper arounf LoadLibrary() and
	  FreeLibrary() for Win32.
	- Eric Sunshine fixed a few global-search-replace problems in
	  configure.ac from yesterday's unification of make/Jam variables which
	  caused run-time errors in configure.
	- Eric Sunshine worked around gcc 2.95.x complaint about ambiguous
	  csRef<csFoo> to csRef<iFoo> assignment in particles plugin.
	- Eric Sunshine fixed bugs in walktest/Jamfile and walktest.mak where
	  `walkall' target unconditionally tried to build the OpenGL canvas and
	  renderer even if OpenGL was not detected.
	- Eric Sunshine fixed bug in aws/skinpars.yy.  The `expf' rule lacked a
	  terminating semi-colon.
	- Eric Sunshine fixed docs/Jamfile so that it also now installs
	  history.old, README.html, and doxygen.css.
	- Eric Sunshine fixed bug in data/Jamfile were it was installing some
	  maps directly into ${sharedir}/crystal and others into
	  ${sharedir}/crystal/maps.
	- Eric Sunshine added scripts/python/Jamfile to ensure that the Python
	  example scripts and very important cspace.py get installed.
	- Eric Sunshine added scripts/perl5/Jamfile to ensure that cspace.pm
	  gets installed.
	- res made a micro optimization in csHash<>::Grow.
	- res fixed a few leaks:
	    - csPoolEvents now have a weak ref to the event queue.
	    - csEvent::Remove() and RemoveAll() didn't free the attribute
	      array.
	    - Another superflouous csStrNew() in VFS.
	- res changed the Win32 port to remove the event listener of the old
	  keyboard driver before installing the new one.
	- res changed some errorneous free()s to delete[]s in
	  directdetection.cpp.
4-Feb-2004
	- Jorrit started the removal of the old effect system (used in OR).
	  This is unused and doesn't work properly as well.  Removed support
	  for the 'effect' and 'effects' keywords in the loader.  Removed
	  support for setting effects on materials.  The effect plugin is still
	  there because the old OpenGL renderer still needs it.
	- Jorrit moved the effects plugin source into the
	  plugins/video/renderer/opengl directory. So it is now private to the
	  old OpenGL renderer. This means that the effect system is not
	  essentially removed (it will be really removed when the old OpenGL
	  renderer is removed).
	- res fixed csProcTexture to unregister itself from the proctex event
	  handler upon destruction.
	- Eric Sunshine augmented the `msvcgen' facility so that it is capable
	  of creating multiple customized workspaces rather than always
	  creating only a single workspace (csall) containing all projects.
	  The following workspaces are now created:
	    - wkstypical: Projects which the typical CS users will use.
	    - wksall: All projects, even experimental and broken ones.
	    - wkswalkall: Walktest and plugins typically needed by Walktest.
	    - wksnewrenderer: Similar to wkstypical, but includes new renderer
	      and related modules rather than old renderer.
	  Most CS users should use the wkstypical workspace in place of the
	  obsolete csall workspace.  Project files also now contain two new
	  build modes: Release_NR and Debug_NR.	 These build modes ensure that
	  appropriate #defines are active for the new renderer, and should be
	  used when working with the wksnewrenderer workspace.
	- Eric Sunshine updated some out of date documentation in the user
	  manual; corrected some Texinfo mark-up errors; and eliminated a TeX
	  `underfull hbox' warning.
	- Eric Sunshine removed `caltocs' tutorial since the associated program
	  was removed some time back.  Perhaps, in the future, someone might
	  want to update this tutorial to explain use of sprcal3d plugin.
	- Eric Sunshine renamed the following makefile variables to be
	  consistent with their Jamfile counterparts:
	    FLEXBIN	  --> CMD.FLEX
	    BISONBIX	  --> CMD.BISON
	    SWIGBIN	  --> CMD.SWIG
	    NASM.BIN	  --> CMD.NASM
	    USE_XFREE86VM --> XFREE86VM.AVAILABLE
	    HAS_CAL3D	  --> CAL3D.AVAILABLE
	- Jorrit fixed awstest and awstut so they no longer use /this.
	- Eric Sunshine fixed the following problems related to the new MSVC
	  workspaces (reported by Jonathan Tarbox):
	    - Template files accidentally #defined USE_NEW_RENDERER instead of
	      CS_USE_NEW_RENDERER.
	    - win32/volatile.h contained `#undef CS_USE_NEW_RENDERER', thus
	      effectively undoing #define in the project files.
	    - When the new Release_NR and Debug_NR build modes were added,
	      missed configuration in msvcgen/template7/wscfg.tpi which needed
	      to be updated to reflect the new modes.
	- res fixed a stupid leak in win32.cpp.
	- res changed ::CreateSolidBrush() to ::GetStockObject() in win32.cpp.
	  Latter has the advantage that the brush doesn't need to be destroyed
	  with DeleteObject() later.
	- res fixed a leak in VFS MountRoot(). A string allocated with
	  csStrNew() was passed to an scfStringArray, which howeverallocates
	  the strings itself.
	- Neil Mosafi changed csvosa3dl plygin:
	   - No longer store iObjectRegistry in a csRef<>.
	   - Use size_t to iterate against STL classes as it's portable.
	   - Use pointer instead of csRef<> as arguments to functions.
	- Neil Mosafi added support for a3dl:clone class to csvosa3dl plugin.
	  This new type of object will construct a mesh using the factory of
	  the template mesh.
3-Feb-2004
	- Eric Sunshine fixed syntax error in aws.mak introduced yesterday
	  which manifested when running 'msvcgen' targets.
	- Eric Sunshine worked around more fallout from recent changes to the
	  Jam build facility.  Jambase in Jam 2.4 incorrectly defines RANLIB as
	  "" on MacOS/X, and this bogus setting overrides the `RANLIB ?=
	  "ranlib"' emission from CS's configure script.  Worse, when configure
	  detected MacOS/X Panther and tried to append "-s" to the value of
	  RANLIB as required by Panther, it was really appending "-s" to
	  Jamconfig's empty definition of RANLIB, thus resulting in an
	  altogether broken value for RANLIB.
	- Eric Sunshine added an `unconditional' option to
	  CS_JAMCONFIG_PROPERTY() which, when used, causes it to emit the Jam
	  property using `=' rather than `?='.
	- Jorrit removed the obsolete simplevp application.
	- Jorrit enabled csVideoPreferences compilation with NR.  It seems to
	  compile fine without changes.	 This also fixes compilation of simpvs.
	  Note that simpvs with OpenGL still crashes though.  simpvs with
	  software works fine.	'simpvs' with NR crashes even earlier before
	  showing the AWS dialog.
	- Jorrit fixed csVideoPreferences so it no longer uses the VFS /this
	  path.
	- Jorrit fixed simpmap after res2k accidently changed partsys to some
	  'street' level.
	- Jorrit fixed the genmesh GetVertices() and related functions in NR
	  so that they now call SetupFactory() (this was for some reason not
	  done with NR) and also no longer set the 'dirty' flags to true. The
	  Invalidate() function should set those flags to true but simply
	  getting the vertices should not make it dirty.
	- Eric Sunshine fixed a problem in win32.jam which prevented the
	  USE_DLLWRAP=yes option from working correctly.  Specifically, the
	  -shared flag which was discovered by configure for use in "gcc
	  -shared" was being sent to dllwrap, and dllwrap was not at all happy
	  about it.
	- Eric Sunshine fixed bug in cspython.mak where SRC.CSPYTHON
	  incorrectly included cs_pyth.cpp from both the source directory and
	  from $(OUTDERIVED).  It was supposed to include only the one from
	  $(OUTDERIVED).  Also simplified msvcgen special case; thus allowing
	  removal of CSPYTHON_MSVC_EXCLUDE hack.
	- res fixed sprcal3d.mak to include cal3d.lib in the generated VC
	  project.
2-Feb-2004
	- Eric Sunshine changed STREAMMAX and TEXTUREMAX constants in
	  csXMLShaderCompiler::shaderPass from 'static const int' to 'enum'
	  since MSVC used by Bruce Williams <midnightcoder@midnightcoder.com>
	  could not grok the 'static const int'.  The 'enum' is accepted by all
	  the compilers used for CS.
	- Keith Fulton updated for more accurate bounding box calculations in
	  very latest cal3d cvs, and attempted to update ./configure to check
	  for new cal3d API.
	- Eric Sunshine changed the Flex rules in Jam files and makefiles so
	  that they no longer insist upon using a custom skeleton file since
	  several users report "flex: fatal internal error, bad line in
	  skeleton file" when using the custom skeleton file.  Instead of using
	  a custom skeleton file, the build rules now pass the generated file
	  through 'sed' to massage it into not including <unistd.h> on Windows.
	- Eric Sunshine changed Flex rule in Jam so that it uses -L always to
	  suppress #line directives, rather than only using it if gcc is being
	  used.	 We must suppress #line directives always because the generated
	  file might get checked into CVS, and then it would be used by MSVC
	  users whose compiler dislikes these directives.
	- Eric Sunshine fixed several Jam file and makefiles which were
	  hard-coding 'sed' rather than using $(SED).
	- Eric Sunshine fixed aws.mak to use $(FLEXBIN) and $(BISONBIN) rather
	  than hard-coding 'flex' and 'bison'.
	- Eric Sunshine relocated default definitions of SED, DEEPCOPY, and
	  DELTREE into helper.jam from various other Jam files.
	- Eric Sunshine migrated Keith Fulton's change to the Cal3D check from
	  configure to configure.ac where it belongs so that it won't get
	  clobbered the next time someone re-generates configure from
	  configure.ac.
	- Eric Sunshine fixed the sed invocation in static.mak which emits the
	  #ifdef/#endif around SCF_REGISTER_FACTORY_FUNC().  Problem was that
	  'make' was eating the newlines in the sed expression, causing the
	  output to appear all on one line.
	- Eric Sunshine fixed bug in static.mak.  It was not cleaning up the
	  files it created when the 'clean' target was invoked.
	- Eric Sunshine changed behavior of aws.mak so that Flex and Bison
	  output files are placed into a subdirectory of $(OUTDERIVED) rather
	  than being placed back into the source tree.	This allows AWS to be
	  built even when the source code is on a read-only volume or on a
	  shared drive, etc.  Added 'awsgen' target which forcibly runs Flex
	  and Bison.  Added 'awsinst' which copies the generated files back
	  into the source directory so that they can be committed to CVS.
	- Eric Sunshine eliminated need for DO_SWIGPYTHINST conditional from
	  cspython.mak by slightly reorganizing the rules.
	- Eric Sunshine eliminated need for DO_SWIGPERL5INST conditional from
	  csperl5.mak by slightly reorganizing the rules.
	- Eric Sunshine added check to configure.ac which determines how to
	  disable warnings about unused variables.  The result of this check is
	  used by a few Jamfiles and makefiles when building auto-generated
	  code (such as that from Flex, Bison, Swig) which often contains many
	  unused variables.  Previously, these Jamfiles and makefiles made the
	  potentially bogus assumption that all compilers understand
	  -Wno-unused.
	- Eric Sunshine fixed copy/paste error in _GetCollisionPairs() in
	  perlpost.i which resulted in syntax error.
	- Jorrit added two parameters to the new
	  iLightManager->GetRelevantLights() function. The first parameter
	  is the maximum number of lights the caller needs and the second
	  parameter indicates if sorting on relevance is desired. Mesh
	  objects can use these parameters to get more control on the list
	  of lights they get from the light manager.
	  This is currently not implemented. It is just an API change.
	- Eric Sunshine fixed more serious brokeness resulting from Matze's
	  recent changes to the Jam build facility:
	    - GUI application install rule in macosx.jam was totally borked.
	      It had not been updated at all for the new installation scheme.
	    - General borkness of macosx.jam caused build of GUI and console
	      applications to fail while trying to invoke `mkdir -p ""'.
	    - Application rule in application.jam neglected to send "options"
	      (such as "console") to SystemInstallApplication.	This further
	      broke installation on MacOS/X since SystemInstallApplication was
	      given to believe that it was always installing GUI applications.
	    - Install targets ignored $(CMD.INSTALL) which is emitted by
	      configure and were instead using $(INSTALL).  Fixed by having
	      configure emit $(INSTALL) instead of $(CMD.INSTALL).  For
	      consistency, also renamed $(CMD.RANLIB) to $(RANLIB).
	    - Fixed bug in Install1 in install.jam where it was applying
	      $(INSTALLFLAGS) at the wrong position in the command invocation.
	- Neil Mosafi added support for "a3dl:model" to the csvosa3dl plugin (a
	  Sprite3D wrapper).
1-Feb-2004
	- Eric Sunshine applied a couple small patches from Randall Foreman
	  <eidpers@comcast.net> for Borland C++Builder which fix re-declaration
	  of loop variable in 'for', and which ensures that "Press a key to
	  close this window" is flushed to console window.
	- Philip Wyett removed cast to int causing signed / unsigned mismatch
	  in csString& csString::RTrim ().
	- Neil Mosafi added Cone and Billboard classes to the csvosa3dl plugin.
	  This provides support for constructing CS meshwrappers corresponding
	  to "a3dl:cone" and "a3dl:billboard" metaobjects on a VOS site.
30-Jan-2004
	- res augmented csThing::InitializeDefault() to unprepare the thing
	  when the 'clear' flag is set.
	- res added a sanity check to csThingObjectType::Initialize().
	- Jorrit removed an obsolete constructor from csMeshWrapper.
	- Jorrit did the following lighting related changes:
	    - Added iLightManager. This interface must be implemented by an
	      engine (and registered to the "iLightManager" tag in the object
	      registered) and mesh objects can then use this light manager to
	      find out which lights affect them. In the end this will replace
	      the DeferUpdateLighting() system.
	    - Removed iMeshObject->UpdateLighting(). Mesh objects now have
	      to use the light manager to request the lights they need (if
	      any). All mesh objects have been modified to reflect this.
	    - Changed iParticle->UpdateLighting() to use a csArray instead
	      of an iLight**.
	    - Added a temporary implementation of GetRelevantLights() in
	      csMeshWrapper. This implementation works exactly like
	      UpdateDeferedLighting() used to do in the past. This means
	      the current system is just as efficient as the old one.
	      In future we need to update this so that the array of
	      lights doesn't have to be recalculated if nothing has changed.
	      Also we need to sort lights on relevance so we can return
	      the most relevant lights to the object.
	    - Completely removed the obsolete DeferUpdateLighting() call.
	    - Replaced this with a SetLightingUpdate() call. Using this
	      call the application can control what lights should be
	      returned to the mesh object upon calling GetRelevantLights()
	      and in what order. With this function you can control the
	      number of lights that should be used for lighting the object
	      and also what kind of relevance sorting should be used (not
	      implemented yet).
	    - Changed iso engine to call SetLogicalParent() on the mesh
	      objects so that the iIsoMeshSprite is set on the mesh.
	    - Iso engine also implements iLightManager now so that mesh
	      lighting works the same as in the 3D engine.
	    - Removed the obsolete flag parameter on
	      iEngine->GetNearbyLights().
	    - Updated the documentation for these changes.
	- Eric Sunshine fixed bug in msvcgen.mak introduced on 28-Jan-2004
	  (during csutil/cssys merge) where it neglected to ensure that
	  $(OUTBASE)/mk/msvcgen existed before trying to create subdirectories
	  of that directory, thus leading to a crash.
	- Jorrit did the following lighting related changes:
	    - Added a new CS_LIGHTINGUPDATE_ALWAYSUPDATE flag to indicate
	      that lighting should be updated all the time. By default
	      this is not set which means that lighting is only updated
	      when the object moves or when the list of lights that are
	      currently affecting the object changes. This is ok in almost
	      all cases but it can fail when a light indirectly affects an
	      object through a portal and the portal changes in some way (i.e.
	      is removed or moves). In that case the default behaviour will
	      not catch the lighting change.
	    - Made all DrawTest() implementations call GetRelevantLights() only
	      when they think the object is visible instead of all the time.
	      This is more optimal.
	- Jorrit changed csArray<Bot> to the safer csPDelArray<Bot>.
	- Jorrit fixed a bug in one of the engine CreateMeshWrapper()
	  functions.  It would set the logical parent of the created mesh to
	  the iBase of the csObject instead of the iMeshWrapper. This caused
	  the bots to crash with the new lighting system.
	- res fixed a few 64bit portability issues in csutil reported by VC7.
	- res removed the unused csSymbolTable class.
	- Jorrit updated the MeshAnim HOWTO about automatic lighting.
	- res made some small optimizations to csHash<>.
	- res made some more small optimizations to csHash<> and fixed the
	  GetAll() argument.
	- duhprey fixed partphys_ode to compile.
29-Jan-2004
	- Eric Sunshine made the following changes to clean up after Matze
	  changed the return type of csGetConfigDir(), csGetResourceDir(),
	  csGetAppDir(), and csGetAppPath() to return csString instead of char
	  const*.
	    - Completely restored the functionality of the platform-independent
	      csGetPluginPaths(), most of which Matze had removed for some
	      reason.  Most importantly, this makes csGetPluginPaths() once
	      again search for installed Crystal Space plugin modules, which is
	      something that no longer occurred following Matze's changes, and
	      would easily account for the fact that external projects on
	      MacOS/X and Windows -- both of which use this implementation of
	      csGetPluginPaths() -- could no longer locate any CS plugins.
	    - Fixed bugs where he was returning 0 (null) for functions which
	      were supposed to be returning csString.
	    - Updated Doxygen comments for these functions since they were
	      quite invalid following Matze's changes.
	    - Eliminated unnecessary obfuscation in OSXGetDirs.cpp and
	      winsyspath.cpp which was introduced with this change.
	    - Upgraded csGetConfigPath() for MacOS/X since Matze forgot to
	      update this implementation.
	    - Changed Windows port to use generic/appdir.cpp since
	      winsyspath.cpp was simply duplicating its functionality.
	    - Fixed bug: Following Matze's changes, platform-independent
	      csGetAppPath() would leak `envPATH' string if program was not
	      found in $PATH.
	    - Fixed csGetConfigPath() for Unix so that it once again checks
	      $CRYSTAL/etc for vfs.cfg.	 Likewise, csGetPluginPaths() for Unix
	      once again checks $CRYSTAL/lib.
	    - Restored error checking code which had been removed, the removal
	      of which could potentially cause csPluginPaths::AddOnce() to
	      misbehave.
	    - Generally cleaned up the code.  Also eliminated compilation
	      errors and warnings.
	- Eric Sunshine fixed several syntax errors in CS/mk/jam/*.jam files.
	- John Harger changed shaderVarAccessor in the genmesh and particles
	  plugins into proper embedded SCF interfaces (which eliminated a
	  warning about using "this" in member initialization)
28-Jan-2004
	- Eric Sunshine removed a slew of csengine library references from the
	  project since the csengine library no longer exists.
	- Eric Sunshine documented removal of csengine in apimod98.txi.
	- Eric Sunshine eliminated TeX 'hbox' warning from render.txi.
	- Eric Sunshine physically merged the cssys resources (headers,
	  sources, and resources) into the csutil directory structure.	cssys
	  has now been abolished completely.
	- Jorrit fixed mk/jam/win32.jam which Matze forgot to change
	  after changing the PACKAGE.xxx to PACKAGE_xxx.
	- Eric Sunshine fixed all the places in the project where Matze forgot
	  to change Jam/make variable PACKAGE.xxx to PACKAGE_xxx (except for
	  win32.jam which Jorrit already patched).
	- Eric Sunshine fixed Jorrit's fix to win32.jam, in which Jorrit
	  incorrectly changed PACKAGE.VERSION.LIST to PACKAGE_VERSION.LIST.
	- Eric Sunshine augmented win32.jam so that the "File Description"
	  attribute emitted to the version .rc file has a reasonable default
	  value if the target's Jamfile did not invoke the Help rule.
	- John Harger fixed the particles interface to avoid the dangerous
	  csArray references.
	- Norman Kraemer replaced in viewmesh the call to SetRenderScale() with
	  RescaleFactory().
27-Jan-2004
	- Dentoid added a missing CS_IMPLEMENT_PLUGIN to the engine plugin.
	- John Harger moved everything from iParticlesObjectState::Update into
	  the physics plugin. This will allow better control over the particles
	  and especially make the ODE particle physics plugin a lot easier and
	  cleaner.
	- Keith Fulton re-enabled factory scaling in sprcal3d.	Using a <scale>
	  tag in the .cal3d file now rescales the bones, meshes and all anims
	  for you.  Put it after all the other items are loaded in your file.
	- Keith Fulton fixed an error message on bad mesh name in sprcal3dldr.
26-Jan-2004
	- Eric Sunshine updated CS/scripts/jamtemplate/cs_check_host.m4 to
	  reflect all the MacOS/X-specific fixes Eric applied to
	  CS/configure.ac over the last several months (i.e. "ranlib -s",
	  "gcc -E", etc.).
	- Eric Sunshine inlined the functionality from CS/docs/html/Jamfile and
	  CS/docs/pubapi/Jamfile into CS/docs/Jamfile because the Jamfiles in
	  those two subdirectories get deleted automatically by jobber.pl
	  (since all content of those directories is generated automatically by
	  jobber.pl).
	- Jorrit removed the csengine library and merged all sources into
	  the engine plugin. include/csengine and libs/csengine are now
	  gone. Jorrit also fixed walktest so it no longer includes files
	  from include/csengine.
	- Luca added a very informative message in the bottom of the screen
	  for the waterdemo application.
	- Matze removed csengine from cs-config.
	- res made the following changes to data/config/opengl.cfg:
	    - Improved comment for Video.OpenGL.TextureDownsample.
	    - Added GL font cache settings.
	- Eric Sunshine removed plugine/engine/3d/enginep.cpp since it is no
	  longer needed.  This file existed solely to force a reference from
	  the plugin to libcsengine.a to ensure that the library was actually
	  linked into the plugin module.  Since all engine sources now reside
	  in engine/3d and libcsengine.a is gone, this is no longer necessary.
	- Eric Sunshine fixed bug in plugins/engine/3d/engine.mak where it
	  failed to install engine.cfg.	 This functionality should have been
	  relocated here when libs/csengine.mak was removed.
	- Eric Sunshine converted plugins/engine/3d/engine.mak to the new style
	  which does not pollute the $(OUT) directory.
	- Eric Sunshine fixed bug in bugplug.mak where it failed to install
	  bugplug.key.
25-Jan-2004
	- Matze did some updates to the jam rules:
	    - I decided not to fight autoconf while using custom variable
	      names.  This gives more trouble than necessary.  So we're using
	      bindir, includedir, etc., for installation directories now.
	    - Rewrote installation rules and used the ones from autojam.
	    - Fixed and simplified header install rules.
	    - Added new targets to install documentation.
	- Matze changed the csGet*Dir functions to return csString and
	  introduced CRYSTAL_PLUGIN and CRYSTAL_CONFIG in the unix variant and
	  changed the order in the linux variant a slight bit.
	- Eric Sunshine fixed a couple more places in particleldr.cpp where
	  false was being returned as a csPtr<>.  Reported by Randall Foreman's
	  Borland compiler.
	- res corrected the Help statement in the cscursor Jamfile.
23-Jan-2004
	- Jorrit fixed a crash bug in the engine.  At destruction it was
	  forcing a get of the thing plugin.  However this also happens at
	  cleanup if nothing else has been initialized yet (i.e. if there is
	  an error doing application initialization).  This caused crashes
	  because thing plugin was trying to do stuff to the renderers which
	  were not initialized yet.
	- Eric Sunshine fixed configure's "-shared" flag check so that it works
	  with Autoconf >= 2.58, as well as with earlier releases.  This check
	  needs to examine conftest.err, which normally is not created by
	  AC_LINK_IFELSE() in <= 2.57, so the check had to perform some m4
	  magic to fool AC_LINK_IFELSE() into creating conftest.err.  As of
	  Autoconf 2.58, however, AC_LINK_IFELSE() always creates conftest.err,
	  but it also deletes conftest.err before the "-shared" check has a
	  chance to examine the file.  In addition to fixing this problem, the
	  functionality of examining conftest.err has also been generalized and
	  is now available as a standard option to all callers of
	  CS_BUILD_IFELSE(), CS_CHECK_BUILD(), and CS_CHECK_BUILD_FLAGS(),
	  rather than being implemented as a special case for the "-shared"
	  check.
22-Jan-2004
	- Jorrit added the engine target to both jam and make 'walkall' since
	  the engine plugin is now required.
21-Jan-2004
	- Eric Sunshine made some minor updates to cygwin.txi, the most
	  important of which was to replace "make all" with "make -k all" in
	  the CS build instructions.
	- Jorrit did the following array related changes:
	    - Added csSafeCopyArrayMemoryAllocator which is a memory allocator
	      that takes care to properly re-construct all objects upon
	      reallocation of the array.  This memory allocator can be used
	      when you have an array of objects that cannot be safely moved
	      around in memory otherwise.
	    - Added csSafeCopyArray convenience class which is a version of
	      csArray that uses the csSafeCopyArrayMemoryAllocator.
	    - Changed csWeakRefArray to inherit from csSafeCopyArray.
	    - As a consequence of the above changes the dangerous
	      csWeakRef::Link() and Unlink() functions could be made private so
	      they cannot be misused.
	- res made the following changes:
	    - Fixed "Independent target ../../../mk/visualcX/foobar.rc" Jam
	      warnings, for real now.
	    - Fixed "..\..\out\mk\fragment7\..\..\..\mk\visualc7\foobar.rc"
	      style paths VC projects.
	- res made the following changes:
	    - Changed walktest so it doesn't link in csengine statically any
	      more.
	    - Removed some unused stuff from csengine.
	    - Cosmetic change in msvcgen.jam.
	- Luca added a friend declaration to access a private member from an
	  enclosed class in the class csSpriteCal3DMeshObject.	He also added
	  the needed dependencies for sprcal3d and sprcal3dldr (CSGFX CSGEOM
	  CSUTIL).
20-Jan-2004
	- Jorrit added a new MemoryAllocator template parameter to csArray.
	  With this parameter it is possible to use another memory allocator
	  that csArray uses for its allocation of the table. The default
	  memory allocator uses malloc/realloc/free.
	- Jorrit added csWeakRef<T>::Link() and Unlink() which are functions
	  that nobody should ever call.
	- Jorrit added csWeakRefArray<T> which is an array of weak references.
	  This is needed because csArray<csWeakRef<T> > does not work because
	  you cannot reallocate an array of weak references.
	- John Harger cleaned up the particles plugin interface a bit, and
	  changed the loader syntax a little.
	- Eric Sunshine added new interface iParticlesColorCallback.  This
	  replaces the ugly functional-style color callback used by
	  iParticlesObjectState and iParticlesFactoryState with a more
	  object-oriented and normalized approach.
	- Eric Sunshine cleaned up particle related headers and added some
	  missing documentation to ensure that Doxygen will actually produce
	  output for the interfaces.
	- Eric Sunshine eliminated several compilation warning in the particles
	  and particlesldr plugins.
19-Jan-2004
	- Steven Geens changed the calling of PositionChild to a hierarchical
	  scheme.
	- Norman Kraemer changed render3d Jamfile to include shader subdir
	  only if new renderer is configured or msvc project file generation
	  is in progress.
	- Eric Sunshine reverted Norman's change since MSVC_QUIET is not a
	  reliable way to check if the MSVC project file generation is in
	  progress.  This variable is just an optional variable used by
	  the generation process itself, and is not guaranteed to be set during
	  generation.  If you need to generate render3d shader project files,
	  it should be sufficient to invoke mk/msvcgen/msvcgen.sh with the
	  argument "-sUSE_NEW_RENDERER=yes".
	- Eric Sunshine updated EAX URLs in msvc6.txi and msvc7.txi since the
	  old ones were out of date.  New URLs provided by David Calkins
	  <dcalk@dejazzd.com>.
	- Eric Sunshine fixed a bunch of Texinfo mark-up problems in msvc6.txi
	  and msvc7.txi.
	- Eric Sunshine fixed bugs in particlesldr.cpp which were reported by
	  Randall Foreman's Borland compiler.  Was returning 'false' from a
	  couple functions declared to return csPtr<>.
	- Eric Sunshine fixed a few additional problems reported by the Borland
	  compiler.  Please use "#ifdef CS_DEBUG" rather than "#if CS_DEBUG".
18-Jan-2004
	- Jorrit removed unused 'next'/'prev' fields in csLight. These
	  are no longer needed after the redesign of two days ago.
	- Jorrit added iPortal->GetWorldVertices() to get the world space
	  vertices of a portal.
	- Jorrit fixed iEngine->GetNearbyObjects() and GetNearbyMeshes()
	  to actually use this so that these functions now use the correct
	  world space vertices.
	- Luca compiled the new renderer with VC6 and did some fixing:
	    - Added a "friend MeshTreeNode" to the class
	      csChunkLodTerrainFactory to let the former to access private
	      members of the latter.
	    - Converted a "for (int i =" to "int i; for (i = " in
	      mesh/partgen/particle.cpp
	    - Added CSGFX dependency (DEP.XXX in the makefile) to emit.mak,
	      fountain.mak, fire.mak, explo.mak, genmesh.mak, rain.mak,
	      spiral.mak, snow.mak, spr3d.mak.
	    - Fixed a compilation error in odedynam.h.
	- Luca modified his last commit, upon advice of res, using the right
	  order for the libraries' dependency, id est: cstool csgfx csgeom
	  csutil.
	- Andrew Craig fixed two problems in sprcal3d.	First was a check to
	  make sure it does not attach the same mesh more then once.  Second is
	  a fix to SetMaterial() to use the right mesh ID.
17-Jan-2004
	- Steven Geens added HitBeamOutline and HitBeamObject for sprcal3d.
	  He's not completely sure it works, but it doesn't seem to break
	  anything.
	- Steven Geens updated a test of configure.ac and configure so it
	  checks correctly for the cal3d cvs version.
16-Jan-2004
	- Jorrit started work on the unification of all types of lights in
	  CS. Moved a lot of general stuff from csDynLight/csStatLight (and
	  also iDynLight and iStatLight) to csLight/iLight.
	- Jorrit removed the iStatLight and iDynLight interfaces. All
	  useful functionality that used to be there has been moved to
	  iLight. Various functions in iEngine have been changed to
	  work with iLight instead of iStatLight or iDynLight.
	- Jorrit added a now a iLight->GetDynamicType() function that
	  returns one of the following:
	    CS_LIGHT_DYNAMICTYPE_STATIC
	    CS_LIGHT_DYNAMICTYPE_PSEUDO
	    CS_LIGHT_DYNAMICTYPE_DYNAMIC
	- Jorrit added mention of the above changes to the apimod98.txi
	  document.
	- Jorrit modified the tutorials in the documentation to reflect
	  the changes.
	- Jorrit unified iLightingInfo->DynamicLightDisconnect(),
	  DynamicLightChanged(), StaticLightDisconnect(), and
	  StaticLightChanged() so that only LightDisconnect() and
	  LightChanged() remain.
	- Jorrit removed iLight->IsDynamic(). This is now obsolete since
	  you can use iLight->GetDynamicType() for this.
	- Jorrit removed csStatLight and csDynLight internally in the engine.
	  All lights are now csLight instances. Turned out that nearly all
	  code was identical anyway.
	- Jorrit removed all functions that deal specifically with dynamic
	  lights. Instead dynamic lights are now created exactly like
	  normal static lights and have to be added to the sector list.
	  CreateDynLight() has been removed. The last parameter of
	  CreateLight() is now one of the dynamic types (instead of a boolean).
	- Jorrit removed iLight->SetSector(). It is not valid to manually set
	  the sector of a light. This is done automatically when you add
	  a light to a sector by calling sector->GetLights()->Add().
	- Eric Sunshine performed some Texinfo markup corrections in simple.txi
	  and apimod98.txi, and eliminated TeX underfull hbox complaint from
	  apimod98.txi.
	- Jorrit removed a few warnings here and there.
	- Eric Sunshine fixed a bug in csSocketListener where it failed to
	  initialize its mcast_in member.  This addresses bug #873491, however,
	  this is only the tip of the iceberg since UDP support in cssocket is
	  fundamentally and fatally flawed in almost every way possible.
	  Fixing it will be a major, major undertaking, and will require either
	  implementing a proper, complete, and comprehensive
	  connection-oriented emulation (rather than the broken, incomplete,
	  and highly buggy emulation currently implemented), and by eliminating
	  the conceptual flaw that UDP sockets are always non-blocking; or by
	  revising the API to support connection-oriented, connectionless, and
	  multicast modes.
15-Jan-2004
	- Peter Amstutz changed the keyboard movement in the "simple" tutorials
	  (along with the associated texinfo documentation) to follow more
	  conventional controls for the first person view on the assumption
	  that most people start writing CS applications by copying "simple1"
	  and so they should have a better set of default controls from which
	  to work.  :-)
	- Jorrit fixed the .csplugin file in the ODE based physics plugin for
	  particles.  It was using the same plugin ID as the simple physics
	  plugin.
	- Jorrit attempted to convert the rain mesh to the NR.	It doesn't yet
	  work though.
	- Jorrit fixed the bugs in the rain mesh object.  It now works mostly
	  with NR except that portals seem to overwrite it.
	- Jorrit fixed the transform of the rain particle system so it renders
	  at the correct spot with NR.
	- Jorrit fixed a bug in the loader.  By delaying to set the render
	  priority of an object up to the end the automatic portals generated
	  from old map files wouldn't inherit the right object priority.  This
	  could cause render errors.  With OR these errors didn't come up due
	  to coincidence but with NR they were very visible.
	- Eric Sunshine greatly enhanced the Doxygen documentation for
	  iNetworkSocket so that it explains precisely what the interface
	  represents, and how & when clients might want to use it.
	- Eric Sunshine fixed classes csMetaMaterial and csMetaTexture in
	  csvosa3dl plugin.  They were accidentally and incorrectly using
	  private inheritance.	Note that "class Foo : public Bar, Cow, Smoo"
	  is not the same as "class Foo : public Bar, public Cow, public Smoo".
	- Eric Sunshine updated csvosa3dl.mak so that it links the plugin
	  against csgeom.
	- Marten removed the now deprecated iRenderBufferSource.
	- Jorrit optimized NR version of genmesh a little bit. Render
	  buffers are now only recreated when really needed and not every
	  time the dirty bit was set. Also removed the copy of the triangle
	  array to an int* buffer. That's not needed.
	- Eric Sunshine simplified a number of macros in checkbuild.m4,
	  checklib.m4, and configure.ac by removing some unnecssary
	  m4_default() invocations.
	- Eric Sunshine fixed outdated documentation for CS_EMIT_BUILD_FLAGS()
	  macro in configure.ac.
	- Eric Sunshine fixed aesthetic problem in configure.ac where output of
	  the results of certain tests for build flags (such as -Werror, -Wall)
	  could differ between cached and uncached runs.
	- Eric Sunshine added new enable-exceptions test to configure.ac which
	  complements the existing disable-exceptions test.  Both tests now
	  emit custom makefile/Jam variables which can be used by modules which
	  need fine-grained control over exceptions.
	- Eric Sunshine fixed problem in configure.ac's -fvtable-thunks check
	  where it was hard-coding the flag -Werror, rather than using the
	  computed value $cs_prog_cxx_enable_errors.
	- Eric Sunshine fixed VOS check in configure.ac so that it no longer
	  hard-codes -D_REENTRANT and -fexceptions CFLAGS, since doing so makes
	  the invalid assumption that all compilers will understand these
	  flags.  Instead, now uses the result of the new enable-exceptions
	  configure.ac check, and takes advantage of the fact that each build
	  system provides a portable way to specify preprocessor defines.
	- Eric Sunshine added const and non-const operator[] methods to
	  Opcode's Point class (OPC_Point.h).  This works around problem with
	  Borland compiler where it considered the following code ambiguous:
	    Point p; float x = p[0];
	  Other compilers correctly apply Point's float* operator and then
	  treat the returned result as an array.  Borland, however, was unable
	  to choose if it should use the const or non-const float* operator.
	- Eric Sunshine revised outdated and incomplete Doxygen comments for
	  iNetworkEndPoint, iNetworkConnection, iNetworkListener,
	  iNetworkDriver, and csNetworkDriverCapabilities.
	- John Harger fixed a sorting problem (though the back2front sorting
	  is broken still in libcstool/rendermeshlist) and enabled selecting
	  other physics plugins for the particles plugin.
	- res updated the ball mesh plugin makefile to link against csgfx, too.
	- res fixed AWS to compile with NR.
	- res fixed Opcode after the recent operator-related changes. MSVC was
	  confused by the presence of both a float* and float[] operator.
	  Removed float* version.
	- Jorrit added a sequence to the terrain level so that the sun
	  moves. This gives nice realtime lighting effects on the landscape.
	- Keith added timeFactor for slow motion and reversible anims for
	  sprcal3d. Improved error reporting on bad loads of .cal3d files.
	  Added stopLock flag to animation mixer so that animation stops on
	  the last keyframe if true.
14-Jan-2004
	- res changed glrender3d to not depend on GLU any more. Though a GLU
	  header was #included, no GLU function was used anyway.
	- res sanitized line endings in ivideo/custcursor.h and the custom
	  cursor plugin.
	- Eric Sunshine fixed copy/paste error in the new partphys_ode.mak
	  which broke the makefile.
	- Eric Sunshine fixed awsScrollBar::Setup() so that it positions the
	  components of the horizontal scrollbar properly.  Previously, it was
	  using magic constants (2, 4, 6) to adjust the component positions,
	  but these constants were incorrect even for the default skin.
	  Positioning of the components is now completely independent of magic
	  constants, and is also entirely consistent with the way the
	  components of the vertical scrollbar are positioned.
	- Norman Kraemer changed Frame's Height access from Frame.Height() to
	  Frame().Height()
	- Norman Kraemer made the glshader_cg compileable once again, but says
	  that it certainly won't work.	 I adjusted include paths, structure
	  names and method spurs.  Since i added the missing Compile method as
	  a false returning dummy method it certainly won't work.  I guess
	  there should go the code from the now defunct Prepare() method.
	- Peter Amstutz rewrote the GenerateBox() method in the genmesh plugin
	  to create a box with better texel settings (the old code had texture
	  warping bugs on certain sides of the box)
	- Peter Amstutz added support for textures and materials to the
	  csvosa3dl plugin.  It also loads "a3dl:object3D.cube" into the
	  engine.
	- Peter Amstutz modified the configure.ac script to add the flags
	  -D_REENTRANT and -fexceptions to the VOS cflags variable.
13-Jan-2004
	- Jorrit added a version of Top() to csArray that is not const.
	- Jorrit multiplied the values in the two glPolygonOffset() calls
	  with 3 (in the NR OpenGL renderer) to avoid flickering in case
	  stencil lighting is used. This still doesn't completely avoid
	  flickering but it helps considerably.
	- Neil Mosafi changed the custom cursor plugin to use iReporter instead
	  of a comment and also to use csHash<> instead of csHashMapReversible.
	- Eric Sunshine fixed memory leak in csVosA3DL::GetSector().  It was
	  assigning a 'new' csVosSector directly to a csRef<>, thus leaking a
	  reference.
	- Eric Sunshine fixed a number of cases in the csvosa3dl plugin where
	  it was accidentally and incorrectly using private inheritance.  Note
	  that "class Foo : public Bar, Cow, Smoo" is not the same as "class
	  Foo : public Bar, public Cow, public Smoo".
	- Eric Sunshine fixed csVosA3DL and csVosSector so that they do not use
	  csRef<> for storing iObjectRegistry, since this tends to lead to
	  reference loops.
	- Eric Sunshine removed numerous unnecessary #includes from csvosa3dl
	  plugin.
	- Eric Sunshine fixed bug in csVosObject3D.  It failed to invoke
	  SCF_CONSTRUCT_IBASE() and SCF_DESTRUCT_EMBEDDED_IBASE().
	- Eric Sunshine fixed bug in csMetaObject3D.  It was leaking a
	  csVosObject3D.
	- Eric Sunshine fixed bug in csVosSector.  It failed to invoke
	  SCF_CONSTRUCT_IBASE().
	- Eric Sunshine added a makefile for the csvosa3dl plugin.
	- Eric Sunshine fixed bug in csvosa3dl Jamfile.	 It was incorrectly
	  assigning $(COMPILER.CFLAGS) to the global C++FLAGS, which impacts
	  _all_ modules.  Presumably, this was done to work around some
	  unspecified issue, but it was an incorrect solution.	(Peter, if you
	  can provide information about the issue you were dealing with,
	  perhaps we can devise a more appropriate solution.)
	- Eric Sunshine fixed vosa3dl.h so that it #includes headers for
	  classes used as template arguments, rather than simply forward
	  declaring them.  This will allow it to work correctly with older
	  compilers, such as the Borland compiler, which must see the entire
	  class declaration before the class is used as a template argument.
	- Eric Sunshine protected vostest.mak via a conditional so that the
	  vostest application is built only if VOS has been detected.
	- Eric Sunshine fixed bad copy/paste error in the configure.ac VOS
	  check, where it was testing against $(SDLCONFIG), thus VOS would only
	  be found if SDL was also present.
	- Eric Sunshine fixed incorrect m4 quoting in the VOS configure.ac
	  check.
	- Eric Sunshine changed the VOS configure.ac test so that it no longer
	  unnecessarily emits the HAS_VOS makefile property.
	- Eric Sunshine added cache support to the VOS, SDL, FreeType2, Perl,
	  and cslibs configure.ac checks.
	- Eric Sunshine fixed bug in configure.ac's Perl SDK check where it was
	  accessing Config.pm's `sitearch' value, when it should have been
	  accessing `archlib'.
	- Eric Sunshine fixed configure.ac's Perl SDK check so that it wraps
	  all invocations of external programs inside AC_RUN_LOG().
	  Previously, it only wrapped some such invocations.
	- Eric Sunshine fixed bug in sprcal3d.mak.  It neglected to add
	  $(CAL3D.LFLAGS) to LIBS.EXE for static build.	 Also updated makefile
	  to new style in which object files are placed in custom subdirectory
	  of $(OUT) rather than polluting $(OUT).
	- Eric Sunshine fixed bugs in gl_render3d.mak where it failed to
	  utilize GLU.CFLAGS.
	- Eric Sunshine fixed bug in render3d/opengl/Jamfile where it failed to
	  utilize GLU.CFLAGS and GLU.LFLAGS.
	- Eric Sunshine fixed bugs in csvos3adl.mak and sprcal3d.mak where they
	  were incorrectly utilizing VOS.LFLAGS and CAL3D.LFLAGS, respectively.
	  The error would cause static link builds (USE_PLUGINS=no) to fail.
	- duhprey added an ODE based particle physics plugin. (alpha)
12-Jan-2004
	- Peter Amstutz added a preliminary version of a VOS
	  plugin for CS, along with a test program.  The configure script
	  checks for VOS and will not build the plugin or
	  test program unless VOS is available.
	- Jorrit fixed a compile error with syntax services. You can't
	  forward declare an enum (csZBufMode).
	- Jorrit fixed a big bug in csHash::DeleteAll(). If the size of
	  the bucket table happened to exceed the initial modulo size then
	  DeleteAll() would simply crash. In fixing this function Jorrit
	  also removed the 'bool' return value from DeleteAll(). This
	  is useless. If application code needs to know if values are
	  going to be deleted it can call GetSize() right before calling
	  DeleteAll().
	- John Harger comitted Daniel Duhprey's patch for particles, changing
	  the internal update loop a bit. Also a few new features were added
	  such as variable mass and improved start/stop features including
	  an option to turn of autostarting.
11-Jan-2004
	- Jorrit fixed a compile error and some warnings in the new particles
	  system.
	- Eric Sunshine eliminated some unnecessary $(addprefix) invocations
	  from bugplug.mak.
	- Eric Sunshine converted particles.mak, particlesldr.mak, and
	  partphys_simple.mak to the new-style makefile which emits its working
	  files to a custom subdirectory of $(OUT).
	- Eric Sunshine removed some highly questionable and unnecessary
	  implicit rule goop from particles.mak and partphys_simple.mak.
	- Eric Sunshine fixed formatting of 'help' messages from particles.mak,
	  particlesldr.mak, and partphys_simple.mak.
	- Eric Sunshine eliminated bogus cssys reference from particles.mak.
	- Eric Sunshine ported particles.cpp to MacOS/X by eliminating
	  invocation of unportable tanf().
	- Eric Sunshine fixed particles/simplephys.h to #include
	  csutil/randomgen.h rather than the deprecated csutil/rng.h.
	- Eric Sunshine added particles, particlesldr, and partphys_simple
	  plugins to user.mak.
	- Eric Sunshine changed the particles, particlesldr, and
	  partphys_simple plugins to #include appropriate header files rather
	  than using forward declarations for a number of interfaces which were
	  used as template arguments.  This will allow the code to build
	  correctly with older compilers, such as Borland C++Builder.
	- Eric Sunshine removed a good number of unnecessary #includes and
	  forward delcarations from the particle-related plugins and fixed
	  numerous formatting goofs.
	- Eric Sunshine worked around problem where configure.ac's GLU and GLUT
	  checks could export incorrect build flags on MacOS/X if user had
	  installed XFree86.  In this case, it would find the GLU and GLUT
	  resources from XFree86 rather than utilizing GLU.framework and
	  GLUT.framework.
	- Eric Sunshine fixed problem in configure.ac where the OpenGL and
	  related checks were not sensitive to Darwin cross-building from
	  MacOS/X (via the --with-x switch).  In this case, the checks were
	  still incorrectly trying to locate OpenGL.framework, GLU.framework,
	  and GLUT.framework, rather than the XFree86 resources.
	- Steven Geens fixed sprite sockets. They wouldn't work correctly
	  if morph targets were used.
	- res made the following changes:
	    - Changed the syntax service plugin to use tokenlist.h for it's
	      token list setup.
	    - Added a method to parse Z modes to the syntax service plugin.
	    - Added a zmesh2 zmode.  Works similar to zmesh, but with the
	      difference that it sets a zmode suitable for passes >= 2 (eg if
	      the mesh has a zmode of zuse, zmesh2 will result in an effective
	      zmode of ztest.)
	    - Shader passes can now override the zmode of the renderer.
	    - Updated the OR lighting shader to utilize zmesh2 in the 2-pass
	      technique.
	- John Harger fixed the quads mode in the particles plugin. The test
	  level should work now too. (And has a nice fire effect, courtesy of
	  Daniel Duhprey)
10-Jan-2004
	- res added a facility to draw meshes with less render buffer juggling
	  etc. required from the client.
	- res updated the csfx* functions to use that facility on NR.
	- In csutil/inpnames.{h|cpp}, Oktal added functions csTypeOfInputDef
	  and csParseJoystickDef.
	- Keith Fulton added ability to override default material in sprcal3d
	  mesh.
	- res made the following changes:
	    - Moved 'Help' statement in Jamfiles in front of Application /
	      Plugin / etc. statements.  This way, the Win32 version .rc
	      generator can use them.
	    - Fixed "Independent target ../../../mk/visualcX/foobar.rc" Jam
	      warnings.
	    - Changed the AWS Jamfile to use the out/...  directory as an
	      additional inlude path, to work around problems caused by
	      different versions of Bison used for the local build and the
	      generated stuff in CVS (the file skinpars.hpp was slightly
	      different, but enought to cause a link error when the CVS version
	      was used, as opposed to the locally generated one.)
	- res changed the point sprite caps test in glrender3d to consider both
	  the ARB_point_sprite and ARB_point_parameters extensions.
	- res made some cosmetic changes to the particles and partphys_simp
	  plugins.
	- res changed the particle_basic shader to not use fixed function
	  lighting any more.
	- Philip Wyett moved decleration of 'iPortal *po' into better scope.
	- Andrew Craig added the ability for sprcal3dldr to name materials
	  inside the .cal3d file new material tag is where name is optional:
	    <material file="image file" name="material name"/>
	- John Harger changed the internal memory structure of the particles
	  there is no longer an upper maximum, and it should work better
	  overall.  Quads are currently unfunctional, only point sprites work.
9-Jan-2004
	- Jorrit fixed a warning in memimage.cpp.  It was trying to delete a
	  void* which is undefined.
	- Jorrit totally reverted the deletes in memimage.cpp. The superclass
	  (csImageFile) was already doing those deletes.
	- Marten made a first attempt to preliminary fix for re-entrant portals
	  and disabled floating portals for new renderer.
	- Jorrit reverted Marten's last portal fix as it causes totally new and
	  much worse problems.
	- Jorrit fixed the /temp path in vfs.cfg.  It used ./data instead of
	  @data.
	- Jorrit fixed a bug in the generic renderloop step plugin.  When
	  render portals it was not flushing the list of meshes with the same
	  shader.
	- Jorrit fixed a bug in the csList::Iterator.  It was always skipping
	  the first element.
	- Jorrit fixed the NR object handling in csSector so that it now uses a
	  csArray instead of a csList to cache the visibility results and it
	  also uses the render context instead of only the render view.
	  Unfortunatelly this still doesn't fix the problems.
	- Jorrit replaced DeleteAll() with Empty() in csRenderMeshList for more
	  efficiency.
	- Jorrit removed the sorting of the renderMeshListInfo structures in
	  csRenderMeshList.  This is not needed since they are already inserted
	  sorted.
	- Jorrit optimized csRenderMeshList->GetSortedMeshList() a bit more by
	  avoiding the two iterator loops over the render priorities.
	- Jorrit considerably optimized the generic render loop by avoiding an
	  unneeded csArray for keeping the sorted meshes.
	- Jorrit did another small optimization to avoid the construction of
	  the dynDomain array if the material didn't change (in
	  csGenericRenderStep::RenderMeshes).
	- Jorrit changed the array parameter in iShaderProgram->SetupState() to
	  const.
	- Jorrit also changed the array parameter in iShader to const.	To do
	  that I had to move the adding of the dynamic domain to the caller.
	- Jorrit reverted the optimization to avoid the construction of the
	  dynDomain array.  It was wrong.
	- Matze changed bison and flex jam rules to build into the out
	  directory instaead of the source directory and added a rule to copy
	  the generated files.
	- Marten made some more fixes to portals.
	- Eric Sunshine applied a patch from Randall Foreman
	  <eidpers@comcast.net> to allow AWS to be built with the Borland C++
	  compiler.  Specifically, Borland did not like class-scoped 'static
	  const int's being used in array declarations or 'case' statements.
	  Now instead uses 'enum' to declare constants.
	- Eric Sunshine made a bunch of Doxygen comment corrections in AWS
	  headers.
	- Jorrit clarified some Doxygen comments for iMovable.
	- Jorrit changed the shader compiler to give more verbose diagnostics
	  when -verbose commandline option is given.
	- res fixed sprcal3d to compile with OR again after his latest changes.
	- John Harger finally comitted the new particle system plugin.	Also
	  made some changes in render3d/opengl to allow for interleaved
	  renderbuffers.  Expect this plugin to be incomplete, and to change
	  often during the next few days/weeks.	 The interface shouldn't change
	  much, though.
8-Jan-2004
	- Jorrit moved include/ivideo/rendersteps directory to
	  include/iengine/rendersteps. Apparently this was forgotten during
	  the move from the renderloop stuff from plugins/video to
	  plugins/engine.
	- Jorrit avoided a number of virtual calls in the sector visibility
	  callback that is used for the new renderer (5 virtual calls per
	  object per frame).
	- Eric Sunshine added csgeom to library list for ptanimimg and stdpt
	  plugins to pacify Borland compiler which reports an unsatisfied
	  references to operator-(csVector2,csVector2).	 Reported by Randall
	  Foreman <eidpers@comcast.net>.
	- Marten Svanfeldt made the following fixes:
	    - Added a default constructor and initializer for
	      csPolyTextureMapping.
	    - Fixed a leak in csImageMemory.
	    - Write outside array in the loading from cache in genmesh.
	    - Fixed a leaking GDI resource in glwin (2d canvas for opengl).
	    - Fixed a few leaks in xmlshader.
	    - Fixed a leak in the glshader_ffp loader.
	- res made the following changes:
	    - Removed unused csRefHash class from csMaterial, changes
	      csMaterial to store shaders in a csHash<> instead of a csHashMap.
	    - Changed sprcal3d so the bounding box is properly updated when the
	      mesh animates.
	    - Added a 1-TU version of the OR lighting shader.  Still has issues
	      with transparency, tho.
	- Marten updated todo_newrenderer.txt
	- Philip Wyett eliminated warnings of init from int to float in
	  'include/imesh/thing/polygon.h'.
7-Jan-2004
	- Andrew Craig fixed the Jamfile for sprcal3dldr to link in the
	  required CAL3D library.
	- Jorrit did some cleanups on the imposter code.
	- Daniel Duhprey fixed scattering for 2 texture units for the terrain
	  engine.
	- Eric Sunshine updated configure.ac's Cal3D check to test for the very
	  recently added features required by sprcal3d.
	- Eric Sunshine fixed a syntax error in OPC_Collider.h which was
	  pointed out by Randall Foreman <eidpers@comcast.net>.	 For non-GCC,
	  it was declaring "virtual const char* ValidateSettings() = 0 {...}",
	  which is an obvious syntax error.
	- Eric Sunshine changed csjoywin.h so that it also #includes
	  <dinputdefs.h> since this is needed by Borland C++Builder.  Reported
	  by Randall Foreman <eidpers@comcast.net>.
	- Eric Sunshine fixed clean/distclean targets in cs.mak and Jamfile so
	  that they aslo clean up configure.lineno and config.status.lineno.
	- Eric Sunshine fixed a number of copy/paste errors in shadermgr.mak,
	  waterdemo.mak, and xmlshader.mak.
	- Eric Sunshine converted shadermgr.mak and xmlshader.mak to the new
	  format for makefiles.
	- Eric Sunshine fixed formatting of "help" messages in terrainldr.mak
	  and waterdemo.mak.
	- Eric Sunshine added xmlshader to user.mak.
	- Eric Sunshine added the auto-generated dinputdefs.h file to
	  joystick/csjoywin since it is needed by Borland C++Builder.
	  http://bbx.hp.infoseek.co.jp/dikeyboard.html
	  http://bbx.hp.infoseek.co.jp/archive/GetDIDF.zip
	  References provided by Randall Foreman <eidpers@comcast.net>.
	- John Harger added point sprite support to the NR for use in the
	  upcoming particle system plugin
6-Jan-2004
	- Eric Sunshine changed the libbfd check in configure.ac so that it is
	  not performed on Windows.  Newer versions of Mingw supply libbfd and
	  libiberty, and people did not like seeing these GPL-licensed
	  libraries mentioned in the link statement for plugin modules.	 (Note,
	  however, that in reality these libraries were not actually being
	  linked into plugin modules on Windows since there are no symbolic
	  references to libbfd or libiberty within the CS object files when
	  building on Windows, and linkers are smart enough to ignore libraries
	  which to which there are no symbolic references.)
	- Eric Sunshine changed the CS_CHECK_PROG_VERSION() Autoconf macro so
	  that it reports the discovered program's version in all cases.
	  Previously, it only reported the version number if the version check
	  failed.
	- Eric Sushine added missing forward declaration for csRandomGen to
	  imesh/spritecal3d.h.
	- Eric Sunshine added copy constructor and assignment operator to
	  csMatrix3.  Also moved implementation of axis-angle specifier
	  constructor to .cpp file.  Removed unnecessary 'inline' keywords.
5-Jan-2004
	- res fixed sprcal3d so render buffers are created correctly for
	  multi-mesh models.
	- Keith Fulton added more functionality to sprcal3d and updated
	  bbox calcs to be more efficient.   This requires cal3d cvs as
	  of Jan-04-04, or later.
	- Jorrit fixed a compile error in glrender3d.
	- Jorrit fixed a few occurances of 'crystalspace.renderer.stringset'
	  and replaced them with the correct 'crystalspace.shared.stringset'.
	- Eric Sunshine applied some changes to various headers and sources in
	  order to pacify Borland C++Builder based upon a list of compiler
	  diagnostic messages (and very loosely based upon a patch) provided by
	  Randall Foreman <eidpers@comcast.net>.
	- duhprey updated ODE so it now optionally updates on
	  cscmdPreProcess instead of calling Step
	- duhprey attemped to fix the sky in terrain on ATI cards (from
	  thebolt)
4-Jan-2004
	- Luca fixed a compilation error for the VC6 compiler.
	- res added the creation of a global string set to InitApplication().
	  Previously, code to create such string set could be found at multiple
	  places throughout CS.
	- Philip Wyett continued a general cleanup of CS code formatting.
	- Eric Sunshine changed the default Perl SDK option in configure.ac
	  from --with-perl to --without-perl since csperl5 still fails to build
	  on numerous platforms.
	- Jorrit removed a csReversibleTransform from genmesh objects. This
	  was added for the new renderer but was actually not used.
	- Jorrit optimized the ball mesh object in a similar manner by also
	  removing tr_o2c.
	- Jorrit optimized the thing mesh object in a similar manner by also
	  removing tr_o2c.
	- Jorrit optimized the spr3d mesh object in a similar manner by also
	  removing tr_o2c.
	- res fixed the stenciltest level from coming up black by including
	  the needed shaders in the material definition.
	- res made the following changes:
	    - Minor cosmetic change in initapp.h.
	    - Fixed csHash<>::GlobalIterator::Reset(): it failed to properly
	      skip to the first element to be returned.
	    - Made iShaderVariableAccessor a descendant of iBase (so it can be
	      refcounted.)
	    - Changed sprcal3d lighting to properly update when the sprite is
	      animated.
	    - Updated sprcal3d to work with NR.
	- res made sure the bounding box of sprcal3d objects is correct.
3-Jan-2004
	- Philip Wyett continued a general cleanup of CS code formatting.
	- Steven Geens fixed a very fatal typo in sprcal3dstate.
	- Steven Geens added a fast way to check the sockets of a cal3d sprite
	  in viewmesh.
	- res made the following changes:
	    - Enclosed the 'WINVER' #definition in win32/csosdefs.h in an
	      #ifdef, so an already (possibly user-)defined WINVER doesn't
	      cause problems.
	    - csRenderMesh was forward declared as 'class' at some places,
	      causing problems with VC7.
	    - Changed bugplug so the font used for text output is cached.
	    - Fixed the stencil plugin to fall back to a TinyXML docsys if no
	      iDocumentSystem is present for shader loading.
	    - Changed the generic render step to restore zOffset and zmode
	      after drawing a portal.
	    - The GL canvases now do a sanity check for the minimum required
	      OpenGL 1.1.
	    - Changed the GL font cache to change texture a bit less often.
	    - The currently active TU is now also managed by the GL state
	      manager.
	    - The GL state manager doesn't accept a TU parameter to
	      SetTexture() etc any more. Those functions now always use the
	      currently selected TU.
	    - Changed the NR GL ActivateTexture() to be a bit more sane. It
	      also tracked the currently bound texture, something the state
	      manager already did.
2-Jan-2004
	- Jorrit added an optimization to the portal container so that
	  a more optimal transfrom from camera->2D is used in case no
	  clipping is required at all.
	- Jorrit added PointOnPolygon() to iThingStatic to test if a point
	  is on a polygon.
	- Steven Geens added sockets to the cal3d XML loader.
	- Eric Sunshine made the following changes to the csperl5 module:
	    - Fixed fatal bug in perlpost.i's overrides of
	      csInitializer::RequestPlugins() and SetupEventHandler().	They
	      were incorrectly checking if the first argument was of type
	      iObjectRegistry reference _after_ they had already dereferenced
	      the argument, which meant that the reference type information had
	      already been thrown away.	 Thus, the tests _always_ failed.  The
	      iCollideSystem::GetCollisionPairs() override suffered from the
	      same bug when checking if its first argument was an
	      iCollideSystem reference.	 They now use the high-level
	      SWIG_ConvertPtr() to check the type and perform the dereference,
	      rather than low-level Perl API.
	    - Fixed fatal bug in perlpost.i's override of
	      csInitializer::RequestPlugins() where it completely ignored the
	      number of incoming arguments and requested plugins based upon
	      whatever random garbage existed in memory off the end of the Perl
	      argument stack following the last of the actual requested
	      plugins.
	    - Fixed fatal bug in perlpost.i's override of scfInitialize().  It
	      constructed its own argv[] array, but then sent zero (0) for argc
	      to the C++ scfInitialize(), thus it always appeared that there
	      were no arguments; not even the program path (argv[0]), which is
	      absolutely required by scfInitialize() for proper functioning.
	    - Fixed fatal bug in perlpre.i's "out" typemap for extracting the
	      object pointer from csRef<>, csPtr<>, and csWrapPtr<>.  The
	      typemap neglected to inform Perl that it was returning an object,
	      with the result that _all_ csRef<>, csPtr<>, and csWrapPtr<>
	      objects appeared to be invalid.
	    - Fixed fatal bug in perlpre.i's "out" typemap for extracting the
	      object pointer from a csWrapPtr<>.  It neglected to invoke
	      iBase__DynamicCast() to retrieve the pointer's _true_ value for
	      the given object's type.	This value can differ from the iBase
	      pointer value when multiple-inheritance is involved or when
	      embedding is involved.  Treating the iBase pointer as though it
	      was the actual object pointer was incredibly dangerous and often
	      incorrect.  The dynamic cast is mandatory.
	    - Fixed fatal bug in several perlpre.i's array-based "in" typemap
	      where they were checking if the incoming argument itself was an
	      array (an impossibility in Perl), whereas they needed to first
	      dereference the argument before checking the object's type.
	    - Fixed potentially fatal bug in numerous perlpost.i functions
	      which were using low-level Perl API (SvIV + blind cast) to
	      convert SWIG references into CS objects by attempting to manually
	      extract the object pointers from the references.	Unfortunately,
	      this simple approach was not always appropriate since it did not
	      replicate the deep Voodoo that Swig's own SWIG_ConvertPtr()
	      employs.	Changed all functions to use SWIG_ConvertPtr() instead.
	    - Fixed bug in numerous perlpost.i functions which were manually
	      and incorrectly constructing Swig references using low-level Perl
	      API (sv_setref_iv), rather than high-level Swig functionality.
	      Changed to use SWIG_MakePtr() instead.
	    - Fixed perlpost.i's csInitializer::RequestPlugins() override so
	      that it now invokes the C++ RequestPlugins() just once rather
	      than once per requested plugin since invoking it once per plugin
	      made it impossible for the C++ RequestPlugins() to perform proper
	      dependency resolution between requested plugins.
	    - Fixed bug in perlpost.i's scfGetVersion().  It was incorrectly
	      trying to call intfname_scfGetVersion() rather than
	      cspace::intfname::scfGetVersion().
	    - Fixed problem in perlpost.i's scfGetVersion() where it was
	      invoking call_pv() with the G_NOARGS flag.  Although legal, the
	      Swig-generated intfname::scfGetVersion() would sometimes throw an
	      exception because it would see arguments on the stack from some
	      other procedure further up in the call chain and think that the
	      arguments were meant for it (even though it is not expecting any
	      arguments).  Fixed by removing G_NOARGS from the invocation.
	    - Fixed bug in perlpost.i's CS_QUERY_REGISTRY() and
	      CS_QUERY_REGISTRY_TAG().	They were incorrectly managing the
	      reference count of the returned object when wrapping it inside
	      csWrapPtr<>, thus leaking a reference.
	    - Fixed bug in perlpost.i's WRAP_SCRIPT_CLASS()'s "in" typemap in
	      which it mismanaged the class' reference count, leading to
	      double-delete when the incoming object was of precisely the
	      script class' type (rather than a subclass, in which case the
	      reference count was managed correctly).
	    - Fixed perlpre.i's "in" typemap for argc/argv[] so that it is once
	      again utilized.  Problem was that Swig typemaps do not seem to
	      understand that 'const char*' and 'char const*' represent the
	      same type, and it also had the wrong signature (was missing a
	      'const').
	    - Fixed to %ignore the C++ scfInitialize(argc,argv) since a
	      Perl-specific scfInitialize() is provided by perlpost.i.
	    - Fixed problem which made it impossible to load the pure Perl
	      cspace module directly from Perl since it lacked a definition of
	      cs_static_var_cleanup which comes from the
	      CS_IMPLEMENT_STATIC_VARIABLE_CLEANUP macro.  Fixed this by
	      creating the new perl5mod.cpp which is linked only into the pure
	      Perl module; not into the csperl5 CS plugin.  This source file
	      contains goop needed by cspace.so (.dll), but not by csperl5.
	    - There is no possible way that this module could ever have worked
	      with all these (now fixed) fatal flaws present.  It seems that
	      this module had never been tested.  My testing was fairly limited
	      on account of minimal computing resources, so it is entirely
	      possible that other fatal flaws may yet manifest.
	- Eric Sunshine made the following changes to the cspython module:
	    - Fixed pythpost.i's csInitializer::RequestPlugins() override so
	      that it now invokes the C++ RequestPlugins() just once rather
	      than once per requested plugin since invoking it once per plugin
	      made it impossible for the C++ RequestPlugins() to perform proper
	      dependency resolution between requested plugins.
	    - Fixed bug in pythpost.i's _CS_QUERY_REGISTRY() and
	      _CS_QUERY_REGISTRY_TAG().	 They were incorrectly managing the
	      reference count of the returned object when wrapping it inside
	      csWrapPtr<>, thus leaking a reference.
	- Eric Sunshine made the following changes to the csjava module:
	    - Fixed bug in javapost.i's _CS_QUERY_REGISTRY() and
	      _CS_QUERY_REGISTRY_TAG().	 They were incorrectly managing the
	      reference count of the returned object when wrapping it inside
	      csWrapPtr<>, thus leaking a reference.
	- Eric Sunshine made the following changes to cspace.i:
	    - Fixed csInitializer::InitializeSCF() so that it is once again
	      recognized by Swig typemaps, thus the Python/Perl/Java typemaps
	      for this function once again work correctly.  Problem was that
	      Swig typemaps do not seem to understand that 'const char*' and
	      'char const*' represent the same type.
	    - Now publishes csArray<csPluginRequest>.
	    - Now publishes csInitializer::RequestPlugins(iObjectRegistry*,
	      csArray<csPluginRequest>).
	    - Eliminated the broken _RequestPlugin() interface published by
	      cspace.i.	 The problem with this approach was that it called the
	      C++ csInitializer::RequestPlugins() once per requested plugin,
	      rather than calling RequestPlugins() just once total, which is
	      the way RequestPlugins() is meant to be called.  By calling it
	      once per plugin, it was impossible for RequestPlugins() to
	      perform proper dependency resolution between requested plugins.
	    - Added CS_MINI_SWIG and CS_MICRO_SWIG defines to cspace.i.	 Define
	      one of these macros if you are trying to debug or test the
	      scripting build systems or the scripting facilities themselves
	      but despair of having to wait 30 minutes for each compile attempt
	      to complete.  Define CS_MINI_SWIG to avoid publishing most of the
	      CS interfaces except for csInitializer, object registry, VFS,
	      SCF, event queue & handlers, 2D & 3D drivers, and font & font
	      server.  This should cut compilation time down considerably.  If
	      this is still too long, however, then define CS_MICRO_SWIG, which
	      will publish only csInitializer, object registry, SCF, and VFS.
	      This is about the bare minimum of exports which are still useful
	      for testing various bits of functionality, and should reduce
	      compilation time as much as possible.  CS_MICRO_SWIG implies
	      CS_MINI_SWIG.
1-Jan-2004
	- Marten Svanfeldt made the first commit of 2004. Changes are:
	    - Added basic portal support to new renderer. It still lacks
	      support for <float> portals, fogs and a few other bits.
	    - Fixed clipping with the new renderer.
	    - Added portal sorting to the csRenderMesh sorting routines.
	- Jorrit changed iPortalContainer->Draw() so it no longer does
	  SCF_QUERY_INTERFACE to get the mesh wrapper (and movable) but
	  uses the movable parameter instead.
	- Jorrit reverted his latest change to iPortalContainer since
	  it appears the movable is not passed along. Nevertheless the
	  SCF_QUERY_INTERFACE should be avoided there so we need to
	  rethink this.
	- Marten provided the correct fix for the issue above. It is to use the
	  movable passed to DrawTest (through the transform stored in rmesh)
	- Jorrit performed a considerable optimization with the new renderer
	  by avoiding one or more SCF_QUERY_INTERFACE calls per object (per
	  frame) and in some cases a loop. This SCF_QUERY_INTERFACE was there
	  to get the z-buffer mode in the csRenderMesh structure (so the
	  mesh object implementation could get the z-buffer mode from the
	  mesh wrapper). Instead this is now done in
	  csRenderMeshList->AddRenderMeshes() where there was a loop over
	  all render meshes anyway and csRenderMeshList also has direct
	  access to the csMeshWrapper.
	  Note: this also fixes z-buffer mode for some mesh objects like
	  ball which simply assumed CS_ZBUF_USE in all cases.
	- Jorrit fixed a compile error in the new renderer terrain plugin.

Please see "history.old" for less recent historical entries.
