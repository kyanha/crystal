@c -*-texinfo-*-
@node Mingw, NeXT, Win32, Platform Instructions
@subsection Windows - Using Mingw Compiler

@noindent
@emph{Last updated, 24 March, 2001  by Philip Wyett, @email{philipwyett@@redeye-entertainment.co.uk}.}

These instructions are for building Crystal Space with Mingw - a @sc{gnu}
compiler for Windows.  There are many different versions of the @sc{gnu}
Windows compiler and problems arise with some Windows header files
containing non-standard code used by Microsoft, so we recommend
the Mingw compiler which is currently best supported by Crystal Space.

@subsubheading Necessary Resources

Download the following packages:

@itemize @bullet
@item
Crystal Space MingW package 'cs_mingw_0.15.exe' from the Mingw32 support directory at Linux Games
This package contains all the recent MingW package releases i.e. all the files necessary to compile
Crystal Space successfully.@*
@uref{http://www.3ddownloads.com/?directory=/linuxgames/crystal/support/mingw32/}

@item
@sc{nasm} (Netwide Assembler) for Windows @samp{nasm-0.98e-bin-w32.zip}@*
@uref{http://www.3ddownloads.com/?directory=/linuxgames/crystal/nasm/}
@end itemize

@subsubheading Installation

Follow these instructions to install the packages which you downloaded.

@itemize @bullet
@item
First install the Mingw compiler.  The file is a self extracting executable and will
create the 'mingw32' directory for you. So if you wish to install it to your
c:\ drive as c:\mingw32\*, extract the archive to c:\.

The following instructions assume you have the MingW package installed in c:\mingw32

@item
Unzip the @sc{nasm} archive files and copy the @file{.exe} files into
@file{c:\mingw32\bin}.

@item
Adjust your @samp{PATH} environment variable.  On Windows 95 and 98 edit the
@file{c:\autoexec.bat} file add the following entries.

@example
SET PATH=c:\mingw32\bin
@end example

You must also add the following variable, so that GCC can find the @samp{Python} header files.

@example
set PYTHON_INC=c:\mingw32\include
@end example

@noindent
On Windows @sc{nt} and Windows 2000, use the System control panel to edit the
environment variable.

If you fail to do so, then the makedep tool will not know where to look for
Mingw32's system include files, and will emit a lot of warnings.

@item
Reboot your computer.
@end itemize

@subsubheading Building

From within the Crystal Space directory (@file{CS\}), run the @samp{make}
command and follow the instructions.  Typically, you would issue the following
commands:

@example
make win32gcc MODE=debug

make depend

make all
@end example

Note that making the @samp{depend} target is not absolutely required.  If
doing so presents problems, then you can safely omit it:

@example
make win32gcc MODE=debug

make all
@end example

@subsubheading Additional command line compile parameters

Adding @samp{clean} to the compile command line e.g.:

make clean all

Will instruct and perform a cleanout of all object files, link libraries etc. from
the @samp{out\WIN32\INTEL\debug} directory.

Adding @samp{-k} to the compile command line e.g.:

make -k all

Will instruct the compiler to ignore errors and continue compiling regardless.

@subsubheading Customizing

You may need to customize settings in @file{CS\libs\cssys\win32\win32gcc.mak},
the Mingw32 makefile.  Check the following variables:

@itemize @bullet
@item
@code{LIBS.GL3D.SYSTEM}
@item
@code{LIBS.SOCKET.SYSTEM}
@item
@code{LIBS.SOUND.SYSTEM}
@end itemize

Adjust them to match your system libraries.  For example, if you use the
@sc{sgi} OpenGL @sc{sdk} instead of Microsoft's OpenGL, change
@samp{-lopengl32} and @samp{-lglut32} to @samp{-lopengl} and @samp{-lglut} in
@samp{LIBS.GL3D.SYSTEM}.  Also in the file @file{CS\mk\user.mak} select which
plugins you wish to compile.
