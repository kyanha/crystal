@c -*-texinfo-*-
@node Plug-In Drivers, Internals, Libraries, Top
@chapter Plug-In Modules and Drivers
@cindex Plug-In Modules and Drivers
@cindex Modules, Plug-In
@cindex Drivers

This chapter discusses plug-in modules and drivers which are bundled with
Crystal Space.  Applications make use of plug-in modules and drivers in order
to accomplish a variety of tasks such as communicating with 3D display
hardware or retrieving information about the mouse or keyboard.  Other
plug-in modules may provide higher-level facilities such as scripting
language support or a textual console display.

Drivers are actually a subset of the broader classification of plug-in module.
They are often considered distinct since they provide a lower-level foundation
upon which higher-level application functionality is built, but the actual
mechanism by which drivers interact with the application is identical to
that which is used by all other plug-in modules.

The mechanism by which communication is carried out with plug-in modules and
drivers is known as @sc{scf} (@pxref{SCF}), but plug-ins are actually more than
that because they work together with the system driver.  You can find all
information you need in the introduction to the simple tutorial
(@pxref{Tutorial Introduction}).

@menu
* Plug-In Overview:: Quick Overview
* VFS:: Virtual File System (@sc{vfs})
* Graphics Drivers::
* Sound Drivers::
* Network Drivers::
* csEngine:: The 3D Engine (@code{csEngine})
* csParser:: The Map File Parser (@code{csParser})
* XML File Format:: Format of Map File (XML)
* MeshObject:: Mesh Object Plug-In System
* csPython::
* Animation::
* Model Conversion:: Importing Model Files
* AWS:: Alternate Windowing System (@sc{aws})
@end menu

@imports{plugins,overview.txi}
@imports{plugins,vfs.txi}
@importss{plugins,graphics,graphics.txi}
@imports{plugins,sound.txi}
@imports{plugins,network.txi}
@importss{plugins,engine,engine.txi}
@imports{plugins,csparser.txi}
@importss{plugins,meshobj,meshobj.txi}
@imports{plugins,python.txi}
@importss{plugins,anim,anim.txi}
@imports{plugins,model.txi}
@importss{plugins,aws,aws.txi}
