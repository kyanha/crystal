@c -*-texinfo-*-
@node API Modifications 18, API Modifications 17, API Modifications, API Modifications
@appendixsec @sc{api} Changes from 0.17 to 0.18
@cindex @sc{api} Changes

This section documents the major changes between versions 0.17 and 0.18 of of
Crystal Space.

@subheading Name Change: @code{csWorld} to @code{csEngine}
@cindex @code{csWorld}
@cindex @code{csEngine}
@cindex @code{iWorld}
@cindex @code{iEngine}

The class @code{csWorld} has been renamed to @code{csEngine}.  Here is a
summary of all the changes which result from this:

@itemize @bullet
@item
@code{iWorld} becomes @code{iEngine}
@item
@code{csWorld} becomes @code{csEngine}
@item
@code{csWorldConfig} becomes @code{csEngineConfig}
@item
@code{csWorldState} becomes @code{csEngineState}
@item
@code{csWorldStateVector} becomes @code{csEngineStateVector}
@item
@code{iworld.h} becomes @code{iengine.h}
@item
@code{world.h} becomes @code{engine.h}
@end itemize

@subheading Signature Change: @code{AdvanceSpriteFrames()}
@cindex @code{AdvanceSpriteFrames()} Changes
@cindex @code{NextFrame()} Changes

The @code{csEngine::AdvanceSpriteFrames()} method has been renamed to
@code{NextFrame()}.  In addition @code{UpdateParticleSystems()} has been
removed and is now also handled by @code{csEngine::NextFrame()}.

@subheading Configuration File Changes
@cindex Configuration Files

The configuration file format has changed significantly. @@@@@@TODO

@subheading Mesh Object Plug-ins
@cindex Mesh Object Plug-ins
@cindex csSprite3D
@cindex csSprite2D
@cindex Particle Systems

@@@@@@TODO

@subheading @code{csPixmap} Moved and Renamed
@cindex @code{csPixmap}
@cindex @code{csSimplePixmap}

@samp{csPixmap} has moved to the new @file{csfx} library, so you will need to
include the header file from that library.  Note that @samp{csPixmap} is now
also an abstract class so where you would, in the past, instantiate
@samp{csPixmap}, you now need to instantiate @samp{csSimplePixmap}, instead.
In arguments and variables it is recommended you still use @samp{csPixmap} as
it will allow you to use other kinds of pixmaps there, as well.

@subheading General Use of @sc{scf} Interfaces
@cindex @sc{scf} interfaces

In general it is now a good idea to use @sc{scf} interfaces to access objects
instead of the normal classes wherever possible.  This applies mostly to the
engine (i.e. use methods from @samp{iEngine} rather than @samp{csEngine}).
Consequently, also use @samp{iMeshWrapper} instead of @samp{csMeshWrapper}, and
@samp{iMaterialWrapper} instead of @samp{csMaterialWrapper}, and so on.  This
will make the transition to version 1.0 easier when the engine will be fully
accessible as a plugin.
