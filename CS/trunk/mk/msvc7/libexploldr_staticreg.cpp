// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_exploldr[] =
"<?xml version=\"1.0\"?>"
"<!-- exploldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.explosion</name>"
"        <implementation>csExplosionLoader</implementation>"
"        <description>Crystal Space Explosion Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.explosion</name>"
"        <implementation>csExplosionFactoryLoader</implementation>"
"        <description>Crystal Space Explosion Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.explosion</name>"
"        <implementation>csExplosionSaver</implementation>"
"        <description>Crystal Space Explosion Mesh Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.explosion</name>"
"        <implementation>csExplosionFactorySaver</implementation>"
"        <description>Crystal Space Explosion Factory Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csExplosionLoader_FACTORY_REGISTER_DEFINED 
  #define csExplosionLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csExplosionLoader) 
  #endif
  #ifndef csExplosionFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csExplosionFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csExplosionFactoryLoader) 
  #endif
  #ifndef csExplosionSaver_FACTORY_REGISTER_DEFINED 
  #define csExplosionSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csExplosionSaver) 
  #endif
  #ifndef csExplosionFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csExplosionFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csExplosionFactorySaver) 
  #endif

class exploldr
{
SCF_REGISTER_STATIC_LIBRARY(exploldr,metainfo_exploldr)
  #ifndef csExplosionLoader_FACTORY_REGISTERED 
  #define csExplosionLoader_FACTORY_REGISTERED 
    csExplosionLoader_StaticInit csExplosionLoader_static_init__; 
  #endif
  #ifndef csExplosionFactoryLoader_FACTORY_REGISTERED 
  #define csExplosionFactoryLoader_FACTORY_REGISTERED 
    csExplosionFactoryLoader_StaticInit csExplosionFactoryLoader_static_init__; 
  #endif
  #ifndef csExplosionSaver_FACTORY_REGISTERED 
  #define csExplosionSaver_FACTORY_REGISTERED 
    csExplosionSaver_StaticInit csExplosionSaver_static_init__; 
  #endif
  #ifndef csExplosionFactorySaver_FACTORY_REGISTERED 
  #define csExplosionFactorySaver_FACTORY_REGISTERED 
    csExplosionFactorySaver_StaticInit csExplosionFactorySaver_static_init__; 
  #endif
public:
 exploldr();
};
exploldr::exploldr() {}

}
