// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_sndsoft[] =
"<?xml version=\"1.0\"?>"
"<!-- sndsoft.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.sound.render.software</name>"
"        <implementation>csSoundRenderSoftware</implementation>"
"        <description>Software Sound Renderer for Crystal Space</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csSoundRenderSoftware_FACTORY_REGISTER_DEFINED 
  #define csSoundRenderSoftware_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csSoundRenderSoftware) 
  #endif

class sndsoft
{
SCF_REGISTER_STATIC_LIBRARY(sndsoft,metainfo_sndsoft)
  #ifndef csSoundRenderSoftware_FACTORY_REGISTERED 
  #define csSoundRenderSoftware_FACTORY_REGISTERED 
    csSoundRenderSoftware_StaticInit csSoundRenderSoftware_static_init__; 
  #endif
public:
 sndsoft();
};
sndsoft::sndsoft() {}

}
