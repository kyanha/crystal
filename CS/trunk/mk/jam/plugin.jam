#============================================================================
# Rules for plugin creation
#============================================================================

##  Plugin pluginname : sources [ : options ]
##    Build a plugin out of sourcefiles. All sourcefiles will be passed
##    to the Objects rule which tries to compile them into object-files. You
##    can create rules for your own filetypes with the UserObject rule. Header
##    files will just be ignored. They are only used for MSVC projectfile
##    generator.
##    You can specify the noinstall option if you don't want that an install
##    target is created.
##    Don't specify any extensions for the plugin. If you have sourcefiles in
##    subdirectories, then you'll need to use the SearchSubdir rule. Don't
##    mention the subdirectory name again for the sourcefiles.
rule Plugin
{
  # process options
  _Options $(<) : $(3) ;

  # filter headers
  local sources  = [ DoSourceGrist $(>) ] ;

  # rules for compiling the source files
  $(<)_type = plugin ;
  $(<)_target = [ FAppendSuffix $(<) : $(SUFPLUGIN) ] ;
  $(<)_objects = [ CompileObjects $(sources) ] ;
  CFlags $(<) : $(PLUGIN.CFLAGS) ;
  # XXX: not sure why we have to mention LINKLIBS again, somehow the +=
  # operator doesn't use the LINKLIBS var, while it seems doing so for
  # CFLAGS ?!?
  LFlags $(<) : $(LINKLIBS) $(PLUGIN.LFLAGS) ;

  PluginFromObjects $(<) : $($(<)_objects) ;

  # Create a target for eventual static linking
  SubVariant static ;
  Library $(<)_static : $(>) : $(3) independent ;
  CFlags $(<)_static : -DCS_STATIC_LINKED ;
  LFlags $(<)_static : $(LINKLIBS) ;
  SubVariant ;
}

#----------------------------------------------------------------------------
# private rules

rule PluginFromObjects
{
  local souces target ;
  
  target = $($(<)_target) ;
  
  # create a simple meta target (ie. csutil instead of libcsutil.a)
  if $(target) != $(<)
  {
    Depends $(<) : $(target) ;
    NotFile $(<) ;
  }

  if ! $($(<)_INDEPENDENT)
  {
    Depends plugins : $(target) ;
  }
  Depends $(target) : $(>) ;

  MakeLocate $(target) : $(LOCATE.TARGETS) ;

  # Install rules
  if ! $(DONTINSTALL_$(<))
  {
    InstallPlugin $(target) ;  
  }

  # Construct Clean Target
  Clean clean : $(target) ;
  Clean $(<)clean : $(target) $(>) ;

  # Invoke Link rule
  NAME on $(target) = $(<) ;
  LinkPlugin $(target) : $(>) ;
}

# Construct pseudo target plugins
Depends exe : plugins ;
NotFile plugins ;

