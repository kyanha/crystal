#============================================================================
# Jam configuration and actions for Win32
#============================================================================
SUFPLUGIN ?= .dll ;

SHELL ?= "/bin/sh" ;

NASM.FLAGS += -f win32 -DEXTERNC_UNDERSCORE ;
CCFLAGS += -pipe -I/usr/include/directx ;
C++FLAGS += -pipe -I/usr/include/directx ;
LINKLIBS += -L/usr/lib/w32api -lgdi32 -lshell32 ;

WAVEOUT.AVAILABLE = yes ;
WAVEOUT.LFLAGS = -ldsound -lwinmm ;

actions LinkPlugin bind NEEDLIBS
{
  $(SHELL) $(TOP)/libs/cssys/win32/mkverres.sh $(TEMP)/$(NAME:B)version.rc "$($(NAME)_help)" $(TOP)/include/csver.h
  $(SHELL) $(TOP)/libs/cssys/win32/mergeres.sh $(TEMP)/$(NAME:B)resource.rc $(TOP) $(TOP) $(TEMP)/$(NAME:B)version.rc $($(NAME:B)_WIN32RESOURCE)
  windres --use-temp-file --include-dir $(BUILDTOP)/include --include-dir $(TOP)/include $(RCFLAGS) -i $(TEMP)/$(NAME:B)resource.rc -o $(TEMP)/$(NAME:B)resource.o

  echo "EXPORTS">$(TEMP)/$(NAME:B).def
  echo "	$(NAME:B)_scfInitialize">>$(TEMP)/$(NAME:B).def
  echo "	$(NAME:B)_scfFinalize">>$(TEMP)/$(NAME:B).def
  echo "	plugin_compiler">>$(TEMP)/$(NAME:B).def

  dllwrap --driver-name=$(CMD.LINK) --dllname $(NAME:B) --def=$(TEMP)/$(NAME:B).def -o $(<) $(TEMP)/$(NAME:B)resource.o $(>) $(NEEDLIBS) $(ADDLIBS) $(LINKLIBS) -mwindows -mconsole
  rm -f $(TEMP)/$(NAME:B)version.rc $(TEMP)/$(NAME:B)resource.rc $(TEMP)/$(NAME:B).def $(TEMP)/$(NAME:B)resource.o
}

actions LinkApplication bind NEEDLIBS
{
  $(SHELL) $(TOP)/libs/cssys/win32/mkverres.sh $(TEMP)/$(NAME:B)version.rc "$($(NAME)_help)" $(TOP)/include/csver.h
  $(SHELL) $(TOP)/libs/cssys/win32/mergeres.sh $(TEMP)/$(NAME:B)resource.rc $(TOP) $(TOP) $(TEMP)/$(NAME:B)version.rc $($(NAME:B)_WIN32RESOURCE)
  windres --use-temp-file --include-dir $(BUILDTOP)/include --include-dir $(TOP)/include $(RCFLAGS) -i $(TEMP)/$(NAME:B)resource.rc -o $(TEMP)/$(NAME:B)resource.o

  $(CMD.LINK) -o $(<) $(TEMP)/$(NAME:B)resource.o $(>) $(NEEDLIBS) $(LINKLIBS) $(ADDLIBS) $(LIBS.EXE)
  rm -f $(TEMP)/$(NAME:B)version.rc $(TEMP)/$(NAME:B)resource.rc $(TEMP)/$(NAME:B)resource.o
}

rule LinkApplicationConsole
{
  LinkApplication $(<) : $(>) ;
}
