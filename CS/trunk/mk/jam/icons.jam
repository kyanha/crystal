if $(CMD.RSVG) != ""
{
  rule IconSVG
  {
    local icon = $(1) ;
    local iconfile = $(icon).svg ;
    local svgscalabledir = [ ConcatDirs $(TOP) $(SUBDIR) icons-src scalable ] ;
    local svgsource = $(iconfile:G=$(svgscalabledir)) ;
    LOCATE on $(svgsource) = $(svgscalabledir) ;
    SEARCH on $(svgsource) = $(svgscalabledir) ;
    
    NotFile generateicons ;
    
    local size ;
    # 16 - Windows small icon (Window menu, start menu)
    # 22 - Small icon for KDE and GNOME menus
    # 24 - Small icon for GNOME file lists(*)
    # 32 - Normal icon for Windows
    # 48 - Large icon for Windows XP
    # 128 - Some Windows Explorer alternatives use that(**)
    # 256 - Windows Vista icon(**)
    #
    # * - Can be generated from 22x22 pics by adding a border.
    # ** - Cause icon files to be really large. Vista supports PNG compression
    #      in icons and uses it for the 256x256 versions. Problem: resource
    #      compilers don't support that yet.
    for size in 16 22 32 48
    {
      local pngdir = [ ConcatDirs $(SUBDIR) icons $(size) ] ;
      local pngfile = $(icon:G=$(pngdir)).png ;
      MakeLocate $(pngfile) : $(pngdir) ;
      
      SIZE on $(pngfile) = $(size) ;
      Depends $(pngfile) : $(svgsource) ;
      CreateIcon $(pngfile) : $(svgsource) ;
      
      Depends generateicons : $(pngfile) ;
      Always $(pngfile) ;
    }
    
    # size 24 icons are a special case, see above
    local pngdir = [ ConcatDirs $(SUBDIR) icons 24 ] ;
    local pngfile = $(icon:G=$(pngdir)).png ;
    if $(CMD.CONVERT) != ""
    {
      MakeLocate $(pngfile) : $(pngdir) ;
      Depends $(pngfile) : $(svgsource) ;
      CreateIcon24 $(pngfile) : $(svgsource) ;
      
      Depends generateicons : $(pngfile) ;
      Always $(pngfile) ;
    }
    else
    {
      Echo "ImageMagick not available, $(pngfile) not regenerated" ;
    }
  }
  
  actions CreateIcon
  {
    SIZEDICONSSRC=`dirname $(>)`/../$(SIZE)
    ICONBASE=`basename $(>) .svg`
    if [ -e $SIZEDICONSSRC/$ICONBASE.png ] ; then
      $(CP) $SIZEDICONSSRC/$ICONBASE.png $(<)
    elif [ -e $SIZEDICONSSRC/$ICONBASE.svg ] ; then
      $(CMD.RSVG) -f png -w $(SIZE) -h $(SIZE)  $SIZEDICONSSRC/$ICONBASE.svg $(<)
    else
      $(CMD.RSVG) -f png -w $(SIZE) -h $(SIZE)  $(>) $(<)
    fi
  }
  
  actions CreateIcon24
  {
    SIZEDICONSSRC=`dirname $(>)`/../24
    ICONBASE=`basename $(>) .svg`
    GENSIZEDICONSSRC=`dirname $(<)`/../22
    if [ -e $SIZEDICONSSRC/$ICONBASE.png ] ; then
      $(CP) $SIZEDICONSSRC/$ICONBASE.png $(<)
    elif [ -e $SIZEDICONSSRC/$ICONBASE.svg ] ; then
      $(CMD.RSVG) -f png -w 24 -h 24  $SIZEDICONSSRC/$ICONBASE.svg $(<)
    else
      convert -bordercolor Transparent -border 1x1 $GENSIZEDICONSSRC/$ICONBASE.png $(<)
    fi
  }
}
else
{
  rule IconSVG { }
}
