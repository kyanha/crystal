[% FILTER null;
#==============================================================================
# TemplateToolkit2 CrystalSpace customizations for MSVC project generation
# Copyright (C) 2004 by Eric Sunshine <sunshine@sunshineco.com>
#
#    This library is free software; you can redistribute it and/or modify it
#    under the terms of the GNU Library General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or (at your
#    option) any later version.
#
#    This library is distributed in the hope that it will be useful, but
#    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Library General Public
#    License for more details.
#
#    You should have received a copy of the GNU Library General Public License
#    along with this library; if not, write to the Free Software Foundation,
#    Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#==============================================================================

#------------------------------------------------------------------------------
# Crystal Space adds several additional build configurations to the default set
# provided by the generic, project-agnostic builds[] array (control.tlib).
#------------------------------------------------------------------------------
builds = builds.merge([
  {
    tag => 'release',
    name => 'Release_OR',
    defines => ['NDEBUG','CS_USE_OLD_RENDERER'],
    defineskey => 'define',
    cflagskey => 'cflags',
    lflagskey => 'lflags',
    libskey => 'library',
    priority => 300
  },
  {
    tag => 'debug',
    name => 'Debug_OR',
    defines => ['_DEBUG','CS_DEBUG','CS_USE_OLD_RENDERER'],
    defineskey => 'definedebug',
    cflagskey => 'cflagsdebug',
    lflagskey => 'lflagsdebug',
    libskey => 'librarydebug',
    priority => 400
  },
  {
    tag => 'debug',
    name => 'ExtensiveMemDebug',
    defines => ['_DEBUG','CS_DEBUG','CS_EXTENSIVE_MEMDEBUG'],
    defineskey => 'definedebug',
    cflagskey => 'cflagsdebug',
    lflagskey => 'lflagsdebug',
    libskey => 'librarydebug',
    priority => 500
  },
  {
    tag => 'debug',
    name => 'ExtensiveMemDebug_OR',
    defines => ['_DEBUG','CS_DEBUG','CS_USE_OLD_RENDERER',
		'CS_EXTENSIVE_MEMDEBUG'],
    defineskey => 'definedebug',
    cflagskey => 'cflagsdebug',
    lflagskey => 'lflagsdebug',
    libskey => 'librarydebug',
    priority => 600
  }]);

END %]
