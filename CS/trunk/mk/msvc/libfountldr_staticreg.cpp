// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_fountldr[] =
"<?xml version=\"1.0\"?>"
"<!-- fountldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.fountain</name>"
"        <implementation>csFountainFactoryLoader</implementation>"
"        <description>Crystal Space Fountain Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.fountain</name>"
"        <implementation>csFountainLoader</implementation>"
"        <description>Crystal Space Fountain Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.fountain</name>"
"        <implementation>csFountainFactorySaver</implementation>"
"        <description>Crystal Space Fountain Factory Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.fountain</name>"
"        <implementation>csFountainSaver</implementation>"
"        <description>Crystal Space Fountain Mesh Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csFountainFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csFountainFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFountainFactoryLoader) 
  #endif
  #ifndef csFountainLoader_FACTORY_REGISTER_DEFINED 
  #define csFountainLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFountainLoader) 
  #endif
  #ifndef csFountainFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csFountainFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFountainFactorySaver) 
  #endif
  #ifndef csFountainSaver_FACTORY_REGISTER_DEFINED 
  #define csFountainSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFountainSaver) 
  #endif

class fountldr
{
SCF_REGISTER_STATIC_LIBRARY(fountldr,metainfo_fountldr)
  #ifndef csFountainFactoryLoader_FACTORY_REGISTERED 
  #define csFountainFactoryLoader_FACTORY_REGISTERED 
    csFountainFactoryLoader_StaticInit csFountainFactoryLoader_static_init__; 
  #endif
  #ifndef csFountainLoader_FACTORY_REGISTERED 
  #define csFountainLoader_FACTORY_REGISTERED 
    csFountainLoader_StaticInit csFountainLoader_static_init__; 
  #endif
  #ifndef csFountainFactorySaver_FACTORY_REGISTERED 
  #define csFountainFactorySaver_FACTORY_REGISTERED 
    csFountainFactorySaver_StaticInit csFountainFactorySaver_static_init__; 
  #endif
  #ifndef csFountainSaver_FACTORY_REGISTERED 
  #define csFountainSaver_FACTORY_REGISTERED 
    csFountainSaver_StaticInit csFountainSaver_static_init__; 
  #endif
public:
 fountldr();
};
fountldr::fountldr() {}

}
