// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_rendstep_fatrl[] =
"<?xml version=\"1.0\"?>"
"<!-- rendstep_fatrl.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.renderloop.step.fatloop</name>"
"        <implementation>csFatLoopLoader</implementation>"
"        <description>Fat render loop step</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"      <class>"
"        <name>crystalspace.renderloop.step.fatloop.type</name>"
"        <implementation>csFatLoopType</implementation>"
"        <description>Fat render loop step type</description>"
"        <requires>"
"          <class>crystalspace.graphics3d.</class>"
"        </requires>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csFatLoopLoader_FACTORY_REGISTER_DEFINED 
  #define csFatLoopLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFatLoopLoader) 
  #endif
  #ifndef csFatLoopType_FACTORY_REGISTER_DEFINED 
  #define csFatLoopType_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csFatLoopType) 
  #endif

class rendstep_fatrl
{
SCF_REGISTER_STATIC_LIBRARY(rendstep_fatrl,metainfo_rendstep_fatrl)
  #ifndef csFatLoopLoader_FACTORY_REGISTERED 
  #define csFatLoopLoader_FACTORY_REGISTERED 
    csFatLoopLoader_StaticInit csFatLoopLoader_static_init__; 
  #endif
  #ifndef csFatLoopType_FACTORY_REGISTERED 
  #define csFatLoopType_FACTORY_REGISTERED 
    csFatLoopType_StaticInit csFatLoopType_static_init__; 
  #endif
public:
 rendstep_fatrl();
};
rendstep_fatrl::rendstep_fatrl() {}

}
