// This file is automatically generated.
#include "cssysdef.h"
#include "csutil/scf.h"

// Put static linking stuff into own section.
// The idea is that this allows the section to be swapped out but not
// swapped in again b/c something else in it was needed.
#if !defined(CS_DEBUG) && defined(CS_COMPILER_MSVC)
#pragma const_seg(".CSmetai")
#pragma comment(linker, "/section:.CSmetai,r")
#pragma code_seg(".CSmeta")
#pragma comment(linker, "/section:.CSmeta,er")
#pragma comment(linker, "/merge:.CSmetai=.CSmeta")
#endif

namespace csStaticPluginInit
{
static char const metainfo_ballldr[] =
"<?xml version=\"1.0\"?>"
"<!-- ballldr.csplugin -->"
"<plugin>"
"  <scf>"
"    <classes>"
"      <class>"
"        <name>crystalspace.mesh.loader.ball</name>"
"        <implementation>csBallLoader</implementation>"
"        <description>Crystal Space Ball Mesh Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.loader.factory.ball</name>"
"        <implementation>csBallFactoryLoader</implementation>"
"        <description>Crystal Space Ball Factory Loader</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.ball</name>"
"        <implementation>csBallSaver</implementation>"
"        <description>Crystal Space Ball Mesh Saver</description>"
"      </class>"
"      <class>"
"        <name>crystalspace.mesh.saver.factory.ball</name>"
"        <implementation>csBallFactorySaver</implementation>"
"        <description>Crystal Space Ball Factory Saver</description>"
"      </class>"
"    </classes>"
"  </scf>"
"</plugin>"
;
  #ifndef csBallLoader_FACTORY_REGISTER_DEFINED 
  #define csBallLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csBallLoader) 
  #endif
  #ifndef csBallFactoryLoader_FACTORY_REGISTER_DEFINED 
  #define csBallFactoryLoader_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csBallFactoryLoader) 
  #endif
  #ifndef csBallSaver_FACTORY_REGISTER_DEFINED 
  #define csBallSaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csBallSaver) 
  #endif
  #ifndef csBallFactorySaver_FACTORY_REGISTER_DEFINED 
  #define csBallFactorySaver_FACTORY_REGISTER_DEFINED 
    SCF_DEFINE_FACTORY_FUNC_REGISTRATION(csBallFactorySaver) 
  #endif

class ballldr
{
SCF_REGISTER_STATIC_LIBRARY(ballldr,metainfo_ballldr)
  #ifndef csBallLoader_FACTORY_REGISTERED 
  #define csBallLoader_FACTORY_REGISTERED 
    csBallLoader_StaticInit csBallLoader_static_init__; 
  #endif
  #ifndef csBallFactoryLoader_FACTORY_REGISTERED 
  #define csBallFactoryLoader_FACTORY_REGISTERED 
    csBallFactoryLoader_StaticInit csBallFactoryLoader_static_init__; 
  #endif
  #ifndef csBallSaver_FACTORY_REGISTERED 
  #define csBallSaver_FACTORY_REGISTERED 
    csBallSaver_StaticInit csBallSaver_static_init__; 
  #endif
  #ifndef csBallFactorySaver_FACTORY_REGISTERED 
  #define csBallFactorySaver_FACTORY_REGISTERED 
    csBallFactorySaver_StaticInit csBallFactorySaver_static_init__; 
  #endif
public:
 ballldr();
};
ballldr::ballldr() {}

}
