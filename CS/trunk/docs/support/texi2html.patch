--- texi2html.pl.unpatched	2007-04-09 17:35:03.000000000 +0200
+++ texi2html.pl	2007-04-09 18:50:24.000000000 +0200
@@ -1,4 +1,4 @@
-#! @PERL@
+#! /usr/bin/perl
 'di ';
 'ig 00 ';
 #+##############################################################################
@@ -32,8 +32,11 @@
 use strict;
 # used in case of tests, to revert to "C" locale.
 use POSIX qw(setlocale LC_ALL LC_CTYPE);
+# used to obtain the name of the current working directory
+use Cwd;
 # used to find a relative path back to the current working directory
 use File::Spec;
+
 #
 # According to
 # larry.jones@sdrc.com (Larry Jones)
@@ -71,7 +74,7 @@
 EOT
 
 # Version: set in configure.in
-my $THISVERSION = '@PACKAGE_VERSION@';
+my $THISVERSION = '1.76';
 my $THISPROG = "texi2html $THISVERSION"; # program name and version
 
 # set by configure, prefix for the sysconfdir and so on
@@ -2360,17 +2363,6 @@
 # file name buisness
 #
 
-# this is directly pasted over from latex2html
-sub getcwd
-{
-    local($_) = `pwd`;
-
-    die "'pwd' failed (out of memory?)\n"
-        unless length;
-    chop;
-    $_;
-}
-
 
 my $docu_dir;            # directory of the document
 my $docu_name;           # basename of the document
@@ -2500,7 +2492,7 @@
 my $path_to_working_dir = $docu_rdir;
 if ($docu_rdir ne '')
 {
-    my $cwd = getcwd;
+    my $cwd = cwd;
     my $docu_path = $docu_rdir;
     $docu_path = $cwd . '/' . $docu_path unless ($docu_path =~ /^\//);
     my @result = ();
@@ -3037,7 +3029,7 @@
     }
     else
     {
-        if (main::getcwd() =~ /\./)
+        if (cwd() =~ /\./)
         {
             warn "$ERROR Warning l2h: current dir contains a dot. Use /tmp as l2h_tmp dir \n";
             $dotbug = 1;
@@ -3688,6 +3680,7 @@
                             $node_ref->{'current_place'} = [];
                             merge_element_before_anything($node_ref);
                             $node_ref->{'index_names'} = [];
+                            $node_ref->{'counter'} = 0;
                             $state->{'place'} = $node_ref->{'current_place'};
                             $state->{'element'} = $node_ref;
                             $state->{'after_element'} = 1;
@@ -3750,7 +3743,16 @@
                         {
                             $sec_num++;
                             $num = $sec_num;
-                            $docid = "SEC$sec_num";
+                            if ($Texi2HTML::Config::NODE_FILES)
+                            {
+                              $docid = $state->{'node_ref'}->{'counter'};
+                              $state->{'node_ref'}->{'counter'}++;
+			    }
+			    else
+			    {
+                              $docid = "SEC$sec_num";
+                              $num = $state->{'node_ref'}->{'counter'};
+			    }
                         }
                         else
                         {
@@ -4420,7 +4422,12 @@
             my $toplevel_number = $previous_numbers[$toplevel];
             $toplevel_number = 0 if (!defined($toplevel_number));
             $section->{'number'} = "$toplevel_number.$section->{'number'}";
+	    $section->{'id'} = $section->{'number'} unless $Texi2HTML::Config::NODE_FILES;
         }
+	else
+	{
+	    $section->{'id'} = $section->{'texi'} unless $Texi2HTML::Config::NODE_FILES;
+	}
         # find the previous section
         if (defined($previous_sections[$section->{'level'}]))
         {
