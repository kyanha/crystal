The Big 1.0 TODO List:

Every bug is classified with a few modifiers to indicate
the bad effect they have on CS. The following modifiers
can be given:
	- V: visual effect. This means that solving this bug
	  or implementing this feature would improve how the engine looks.
	- S: stability. This bug causes loss of stability.
	  Solving this bug will cause CS to be more stable.
	- F: feature. This means some feature isn't implemented properly
	  or implementation is missing completely.
	- O: organization and other. An organizational change or something
	  else.
	- **: bug or feature has been fixed or implemented.

Bugs to fix:
	[S]  Investigate if there are any more memory leaks after
	     unloading a level and if so fix them.
	     This can most easily be done by using the debug graph in
	     CS. To enable this just edit include/csutil/debug.h and
	     remove the comment ('//') right before the define of
	     CS_USE_GRAPHDEBUG. Then recompile.
	[V]  Shoot a missile in hole in flarge. The walls of the hole
	     become lit ok then but revert to full bright after missile
	     particles have disappeared. Only with OpenGL.
	[V]  It seems that pseudo-dynamic lighting is not working
	     correctly. In flarge you can see that near the stairs
	     some polygons are not updated when the dynamic light
	     changes intensity/color.
	[V]  Investigate various visible artifacts in the mazedex
	     level.
	[V]  Static lighting no longer goes through space-warping
	     portals.
	[F]  Investigate if PlaceMesh() works correctly. I suspect it
	     doesn't. May be related to bug [Bug 471638].
	[V]  One of the halos in flarge seems to disappear in some cases
	     with OpenGL.
	[V]  Walktest + newsky: it appears that there are some visibility
	     culling problems in some rare cases.
	     Solution: try to find a spot that doesn't work right and
	     remember with 'C'. Later on you can go back to that position
	     with 'c' (after including debug info).
	[V]  Fix radiosity so that it works again. Radiosity is currently
	     disabled because several things had been rewritten and the
	     radiosity code was left behind.
	     To fix this we need to have a way to iterate over all polygons.
	     This is not hard. Harder will be the fact that the lighting
	     system has changed. It now works with the shadow bitmaps.
	     [Bug 429283]
	[V]  In isometric engine (isotest) + OpenGL some of the mesh
	     objects (like the particle systems) are clipped wrong to the
	     floor.
	     This is a very hard bug. We have been hunting this bug for
	     ages. Z-buffer accuracy problems have been suspected but this
	     is probably not right because the problem arises on cards
	     with 32-bit Z-buffer too.
	[F]  Gouraud shaded polygons are not supported well: you can only
	     define triangles that are gouraud shaded and not polygons in
	     general.
	     After closing inspection it seems that this *almost* works
	     perfectly now. However there are cases when texture mapping
	     is wrong.
	     [Bug 202768]
	[**] Lighting is not cached for gouraud shaded polygons.
	     [Bug 202780]
	[V]  Investigate if skeletal sprites work nicely with the
	     visibility culling system.
	     Major problem is that calculating a bounding box for a skeletal
	     sprite is not easy. We have to find an efficient way to do this,
	     especially when the transforms change.
	     [Bug 204194]
	[V]  Lighting for skeletal sprites is not good. The problem is that
	     normals are precalculated for the 'base mesh'. When the mesh
	     later animates (using the transforms) the normals will not
	     change. A solution is perhaps to transform the normals with
	     the hierarchical transform. But this will not work correctly
	     for vertices that are connected to triangles that have vertices
	     from other limbs.
	     [Bug 493454]
	[V]  Mesh objects outside the global bounding box of an
	     infinite sector will not be visible.
	     There is a work-around for this bug which is why this bug is
	     not that bad. You can easily add small dummy geometry very far
	     away to make the bounding box work. Problem is that this
	     dummy geometry has to be part of the static mesh!
	     [Bug 216698]
	[V]  Light with explosion particle system is not correctly
	     positioned.
	     The question is if this light is a desired feature.
	     [Bug 231392]
	[V]  With OpenGL the lightmaps are not mapped correctly.
	     This is very visible if you have two adjacent polygons which
	     have a different size and a shadow going over those two
	     polygons (in dmburg this situation occurs a few times).
	     In that case the shadows on both polygons will not match
	     exactly.
	     Fixing this bug for real probably requires a change of the
	     lightmap format (to make then one lumel bigger both horizontally
	     as vertically). While this is relatively easy to do for
	     static lightmaps the dynamic lightmaps might be more problematic.
	     Also this may require a big change in the software renderer...
	     Rather complicated bug. But an important one to fix.
	     [Bug 405964]
	[V]  Problem with keycolor + zbuffer:
	     When a texture with keycolor transparency is rendered the
	     software and hardware renderers currently behave differently.
	     With software the z-buffer is only updated at those positions
	     where the texture is actually drawn. This is very nice of
	     course since that means you can essentially draw the keycolor
	     texture using Z-buffer and objects drawn behind it will be correct.
	     However this doesn't work with hardware. With hardware the
	     Z-buffer is updated for the entire polygon regardsless of the
	     key-color value.
	     I'm not sure if it is actually possible to do otherwise with
	     hardware. If not then the engine will have to solve this by
	     sorting such polygons from back to front in relation to other
	     objects in the same sector.
	     [Bug 409067]
	[V]  The software renderer implementation of DrawTriangleMesh
	     is still missing a few clipping features. In general it would
	     be nice to investigate the use of the OpenGL clipping routines
	     for software too.
	     [Bug 430207]
	[V]  Investigate clipping bug in OpenGL.
	     [Bug 430214]
	[V]  In OpenGL adjacent polygons do not match nicely. Especially if
	     you clear the background every frame you can easily notice
	     gaps between polygons.
	     [Bug 430601]
	[V]  Investigate bugs related to the walktest 'portal' command and
	     to portals in general.
	     [Bug 430285]
	     [Bug 471637]
	     [Bug 471638]
	     [Bug 473597]
	[V]  Visibility culling does not work correctly on objects that
	     are scaled using the movable (it works correctly with objects
	     scaled using HardTransform).
	     Problem here is that the bounding box is not recalculated when
	     the movable is changed.
	     [Bug 478072]

API and Small Feature Additions:
	[F]  Translate point on polygon to texture space/object space
	     coordinates (for selection). This is useful for Quark++.
	[F]  Ability to close portals in map loader.
	[F]  Automatic generation of lightmap cache names using MD5
	     checksum of geometry. This is important for dynamic
	     loading/reloading of worlds.
	[F]  Support iPolygonMesh (for collision detection) in more
	     mesh objects (like ball, cube, ...).
	[**] Add iCamera::SetFarPlane().
	[F]  Add Hide() to iMouseDriver (and check others).

Global Additions and Stuff:
	[F]  Direct3D8 Renderer.
	[O]  Split of CS module in CS and CSextra. Applications like
	     Blocks will then move to CSextra.
	[F]  [OPTIONAL?] Configuration setup tool so that it is
	     possible to edit config files with a GUI?
	[S]  There are still a few places where we need to use the
	     reporter for reporting error conditions.
	[OF] Remove Squawk after implementing a multi-view demo
	     in WalkTest.

Things to Check:
	[O]  Does CS Still work on ports like OS/2, BeOS, MacOS/X,
	     NextStep, OpenStep, DOS, ...

Documentation Updates:
	- Update the 'Configuration Files Section'.
	- Write docs and/or HOWTO on the Python and LUA plugins.
	- Write doc on the heightmap texture generation utility.
	- Write HOWTO on creation of a mesh object.
	- Write doc on how to create your own mesh object
	  plugins.
	- Write HOWTO on plugin creation in general.
	- Complete docs on metaballs mesh object.
	- Complete docs on haze mesh object.
	- Write a HOWTO or other doc that explains the best
	  way to create a level (i.e. detail objects, occluders,
	  ...). Also explains when to use portals/sectors and
	  when not.
	- Tutorial on isometric engine.
	- HOWTO on how to work with regions and load/unload
	  parts of a map (dynamic loading/unloading).
	- HOWTO on sound.
	- Complete update of map format documentation.
	- HOWTO on KEY and NODE system for game specific
	  purposes (i.e. triggers, scripts, and things like that).
	- Go over the API documentation (doxygen comments) and
	  see if they can be improved.
	- Complete the features lists.
	- See if the credits/authors list is still up-to-date.


