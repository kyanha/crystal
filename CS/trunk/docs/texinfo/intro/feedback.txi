@c -*-texinfo-*-
@node Feedback, Authors, IRC, CS Introduction
@section Feedback and Bug Reporting
@cindex Feedback
@cindex Bug Reporting

If you find a bug in Crystal Space there are two ways to report it to the
developers. The preferred method of reporting bugs is to use the Crystal Space
bug tracker:

@noindent
@uref{http://trac.crystalspace3d.org/trac/CS/}

Additionally, you can send a message to the main Crystal Space mailing list
(@pxref{Mailing Lists}) at @email{crystal-main@@lists.sourceforge.net}.

@noindent
Try to give as much information as possible about the bug, including:

@itemize @bullet
@item
Crystal Space version number. If it is a @sc{svn} snapshot then include
the date and time that you downloaded it. If you are using @sc{svn} directly
then state the revision of your working copy.
@item
Operating System (Windows (Vista, 7, 8), MacOS/X, Unix --- @sc{gnu}/Linux,
Free@sc{bsd}, etc.  --- @dots{}).
@item
The compiler that you used (@sc{gcc}, Mingw, @sc{msvc}, @dots{}).
@item
Architecture (Intel x86, @sc{amd} x86, @sc{amd} 64, @sc{sparc}, @sc{mips},
@sc{m68k}, Alpha, PowerPC, @dots{}).
@item
Graphics adapter (brand/model, total on-board memory, driver version, @dots{}).
@item
Video settings (color depth, resolution, Crystal Space video driver, @dots{}).
@item
Description of the problem.
@item
Exact error message (or output of Crystal Space). If possible it would be 
nice to get the output of the Crystal Space application with the
@samp{-verbose=-scf} option specified on the command line. On Windows, if you 
are using a gcc based compiler and you compiled in optimize mode then you'll 
also need to add the @samp{-console} option. If you compiled with @sc{msvc} 
and you build in release mode then you'll need the @samp{-noconsole} option.
@item
How to reproduce the crash (if it is reproducible).
@item
A fix for the bug if available (Unified diff files are desirable).
@end itemize

Below is a general loose example of a desired bug report.

@example
CS Version: 2.1 SVN (2012 - 01 - 09) - r37308

OS: Debian 6

Compiler: GCC 4.4.5

Architecture: Intel x86 - Pentium 4 2.0GHz

Graphics adaptor: nVidia 5 series - 128MB memory - Driver: 1.73

Graphics settings: 1024x768 - 32 bit colour depth

Description of problem: Error when exiting 'walktest' saying 'segfault'.

Error message:

Below is the output I get running 'walktest'.

./walktest 
NOTIFY: World saving enabled.

crystalspace.sndsys.renderer.software:
  Sound System Software Renderer Initializing...

crystalspace.system:
  Crystal Space version 2.1.0.1747 [Unix-x86(32)-GCC] (Mon 9-Jun-2008).
  Created by Jorrit Tyberghein and others...

crystalspace.canvas.glx2d:
  Opening GLX2D
  Creating Context
  Video driver GL/X version (direct renderer)
  Visual ID: 0x00000024, 24bit TrueColor
  R8:G8:B8:A8, 
  level 0, double buffered

crystalspace.canvas.openglcommon.driverdb:
  Applied: GeForce FX 5xxx: Broken 'Inverted fog'
  Applied: GeForce: RECT texture extension support apparently sucks
  Applied: NVidia: GENERATE_MIPMAPS does not generate last level
  Applied: NVidia: ARB_seamless_cube_map broken

crystalspace.canvas.openglcommon:
  OpenGL renderer: GeForce FX 5500/AGP/SSE/3DNOW! (vendor: NVIDIA Corporation)
  version 2.1.2 NVIDIA 173.14.27
  Using windowed mode at resolution 1024x693.
  Pixel format: Color: 24 Alpha: 8 Depth: 24 Stencil: 8 AccumColor: 48
  AccumAlpha: 16 MultiSamples: 0 
  Multisample: disabled

crystalspace.graphics3d.opengl:
  Using VBO with 64 MB of VBO memory
shader lighting_default: ....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
shader z_only: ....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%

crystalspace.system:
  Loading map ‘castle’.

Level load time: 12.144 seconds.
  Precaching all things...
  
shader lighting_default@@400: ....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
shader lighting_default@@300: ....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
shader lighting_default@@200: ....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
shader lighting_default@@100: ....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
  
  Precaching finished... took 20.162 seconds.
  

Total load time: 22.013 seconds.
  Computing OBBs ...
  --------------------------------------
  canvas exposed
Cleaning up...
segfault
@end example
