@c -*-texinfo-*-
@node map2cs.cfg, map2cs Classnames and Keys, map2cs, map2cs
@subsection Reference for @file{map2cs.cfg}
@cindex @file{map2cs.cfg}

The @file{map2cs.cfg} file is the most important way to configure
@file{map2cs} I will explain all possible settings here.

A sample @file{map2cs.cfg} will look like this:

@example
Map2CS.TextureSettings.DefaultTexture = a_4hewn
Map2CS.TextureSettings.wad1 = E:\Sierra\Half-Life\valve\halflife.wad
Map2CS.TextureSettings.wad2 = E:\Sierra\Half-Life\valve\xeno.wad
Map2CS.TextureSettings.wad3 = E:\Sierra\Half-Life\valve\liquids.wad
Map2CS.TextureSettings.wad4 = E:\Sierra\Half-Life\valve\texpack.wad
Map2CS.TextureSettings.zip1 = E:\Cryst\skybox.zip
Map2CS.TextureSettings.zip2 = E:\Cryst\skybox2.zip
Map2CS.TextureSettings.pk1 = D:\Quake III Arena\baseq3\pak0.pk3
Map2CS.TextureSettings.pk2 = D:\Quake III Arena\baseq3\mapmedia.pk3

Map2CS.General.Scaling = 0.025
Map2CS.General.UseBSP = 1
Map2CS.General.RemoveHidden = 1
Map2CS.General.LightScale = 30

System.ApplicationID = Map2CS
@end example

The following sections describe the various configuration file entries and the
associated values which may appear in each section.

@subsubheading Texture Settings

@noindent
@code{texturesettings}

@itemize @bullet
@item
@code{DefaultTexture}

Specifies the name of the texture, that will be used, when the original
texture is not found.  If the default texture will not be found, the resulting
map will not be usable.  You need to manually edit the map file then.  (I
don't recommend doing so, but there are users, who just want to do that.)

@item
@code{wad}

Specifies all possible wad files.  You need to give the full path here.  If
there are several wad files, you need to number them: @samp{wad1},
@samp{wad2}, and so on.  You can use any number of wad files with
@file{map2cs}.  The wad files need to be @sc{wad3} format, which means the
format used by Half-Life, not the format used by Quake 1 or 2!

@item
@code{pk}

Specifies all possible pk3 files.  These files are the archives, that Quake3
uses.  You can create a pk3 file for use with @file{map2cs}, if you create a
zip archive, in which you create a subdirectory called textures.  Put all your
textures below that, and use @sc{tga} or @sc{jpg} as texture formats.  When
you rename that zip file to pk3, you have a valid Quake3 texture archive.  (At
least it is a valid archive for @file{map2cs}.)

@item
@code{zip}

Specifies all possible zip files.  You need to give the full path here.  If
there are several zip files, you need to number them: @samp{zip1},
@samp{zip2}, and so on..  The zip files need to contain the textures in the
main directory of the zip file (or a subdirectory equivalent to the name used
in the map file).  @file{map2cs} will look for the following formats in the
zip file (in this order): @sc{tga}, @sc{jpg}, @sc{jpeg}, @sc{bmp}, @sc{wal}.
@end itemize

@subsubheading General Settings

@noindent
@code{general}

@itemize @bullet
@anchor{map2cs.cfg scaling}
@item
@code{scaling}

Quake uses a scale of 1 unit equals 1 inch.  Crystal Space uses 1 unit equals
1 meter, so obviously, we need some scaling.  0.025 is a very good factor to
scale quake maps, but if you need a different factor, just use another value.

@item
@code{usebsp}

Set this to true, to enable @sc{bsp}-tree generation in all sectors.  That
should normally be 1 in all cases.  You can set it to 0 for testing purposes
though.

@item
@code{removehidden}

Set this to 1 is you want @sc{map2cs} to remove hidden surfaces.  This is very
useful for complex maps, because you have no chance to create maps without
having hidden surfaces, but by removing these surfaces @file{map2cs} must
sometimes split a polygon into smaller pieces, so polygon count can even raise
but this setting.  I recommend using it anyway, because it will reduce
required fillrate.  Also the engine can possibly cull away parts of the larger
polygon which will speed up things.  I recommend setting this to 1 for release
maps and setting it to 0 for fast testings, because removal of hidden surfaces
is pretty slow.

@anchor{map2cs.cfg lightscale}
@item
@code{lightscale}

This is a difficult setting.  Because Quake and Crystal Space lighting differs
very much there is no real translation.  I assume 15 is a good value, some map
will appear too bright then.  In these cases set this value lower.  If there
is not enough light, increase the value.
@end itemize
