@c -*-texinfo-*-
@node HOWTO Use custom font, , HOWTO Simple Map Example, HOWTO
@subsection Using a Custom Font
@cindex font, csf

This section describes how to use a custom font within
Crystal Space.

Crystal Space has a plugin that specifies the font server
to use.  The font server that almost all applications use
is the default font server (crystalspace.font.server.default).

The other 2 servers are the freetype2 server and the font
multiplexor.  The font multiplexor just allows multiple font
servers to be searched for the specified font.  The freetype2
font server allows fonts to be created on the fly from fonts
(like TrueType fonts) located on the user's machine.

This HOWTO document does not address using the freetype2 server with
the assumption that most programs will not want to depend
on the font existing on all the potential targetted platforms.

@subsubheading The standard fonts

Every font server is expected to return a font
given the following strings:

@table @code @code
@item CSFONT_LARGE "*large"
@item CSFONT_ITALIC "*italic"
@item CSFONT_COURIER "*courier"
@item CSFONT_SMALL "*small"
@end table

The default font server has these 4 fonts built in.  They are as
follows:

@table @code @code
@item CSFONT_LARGE police
@item CSFONT_ITALIC italic
@item CSFONT_COURIER courier
@item CSFONT_SMALL tiny
@end table

To use these fonts simply use the LoadFont method and
pass the font desired.

@example
Font = Gfx2D->GetFontServer()->LoadFont(CSFONT_LARGE);
@end example


@subsubheading Loadable fonts

The default font server will also look for a file in 
the virtual file system with the name specified.  The
file must be in the "csf" font format.  This format is
pretty simple binary format that supports individual characters
with different widths and optionally an alpha component
to provide anti-aliasing.

To specify an alternate font simply use the LoadFont method
with the file name such as:

@example
Font = Gfx2D->GetFontServer ()->LoadFont ("/lib/fontshow/lucida36.csf");
@end example

@subsubheading Creating new loadable fonts

The easiest way to create a loadable font is to
use the csfontutil which runs on Windows platforms
and converts a true type font to the CSF format.

This program can be downloaded at:

@uref{http://ohrthguy.freeshell.org/tools/csfontutil.htm}

Once the CSF file is created it is can be included
in the application no matter what platforms are 
targetted.  The base font does not have to be on
that system.

@subsubheading Using an anti-aliased font

When a font is created using the csfontutil program
it creates it with anti-aliasing information.  This
information is currently only used by the OpenGL renderer.
The software and other renderers do not check for 
the "alpha map" associated with the font and so do
not blend the edges of the fonts with the background.


