@c -*-texinfo-*-
@node MS-DOS, , BeOS, Platform Instructions
@subsection @sc{ms-dos} - Using @sc{djgpp} Compiler
@cindex @sc{ms-dos}

If you want to compile and use Crystal Space for @sc{dos} using the @sc{djgpp}
compiler (@uref{http://www.delorie.com/djgpp}), you're reading the right
document.

@subsubheading Necessary Files

You should use the Crystal Space makefile system to compile Crystal Space.
This will require some utilities and libraries which are common in Unix-like
environments but not in @sc{dos}.  Here is a list of all of the files you
should need to compile Crystal Space with @sc{djgpp}:

@noindent
@sc{djgpp} development kit@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2/djdev203.zip}

@noindent
@sc{djgpp} frequently asked questions@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2/faq230b.zip}

@noindent
@sc{djgpp} @sc{gnu} make utility@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/mak3791b.zip}

@noindent
@sc{djgpp} @sc{gnu} linker and assembler@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/bnu2112b.zip}

@noindent
@sc{djgpp} @sc{gnu} C compiler@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/gcc2953b.zip}

@noindent
@sc{djgpp} @sc{gnu} C++ compiler@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/gpp2953b.zip}

@noindent
@sc{djgpp} @sc{gnu} file utilities@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/fil40b.zip}

@noindent
@sc{djgpp} @sc{gnu} shell utilities@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/shl20jb.zip}

@noindent
@sc{djgpp} @sc{gnu} diff utilities@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/dif272b.zip}

@noindent
Compiled zip, jpeg and png libraries@*
@uref{ftp://ftp.sunsite.dk/projects/crystal/support/dos/doslibs_0.94.zip}@*
@emph{These are needed if the ``original'' libraries don't work.}
Extract these files into your CS directory. This will result in
a @file{libs} directory in @file{CS\libs\cssys\djgpp}.

@noindent
@sc{nasm} (Netwide Assembler) for @sc{dos}@*
@uref{ftp://ftp.sunsite.dk/projects/crystal/support/nasm/nasm-0.98e-bin-dos.zip}
Install this and add an entry to your PATH environment variable, so it can be
found.

@noindent
@sc{libdxe} (Dynamic Library Loader) for @sc{djgpp}@*
@uref{ftp://ftp.sunsite.dk/projects/crystal/support/dos/dxe2_094.zip}
Extract this into your @sc{djgpp} install directory and compile it
@file{djgpp\contrib\dxe2} by invoking

@example
make
@end example

and after that do a

@example
make install
@end example

@sc{djgpp} @sc{gnu} C++ libraries@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/lgp2953b.zip}

@noindent
@sc{djgpp} @sc{gnu} help system@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/txi40b.zip}

@noindent
@sc{djgpp} @sc{gnu} sed utility@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/sed3028b.zip}

@noindent
@sc{djgpp} @sc{gnu} text utilities@*
@uref{ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp/v2gnu/txt20b.zip}

@subsubheading Installation

Follow these installation instructions:

@itemize @bullet

@item
Unzip @sc{nasm} somewhere.

@item
If you don't already have a directory for @sc{djgpp}, create one.  Unzip all
of the @sc{djgpp} stuff into that directory.

@item
To use @sc{djgpp} you need to set two environment variables.  Use this example
but change the directories to match the directories where you have @sc{djgpp}
and @sc{nasm} installed:

@example
SET PATH=c:\djgpp\bin;c:\nasm\bin;%PATH%
SET DJGPP=c:\djgpp\djgpp.env
@end example

@item
Now just go to the Crystal Space directory (@file{CS/}).
If you want to
@itemize 
@item
build dynamic executables where only needed code is loaded at runtime do 
@samp{make djgpp} and after that @samp{make -k all}.
@item 
build static executables where all is compiled in (programs tend go get very big that way :)
then do @samp{make djgpp USE_PLUGINS=no} and after that @samp{make -k all}.
@end itemize
@end itemize

@subsubheading Allegro

If you use the Allegro graphics library (and want to use it in Crystal Space),
you can use an alternative video driver.  For this, you will have to add the
following line to @file{CS/config.mak} after the configuration step.

@example
USE_ALLEGRO = yes
@end example

@subsubheading Platform

I tested compilation on a WinNT4.0 sp6 system with cmd.exe as shell and on
linux in a dosemu (where i had to fiddle with the configuration step - this is
only for the adventurous people).  Note that there are issues with djgpp and
Win2k/WinXP.  I did not try either so you are on your own here, but be told
there is a FAQ on www.delorie.com/djgpp regarding this issue.

@subsubheading Compilation Notes

You will note the @samp{-k} option in the make command above.  This will prevent
make to stop compilation if some subproject does not compile.  In particular
the sockets plugin will fail since there is no standard djgpp network package
(there are a few out there but i tried only one and that did not compile :).
Also, i did not try a compilation of Allegro, since i didnt have it installed
(poor excuse, I know).
