@c -*-texinfo-*-
@node API Modifications 96, API Modifications 94, API Modifications, API Modifications
@appendixsec @sc{api} Changes from 0.94 to 0.96
@cindex @sc{api} Changes

This section documents the major changes between versions 0.94 and 0.96 of of
Crystal Space.

@subheading iPolygonMesh changes
@cindex @code{iPolygonMesh}

The header for @code{iPolygonMesh} has moved from @file{include/ivaria}
to @file{include/igeom}.

@subheading iMeshObject changes
@cindex @code{iMeshObject}
@cindex @code{iVisibilityObject}
@cindex @code{iObjectModel}

The following functions have been removed.  Instead there is now a new routine
called @code{iMeshObject::GetObjectModel()} which will return an instance of
@code{iObjectModel}.  The functions can be called from that instance.

@itemize @bullet
@item
@code{iMeshObject::GetShapeNumber()}
@item
@code{iMeshObject::GetObjectBoundingBox()}
@item
@code{iMeshObject::GetRadius()}
@end itemize

A similar change has happened in the @code{iVisibilityObject} interface.

@subheading csParser changes
@cindex @code{csParser}
@cindex @code{csGetObject()}

Functions like @code{csGetObject()} and @code{csGetCommand()} which
were used to implement parsing functionalities in CS have now been put
into the @code{csParser} class.

@subheading Fast @sc{scf} Interfaces
@cindex @code{SCF_QUERY_INTERFACE_FAST}
@cindex @code{CS_GET_CHILD_OBJECT_FAST}
@cindex @code{CS_GET_NAMED_CHILD_OBJECT_FAST}
@cindex @code{CS_GET_FIRST_NAMED_CHILD_OBJECT_FAST}
@cindex @code{SCF_DECLARE_FAST_INTERFACE}

The following macros have been removed:

@itemize @bullet
@item
@code{SCF_QUERY_INTERFACE_FAST}
@item
@code{CS_GET_CHILD_OBJECT_FAST}
@item
@code{CS_GET_NAMED_CHILD_OBJECT_FAST}
@item
@code{CS_GET_FIRST_NAMED_CHILD_OBJECT_FAST}
@item
@code{SCF_DECLARE_FAST_INTERFACE}
@end itemize

Fast interfaces are now default. Just use the
normal query versions instead of the ones above.

@subheading Internal @sc{scf} changes

For Interfaces the @code{scfGetID_Interfacename} and the
@code{VERSION_Interfacename} have been renamed to
@code{Interfacename_scfGetID} and @code{Interfacename_VERSION} for making
namespaces working nicely with them.

@subheading @code{make} Targets 

Some targets for the @code{make} process (all applications, some plugins) have
changed.  In general, the name of a target is now the same as the name of the
resulting binary (without suffix).  For example, @file{walktest} is now built
with @samp{make -k walktest} instead of @samp{make -k walk}.  However, the
composite target names have not been changed.  To build @file{walktest} and all
required plugins, one still invokes @samp{make -k walkall}.

@subheading Ref count changes
The @code{iLoader::LoadSound()} that returns an @code{iSoundWrapper}
now returns a pointer that is increffed (one ref count more compared
to before).

@subheading iTextureManager changes

The following methods have moved:

@itemize @bullet
@item
@code{iTextureManager::FindRGB()} @result{} @code{iGraphics2D::FindRGB()}
@end itemize

The following methods were removed:

@itemize @bullet
@item
@code{iTextureManager::SetPalette()}
@item
@code{iTextureManager::ResetPalette()}
@item
@code{iTextureManager::ReserveColor()}
@end itemize

@subheading Procedural Textures

The procedural texture system has been rewritten. See the documentation for
@code{iGraphics3D::SetRenderTarget()} for details.

@subheading Hardmove Change
@cindex @samp{Hardmove}

The interpretation of the matrix used in the @samp{hardmove} tag
for mesh factories (@samp{meshfact}) has been inverted so it is more
logical and also corresponds with the wah @samp{hardmove} is interpreted
for mesh objects (@samp{meshobj}).


