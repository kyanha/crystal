@node Console_Boolean
@subsubsection Boolean commands

Boolean commands have either an @code{on} or @code{off} state. When you just
type the command without arguments it will show you the current state of the
command (@code{on} or @code{off}). To turn the state on just use: @code{on},
@code{yes}, @code{true}, or @code{1} as the first argument of the command. To
turn it off use: @code{off}, @code{no}, @code{false}, or @code{0}. To toggle
a state use @code{toggle}. Example:

@itemize @bullet
@item
@samp{fps}: show current setting for FPS display

@item
@samp{fps on}: enable FPS display

@item
@samp{fps 0}: disable FPS display

@item
@samp{fps toggle}: toggle FPS display
@end itemize

The following boolean commands are available :

@table @code
@item colldet
Enable/disable new collision detection (using RAPID library). Corresponds
to @code{-colldet}/@code{-nocolldet} commandline options.
COMMAND NOT USEFUL CURRENTLY.

@item fclear
Enable/disable the clearing of the display every frame (this is useful for
debugging). Corresponds to @code{-clear} command line option.

@item debug
Enable/disable more debug information (which is written in @file{debug.txt}
if the program crashes provided your system can catch crashes).

@item stats
Enable/disable statistics display. Corresponds to
@code{-stats}/@code{-nostats} commandline options and STATS configuration
option. Note that enabling the statistics counter automatically disables
the display of the coordinates.

@item fps
Enable/disable FPS display (frames per second). Corresponds to
@code{-fps}/@code{-nofps} commandline options and FPS configuration option.

@item transp
Enable/disable transparent/filtered/alpha drawing.

@item portals
Enable/disable drawing through portals. If this is off, a portal will just
draw as the default texture on the polygon.

@item edges
Enable/disable display of edges around polygons. This is useful for
debugging.

@item frustrum
Enable/disable the display of the view frustrum around the selected light
(select lights with @samp{edges} enabled and by clicking the left
mousebutton on the light).

@item texture
Enable/disable texture mapping.

@item lighting
Enable/disable lighting.

@item console
Open/close console (is done automatically by @key{tab} key).

@item coordshow
Enable/disable display of coordinate at runtime. Note that enabling the
coordinates display automatically disables the statistics display.

@item things
Toggle the display of things on/off (default on).

@item ilace
Toggle interlace on/off. For information about the INTERLACING option
@xref{Config_VideoDriver}.

@item mmx
Toggle MMX support on/off. This command corresponds with the MMX
configuration file option. @xref{Config_VideoDriver}. Note that this
command is only useful if you have a MMX capable processor.

@item zbuf
For debugging. When enabled this will show an alternate view where far away
objects are rendered in another color. In other words: it tests the Z
buffer. It works best in 16-bit mode.

@item bilinear
Experimental feature. Disable/enable bilinear filtering (default off). This
will slow down the engine considerably and the current implementation also
shows artifacts.

@item trilinear
Experimental feature. Disable/enable trilinear filtering (default off). This
will slow down the engine considerably and the current implementation also
shows artifacts.

@item dblbuff
Enable double buffering for systems that support this.

@item debug0
Debug command. The function of this command is undefined but it serves as a
place-holder for some debugging functionality. A particular version of
Crystal Space may assign some action to this command but another version
may remove this action again.

@item lm_grid
Enable a lightmap grid which is overlayed on all lighted textures. This is
for debugging and is disabled by default. You need to clear the texture
cache to see the effects of this command.

@item lm_only
When enabled texture mapping is disabled and lightmaps are drawn instead.
You need to clear the texture cache to see the effects of this command.

@item move3d
Toggle between between pure 3D movement (Descent-like) and
@samp{comfortable} movement (Quake-like). The latter is now default. This
basicly affects the left and right arrow keys which now rotate the camera
how you would expect it and also includes a gravity system. When you enable
3D movement the gravity system is also disabled.

@item do_gravity
Enable/disable gravity (enabled by default).

@item freelook
If freelook is enabled the mouse moves around like in Quake. By default
freelook is disabled.

@item gouraud
Toggle support for gouraud shading. By default this is on.

@item cbuffer
Toggle c-buffer rendering on/off. In some levels (especially levels with
many non-moving things) enabling the c-buffer for the engine can improve
performance considerably. By default it is off (currently). Note that the
level needs to be prepared for this (octree needs to be added using STATBSP
command). Enabling the c-buffer disables the quadtree and coverage mask
tree automatically.

@item quadtree
Toggle quadtree rendering on/off. In some levels (especially levels with
many non-moving things) enabling the quadtree for the engine can improve
performance considerably. By default it is off (currently). Note that the
level needs to be prepared for this (octree needs to be added using STATBSP
command). Enabling the quadtree disables the c-buffer and coverage mask
tree automatically.

@item covtree
Toggle coverage mask tree rendering on/off. In some levels (especially
levels with many non-moving things) enabling the coverage mask tree for the
engine can improve performance considerably. By default it is off
(currently). Note that the level needs to be prepared for this (octree
needs to be added using STATBSP command). Enabling the coverage mask tree
disables the c-buffer and quadtree automatically.

@item solidbsp
Toggle solidbsp rendering on/off. This is experimental for now.

@item sprlight
Change quality setting of sprite lighting. If yes every vertex will be lit
according to the correct distance with the light. If no then the distances
for all vertices are calculated to the center of the sprite. Default is
@samp{no}. This option can also be set with the SPRITE_HIGHQUAL option in
the config file.

@item palette
Toggle on/off displaying the palette on top of everything (just below the
Crystal Space logo). Works in 8-bit modes only.
@end table
