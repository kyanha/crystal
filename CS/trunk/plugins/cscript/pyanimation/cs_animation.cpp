/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.36
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<typename T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */

    #ifndef __STDC_CONSTANT_MACROS
    #define __STDC_CONSTANT_MACROS
    #endif
    #ifndef __STDC_LIMIT_MACROS
    #define __STDC_LIMIT_MACROS
    #endif
    #ifdef _MSC_VER
    #include <io.h>
    #include <stdarg.h>
    #if defined(_DEBUG) && !defined(DEBUG_PYTHON)
    #undef _DEBUG
    #define RESTORE__DEBUG
    #endif
    #endif
    #include <Python.h>
    #ifdef RESTORE__DEBUG
    #define _DEBUG
    #undef RESTORE__DEBUG
    #endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13




/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (own)
      *own = 0;
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) {
              int newmemory = 0;
              *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
              if (newmemory == SWIG_CAST_NEW_MEMORY) {
                assert(own);
                if (own)
                  *own = *own | SWIG_CAST_NEW_MEMORY;
              }
            }
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own)
        *own = *own | sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_AllocatorType swig_types[0]
#define SWIGTYPE_p_CS__Animation__csSkeletalState swig_types[1]
#define SWIGTYPE_p_CS__Animation__iBodyBone swig_types[2]
#define SWIGTYPE_p_CS__Animation__iBodyBoneCollider swig_types[3]
#define SWIGTYPE_p_CS__Animation__iBodyBoneJoint swig_types[4]
#define SWIGTYPE_p_CS__Animation__iBodyBoneProperties swig_types[5]
#define SWIGTYPE_p_CS__Animation__iBodyChain swig_types[6]
#define SWIGTYPE_p_CS__Animation__iBodyChainNode swig_types[7]
#define SWIGTYPE_p_CS__Animation__iBodyManager swig_types[8]
#define SWIGTYPE_p_CS__Animation__iBodySkeleton swig_types[9]
#define SWIGTYPE_p_CS__Animation__iSkeleton swig_types[10]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback swig_types[11]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimNode swig_types[12]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory swig_types[13]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket swig_types[14]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory swig_types[15]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimation swig_types[16]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimationNode swig_types[17]
#define SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory swig_types[18]
#define SWIGTYPE_p_CS__Animation__iSkeletonBlendNode swig_types[19]
#define SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory swig_types[20]
#define SWIGTYPE_p_CS__Animation__iSkeletonFSMNode swig_types[21]
#define SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory swig_types[22]
#define SWIGTYPE_p_CS__Animation__iSkeletonFactory swig_types[23]
#define SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNode swig_types[24]
#define SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory swig_types[25]
#define SWIGTYPE_p_CS__Animation__iSkeletonIKNode swig_types[26]
#define SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory swig_types[27]
#define SWIGTYPE_p_CS__Animation__iSkeletonIKNodeManager swig_types[28]
#define SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNode swig_types[29]
#define SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNodeFactory swig_types[30]
#define SWIGTYPE_p_CS__Animation__iSkeletonLookAtListener swig_types[31]
#define SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode swig_types[32]
#define SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory swig_types[33]
#define SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeManager swig_types[34]
#define SWIGTYPE_p_CS__Animation__iSkeletonManager swig_types[35]
#define SWIGTYPE_p_CS__Animation__iSkeletonPriorityNode swig_types[36]
#define SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory swig_types[37]
#define SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode swig_types[38]
#define SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory swig_types[39]
#define SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeManager swig_types[40]
#define SWIGTYPE_p_CS__Animation__iSkeletonRandomNode swig_types[41]
#define SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory swig_types[42]
#define SWIGTYPE_p_CS__Animation__iSkeletonSpeedNode swig_types[43]
#define SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeFactory swig_types[44]
#define SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeManager swig_types[45]
#define SWIGTYPE_p_CS__Memory__AllocatorMalloc swig_types[46]
#define SWIGTYPE_p_CS__Mesh__iAnimatedMesh swig_types[47]
#define SWIGTYPE_p_CS__StringIDT_CS__StringSetTag__General_t swig_types[48]
#define SWIGTYPE_p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t swig_types[49]
#define SWIGTYPE_p_CapacityHandlerType swig_types[50]
#define SWIGTYPE_p_ElementHandlerType swig_types[51]
#define SWIGTYPE_p_HashType swig_types[52]
#define SWIGTYPE_p_TagType swig_types[53]
#define SWIGTYPE_p_ThisType swig_types[54]
#define SWIGTYPE_p_ValueType swig_types[55]
#define SWIGTYPE_p__1_basetype swig_types[56]
#define SWIGTYPE_p__csKeyCharType swig_types[57]
#define SWIGTYPE_p__csKeyEventType swig_types[58]
#define SWIGTYPE_p__csKeyModifierNumType swig_types[59]
#define SWIGTYPE_p__csKeyModifierType swig_types[60]
#define SWIGTYPE_p__csKeyModifiers swig_types[61]
#define SWIGTYPE_p__csMouseEventType swig_types[62]
#define SWIGTYPE_p_char swig_types[63]
#define SWIGTYPE_p_csArrayCapacityFixedGrowT_16_t swig_types[64]
#define SWIGTYPE_p_csArrayCapacityVariableGrow swig_types[65]
#define SWIGTYPE_p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t swig_types[66]
#define SWIGTYPE_p_csColliderGeometryType swig_types[67]
#define SWIGTYPE_p_csConfigFile swig_types[68]
#define SWIGTYPE_p_csMatrix3 swig_types[69]
#define SWIGTYPE_p_csObject swig_types[70]
#define SWIGTYPE_p_csOrthoTransform swig_types[71]
#define SWIGTYPE_p_csPlane3 swig_types[72]
#define SWIGTYPE_p_csPtrT_CS__Animation__csSkeletalState_t swig_types[73]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonAnimNode_t swig_types[74]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonAnimPacket_t swig_types[75]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t swig_types[76]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t swig_types[77]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t swig_types[78]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t swig_types[79]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t swig_types[80]
#define SWIGTYPE_p_csPtrT_CS__Animation__iSkeleton_t swig_types[81]
#define SWIGTYPE_p_csQuaternion swig_types[82]
#define SWIGTYPE_p_csRefArrayT_iObject_t swig_types[83]
#define SWIGTYPE_p_csRefCount swig_types[84]
#define SWIGTYPE_p_csSphere swig_types[85]
#define SWIGTYPE_p_csVector3 swig_types[86]
#define SWIGTYPE_p_float swig_types[87]
#define SWIGTYPE_p_iBase swig_types[88]
#define SWIGTYPE_p_iCacheManager swig_types[89]
#define SWIGTYPE_p_iCamera swig_types[90]
#define SWIGTYPE_p_iClipper2D swig_types[91]
#define SWIGTYPE_p_iCommandLineParser swig_types[92]
#define SWIGTYPE_p_iComponent swig_types[93]
#define SWIGTYPE_p_iConfigFile swig_types[94]
#define SWIGTYPE_p_iConfigIterator swig_types[95]
#define SWIGTYPE_p_iConfigManager swig_types[96]
#define SWIGTYPE_p_iDataBuffer swig_types[97]
#define SWIGTYPE_p_iDebugHelper swig_types[98]
#define SWIGTYPE_p_iDocument swig_types[99]
#define SWIGTYPE_p_iDocumentAttribute swig_types[100]
#define SWIGTYPE_p_iDocumentAttributeIterator swig_types[101]
#define SWIGTYPE_p_iDocumentNode swig_types[102]
#define SWIGTYPE_p_iDocumentNodeIterator swig_types[103]
#define SWIGTYPE_p_iDocumentSystem swig_types[104]
#define SWIGTYPE_p_iDynamicSystem swig_types[105]
#define SWIGTYPE_p_iEvent swig_types[106]
#define SWIGTYPE_p_iEventAttributeIterator swig_types[107]
#define SWIGTYPE_p_iEventCord swig_types[108]
#define SWIGTYPE_p_iEventHandler swig_types[109]
#define SWIGTYPE_p_iEventNameRegistry swig_types[110]
#define SWIGTYPE_p_iEventOutlet swig_types[111]
#define SWIGTYPE_p_iEventPlug swig_types[112]
#define SWIGTYPE_p_iEventQueue swig_types[113]
#define SWIGTYPE_p_iFactory swig_types[114]
#define SWIGTYPE_p_iFile swig_types[115]
#define SWIGTYPE_p_iFrameEventSignpost swig_types[116]
#define SWIGTYPE_p_iJoint swig_types[117]
#define SWIGTYPE_p_iJoystickDriver swig_types[118]
#define SWIGTYPE_p_iKeyComposer swig_types[119]
#define SWIGTYPE_p_iKeyboardDriver swig_types[120]
#define SWIGTYPE_p_iMeshWrapper swig_types[121]
#define SWIGTYPE_p_iMouseDriver swig_types[122]
#define SWIGTYPE_p_iMovable swig_types[123]
#define SWIGTYPE_p_iObject swig_types[124]
#define SWIGTYPE_p_iObjectIterator swig_types[125]
#define SWIGTYPE_p_iObjectNameChangeListener swig_types[126]
#define SWIGTYPE_p_iObjectRegistry swig_types[127]
#define SWIGTYPE_p_iObjectRegistryIterator swig_types[128]
#define SWIGTYPE_p_iPath swig_types[129]
#define SWIGTYPE_p_iPluginIterator swig_types[130]
#define SWIGTYPE_p_iPluginManager swig_types[131]
#define SWIGTYPE_p_iReporter swig_types[132]
#define SWIGTYPE_p_iReporterIterator swig_types[133]
#define SWIGTYPE_p_iReporterListener swig_types[134]
#define SWIGTYPE_p_iRigidBody swig_types[135]
#define SWIGTYPE_p_iSCF swig_types[136]
#define SWIGTYPE_p_iSceneNode swig_types[137]
#define SWIGTYPE_p_iString swig_types[138]
#define SWIGTYPE_p_iStringArray swig_types[139]
#define SWIGTYPE_p_iStringSet swig_types[140]
#define SWIGTYPE_p_iStringSetBaseT_CS__StringSetTag__General_t swig_types[141]
#define SWIGTYPE_p_iThreadManager swig_types[142]
#define SWIGTYPE_p_iThreadReturn swig_types[143]
#define SWIGTYPE_p_iTriangleMesh swig_types[144]
#define SWIGTYPE_p_iVFS swig_types[145]
#define SWIGTYPE_p_iVirtualClock swig_types[146]
#define SWIGTYPE_p_int swig_types[147]
#define SWIGTYPE_p_int16_t swig_types[148]
#define SWIGTYPE_p_int64_t swig_types[149]
#define SWIGTYPE_p_int8_t swig_types[150]
#define SWIGTYPE_p_long_long swig_types[151]
#define SWIGTYPE_p_p_iMeshWrapper swig_types[152]
#define SWIGTYPE_p_scfImplementation1T_csConfigFile_iConfigFile_t swig_types[153]
#define SWIGTYPE_p_scfImplementation1T_csObject_iObject_t swig_types[154]
#define SWIGTYPE_p_scfImplementationExt1T_csPath_csObject_iPath_t swig_types[155]
#define SWIGTYPE_p_size_t swig_types[156]
#define SWIGTYPE_p_uint16_t swig_types[157]
#define SWIGTYPE_p_uint32_t swig_types[158]
#define SWIGTYPE_p_uint64_t swig_types[159]
#define SWIGTYPE_p_uint8_t swig_types[160]
#define SWIGTYPE_p_unsigned_int swig_types[161]
#define SWIGTYPE_p_unsigned_long swig_types[162]
#define SWIGTYPE_p_unsigned_long_long swig_types[163]
static swig_type_info *swig_types[165];
static swig_module_info swig_module = {swig_types, 164, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _animation.so
  ------------------------------------------------*/
#define SWIG_init SWIG_init_animation

#define SWIG_name    "_animation"

#define SWIGVERSION 0x010336 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include "cssysdef.h"
// Not including imesh.h since that results in ambiguous identifiers
#include "iutil.h"
#include "csutil.h"
#include "igeom.h"
#include "csgeom.h"
#include "imesh/skeleton2.h"
#include "imesh/animnode/skeleton2anim.h"
#include "imesh/animnode/ik.h"
#include "imesh/animnode/lookat.h"
#include "imesh/animnode/ragdoll.h"
#include "imesh/animnode/speed.h"
using namespace CS::Animation;


/* Funtions to set the modules global SCF pointer, this is needed
   when working on a pure scripting environment, as then this code
   lives in a non-cs dll, thus the pointer isnt initialized
   by cs itself, and scf stuff wont work unless the pointer is
   initialized manually. Use it after CreateEnvironment call. */
void SetSCFPointer(iSCF* pscf)
{
  iSCF::SCF = pscf;
}

iSCF* GetSCFPointer()
{
  return iSCF::SCF;
}


PyObject *
_csRef_to_Python (const csRef<iBase> & ref, void * ptr, swig_type_info * name)
{
  if (!ref.IsValid())
  {
    Py_INCREF(Py_None);
    return Py_None;
  }
  ref->IncRef();
  return SWIG_NewPointerObj((void *)ptr, name, 1);
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
  if (PyString_Check(obj)) {
    char *cstr; Py_ssize_t len;
    PyString_AsStringAndSize(obj, &cstr, &len);
    if (cptr)  {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
	*cptr = PyString_AsString(obj);
      }
    }
    if (psize) *psize = len + 1;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}




SWIGINTERN int CS_Animation_iSkeletonManager_scfGetVersion(){ return scfInterfaceTraits<iSkeletonManager>::GetVersion(); }

SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}

SWIGINTERN void delete_CS_Animation_iSkeletonManager(CS::Animation::iSkeletonManager *self){ if (self) self->DecRef (); }

SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}

SWIGINTERN int CS_Animation_iSkeletonFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonFactory(CS::Animation::iSkeletonFactory *self){ if (self) self->DecRef (); }

SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}

SWIGINTERN int CS_Animation_iSkeleton_scfGetVersion(){ return scfInterfaceTraits<iSkeleton>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeleton(CS::Animation::iSkeleton *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iBodyManager_scfGetVersion(){ return scfInterfaceTraits<iBodyManager>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodyManager(CS::Animation::iBodyManager *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iBodySkeleton_scfGetVersion(){ return scfInterfaceTraits<iBodySkeleton>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodySkeleton(CS::Animation::iBodySkeleton *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iBodyBone_scfGetVersion(){ return scfInterfaceTraits<iBodyBone>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodyBone(CS::Animation::iBodyBone *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iBodyChain_scfGetVersion(){ return scfInterfaceTraits<iBodyChain>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodyChain(CS::Animation::iBodyChain *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iBodyChainNode_scfGetVersion(){ return scfInterfaceTraits<iBodyChainNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodyChainNode(CS::Animation::iBodyChainNode *self){ if (self) self->DecRef (); }

  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}

SWIGINTERN int CS_Animation_iBodyBoneProperties_scfGetVersion(){ return scfInterfaceTraits<iBodyBoneProperties>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodyBoneProperties(CS::Animation::iBodyBoneProperties *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iBodyBoneJoint_scfGetVersion(){ return scfInterfaceTraits<iBodyBoneJoint>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodyBoneJoint(CS::Animation::iBodyBoneJoint *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iBodyBoneCollider_scfGetVersion(){ return scfInterfaceTraits<iBodyBoneCollider>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iBodyBoneCollider(CS::Animation::iBodyBoneCollider *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonAnimPacketFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonAnimPacketFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonAnimPacketFactory(CS::Animation::iSkeletonAnimPacketFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonAnimPacket_scfGetVersion(){ return scfInterfaceTraits<iSkeletonAnimPacket>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonAnimPacket(CS::Animation::iSkeletonAnimPacket *self){ if (self) self->DecRef (); }

#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

SWIGINTERN int CS_Animation_iSkeletonAnimation_scfGetVersion(){ return scfInterfaceTraits<iSkeletonAnimation>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonAnimation(CS::Animation::iSkeletonAnimation *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonAnimNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonAnimNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonAnimNodeFactory(CS::Animation::iSkeletonAnimNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonAnimNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonAnimNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonAnimNode(CS::Animation::iSkeletonAnimNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonAnimationNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonAnimationNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonAnimationNodeFactory(CS::Animation::iSkeletonAnimationNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonAnimationNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonAnimationNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonAnimationNode(CS::Animation::iSkeletonAnimationNode *self){ if (self) self->DecRef (); }

SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}

SWIGINTERN int CS_Animation_iSkeletonBlendNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonBlendNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonBlendNodeFactory(CS::Animation::iSkeletonBlendNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonBlendNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonBlendNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonBlendNode(CS::Animation::iSkeletonBlendNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonPriorityNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonPriorityNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonPriorityNodeFactory(CS::Animation::iSkeletonPriorityNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonPriorityNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonPriorityNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonPriorityNode(CS::Animation::iSkeletonPriorityNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonRandomNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonRandomNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonRandomNodeFactory(CS::Animation::iSkeletonRandomNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonRandomNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonRandomNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonRandomNode(CS::Animation::iSkeletonRandomNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonFSMNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonFSMNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonFSMNodeFactory(CS::Animation::iSkeletonFSMNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonFSMNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonFSMNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonFSMNode(CS::Animation::iSkeletonFSMNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonIKNodeManager_scfGetVersion(){ return scfInterfaceTraits<iSkeletonIKNodeManager>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonIKNodeManager(CS::Animation::iSkeletonIKNodeManager *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonIKNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonIKNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonIKNodeFactory(CS::Animation::iSkeletonIKNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonIKNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonIKNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonIKNode(CS::Animation::iSkeletonIKNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonIKPhysicalNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonIKPhysicalNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonIKPhysicalNodeFactory(CS::Animation::iSkeletonIKPhysicalNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonIKPhysicalNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonIKPhysicalNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonIKPhysicalNode(CS::Animation::iSkeletonIKPhysicalNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonLookAtNodeManager_scfGetVersion(){ return scfInterfaceTraits<iSkeletonLookAtNodeManager>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonLookAtNodeManager(CS::Animation::iSkeletonLookAtNodeManager *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonLookAtNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonLookAtNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonLookAtNodeFactory(CS::Animation::iSkeletonLookAtNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonLookAtNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonLookAtNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonLookAtNode(CS::Animation::iSkeletonLookAtNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonLookAtListener_scfGetVersion(){ return scfInterfaceTraits<iSkeletonLookAtListener>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonLookAtListener(CS::Animation::iSkeletonLookAtListener *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonRagdollNodeManager_scfGetVersion(){ return scfInterfaceTraits<iSkeletonRagdollNodeManager>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonRagdollNodeManager(CS::Animation::iSkeletonRagdollNodeManager *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonRagdollNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonRagdollNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonRagdollNodeFactory(CS::Animation::iSkeletonRagdollNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonRagdollNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonRagdollNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonRagdollNode(CS::Animation::iSkeletonRagdollNode *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonSpeedNodeManager_scfGetVersion(){ return scfInterfaceTraits<iSkeletonSpeedNodeManager>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonSpeedNodeManager(CS::Animation::iSkeletonSpeedNodeManager *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonSpeedNodeFactory_scfGetVersion(){ return scfInterfaceTraits<iSkeletonSpeedNodeFactory>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonSpeedNodeFactory(CS::Animation::iSkeletonSpeedNodeFactory *self){ if (self) self->DecRef (); }
SWIGINTERN int CS_Animation_iSkeletonSpeedNode_scfGetVersion(){ return scfInterfaceTraits<iSkeletonSpeedNode>::GetVersion(); }
SWIGINTERN void delete_CS_Animation_iSkeletonSpeedNode(CS::Animation::iSkeletonSpeedNode *self){ if (self) self->DecRef (); }
#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap__SetSCFPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *arg1 = (iSCF *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_SetSCFPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_iSCF, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "_SetSCFPointer" "', argument " "1"" of type '" "iSCF *""'"); 
  }
  arg1 = reinterpret_cast< iSCF * >(argp1);
  SetSCFPointer(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap__GetSCFPointer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  iSCF *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"_GetSCFPointer",0,0)) SWIG_fail;
  result = (iSCF *)GetSCFPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iSCF, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN int Swig_var_InvalidBoneID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable InvalidBoneID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_InvalidBoneID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_size_t(static_cast< size_t >(CS::Animation::InvalidBoneID));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_CreateSkeletonFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_CreateSkeletonFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonManager_CreateSkeletonFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonManager_CreateSkeletonFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonFactory *)(arg1)->CreateSkeletonFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_FindSkeletonFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_FindSkeletonFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonManager_FindSkeletonFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonManager_FindSkeletonFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonFactory *)(arg1)->FindSkeletonFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_ClearSkeletonFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_ClearSkeletonFactories",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonManager_ClearSkeletonFactories" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  (arg1)->ClearSkeletonFactories();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_CreateAnimPacketFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimPacketFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_CreateAnimPacketFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonManager_CreateAnimPacketFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonManager_CreateAnimPacketFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonAnimPacketFactory *)(arg1)->CreateAnimPacketFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_FindAnimPacketFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimPacketFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_FindAnimPacketFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonManager_FindAnimPacketFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonManager_FindAnimPacketFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonAnimPacketFactory *)(arg1)->FindAnimPacketFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_ClearAnimPacketFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_ClearAnimPacketFactories",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonManager_ClearAnimPacketFactories" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  (arg1)->ClearAnimPacketFactories();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_ClearAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_ClearAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonManager_ClearAll" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  (arg1)->ClearAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonManager *arg1 = (CS::Animation::iSkeletonManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonManager" "', argument " "1"" of type '" "CS::Animation::iSkeletonManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonManager * >(argp1);
  delete_CS_Animation_iSkeletonManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonFactory_CreateBone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_CreateBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_CreateBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_CreateBone" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (arg1)->CreateBone(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_CreateBone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_CreateBone",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_CreateBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  result = (arg1)->CreateBone();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_CreateBone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iSkeletonFactory_CreateBone__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iSkeletonFactory_CreateBone__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSkeletonFactory_CreateBone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    CreateBone(CS::Animation::iSkeletonFactory *,CS::Animation::BoneID)\n"
    "    CreateBone(CS::Animation::iSkeletonFactory *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_FindBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_FindBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_FindBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonFactory_FindBone" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = ((CS::Animation::iSkeletonFactory const *)arg1)->FindBone((char const *)arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_RemoveBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_RemoveBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_RemoveBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_RemoveBone" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  (arg1)->RemoveBone(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetBoneParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetBoneParent",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetBoneParent" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_GetBoneParent" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = ((CS::Animation::iSkeletonFactory const *)arg1)->GetBoneParent(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_HasBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_HasBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_HasBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_HasBone" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (bool)((CS::Animation::iSkeletonFactory const *)arg1)->HasBone(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_SetBoneName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_SetBoneName",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_SetBoneName" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_SetBoneName" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFactory_SetBoneName" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->SetBoneName(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetBoneName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetBoneName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetBoneName" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_GetBoneName" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (char *)((CS::Animation::iSkeletonFactory const *)arg1)->GetBoneName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetTopBoneID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetTopBoneID",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetTopBoneID" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  result = ((CS::Animation::iSkeletonFactory const *)arg1)->GetTopBoneID();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetTransformBoneSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetTransformBoneSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetTransformBoneSpace" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_GetTransformBoneSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFactory_GetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_GetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonFactory_GetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_GetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  ((CS::Animation::iSkeletonFactory const *)arg1)->GetTransformBoneSpace(arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_SetTransformBoneSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_SetTransformBoneSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_SetTransformBoneSpace" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_SetTransformBoneSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFactory_SetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_SetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonFactory_SetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_SetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  (arg1)->SetTransformBoneSpace(arg2,(csQuaternion const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetTransformAbsSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetTransformAbsSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetTransformAbsSpace" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_GetTransformAbsSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFactory_GetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_GetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonFactory_GetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_GetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  ((CS::Animation::iSkeletonFactory const *)arg1)->GetTransformAbsSpace(arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_SetTransformAbsSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_SetTransformAbsSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_SetTransformAbsSpace" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_SetTransformAbsSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFactory_SetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_SetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonFactory_SetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonFactory_SetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  (arg1)->SetTransformAbsSpace(arg2,(csQuaternion const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_CreateSkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeleton > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_CreateSkeleton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_CreateSkeleton" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  result = (arg1)->CreateSkeleton();
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeleton >(static_cast< const csPtr< CS::Animation::iSkeleton >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeleton_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetAnimationPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimPacketFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetAnimationPacket",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetAnimationPacket" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  result = (CS::Animation::iSkeletonAnimPacketFactory *)((CS::Animation::iSkeletonFactory const *)arg1)->GetAnimationPacket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_SetAnimationPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  CS::Animation::iSkeletonAnimPacketFactory *arg2 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_SetAnimationPacket",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_SetAnimationPacket" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonFactory_SetAnimationPacket" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp2);
  (arg1)->SetAnimationPacket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_SetAutoStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_SetAutoStart",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_SetAutoStart" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFactory_SetAutoStart" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAutoStart(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetAutoStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetAutoStart",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetAutoStart" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  result = (bool)(arg1)->GetAutoStart();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_Description(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csString result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_Description",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_Description" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  result = ((CS::Animation::iSkeletonFactory const *)arg1)->Description();
  {
    const char *res = (&result)->GetData();
    resultobj = PyString_FromString(res);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_GetBoneOrderList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csArray< CS::Animation::BoneID > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_GetBoneOrderList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFactory_GetBoneOrderList" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  {
    csArray< CS::Animation::BoneID > const &_result_ref = (arg1)->GetBoneOrderList();
    result = (csArray< CS::Animation::BoneID > *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFactory *arg1 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp1);
  delete_CS_Animation_iSkeletonFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeleton_GetSceneNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iSceneNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetSceneNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetSceneNode" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (iSceneNode *)(arg1)->GetSceneNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iSceneNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetTransformBoneSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetTransformBoneSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetTransformBoneSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeleton_GetTransformBoneSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeleton_GetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_GetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeleton_GetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_GetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  ((CS::Animation::iSkeleton const *)arg1)->GetTransformBoneSpace(arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_SetTransformBoneSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_SetTransformBoneSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_SetTransformBoneSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeleton_SetTransformBoneSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeleton_SetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_SetTransformBoneSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeleton_SetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_SetTransformBoneSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  (arg1)->SetTransformBoneSpace(arg2,(csQuaternion const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetTransformAbsSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetTransformAbsSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetTransformAbsSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeleton_GetTransformAbsSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeleton_GetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_GetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeleton_GetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_GetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  ((CS::Animation::iSkeleton const *)arg1)->GetTransformAbsSpace(arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_SetTransformAbsSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_SetTransformAbsSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_SetTransformAbsSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeleton_SetTransformAbsSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeleton_SetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_SetTransformAbsSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeleton_SetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_SetTransformAbsSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  (arg1)->SetTransformAbsSpace(arg2,(csQuaternion const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetTransformBindSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetTransformBindSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetTransformBindSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeleton_GetTransformBindSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeleton_GetTransformBindSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_GetTransformBindSpace" "', argument " "3"" of type '" "csQuaternion &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeleton_GetTransformBindSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_GetTransformBindSpace" "', argument " "4"" of type '" "csVector3 &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  ((CS::Animation::iSkeleton const *)arg1)->GetTransformBindSpace(arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_SetTransformBindSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  csQuaternion *arg3 = 0 ;
  csVector3 *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_SetTransformBindSpace",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_SetTransformBindSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeleton_SetTransformBindSpace" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeleton_SetTransformBindSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_SetTransformBindSpace" "', argument " "3"" of type '" "csQuaternion const &""'"); 
  }
  arg3 = reinterpret_cast< csQuaternion * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeleton_SetTransformBindSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeleton_SetTransformBindSpace" "', argument " "4"" of type '" "csVector3 const &""'"); 
  }
  arg4 = reinterpret_cast< csVector3 * >(argp4);
  (arg1)->SetTransformBindSpace(arg2,(csQuaternion const &)*arg3,(csVector3 const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetStateAbsSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::csSkeletalState > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetStateAbsSpace",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetStateAbsSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (arg1)->GetStateAbsSpace();
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::csSkeletalState >(static_cast< const csPtr< CS::Animation::csSkeletalState >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__csSkeletalState_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetStateBoneSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::csSkeletalState > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetStateBoneSpace",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetStateBoneSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (arg1)->GetStateBoneSpace();
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::csSkeletalState >(static_cast< const csPtr< CS::Animation::csSkeletalState >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__csSkeletalState_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetStateBindSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::csSkeletalState > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetStateBindSpace",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetStateBindSpace" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (arg1)->GetStateBindSpace();
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::csSkeletalState >(static_cast< const csPtr< CS::Animation::csSkeletalState >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__csSkeletalState_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetFactory" "', argument " "1"" of type '" "CS::Animation::iSkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (CS::Animation::iSkeletonFactory *)((CS::Animation::iSkeleton const *)arg1)->GetFactory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetAnimationPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimPacket *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetAnimationPacket",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetAnimationPacket" "', argument " "1"" of type '" "CS::Animation::iSkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (CS::Animation::iSkeletonAnimPacket *)((CS::Animation::iSkeleton const *)arg1)->GetAnimationPacket();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_SetAnimationPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Animation::iSkeletonAnimPacket *arg2 = (CS::Animation::iSkeletonAnimPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_SetAnimationPacket",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_SetAnimationPacket" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeleton_SetAnimationPacket" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimPacket *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimPacket * >(argp2);
  (arg1)->SetAnimationPacket(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_RecreateSkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_RecreateSkeleton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_RecreateSkeleton" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  (arg1)->RecreateSkeleton();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_UpdateSkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_UpdateSkeleton",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_UpdateSkeleton" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeleton_UpdateSkeleton" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->UpdateSkeleton(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetSkeletonStateVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetSkeletonStateVersion",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetSkeletonStateVersion" "', argument " "1"" of type '" "CS::Animation::iSkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (unsigned int)((CS::Animation::iSkeleton const *)arg1)->GetSkeletonStateVersion();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_SetAnimatedMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  CS::Mesh::iAnimatedMesh *arg2 = (CS::Mesh::iAnimatedMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_SetAnimatedMesh",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_SetAnimatedMesh" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Mesh__iAnimatedMesh, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeleton_SetAnimatedMesh" "', argument " "2"" of type '" "CS::Mesh::iAnimatedMesh *""'"); 
  }
  arg2 = reinterpret_cast< CS::Mesh::iAnimatedMesh * >(argp2);
  (arg1)->SetAnimatedMesh(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_GetAnimatedMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Mesh::iAnimatedMesh *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_GetAnimatedMesh",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_GetAnimatedMesh" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  result = (CS::Mesh::iAnimatedMesh *)(arg1)->GetAnimatedMesh();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Mesh__iAnimatedMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_ResetSkeletonState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_ResetSkeletonState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeleton_ResetSkeletonState" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  (arg1)->ResetSkeletonState();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeleton_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeleton_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeleton_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeleton *arg1 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeleton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeleton, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeleton" "', argument " "1"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeleton * >(argp1);
  delete_CS_Animation_iSkeleton(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeleton_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeleton, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_csSkeletalState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_csSkeletalState",0,0)) SWIG_fail;
  result = (CS::Animation::csSkeletalState *)new CS::Animation::csSkeletalState();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__csSkeletalState, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_csSkeletalState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_csSkeletalState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_csSkeletalState" "', argument " "1"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_GetVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_GetVector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_GetVector" "', argument " "1"" of type '" "CS::Animation::csSkeletalState const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSkeletalState_GetVector" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 const &_result_ref = ((CS::Animation::csSkeletalState const *)arg1)->GetVector(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_GetVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csVector3 *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_GetVector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_GetVector" "', argument " "1"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSkeletalState_GetVector" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csVector3 &_result_ref = (arg1)->GetVector(arg2);
    result = (csVector3 *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csVector3, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_GetVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__csSkeletalState, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csSkeletalState_GetVector__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__csSkeletalState, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csSkeletalState_GetVector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csSkeletalState_GetVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetVector(CS::Animation::csSkeletalState const *,size_t)\n"
    "    GetVector(CS::Animation::csSkeletalState *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_GetQuaternion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_GetQuaternion",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_GetQuaternion" "', argument " "1"" of type '" "CS::Animation::csSkeletalState const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSkeletalState_GetQuaternion" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csQuaternion const &_result_ref = ((CS::Animation::csSkeletalState const *)arg1)->GetQuaternion(arg2);
    result = (csQuaternion *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_GetQuaternion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  csQuaternion *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_GetQuaternion",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_GetQuaternion" "', argument " "1"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSkeletalState_GetQuaternion" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    csQuaternion &_result_ref = (arg1)->GetQuaternion(arg2);
    result = (csQuaternion *) &_result_ref;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_csQuaternion, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_GetQuaternion(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__csSkeletalState, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csSkeletalState_GetQuaternion__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__csSkeletalState, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_csSkeletalState_GetQuaternion__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'csSkeletalState_GetQuaternion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    GetQuaternion(CS::Animation::csSkeletalState const *,size_t)\n"
    "    GetQuaternion(CS::Animation::csSkeletalState *,size_t)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_IsBoneUsed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_IsBoneUsed",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_IsBoneUsed" "', argument " "1"" of type '" "CS::Animation::csSkeletalState const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSkeletalState_IsBoneUsed" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (bool)((CS::Animation::csSkeletalState const *)arg1)->IsBoneUsed(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_SetBoneUsed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_SetBoneUsed",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_SetBoneUsed" "', argument " "1"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSkeletalState_SetBoneUsed" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  (arg1)->SetBoneUsed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_GetBoneCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_GetBoneCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_GetBoneCount" "', argument " "1"" of type '" "CS::Animation::csSkeletalState const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  result = ((CS::Animation::csSkeletalState const *)arg1)->GetBoneCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_csSkeletalState_Setup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::csSkeletalState *arg1 = (CS::Animation::csSkeletalState *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"csSkeletalState_Setup",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "csSkeletalState_Setup" "', argument " "1"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "csSkeletalState_Setup" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->Setup(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *csSkeletalState_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__csSkeletalState, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodyManager_CreateBodySkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyManager *arg1 = (CS::Animation::iBodyManager *) 0 ;
  char *arg2 = (char *) 0 ;
  CS::Animation::iSkeletonFactory *arg3 = (CS::Animation::iSkeletonFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CS::Animation::iBodySkeleton *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyManager_CreateBodySkeleton",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyManager_CreateBodySkeleton" "', argument " "1"" of type '" "CS::Animation::iBodyManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyManager_CreateBodySkeleton" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iBodyManager_CreateBodySkeleton" "', argument " "3"" of type '" "CS::Animation::iSkeletonFactory *""'"); 
  }
  arg3 = reinterpret_cast< CS::Animation::iSkeletonFactory * >(argp3);
  result = (CS::Animation::iBodySkeleton *)(arg1)->CreateBodySkeleton((char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyManager_FindBodySkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyManager *arg1 = (CS::Animation::iBodyManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodySkeleton *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyManager_FindBodySkeleton",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyManager_FindBodySkeleton" "', argument " "1"" of type '" "CS::Animation::iBodyManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyManager_FindBodySkeleton" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iBodySkeleton *)(arg1)->FindBodySkeleton((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyManager_ClearBodySkeletons(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyManager *arg1 = (CS::Animation::iBodyManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyManager_ClearBodySkeletons",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyManager_ClearBodySkeletons" "', argument " "1"" of type '" "CS::Animation::iBodyManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyManager * >(argp1);
  (arg1)->ClearBodySkeletons();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodyManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodyManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyManager *arg1 = (CS::Animation::iBodyManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodyManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodyManager" "', argument " "1"" of type '" "CS::Animation::iBodyManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyManager * >(argp1);
  delete_CS_Animation_iBodyManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodyManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodyManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodySkeleton_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_GetName" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  result = (char *)((CS::Animation::iBodySkeleton const *)arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_GetSkeletonFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_GetSkeletonFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_GetSkeletonFactory" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  result = (CS::Animation::iSkeletonFactory *)((CS::Animation::iBodySkeleton const *)arg1)->GetSkeletonFactory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_ClearAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_ClearAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_ClearAll" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  (arg1)->ClearAll();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_CreateBodyBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodyBone *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_CreateBodyBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_CreateBodyBone" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodySkeleton_CreateBodyBone" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (CS::Animation::iBodyBone *)(arg1)->CreateBodyBone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_FindBodyBone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodyBone *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_FindBodyBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_FindBodyBone" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodySkeleton_FindBodyBone" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iBodyBone *)((CS::Animation::iBodySkeleton const *)arg1)->FindBodyBone((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_ClearBodyBones(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_ClearBodyBones",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_ClearBodyBones" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  (arg1)->ClearBodyBones();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_CreateBodyChain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  char *arg2 = (char *) 0 ;
  CS::Animation::BoneID arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CS::Animation::iBodyChain *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_CreateBodyChain",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_CreateBodyChain" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodySkeleton_CreateBodyChain" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iBodySkeleton_CreateBodyChain" "', argument " "3"" of type '" "CS::Animation::BoneID""'");
  } 
  arg3 = static_cast< CS::Animation::BoneID >(val3);
  result = (CS::Animation::iBodyChain *)(arg1)->CreateBodyChain((char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_FindBodyChain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodyChain *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_FindBodyChain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_FindBodyChain" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodySkeleton_FindBodyChain" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iBodyChain *)((CS::Animation::iBodySkeleton const *)arg1)->FindBodyChain((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_ClearBodyChains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_ClearBodyChains",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_ClearBodyChains" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  (arg1)->ClearBodyChains();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_FindBodyBone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodyBone *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_FindBodyBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodySkeleton_FindBodyBone" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodySkeleton_FindBodyBone" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (CS::Animation::iBodyBone *)((CS::Animation::iBodySkeleton const *)arg1)->FindBodyBone(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_FindBodyBone(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 2); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iBodySkeleton, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_iBodySkeleton_FindBodyBone__SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iBodySkeleton, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iBodySkeleton_FindBodyBone__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iBodySkeleton_FindBodyBone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    FindBodyBone(CS::Animation::iBodySkeleton const *,char const *)\n"
    "    FindBodyBone(CS::Animation::iBodySkeleton const *,CS::Animation::BoneID)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodySkeleton_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodySkeleton_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodySkeleton_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodySkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodySkeleton *arg1 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodySkeleton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodySkeleton, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodySkeleton" "', argument " "1"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp1);
  delete_CS_Animation_iBodySkeleton(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodySkeleton_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodySkeleton, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodyBone_GetAnimeshBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_GetAnimeshBone",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_GetAnimeshBone" "', argument " "1"" of type '" "CS::Animation::iBodyBone const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  result = ((CS::Animation::iBodyBone const *)arg1)->GetAnimeshBone();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_CreateBoneProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodyBoneProperties *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_CreateBoneProperties",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_CreateBoneProperties" "', argument " "1"" of type '" "CS::Animation::iBodyBone *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  result = (CS::Animation::iBodyBoneProperties *)(arg1)->CreateBoneProperties();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_GetBoneProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodyBoneProperties *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_GetBoneProperties",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_GetBoneProperties" "', argument " "1"" of type '" "CS::Animation::iBodyBone const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  result = (CS::Animation::iBodyBoneProperties *)((CS::Animation::iBodyBone const *)arg1)->GetBoneProperties();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_CreateBoneJoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodyBoneJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_CreateBoneJoint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_CreateBoneJoint" "', argument " "1"" of type '" "CS::Animation::iBodyBone *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  result = (CS::Animation::iBodyBoneJoint *)(arg1)->CreateBoneJoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_GetBoneJoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodyBoneJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_GetBoneJoint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_GetBoneJoint" "', argument " "1"" of type '" "CS::Animation::iBodyBone const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  result = (CS::Animation::iBodyBoneJoint *)((CS::Animation::iBodyBone const *)arg1)->GetBoneJoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_CreateBoneCollider(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodyBoneCollider *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_CreateBoneCollider",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_CreateBoneCollider" "', argument " "1"" of type '" "CS::Animation::iBodyBone *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  result = (CS::Animation::iBodyBoneCollider *)(arg1)->CreateBoneCollider();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_GetBoneColliderCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_GetBoneColliderCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_GetBoneColliderCount" "', argument " "1"" of type '" "CS::Animation::iBodyBone const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  result = ((CS::Animation::iBodyBone const *)arg1)->GetBoneColliderCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_GetBoneCollider(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodyBoneCollider *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_GetBoneCollider",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBone_GetBoneCollider" "', argument " "1"" of type '" "CS::Animation::iBodyBone const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBone_GetBoneCollider" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (CS::Animation::iBodyBoneCollider *)((CS::Animation::iBodyBone const *)arg1)->GetBoneCollider(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBone_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBone_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodyBone_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodyBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBone *arg1 = (CS::Animation::iBodyBone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodyBone",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBone, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodyBone" "', argument " "1"" of type '" "CS::Animation::iBodyBone *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBone * >(argp1);
  delete_CS_Animation_iBodyBone(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodyBone_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodyBone, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodyChain_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChain *arg1 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChain_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChain_GetName" "', argument " "1"" of type '" "CS::Animation::iBodyChain const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChain * >(argp1);
  result = (char *)((CS::Animation::iBodyChain const *)arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChain_GetBodySkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChain *arg1 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodySkeleton *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChain_GetBodySkeleton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChain_GetBodySkeleton" "', argument " "1"" of type '" "CS::Animation::iBodyChain const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChain * >(argp1);
  result = (CS::Animation::iBodySkeleton *)((CS::Animation::iBodyChain const *)arg1)->GetBodySkeleton();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChain_GetRootNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChain *arg1 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodyChainNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChain_GetRootNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChain_GetRootNode" "', argument " "1"" of type '" "CS::Animation::iBodyChain const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChain * >(argp1);
  result = (CS::Animation::iBodyChainNode *)((CS::Animation::iBodyChain const *)arg1)->GetRootNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChain_AddSubChain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChain *arg1 = (CS::Animation::iBodyChain *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChain_AddSubChain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChain_AddSubChain" "', argument " "1"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChain * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyChain_AddSubChain" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (bool)(arg1)->AddSubChain(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChain_AddAllSubChains(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChain *arg1 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChain_AddAllSubChains",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChain_AddAllSubChains" "', argument " "1"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChain * >(argp1);
  result = (bool)(arg1)->AddAllSubChains();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChain_DebugPrint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChain *arg1 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChain_DebugPrint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChain_DebugPrint" "', argument " "1"" of type '" "CS::Animation::iBodyChain const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChain * >(argp1);
  ((CS::Animation::iBodyChain const *)arg1)->DebugPrint();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChain_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChain_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodyChain_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodyChain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChain *arg1 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodyChain",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChain, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodyChain" "', argument " "1"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChain * >(argp1);
  delete_CS_Animation_iBodyChain(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodyChain_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodyChain, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodyChainNode_GetAnimeshBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChainNode *arg1 = (CS::Animation::iBodyChainNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChainNode_GetAnimeshBone",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChainNode_GetAnimeshBone" "', argument " "1"" of type '" "CS::Animation::iBodyChainNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChainNode * >(argp1);
  result = ((CS::Animation::iBodyChainNode const *)arg1)->GetAnimeshBone();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChainNode_GetChildCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChainNode *arg1 = (CS::Animation::iBodyChainNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChainNode_GetChildCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChainNode_GetChildCount" "', argument " "1"" of type '" "CS::Animation::iBodyChainNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChainNode * >(argp1);
  result = ((CS::Animation::iBodyChainNode const *)arg1)->GetChildCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChainNode_GetChild(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChainNode *arg1 = (CS::Animation::iBodyChainNode *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodyChainNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChainNode_GetChild",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChainNode_GetChild" "', argument " "1"" of type '" "CS::Animation::iBodyChainNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChainNode * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyChainNode_GetChild" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (CS::Animation::iBodyChainNode *)((CS::Animation::iBodyChainNode const *)arg1)->GetChild(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChainNode_GetParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChainNode *arg1 = (CS::Animation::iBodyChainNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodyChainNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChainNode_GetParent",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChainNode_GetParent" "', argument " "1"" of type '" "CS::Animation::iBodyChainNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChainNode * >(argp1);
  result = (CS::Animation::iBodyChainNode *)((CS::Animation::iBodyChainNode const *)arg1)->GetParent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChainNode_FindSubChild(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChainNode *arg1 = (CS::Animation::iBodyChainNode *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iBodyChainNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChainNode_FindSubChild",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChainNode_FindSubChild" "', argument " "1"" of type '" "CS::Animation::iBodyChainNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChainNode * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyChainNode_FindSubChild" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (CS::Animation::iBodyChainNode *)((CS::Animation::iBodyChainNode const *)arg1)->FindSubChild(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChainNode_DebugPrint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChainNode *arg1 = (CS::Animation::iBodyChainNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChainNode_DebugPrint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChainNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyChainNode_DebugPrint" "', argument " "1"" of type '" "CS::Animation::iBodyChainNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChainNode * >(argp1);
  ((CS::Animation::iBodyChainNode const *)arg1)->DebugPrint();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyChainNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyChainNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodyChainNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodyChainNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyChainNode *arg1 = (CS::Animation::iBodyChainNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodyChainNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyChainNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodyChainNode" "', argument " "1"" of type '" "CS::Animation::iBodyChainNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyChainNode * >(argp1);
  delete_CS_Animation_iBodyChainNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodyChainNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodyChainNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodyBoneProperties_SetMass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneProperties *arg1 = (CS::Animation::iBodyBoneProperties *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneProperties_SetMass",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneProperties_SetMass" "', argument " "1"" of type '" "CS::Animation::iBodyBoneProperties *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneProperties * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneProperties_SetMass" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetMass(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneProperties_GetMass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneProperties *arg1 = (CS::Animation::iBodyBoneProperties *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneProperties_GetMass",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneProperties_GetMass" "', argument " "1"" of type '" "CS::Animation::iBodyBoneProperties const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneProperties * >(argp1);
  result = (float)((CS::Animation::iBodyBoneProperties const *)arg1)->GetMass();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneProperties_SetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneProperties *arg1 = (CS::Animation::iBodyBoneProperties *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneProperties_SetCenter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneProperties_SetCenter" "', argument " "1"" of type '" "CS::Animation::iBodyBoneProperties *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneProperties * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneProperties_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneProperties_SetCenter" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetCenter((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneProperties_GetCenter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneProperties *arg1 = (CS::Animation::iBodyBoneProperties *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneProperties_GetCenter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneProperties_GetCenter" "', argument " "1"" of type '" "CS::Animation::iBodyBoneProperties const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneProperties * >(argp1);
  result = ((CS::Animation::iBodyBoneProperties const *)arg1)->GetCenter();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneProperties_SetInertia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneProperties *arg1 = (CS::Animation::iBodyBoneProperties *) 0 ;
  csMatrix3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneProperties_SetInertia",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneProperties_SetInertia" "', argument " "1"" of type '" "CS::Animation::iBodyBoneProperties *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneProperties * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csMatrix3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneProperties_SetInertia" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneProperties_SetInertia" "', argument " "2"" of type '" "csMatrix3 const &""'"); 
  }
  arg2 = reinterpret_cast< csMatrix3 * >(argp2);
  (arg1)->SetInertia((csMatrix3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneProperties_GetInertia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneProperties *arg1 = (CS::Animation::iBodyBoneProperties *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csMatrix3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneProperties_GetInertia",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneProperties, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneProperties_GetInertia" "', argument " "1"" of type '" "CS::Animation::iBodyBoneProperties const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneProperties * >(argp1);
  result = ((CS::Animation::iBodyBoneProperties const *)arg1)->GetInertia();
  resultobj = SWIG_NewPointerObj((new csMatrix3(static_cast< const csMatrix3& >(result))), SWIGTYPE_p_csMatrix3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneProperties_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneProperties_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodyBoneProperties_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodyBoneProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneProperties *arg1 = (CS::Animation::iBodyBoneProperties *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodyBoneProperties",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneProperties, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodyBoneProperties" "', argument " "1"" of type '" "CS::Animation::iBodyBoneProperties *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneProperties * >(argp1);
  delete_CS_Animation_iBodyBoneProperties(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodyBoneProperties_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodyBoneProperties, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetBounce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetBounce",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetBounce" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneJoint_SetBounce" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneJoint_SetBounce" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetBounce((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetMaximumAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetMaximumAngle",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetMaximumAngle" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneJoint_SetMaximumAngle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneJoint_SetMaximumAngle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetMaximumAngle((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetMaximumDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetMaximumDistance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetMaximumDistance" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneJoint_SetMaximumDistance" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneJoint_SetMaximumDistance" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetMaximumDistance((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetMinimumAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetMinimumAngle",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetMinimumAngle" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneJoint_SetMinimumAngle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneJoint_SetMinimumAngle" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetMinimumAngle((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetMinimumDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetMinimumDistance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetMinimumDistance" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneJoint_SetMinimumDistance" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneJoint_SetMinimumDistance" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  (arg1)->SetMinimumDistance((csVector3 const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetRotConstraints(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetRotConstraints",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetRotConstraints" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneJoint_SetRotConstraints" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iBodyBoneJoint_SetRotConstraints" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iBodyBoneJoint_SetRotConstraints" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->SetRotConstraints(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetTransConstraints(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetTransConstraints",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetTransConstraints" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneJoint_SetTransConstraints" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iBodyBoneJoint_SetTransConstraints" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iBodyBoneJoint_SetTransConstraints" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->SetTransConstraints(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_SetTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  csOrthoTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_SetTransform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_SetTransform" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csOrthoTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneJoint_SetTransform" "', argument " "2"" of type '" "csOrthoTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneJoint_SetTransform" "', argument " "2"" of type '" "csOrthoTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csOrthoTransform * >(argp2);
  (arg1)->SetTransform((csOrthoTransform const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_GetBounce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_GetBounce",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_GetBounce" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = ((CS::Animation::iBodyBoneJoint const *)arg1)->GetBounce();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_GetMaximumAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_GetMaximumAngle",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_GetMaximumAngle" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = ((CS::Animation::iBodyBoneJoint const *)arg1)->GetMaximumAngle();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_GetMaximumDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_GetMaximumDistance",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_GetMaximumDistance" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = ((CS::Animation::iBodyBoneJoint const *)arg1)->GetMaximumDistance();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_GetMinimumAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_GetMinimumAngle",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_GetMinimumAngle" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = ((CS::Animation::iBodyBoneJoint const *)arg1)->GetMinimumAngle();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_GetMinimumDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csVector3 result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_GetMinimumDistance",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_GetMinimumDistance" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = ((CS::Animation::iBodyBoneJoint const *)arg1)->GetMinimumDistance();
  resultobj = SWIG_NewPointerObj((new csVector3(static_cast< const csVector3& >(result))), SWIGTYPE_p_csVector3, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_IsXRotConstrained(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_IsXRotConstrained",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_IsXRotConstrained" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = (bool)((CS::Animation::iBodyBoneJoint const *)arg1)->IsXRotConstrained();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_IsXTransConstrained(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_IsXTransConstrained",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_IsXTransConstrained" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = (bool)((CS::Animation::iBodyBoneJoint const *)arg1)->IsXTransConstrained();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_IsYRotConstrained(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_IsYRotConstrained",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_IsYRotConstrained" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = (bool)((CS::Animation::iBodyBoneJoint const *)arg1)->IsYRotConstrained();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_IsYTransConstrained(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_IsYTransConstrained",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_IsYTransConstrained" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = (bool)((CS::Animation::iBodyBoneJoint const *)arg1)->IsYTransConstrained();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_IsZRotConstrained(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_IsZRotConstrained",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_IsZRotConstrained" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = (bool)((CS::Animation::iBodyBoneJoint const *)arg1)->IsZRotConstrained();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_IsZTransConstrained(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_IsZTransConstrained",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_IsZTransConstrained" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = (bool)((CS::Animation::iBodyBoneJoint const *)arg1)->IsZTransConstrained();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_GetTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csOrthoTransform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_GetTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneJoint_GetTransform" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  result = ((CS::Animation::iBodyBoneJoint const *)arg1)->GetTransform();
  resultobj = SWIG_NewPointerObj((new csOrthoTransform(static_cast< const csOrthoTransform& >(result))), SWIGTYPE_p_csOrthoTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneJoint_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneJoint_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodyBoneJoint_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodyBoneJoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneJoint *arg1 = (CS::Animation::iBodyBoneJoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodyBoneJoint",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneJoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodyBoneJoint" "', argument " "1"" of type '" "CS::Animation::iBodyBoneJoint *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneJoint * >(argp1);
  delete_CS_Animation_iBodyBoneJoint(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodyBoneJoint_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodyBoneJoint, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetBoxGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetBoxGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetBoxGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_SetBoxGeometry" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_SetBoxGeometry" "', argument " "2"" of type '" "csVector3 const &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)(arg1)->SetBoxGeometry((csVector3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetCapsuleGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetCapsuleGeometry",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetCapsuleGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneCollider_SetCapsuleGeometry" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iBodyBoneCollider_SetCapsuleGeometry" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)(arg1)->SetCapsuleGeometry(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetConvexMeshGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetConvexMeshGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetConvexMeshGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iMeshWrapper, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_SetConvexMeshGeometry" "', argument " "2"" of type '" "iMeshWrapper *""'"); 
  }
  arg2 = reinterpret_cast< iMeshWrapper * >(argp2);
  result = (bool)(arg1)->SetConvexMeshGeometry(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetCylinderGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetCylinderGeometry",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetCylinderGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneCollider_SetCylinderGeometry" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iBodyBoneCollider_SetCylinderGeometry" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)(arg1)->SetCylinderGeometry(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetMeshGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  iMeshWrapper *arg2 = (iMeshWrapper *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetMeshGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetMeshGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iMeshWrapper, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_SetMeshGeometry" "', argument " "2"" of type '" "iMeshWrapper *""'"); 
  }
  arg2 = reinterpret_cast< iMeshWrapper * >(argp2);
  result = (bool)(arg1)->SetMeshGeometry(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetPlaneGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetPlaneGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetPlaneGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_SetPlaneGeometry" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_SetPlaneGeometry" "', argument " "2"" of type '" "csPlane3 const &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (bool)(arg1)->SetPlaneGeometry((csPlane3 const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetSphereGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetSphereGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetSphereGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_SetSphereGeometry" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_SetSphereGeometry" "', argument " "2"" of type '" "csSphere const &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  result = (bool)(arg1)->SetSphereGeometry((csSphere const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetGeometryType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csColliderGeometryType result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetGeometryType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetGeometryType" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  result = ((CS::Animation::iBodyBoneCollider const *)arg1)->GetGeometryType();
  resultobj = SWIG_NewPointerObj((new csColliderGeometryType(static_cast< const csColliderGeometryType& >(result))), SWIGTYPE_p_csColliderGeometryType, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetBoxGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  csVector3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetBoxGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetBoxGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_GetBoxGeometry" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetBoxGeometry" "', argument " "2"" of type '" "csVector3 &""'"); 
  }
  arg2 = reinterpret_cast< csVector3 * >(argp2);
  result = (bool)((CS::Animation::iBodyBoneCollider const *)arg1)->GetBoxGeometry(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetCapsuleGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float *arg2 = 0 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetCapsuleGeometry",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetCapsuleGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_GetCapsuleGeometry" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetCapsuleGeometry" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iBodyBoneCollider_GetCapsuleGeometry" "', argument " "3"" of type '" "float &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetCapsuleGeometry" "', argument " "3"" of type '" "float &""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  result = (bool)((CS::Animation::iBodyBoneCollider const *)arg1)->GetCapsuleGeometry(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetConvexMeshGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  iMeshWrapper **arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetConvexMeshGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetConvexMeshGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_p_iMeshWrapper,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_GetConvexMeshGeometry" "', argument " "2"" of type '" "iMeshWrapper *&""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetConvexMeshGeometry" "', argument " "2"" of type '" "iMeshWrapper *&""'"); 
  }
  arg2 = reinterpret_cast< iMeshWrapper ** >(argp2);
  result = (bool)((CS::Animation::iBodyBoneCollider const *)arg1)->GetConvexMeshGeometry(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetCylinderGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float *arg2 = 0 ;
  float *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetCylinderGeometry",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetCylinderGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_GetCylinderGeometry" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetCylinderGeometry" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iBodyBoneCollider_GetCylinderGeometry" "', argument " "3"" of type '" "float &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetCylinderGeometry" "', argument " "3"" of type '" "float &""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  result = (bool)((CS::Animation::iBodyBoneCollider const *)arg1)->GetCylinderGeometry(*arg2,*arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetMeshGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  iMeshWrapper **arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetMeshGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetMeshGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_p_iMeshWrapper,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_GetMeshGeometry" "', argument " "2"" of type '" "iMeshWrapper *&""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetMeshGeometry" "', argument " "2"" of type '" "iMeshWrapper *&""'"); 
  }
  arg2 = reinterpret_cast< iMeshWrapper ** >(argp2);
  result = (bool)((CS::Animation::iBodyBoneCollider const *)arg1)->GetMeshGeometry(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetPlaneGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  csPlane3 *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetPlaneGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetPlaneGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csPlane3,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_GetPlaneGeometry" "', argument " "2"" of type '" "csPlane3 &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetPlaneGeometry" "', argument " "2"" of type '" "csPlane3 &""'"); 
  }
  arg2 = reinterpret_cast< csPlane3 * >(argp2);
  result = (bool)((CS::Animation::iBodyBoneCollider const *)arg1)->GetPlaneGeometry(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetSphereGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  csSphere *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetSphereGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetSphereGeometry" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csSphere,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_GetSphereGeometry" "', argument " "2"" of type '" "csSphere &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_GetSphereGeometry" "', argument " "2"" of type '" "csSphere &""'"); 
  }
  arg2 = reinterpret_cast< csSphere * >(argp2);
  result = (bool)((CS::Animation::iBodyBoneCollider const *)arg1)->GetSphereGeometry(*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  csOrthoTransform *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetTransform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetTransform" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csOrthoTransform,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iBodyBoneCollider_SetTransform" "', argument " "2"" of type '" "csOrthoTransform const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iBodyBoneCollider_SetTransform" "', argument " "2"" of type '" "csOrthoTransform const &""'"); 
  }
  arg2 = reinterpret_cast< csOrthoTransform * >(argp2);
  (arg1)->SetTransform((csOrthoTransform const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  csOrthoTransform result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetTransform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetTransform" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  result = ((CS::Animation::iBodyBoneCollider const *)arg1)->GetTransform();
  resultobj = SWIG_NewPointerObj((new csOrthoTransform(static_cast< const csOrthoTransform& >(result))), SWIGTYPE_p_csOrthoTransform, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetFriction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetFriction",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetFriction" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneCollider_SetFriction" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetFriction(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetFriction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetFriction",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetFriction" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  result = (float)((CS::Animation::iBodyBoneCollider const *)arg1)->GetFriction();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetSoftness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetSoftness",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetSoftness" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneCollider_SetSoftness" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetSoftness(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetSoftness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetSoftness",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetSoftness" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  result = (float)((CS::Animation::iBodyBoneCollider const *)arg1)->GetSoftness();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetElasticity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetElasticity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetElasticity" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneCollider_SetElasticity" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetElasticity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetElasticity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetElasticity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetElasticity" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  result = (float)((CS::Animation::iBodyBoneCollider const *)arg1)->GetElasticity();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_SetDensity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_SetDensity",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_SetDensity" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iBodyBoneCollider_SetDensity" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetDensity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_GetDensity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_GetDensity",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iBodyBoneCollider_GetDensity" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  result = (float)((CS::Animation::iBodyBoneCollider const *)arg1)->GetDensity();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iBodyBoneCollider_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iBodyBoneCollider_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iBodyBoneCollider_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iBodyBoneCollider(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iBodyBoneCollider *arg1 = (CS::Animation::iBodyBoneCollider *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iBodyBoneCollider",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iBodyBoneCollider, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iBodyBoneCollider" "', argument " "1"" of type '" "CS::Animation::iBodyBoneCollider *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iBodyBoneCollider * >(argp1);
  delete_CS_Animation_iBodyBoneCollider(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iBodyBoneCollider_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iBodyBoneCollider, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_InvalidChannelID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable InvalidChannelID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_InvalidChannelID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(CS::Animation::InvalidChannelID));
  return pyobj;
}


SWIGINTERN int Swig_var_InvalidKeyframeID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable InvalidKeyframeID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_InvalidKeyframeID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(CS::Animation::InvalidKeyframeID));
  return pyobj;
}


SWIGINTERN int Swig_var_InvalidStateID_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable InvalidStateID is read-only.");
  return 1;
}


SWIGINTERN PyObject *Swig_var_InvalidStateID_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(CS::Animation::InvalidStateID));
  return pyobj;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_CreateInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  CS::Animation::iSkeleton *arg2 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeletonAnimPacket > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_CreateInstance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_CreateInstance" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_CreateInstance" "', argument " "2"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeleton * >(argp2);
  result = (arg1)->CreateInstance(arg2);
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeletonAnimPacket >(static_cast< const csPtr< CS::Animation::iSkeletonAnimPacket >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonAnimPacket_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_CreateAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimation *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_CreateAnimation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_CreateAnimation" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_CreateAnimation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonAnimation *)(arg1)->CreateAnimation((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_FindAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimation *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_FindAnimation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_FindAnimation" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_FindAnimation" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonAnimation *)(arg1)->FindAnimation((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_ClearAnimations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_ClearAnimations",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_ClearAnimations" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  (arg1)->ClearAnimations();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_GetAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimation *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_GetAnimation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_GetAnimation" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimPacketFactory_GetAnimation" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  result = (CS::Animation::iSkeletonAnimation *)(arg1)->GetAnimation(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_GetAnimationCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_GetAnimationCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_GetAnimationCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  result = ((CS::Animation::iSkeletonAnimPacketFactory const *)arg1)->GetAnimationCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_SetAnimationRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_SetAnimationRoot",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_SetAnimationRoot" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_SetAnimationRoot" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  (arg1)->SetAnimationRoot(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_GetAnimationRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_GetAnimationRoot",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_GetAnimationRoot" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)((CS::Animation::iSkeletonAnimPacketFactory const *)arg1)->GetAnimationRoot();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_CreateAnimationNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeletonAnimationNodeFactory > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_CreateAnimationNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_CreateAnimationNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_CreateAnimationNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->CreateAnimationNode((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeletonAnimationNodeFactory >(static_cast< const csPtr< CS::Animation::iSkeletonAnimationNodeFactory >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_CreateBlendNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeletonBlendNodeFactory > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_CreateBlendNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_CreateBlendNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_CreateBlendNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->CreateBlendNode((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeletonBlendNodeFactory >(static_cast< const csPtr< CS::Animation::iSkeletonBlendNodeFactory >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_CreatePriorityNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeletonPriorityNodeFactory > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_CreatePriorityNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_CreatePriorityNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_CreatePriorityNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->CreatePriorityNode((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeletonPriorityNodeFactory >(static_cast< const csPtr< CS::Animation::iSkeletonPriorityNodeFactory >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_CreateRandomNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeletonRandomNodeFactory > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_CreateRandomNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_CreateRandomNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_CreateRandomNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->CreateRandomNode((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeletonRandomNodeFactory >(static_cast< const csPtr< CS::Animation::iSkeletonRandomNodeFactory >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_CreateFSMNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeletonFSMNodeFactory > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_CreateFSMNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacketFactory_CreateFSMNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimPacketFactory_CreateFSMNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (arg1)->CreateFSMNode((char const *)arg2);
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeletonFSMNodeFactory >(static_cast< const csPtr< CS::Animation::iSkeletonFSMNodeFactory >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t, SWIG_POINTER_OWN |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacketFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacketFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonAnimPacketFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimPacketFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacketFactory *arg1 = (CS::Animation::iSkeletonAnimPacketFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimPacketFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimPacketFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacketFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacketFactory * >(argp1);
  delete_CS_Animation_iSkeletonAnimPacketFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimPacketFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonAnimPacket_GetFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacket *arg1 = (CS::Animation::iSkeletonAnimPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimPacketFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacket_GetFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacket_GetFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacket const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacket * >(argp1);
  result = (CS::Animation::iSkeletonAnimPacketFactory *)((CS::Animation::iSkeletonAnimPacket const *)arg1)->GetFactory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimPacketFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacket_GetAnimationRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacket *arg1 = (CS::Animation::iSkeletonAnimPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacket_GetAnimationRoot",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimPacket_GetAnimationRoot" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacket const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacket * >(argp1);
  result = (CS::Animation::iSkeletonAnimNode *)((CS::Animation::iSkeletonAnimPacket const *)arg1)->GetAnimationRoot();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimPacket_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimPacket_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonAnimPacket_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimPacket(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimPacket *arg1 = (CS::Animation::iSkeletonAnimPacket *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimPacket",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimPacket" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimPacket *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimPacket * >(argp1);
  delete_CS_Animation_iSkeletonAnimPacket(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimPacket_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetName" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  result = (char *)((CS::Animation::iSkeletonAnimation const *)arg1)->GetName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_AddChannel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::ChannelID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_AddChannel",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_AddChannel" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_AddChannel" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (CS::Animation::ChannelID)(arg1)->AddChannel(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_FindChannel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::ChannelID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_FindChannel",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_FindChannel" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_FindChannel" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (CS::Animation::ChannelID)((CS::Animation::iSkeletonAnimation const *)arg1)->FindChannel(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_AddKeyFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  float arg3 ;
  csQuaternion *arg4 = 0 ;
  csVector3 *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_AddKeyFrame",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_AddKeyFrame" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_AddKeyFrame" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimation_AddKeyFrame" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonAnimation_AddKeyFrame" "', argument " "4"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_AddKeyFrame" "', argument " "4"" of type '" "csQuaternion const &""'"); 
  }
  arg4 = reinterpret_cast< csQuaternion * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSkeletonAnimation_AddKeyFrame" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_AddKeyFrame" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  (arg1)->AddKeyFrame(arg2,arg3,(csQuaternion const &)*arg4,(csVector3 const &)*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetKeyFrameCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetKeyFrameCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetKeyFrameCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_GetKeyFrameCount" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  result = ((CS::Animation::iSkeletonAnimation const *)arg1)->GetKeyFrameCount(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetKeyFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  CS::Animation::KeyFrameID arg3 ;
  CS::Animation::BoneID *arg4 = 0 ;
  float *arg5 = 0 ;
  csQuaternion *arg6 = 0 ;
  csVector3 *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetKeyFrame",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "3"" of type '" "CS::Animation::KeyFrameID""'");
  } 
  arg3 = static_cast< CS::Animation::KeyFrameID >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "4"" of type '" "CS::Animation::BoneID &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "4"" of type '" "CS::Animation::BoneID &""'"); 
  }
  arg4 = reinterpret_cast< CS::Animation::BoneID * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "5"" of type '" "float &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "5"" of type '" "float &""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "6"" of type '" "csQuaternion &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "6"" of type '" "csQuaternion &""'"); 
  }
  arg6 = reinterpret_cast< csQuaternion * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "7"" of type '" "csVector3 &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetKeyFrame" "', argument " "7"" of type '" "csVector3 &""'"); 
  }
  arg7 = reinterpret_cast< csVector3 * >(argp7);
  (arg1)->GetKeyFrame(arg2,arg3,*arg4,*arg5,*arg6,*arg7);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetTwoKeyFrames(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  float arg3 ;
  CS::Animation::BoneID *arg4 = 0 ;
  float *arg5 = 0 ;
  csQuaternion *arg6 = 0 ;
  csVector3 *arg7 = 0 ;
  float *arg8 = 0 ;
  csQuaternion *arg9 = 0 ;
  csVector3 *arg10 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  void *argp9 = 0 ;
  int res9 = 0 ;
  void *argp10 = 0 ;
  int res10 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  PyObject * obj8 = 0 ;
  PyObject * obj9 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetTwoKeyFrames",10,10,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_size_t,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "4"" of type '" "CS::Animation::BoneID &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "4"" of type '" "CS::Animation::BoneID &""'"); 
  }
  arg4 = reinterpret_cast< CS::Animation::BoneID * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "5"" of type '" "float &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "5"" of type '" "float &""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "6"" of type '" "csQuaternion &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "6"" of type '" "csQuaternion &""'"); 
  }
  arg6 = reinterpret_cast< csQuaternion * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "7"" of type '" "csVector3 &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "7"" of type '" "csVector3 &""'"); 
  }
  arg7 = reinterpret_cast< csVector3 * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "8"" of type '" "float &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "8"" of type '" "float &""'"); 
  }
  arg8 = reinterpret_cast< float * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9, SWIGTYPE_p_csQuaternion,  0 );
  if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "9"" of type '" "csQuaternion &""'"); 
  }
  if (!argp9) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "9"" of type '" "csQuaternion &""'"); 
  }
  arg9 = reinterpret_cast< csQuaternion * >(argp9);
  res10 = SWIG_ConvertPtr(obj9, &argp10, SWIGTYPE_p_csVector3,  0 );
  if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "10"" of type '" "csVector3 &""'"); 
  }
  if (!argp10) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_GetTwoKeyFrames" "', argument " "10"" of type '" "csVector3 &""'"); 
  }
  arg10 = reinterpret_cast< csVector3 * >(argp10);
  (arg1)->GetTwoKeyFrames(arg2,arg3,*arg4,*arg5,*arg6,*arg7,*arg8,*arg9,*arg10);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_BlendState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::csSkeletalState *arg2 = (CS::Animation::csSkeletalState *) 0 ;
  float arg3 ;
  float arg4 ;
  bool arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_BlendState",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_BlendState" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimation_BlendState" "', argument " "2"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimation_BlendState" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iSkeletonAnimation_BlendState" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_bool(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iSkeletonAnimation_BlendState" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  ((CS::Animation::iSkeletonAnimation const *)arg1)->BlendState(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetDuration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetDuration",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetDuration" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  result = (float)((CS::Animation::iSkeletonAnimation const *)arg1)->GetDuration();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_SetKeyFrame(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  CS::Animation::KeyFrameID arg3 ;
  csQuaternion *arg4 = 0 ;
  csVector3 *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_SetKeyFrame",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_SetKeyFrame" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_SetKeyFrame" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimation_SetKeyFrame" "', argument " "3"" of type '" "CS::Animation::KeyFrameID""'");
  } 
  arg3 = static_cast< CS::Animation::KeyFrameID >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csQuaternion,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonAnimation_SetKeyFrame" "', argument " "4"" of type '" "csQuaternion const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_SetKeyFrame" "', argument " "4"" of type '" "csQuaternion const &""'"); 
  }
  arg4 = reinterpret_cast< csQuaternion * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "iSkeletonAnimation_SetKeyFrame" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonAnimation_SetKeyFrame" "', argument " "5"" of type '" "csVector3 const &""'"); 
  }
  arg5 = reinterpret_cast< csVector3 * >(argp5);
  (arg1)->SetKeyFrame(arg2,arg3,(csQuaternion const &)*arg4,(csVector3 const &)*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_SetFramesInBindSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_SetFramesInBindSpace",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_SetFramesInBindSpace" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_SetFramesInBindSpace" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetFramesInBindSpace(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetFramesInBindSpace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetFramesInBindSpace",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetFramesInBindSpace" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  result = (bool)((CS::Animation::iSkeletonAnimation const *)arg1)->GetFramesInBindSpace();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetChannelCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetChannelCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetChannelCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  result = ((CS::Animation::iSkeletonAnimation const *)arg1)->GetChannelCount();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_GetChannelBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_GetChannelBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_GetChannelBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_GetChannelBone" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  result = ((CS::Animation::iSkeletonAnimation const *)arg1)->GetChannelBone(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_SetChannelBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  CS::Animation::BoneID arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_SetChannelBone",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_SetChannelBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_SetChannelBone" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimation_SetChannelBone" "', argument " "3"" of type '" "CS::Animation::BoneID""'");
  } 
  arg3 = static_cast< CS::Animation::BoneID >(val3);
  (arg1)->SetChannelBone(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_RemoveChannel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  CS::Animation::ChannelID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_RemoveChannel",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimation_RemoveChannel" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimation_RemoveChannel" "', argument " "2"" of type '" "CS::Animation::ChannelID""'");
  } 
  arg2 = static_cast< CS::Animation::ChannelID >(val2);
  (arg1)->RemoveChannel(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimation_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimation_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonAnimation_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimation *arg1 = (CS::Animation::iSkeletonAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimation" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp1);
  delete_CS_Animation_iSkeletonAnimation(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimation_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimation, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonAnimCallback_AnimationFinished(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimCallback *arg1 = (CS::Animation::iSkeletonAnimCallback *) 0 ;
  CS::Animation::iSkeletonAnimNode *arg2 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimCallback_AnimationFinished",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimCallback_AnimationFinished" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimCallback *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimCallback_AnimationFinished" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp2);
  (arg1)->AnimationFinished(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimCallback_AnimationCycled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimCallback *arg1 = (CS::Animation::iSkeletonAnimCallback *) 0 ;
  CS::Animation::iSkeletonAnimNode *arg2 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimCallback_AnimationCycled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimCallback_AnimationCycled" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimCallback *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimCallback_AnimationCycled" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp2);
  (arg1)->AnimationCycled(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimCallback_PlayStateChanged(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimCallback *arg1 = (CS::Animation::iSkeletonAnimCallback *) 0 ;
  CS::Animation::iSkeletonAnimNode *arg2 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimCallback_PlayStateChanged",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimCallback_PlayStateChanged" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimCallback *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimCallback_PlayStateChanged" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimCallback_PlayStateChanged" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  (arg1)->PlayStateChanged(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimCallback_DurationChanged(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimCallback *arg1 = (CS::Animation::iSkeletonAnimCallback *) 0 ;
  CS::Animation::iSkeletonAnimNode *arg2 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimCallback_DurationChanged",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimCallback_DurationChanged" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimCallback *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimCallback * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimCallback_DurationChanged" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp2);
  (arg1)->DurationChanged(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimCallback *arg1 = (CS::Animation::iSkeletonAnimCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimCallback",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimCallback" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimCallback *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimCallback * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimCallback_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonAnimNodeFactory_CreateInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNodeFactory *arg1 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimPacket *arg2 = (CS::Animation::iSkeletonAnimPacket *) 0 ;
  CS::Animation::iSkeleton *arg3 = (CS::Animation::iSkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  SwigValueWrapper< csPtr< CS::Animation::iSkeletonAnimNode > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNodeFactory_CreateInstance",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNodeFactory_CreateInstance" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimPacket, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimNodeFactory_CreateInstance" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimPacket *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimPacket * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Animation__iSkeleton, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonAnimNodeFactory_CreateInstance" "', argument " "3"" of type '" "CS::Animation::iSkeleton *""'"); 
  }
  arg3 = reinterpret_cast< CS::Animation::iSkeleton * >(argp3);
  result = (arg1)->CreateInstance(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new csPtr< CS::Animation::iSkeletonAnimNode >(static_cast< const csPtr< CS::Animation::iSkeletonAnimNode >& >(result))), SWIGTYPE_p_csPtrT_CS__Animation__iSkeletonAnimNode_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNodeFactory_GetNodeName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNodeFactory *arg1 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNodeFactory_GetNodeName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNodeFactory_GetNodeName" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp1);
  result = (char *)((CS::Animation::iSkeletonAnimNodeFactory const *)arg1)->GetNodeName();
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNodeFactory_FindNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNodeFactory *arg1 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNodeFactory_FindNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNodeFactory_FindNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimNodeFactory_FindNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)(arg1)->FindNode((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonAnimNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNodeFactory *arg1 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonAnimNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_Play(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_Play",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_Play" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  (arg1)->Play();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_Stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_Stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_Stop" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  (arg1)->Stop();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_SetPlaybackPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_SetPlaybackPosition",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_SetPlaybackPosition" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimNode_SetPlaybackPosition" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetPlaybackPosition(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_GetPlaybackPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_GetPlaybackPosition",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_GetPlaybackPosition" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  result = (float)((CS::Animation::iSkeletonAnimNode const *)arg1)->GetPlaybackPosition();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_GetDuration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_GetDuration",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_GetDuration" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  result = (float)((CS::Animation::iSkeletonAnimNode const *)arg1)->GetDuration();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_SetPlaybackSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_SetPlaybackSpeed",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_SetPlaybackSpeed" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimNode_SetPlaybackSpeed" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetPlaybackSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_GetPlaybackSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_GetPlaybackSpeed",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_GetPlaybackSpeed" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  result = (float)((CS::Animation::iSkeletonAnimNode const *)arg1)->GetPlaybackSpeed();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_BlendState__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  CS::Animation::csSkeletalState *arg2 = (CS::Animation::csSkeletalState *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_BlendState",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_BlendState" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimNode_BlendState" "', argument " "2"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonAnimNode_BlendState" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->BlendState(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_BlendState__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  CS::Animation::csSkeletalState *arg2 = (CS::Animation::csSkeletalState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_BlendState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_BlendState" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__csSkeletalState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimNode_BlendState" "', argument " "2"" of type '" "CS::Animation::csSkeletalState *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::csSkeletalState * >(argp2);
  (arg1)->BlendState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_BlendState(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CS__Animation__csSkeletalState, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iSkeletonAnimNode_BlendState__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CS__Animation__csSkeletalState, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iSkeletonAnimNode_BlendState__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSkeletonAnimNode_BlendState'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    BlendState(CS::Animation::iSkeletonAnimNode *,CS::Animation::csSkeletalState *,float)\n"
    "    BlendState(CS::Animation::iSkeletonAnimNode *,CS::Animation::csSkeletalState *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_TickAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_TickAnimation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_TickAnimation" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimNode_TickAnimation" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->TickAnimation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_IsActive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_IsActive",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_IsActive" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  result = (bool)((CS::Animation::iSkeletonAnimNode const *)arg1)->IsActive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_GetFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_GetFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_GetFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)((CS::Animation::iSkeletonAnimNode const *)arg1)->GetFactory();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_FindNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_FindNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_FindNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimNode_FindNode" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonAnimNode *)(arg1)->FindNode((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_AddAnimationCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  CS::Animation::iSkeletonAnimCallback *arg2 = (CS::Animation::iSkeletonAnimCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_AddAnimationCallback",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_AddAnimationCallback" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimNode_AddAnimationCallback" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimCallback *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimCallback * >(argp2);
  (arg1)->AddAnimationCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_RemoveAnimationCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  CS::Animation::iSkeletonAnimCallback *arg2 = (CS::Animation::iSkeletonAnimCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_RemoveAnimationCallback",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimNode_RemoveAnimationCallback" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimCallback, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimNode_RemoveAnimationCallback" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimCallback *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimCallback * >(argp2);
  (arg1)->RemoveAnimationCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonAnimNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimNode *arg1 = (CS::Animation::iSkeletonAnimNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimNode * >(argp1);
  delete_CS_Animation_iSkeletonAnimNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_SetAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimation *arg2 = (CS::Animation::iSkeletonAnimation *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_SetAnimation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_SetAnimation" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonAnimationNodeFactory_SetAnimation" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimation *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimation * >(argp2);
  (arg1)->SetAnimation(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_GetAnimation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimation *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_GetAnimation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_GetAnimation" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  result = (CS::Animation::iSkeletonAnimation *)((CS::Animation::iSkeletonAnimationNodeFactory const *)arg1)->GetAnimation();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimation, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_SetCyclic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_SetCyclic",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_SetCyclic" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimationNodeFactory_SetCyclic" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetCyclic(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_IsCyclic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_IsCyclic",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_IsCyclic" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  result = (bool)((CS::Animation::iSkeletonAnimationNodeFactory const *)arg1)->IsCyclic();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_SetPlaybackSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_SetPlaybackSpeed",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_SetPlaybackSpeed" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimationNodeFactory_SetPlaybackSpeed" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetPlaybackSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_GetPlaybackSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_GetPlaybackSpeed",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_GetPlaybackSpeed" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  result = (float)((CS::Animation::iSkeletonAnimationNodeFactory const *)arg1)->GetPlaybackSpeed();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_SetAutomaticReset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_SetAutomaticReset",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_SetAutomaticReset" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimationNodeFactory_SetAutomaticReset" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAutomaticReset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_GetAutomaticReset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_GetAutomaticReset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_GetAutomaticReset" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  result = (bool)((CS::Animation::iSkeletonAnimationNodeFactory const *)arg1)->GetAutomaticReset();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_SetAutomaticStop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_SetAutomaticStop",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_SetAutomaticStop" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonAnimationNodeFactory_SetAutomaticStop" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAutomaticStop(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_GetAutomaticStop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_GetAutomaticStop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonAnimationNodeFactory_GetAutomaticStop" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  result = (bool)((CS::Animation::iSkeletonAnimationNodeFactory const *)arg1)->GetAutomaticStop();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonAnimationNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonAnimationNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimationNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNodeFactory *arg1 = (CS::Animation::iSkeletonAnimationNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimationNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimationNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonAnimationNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimationNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimationNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonAnimationNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonAnimationNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonAnimationNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonAnimationNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonAnimationNode *arg1 = (CS::Animation::iSkeletonAnimationNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonAnimationNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonAnimationNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonAnimationNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonAnimationNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonAnimationNode * >(argp1);
  delete_CS_Animation_iSkeletonAnimationNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonAnimationNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonAnimationNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_AddNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_AddNode",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_AddNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonBlendNodeFactory_AddNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonBlendNodeFactory_AddNode" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->AddNode(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_SetNodeWeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  uint arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_SetNodeWeight",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_SetNodeWeight" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonBlendNodeFactory_SetNodeWeight" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonBlendNodeFactory_SetNodeWeight" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetNodeWeight(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_NormalizeWeights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_NormalizeWeights",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_NormalizeWeights" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  (arg1)->NormalizeWeights();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_GetNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_GetNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_GetNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonBlendNodeFactory_GetNode" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)(arg1)->GetNode(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_GetNodeCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_GetNodeCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_GetNodeCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  result = (uint)((CS::Animation::iSkeletonBlendNodeFactory const *)arg1)->GetNodeCount();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_ClearNodes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_ClearNodes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_ClearNodes" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  (arg1)->ClearNodes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_SetSynchronizationMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  CS::Animation::SynchronizationMode arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_SetSynchronizationMode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_SetSynchronizationMode" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonBlendNodeFactory_SetSynchronizationMode" "', argument " "2"" of type '" "CS::Animation::SynchronizationMode""'");
  } 
  arg2 = static_cast< CS::Animation::SynchronizationMode >(val2);
  (arg1)->SetSynchronizationMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_GetSynchronizationMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::SynchronizationMode result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_GetSynchronizationMode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNodeFactory_GetSynchronizationMode" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  result = (CS::Animation::SynchronizationMode)((CS::Animation::iSkeletonBlendNodeFactory const *)arg1)->GetSynchronizationMode();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonBlendNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonBlendNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNodeFactory *arg1 = (CS::Animation::iSkeletonBlendNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonBlendNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonBlendNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonBlendNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonBlendNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonBlendNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonBlendNode_SetNodeWeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNode *arg1 = (CS::Animation::iSkeletonBlendNode *) 0 ;
  uint arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNode_SetNodeWeight",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNode_SetNodeWeight" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonBlendNode_SetNodeWeight" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonBlendNode_SetNodeWeight" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetNodeWeight(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNode_NormalizeWeights(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNode *arg1 = (CS::Animation::iSkeletonBlendNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNode_NormalizeWeights",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonBlendNode_NormalizeWeights" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNode * >(argp1);
  (arg1)->NormalizeWeights();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonBlendNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonBlendNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonBlendNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonBlendNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonBlendNode *arg1 = (CS::Animation::iSkeletonBlendNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonBlendNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonBlendNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonBlendNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonBlendNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonBlendNode * >(argp1);
  delete_CS_Animation_iSkeletonBlendNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonBlendNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonBlendNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonPriorityNodeFactory_AddNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNodeFactory *arg1 = (CS::Animation::iSkeletonPriorityNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNodeFactory_AddNode",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonPriorityNodeFactory_AddNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonPriorityNodeFactory_AddNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonPriorityNodeFactory_AddNode" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->AddNode(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonPriorityNodeFactory_SetNodePriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNodeFactory *arg1 = (CS::Animation::iSkeletonPriorityNodeFactory *) 0 ;
  uint arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNodeFactory_SetNodePriority",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonPriorityNodeFactory_SetNodePriority" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonPriorityNodeFactory_SetNodePriority" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonPriorityNodeFactory_SetNodePriority" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->SetNodePriority(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonPriorityNodeFactory_GetNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNodeFactory *arg1 = (CS::Animation::iSkeletonPriorityNodeFactory *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNodeFactory_GetNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonPriorityNodeFactory_GetNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonPriorityNodeFactory_GetNode" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)(arg1)->GetNode(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonPriorityNodeFactory_GetNodeCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNodeFactory *arg1 = (CS::Animation::iSkeletonPriorityNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNodeFactory_GetNodeCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonPriorityNodeFactory_GetNodeCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNodeFactory * >(argp1);
  result = (uint)((CS::Animation::iSkeletonPriorityNodeFactory const *)arg1)->GetNodeCount();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonPriorityNodeFactory_ClearNodes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNodeFactory *arg1 = (CS::Animation::iSkeletonPriorityNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNodeFactory_ClearNodes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonPriorityNodeFactory_ClearNodes" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNodeFactory * >(argp1);
  (arg1)->ClearNodes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonPriorityNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonPriorityNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonPriorityNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNodeFactory *arg1 = (CS::Animation::iSkeletonPriorityNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonPriorityNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonPriorityNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonPriorityNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonPriorityNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonPriorityNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonPriorityNode_SetNodePriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNode *arg1 = (CS::Animation::iSkeletonPriorityNode *) 0 ;
  uint arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNode_SetNodePriority",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonPriorityNode_SetNodePriority" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonPriorityNode_SetNodePriority" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonPriorityNode_SetNodePriority" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  (arg1)->SetNodePriority(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonPriorityNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonPriorityNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonPriorityNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonPriorityNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonPriorityNode *arg1 = (CS::Animation::iSkeletonPriorityNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonPriorityNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonPriorityNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonPriorityNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonPriorityNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonPriorityNode * >(argp1);
  delete_CS_Animation_iSkeletonPriorityNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonPriorityNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonPriorityNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonRandomNodeFactory_AddNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNodeFactory *arg1 = (CS::Animation::iSkeletonRandomNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNodeFactory_AddNode",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNodeFactory_AddNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRandomNodeFactory_AddNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonRandomNodeFactory_AddNode" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->AddNode(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNodeFactory_SetNodeProbability(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNodeFactory *arg1 = (CS::Animation::iSkeletonRandomNodeFactory *) 0 ;
  uint arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNodeFactory_SetNodeProbability",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNodeFactory_SetNodeProbability" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonRandomNodeFactory_SetNodeProbability" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonRandomNodeFactory_SetNodeProbability" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetNodeProbability(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNodeFactory_SetAutomaticSwitch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNodeFactory *arg1 = (CS::Animation::iSkeletonRandomNodeFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNodeFactory_SetAutomaticSwitch",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNodeFactory_SetAutomaticSwitch" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonRandomNodeFactory_SetAutomaticSwitch" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAutomaticSwitch(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNodeFactory_GetNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNodeFactory *arg1 = (CS::Animation::iSkeletonRandomNodeFactory *) 0 ;
  uint arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNodeFactory_GetNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNodeFactory_GetNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonRandomNodeFactory_GetNode" "', argument " "2"" of type '" "uint""'");
  } 
  arg2 = static_cast< uint >(val2);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)(arg1)->GetNode(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNodeFactory_GetNodeCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNodeFactory *arg1 = (CS::Animation::iSkeletonRandomNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNodeFactory_GetNodeCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNodeFactory_GetNodeCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNodeFactory * >(argp1);
  result = (uint)((CS::Animation::iSkeletonRandomNodeFactory const *)arg1)->GetNodeCount();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNodeFactory_ClearNodes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNodeFactory *arg1 = (CS::Animation::iSkeletonRandomNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNodeFactory_ClearNodes",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNodeFactory_ClearNodes" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNodeFactory * >(argp1);
  (arg1)->ClearNodes();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonRandomNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonRandomNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNodeFactory *arg1 = (CS::Animation::iSkeletonRandomNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonRandomNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonRandomNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonRandomNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonRandomNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonRandomNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonRandomNode_Switch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNode *arg1 = (CS::Animation::iSkeletonRandomNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNode_Switch",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNode_Switch" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNode * >(argp1);
  (arg1)->Switch();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNode_GetCurrentNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNode *arg1 = (CS::Animation::iSkeletonRandomNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNode_GetCurrentNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRandomNode_GetCurrentNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNode * >(argp1);
  result = (CS::Animation::iSkeletonAnimNode *)((CS::Animation::iSkeletonRandomNode const *)arg1)->GetCurrentNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRandomNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRandomNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonRandomNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonRandomNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRandomNode *arg1 = (CS::Animation::iSkeletonRandomNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonRandomNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRandomNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonRandomNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRandomNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRandomNode * >(argp1);
  delete_CS_Animation_iSkeletonRandomNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonRandomNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonRandomNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_AddState__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::StateID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_AddState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_AddState" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  result = (CS::Animation::StateID)(arg1)->AddState();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_SetStateNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg3 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_SetStateNode",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_SetStateNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_SetStateNode" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFSMNodeFactory_SetStateNode" "', argument " "3"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg3 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp3);
  (arg1)->SetStateNode(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_GetStateNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_GetStateNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_GetStateNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_GetStateNode" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)((CS::Animation::iSkeletonFSMNodeFactory const *)arg1)->GetStateNode(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_SetStateName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  char *arg3 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  char *buf3 = 0 ;
  int alloc3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_SetStateName",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_SetStateName" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_SetStateName" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  res3 = SWIG_AsCharPtrAndSize(obj2, &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFSMNodeFactory_SetStateName" "', argument " "3"" of type '" "char const *""'");
  }
  arg3 = reinterpret_cast< char * >(buf3);
  (arg1)->SetStateName(arg2,(char const *)arg3);
  resultobj = SWIG_Py_Void();
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return resultobj;
fail:
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_GetStateName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_GetStateName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_GetStateName" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_GetStateName" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  result = (char *)((CS::Animation::iSkeletonFSMNodeFactory const *)arg1)->GetStateName(arg2);
  resultobj = SWIG_FromCharPtr((const char *)result);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_FindState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::StateID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_FindState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_FindState" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonFSMNodeFactory_FindState" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::StateID)((CS::Animation::iSkeletonFSMNodeFactory const *)arg1)->FindState((char const *)arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_SetStartState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_SetStartState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_SetStartState" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_SetStartState" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  (arg1)->SetStartState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_GetStartState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::StateID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_GetStartState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_GetStartState" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  result = (CS::Animation::StateID)((CS::Animation::iSkeletonFSMNodeFactory const *)arg1)->GetStartState();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_GetStateCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_GetStateCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_GetStateCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  result = (uint)((CS::Animation::iSkeletonFSMNodeFactory const *)arg1)->GetStateCount();
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_ClearStates(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_ClearStates",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_ClearStates" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  (arg1)->ClearStates();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_SetStateTransition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  CS::Animation::StateID arg3 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg4 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_SetStateTransition",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_SetStateTransition" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_SetStateTransition" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonFSMNodeFactory_SetStateTransition" "', argument " "3"" of type '" "CS::Animation::StateID""'");
  } 
  arg3 = static_cast< CS::Animation::StateID >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonFSMNodeFactory_SetStateTransition" "', argument " "4"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg4 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp4);
  (arg1)->SetStateTransition(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_SetTransitionCrossfade(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  CS::Animation::StateID arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_SetTransitionCrossfade",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_SetTransitionCrossfade" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_SetTransitionCrossfade" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonFSMNodeFactory_SetTransitionCrossfade" "', argument " "3"" of type '" "CS::Animation::StateID""'");
  } 
  arg3 = static_cast< CS::Animation::StateID >(val3);
  ecode4 = SWIG_AsVal_float(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iSkeletonFSMNodeFactory_SetTransitionCrossfade" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "iSkeletonFSMNodeFactory_SetTransitionCrossfade" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->SetTransitionCrossfade(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_AddState__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg3 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CS::Animation::StateID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_AddState",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_AddState" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonFSMNodeFactory_AddState" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonFSMNodeFactory_AddState" "', argument " "3"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg3 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp3);
  result = (CS::Animation::StateID)(arg1)->AddState((char const *)arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_AddState(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_iSkeletonFSMNodeFactory_AddState__SWIG_0(self, args);
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iSkeletonFSMNodeFactory_AddState__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSkeletonFSMNodeFactory_AddState'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddState(CS::Animation::iSkeletonFSMNodeFactory *)\n"
    "    AddState(CS::Animation::iSkeletonFSMNodeFactory *,char const *,CS::Animation::iSkeletonAnimNodeFactory *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_SetAutomaticTransition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  CS::Animation::StateID arg2 ;
  CS::Animation::StateID arg3 ;
  bool arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_SetAutomaticTransition",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNodeFactory_SetAutomaticTransition" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNodeFactory_SetAutomaticTransition" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonFSMNodeFactory_SetAutomaticTransition" "', argument " "3"" of type '" "CS::Animation::StateID""'");
  } 
  arg3 = static_cast< CS::Animation::StateID >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "iSkeletonFSMNodeFactory_SetAutomaticTransition" "', argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  (arg1)->SetAutomaticTransition(arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonFSMNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonFSMNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNodeFactory *arg1 = (CS::Animation::iSkeletonFSMNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonFSMNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonFSMNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonFSMNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonFSMNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonFSMNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonFSMNode_SwitchToState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNode *arg1 = (CS::Animation::iSkeletonFSMNode *) 0 ;
  CS::Animation::StateID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNode_SwitchToState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNode_SwitchToState" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNode_SwitchToState" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  (arg1)->SwitchToState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNode_GetCurrentState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNode *arg1 = (CS::Animation::iSkeletonFSMNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::StateID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNode_GetCurrentState",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNode_GetCurrentState" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNode * >(argp1);
  result = (CS::Animation::StateID)((CS::Animation::iSkeletonFSMNode const *)arg1)->GetCurrentState();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNode_GetStateNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNode *arg1 = (CS::Animation::iSkeletonFSMNode *) 0 ;
  CS::Animation::StateID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonAnimNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNode_GetStateNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonFSMNode_GetStateNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonFSMNode_GetStateNode" "', argument " "2"" of type '" "CS::Animation::StateID""'");
  } 
  arg2 = static_cast< CS::Animation::StateID >(val2);
  result = (CS::Animation::iSkeletonAnimNode *)((CS::Animation::iSkeletonFSMNode const *)arg1)->GetStateNode(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonFSMNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonFSMNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonFSMNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonFSMNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonFSMNode *arg1 = (CS::Animation::iSkeletonFSMNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonFSMNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonFSMNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonFSMNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonFSMNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonFSMNode * >(argp1);
  delete_CS_Animation_iSkeletonFSMNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonFSMNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonFSMNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonIKNodeManager_CreateAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeManager *arg1 = (CS::Animation::iSkeletonIKNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  CS::Animation::iBodySkeleton *arg3 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CS::Animation::iSkeletonIKNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeManager_CreateAnimNodeFactory",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeManager_CreateAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonIKNodeManager_CreateAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonIKNodeManager_CreateAnimNodeFactory" "', argument " "3"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg3 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp3);
  result = (CS::Animation::iSkeletonIKNodeFactory *)(arg1)->CreateAnimNodeFactory((char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeManager_FindAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeManager *arg1 = (CS::Animation::iSkeletonIKNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonIKNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeManager_FindAnimNodeFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeManager_FindAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeManager const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonIKNodeManager_FindAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonIKNodeFactory *)((CS::Animation::iSkeletonIKNodeManager const *)arg1)->FindAnimNodeFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeManager_ClearAnimNodeFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeManager *arg1 = (CS::Animation::iSkeletonIKNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeManager_ClearAnimNodeFactories",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeManager_ClearAnimNodeFactories" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeManager * >(argp1);
  (arg1)->ClearAnimNodeFactories();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonIKNodeManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonIKNodeManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeManager *arg1 = (CS::Animation::iSkeletonIKNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonIKNodeManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonIKNodeManager" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeManager * >(argp1);
  delete_CS_Animation_iSkeletonIKNodeManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonIKNodeManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonIKNodeManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonIKNodeFactory_SetChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeFactory *arg1 = (CS::Animation::iSkeletonIKNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeFactory_SetChildNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeFactory_SetChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonIKNodeFactory_SetChildNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  (arg1)->SetChildNode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeFactory_GetChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeFactory *arg1 = (CS::Animation::iSkeletonIKNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeFactory_GetChildNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeFactory_GetChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeFactory * >(argp1);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)((CS::Animation::iSkeletonIKNodeFactory const *)arg1)->GetChildNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeFactory_ClearChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeFactory *arg1 = (CS::Animation::iSkeletonIKNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeFactory_ClearChildNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeFactory_ClearChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeFactory * >(argp1);
  (arg1)->ClearChildNode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeFactory_AddEffector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeFactory *arg1 = (CS::Animation::iSkeletonIKNodeFactory *) 0 ;
  CS::Animation::iBodyChain *arg2 = (CS::Animation::iBodyChain *) 0 ;
  CS::Animation::BoneID arg3 ;
  csOrthoTransform *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CS::Animation::EffectorID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeFactory_AddEffector",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeFactory_AddEffector" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonIKNodeFactory_AddEffector" "', argument " "2"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iBodyChain * >(argp2);
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonIKNodeFactory_AddEffector" "', argument " "3"" of type '" "CS::Animation::BoneID""'");
  } 
  arg3 = static_cast< CS::Animation::BoneID >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csOrthoTransform,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonIKNodeFactory_AddEffector" "', argument " "4"" of type '" "csOrthoTransform &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonIKNodeFactory_AddEffector" "', argument " "4"" of type '" "csOrthoTransform &""'"); 
  }
  arg4 = reinterpret_cast< csOrthoTransform * >(argp4);
  result = (CS::Animation::EffectorID)(arg1)->AddEffector(arg2,arg3,*arg4);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeFactory_RemoveEffector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeFactory *arg1 = (CS::Animation::iSkeletonIKNodeFactory *) 0 ;
  CS::Animation::EffectorID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeFactory_RemoveEffector",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNodeFactory_RemoveEffector" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKNodeFactory_RemoveEffector" "', argument " "2"" of type '" "CS::Animation::EffectorID""'");
  } 
  arg2 = static_cast< CS::Animation::EffectorID >(val2);
  (arg1)->RemoveEffector(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonIKNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonIKNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNodeFactory *arg1 = (CS::Animation::iSkeletonIKNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonIKNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonIKNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonIKNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonIKNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonIKNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonIKNode_AddConstraint__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNode *arg1 = (CS::Animation::iSkeletonIKNode *) 0 ;
  CS::Animation::EffectorID arg2 ;
  csOrthoTransform *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNode_AddConstraint",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "2"" of type '" "CS::Animation::EffectorID""'");
  } 
  arg2 = static_cast< CS::Animation::EffectorID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csOrthoTransform,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "3"" of type '" "csOrthoTransform &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "3"" of type '" "csOrthoTransform &""'"); 
  }
  arg3 = reinterpret_cast< csOrthoTransform * >(argp3);
  (arg1)->AddConstraint(arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNode_AddConstraint__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNode *arg1 = (CS::Animation::iSkeletonIKNode *) 0 ;
  CS::Animation::EffectorID arg2 ;
  iMovable *arg3 = (iMovable *) 0 ;
  csOrthoTransform *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNode_AddConstraint",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "2"" of type '" "CS::Animation::EffectorID""'");
  } 
  arg2 = static_cast< CS::Animation::EffectorID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iMovable, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "3"" of type '" "iMovable *""'"); 
  }
  arg3 = reinterpret_cast< iMovable * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csOrthoTransform,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "4"" of type '" "csOrthoTransform const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "4"" of type '" "csOrthoTransform const &""'"); 
  }
  arg4 = reinterpret_cast< csOrthoTransform * >(argp4);
  (arg1)->AddConstraint(arg2,arg3,(csOrthoTransform const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNode_AddConstraint__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNode *arg1 = (CS::Animation::iSkeletonIKNode *) 0 ;
  CS::Animation::EffectorID arg2 ;
  iCamera *arg3 = (iCamera *) 0 ;
  csOrthoTransform *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNode_AddConstraint",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "2"" of type '" "CS::Animation::EffectorID""'");
  } 
  arg2 = static_cast< CS::Animation::EffectorID >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_iCamera, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "3"" of type '" "iCamera *""'"); 
  }
  arg3 = reinterpret_cast< iCamera * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_csOrthoTransform,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "4"" of type '" "csOrthoTransform const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonIKNode_AddConstraint" "', argument " "4"" of type '" "csOrthoTransform const &""'"); 
  }
  arg4 = reinterpret_cast< csOrthoTransform * >(argp4);
  (arg1)->AddConstraint(arg2,arg3,(csOrthoTransform const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNode_AddConstraint(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 4); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonIKNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_csOrthoTransform, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iSkeletonIKNode_AddConstraint__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonIKNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iMovable, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csOrthoTransform, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iSkeletonIKNode_AddConstraint__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonIKNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_iCamera, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_csOrthoTransform, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_iSkeletonIKNode_AddConstraint__SWIG_2(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSkeletonIKNode_AddConstraint'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddConstraint(CS::Animation::iSkeletonIKNode *,CS::Animation::EffectorID,csOrthoTransform &)\n"
    "    AddConstraint(CS::Animation::iSkeletonIKNode *,CS::Animation::EffectorID,iMovable *,csOrthoTransform const &)\n"
    "    AddConstraint(CS::Animation::iSkeletonIKNode *,CS::Animation::EffectorID,iCamera *,csOrthoTransform const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNode_RemoveConstraint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNode *arg1 = (CS::Animation::iSkeletonIKNode *) 0 ;
  CS::Animation::EffectorID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNode_RemoveConstraint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKNode_RemoveConstraint" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNode * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKNode_RemoveConstraint" "', argument " "2"" of type '" "CS::Animation::EffectorID""'");
  } 
  arg2 = static_cast< CS::Animation::EffectorID >(val2);
  (arg1)->RemoveConstraint(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonIKNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonIKNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKNode *arg1 = (CS::Animation::iSkeletonIKNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonIKNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonIKNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKNode * >(argp1);
  delete_CS_Animation_iSkeletonIKNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonIKNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonIKNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonIKPhysicalNodeFactory_SetChainAutoReset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKPhysicalNodeFactory *arg1 = (CS::Animation::iSkeletonIKPhysicalNodeFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKPhysicalNodeFactory_SetChainAutoReset",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKPhysicalNodeFactory_SetChainAutoReset" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKPhysicalNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKPhysicalNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKPhysicalNodeFactory_SetChainAutoReset" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetChainAutoReset(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKPhysicalNodeFactory_GetChainAutoReset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKPhysicalNodeFactory *arg1 = (CS::Animation::iSkeletonIKPhysicalNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKPhysicalNodeFactory_GetChainAutoReset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKPhysicalNodeFactory_GetChainAutoReset" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKPhysicalNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKPhysicalNodeFactory * >(argp1);
  result = (bool)((CS::Animation::iSkeletonIKPhysicalNodeFactory const *)arg1)->GetChainAutoReset();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKPhysicalNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKPhysicalNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonIKPhysicalNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonIKPhysicalNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKPhysicalNodeFactory *arg1 = (CS::Animation::iSkeletonIKPhysicalNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonIKPhysicalNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonIKPhysicalNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKPhysicalNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKPhysicalNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonIKPhysicalNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonIKPhysicalNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonIKPhysicalNode_SetRagdollNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKPhysicalNode *arg1 = (CS::Animation::iSkeletonIKPhysicalNode *) 0 ;
  CS::Animation::iSkeletonRagdollNode *arg2 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKPhysicalNode_SetRagdollNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKPhysicalNode_SetRagdollNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKPhysicalNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKPhysicalNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonIKPhysicalNode_SetRagdollNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonRagdollNode *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp2);
  (arg1)->SetRagdollNode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKPhysicalNode_GetRagdollNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKPhysicalNode *arg1 = (CS::Animation::iSkeletonIKPhysicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonRagdollNode *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKPhysicalNode_GetRagdollNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKPhysicalNode_GetRagdollNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKPhysicalNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKPhysicalNode * >(argp1);
  result = (CS::Animation::iSkeletonRagdollNode *)((CS::Animation::iSkeletonIKPhysicalNode const *)arg1)->GetRagdollNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKPhysicalNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKPhysicalNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonIKPhysicalNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonIKPhysicalNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKPhysicalNode *arg1 = (CS::Animation::iSkeletonIKPhysicalNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonIKPhysicalNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonIKPhysicalNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKPhysicalNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKPhysicalNode * >(argp1);
  delete_CS_Animation_iSkeletonIKPhysicalNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonIKPhysicalNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonIKPhysicalNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_SetMaximumIterations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_SetMaximumIterations",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_SetMaximumIterations" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKCCDNodeFactory_SetMaximumIterations" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  (arg1)->SetMaximumIterations(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_GetMaximumIterations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  size_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_GetMaximumIterations",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_GetMaximumIterations" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  result = (arg1)->GetMaximumIterations();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_SetTargetDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_SetTargetDistance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_SetTargetDistance" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKCCDNodeFactory_SetTargetDistance" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetTargetDistance(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_GetTargetDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_GetTargetDistance",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_GetTargetDistance" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  result = (float)(arg1)->GetTargetDistance();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_SetMotionRatio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_SetMotionRatio",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_SetMotionRatio" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKCCDNodeFactory_SetMotionRatio" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetMotionRatio(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_GetMotionRatio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_GetMotionRatio",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_GetMotionRatio" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  result = (float)(arg1)->GetMotionRatio();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_SetJointInitialization(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_SetJointInitialization",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_SetJointInitialization" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKCCDNodeFactory_SetJointInitialization" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetJointInitialization(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_GetJointInitialization(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_GetJointInitialization",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_GetJointInitialization" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  result = (bool)(arg1)->GetJointInitialization();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_SetUpwardIterations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_SetUpwardIterations",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_SetUpwardIterations" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonIKCCDNodeFactory_SetUpwardIterations" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetUpwardIterations(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonIKCCDNodeFactory_GetUpwardIterations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonIKCCDNodeFactory_GetUpwardIterations",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonIKCCDNodeFactory_GetUpwardIterations" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  result = (bool)(arg1)->GetUpwardIterations();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonIKCCDNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNodeFactory *arg1 = (CS::Animation::iSkeletonIKCCDNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonIKCCDNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonIKCCDNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNodeFactory * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonIKCCDNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_iSkeletonIKCCDNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonIKCCDNode *arg1 = (CS::Animation::iSkeletonIKCCDNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonIKCCDNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonIKCCDNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonIKCCDNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonIKCCDNode * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonIKCCDNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonIKCCDNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeManager_CreateAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeManager *arg1 = (CS::Animation::iSkeletonLookAtNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  CS::Animation::iBodySkeleton *arg3 = (CS::Animation::iBodySkeleton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CS::Animation::iSkeletonLookAtNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeManager_CreateAnimNodeFactory",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNodeManager_CreateAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNodeManager_CreateAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonLookAtNodeManager_CreateAnimNodeFactory" "', argument " "3"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg3 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp3);
  result = (CS::Animation::iSkeletonLookAtNodeFactory *)(arg1)->CreateAnimNodeFactory((char const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeManager_FindAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeManager *arg1 = (CS::Animation::iSkeletonLookAtNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonLookAtNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeManager_FindAnimNodeFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNodeManager_FindAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeManager const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNodeManager_FindAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonLookAtNodeFactory *)((CS::Animation::iSkeletonLookAtNodeManager const *)arg1)->FindAnimNodeFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeManager_ClearAnimNodeFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeManager *arg1 = (CS::Animation::iSkeletonLookAtNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeManager_ClearAnimNodeFactories",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNodeManager_ClearAnimNodeFactories" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeManager * >(argp1);
  (arg1)->ClearAnimNodeFactories();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonLookAtNodeManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonLookAtNodeManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeManager *arg1 = (CS::Animation::iSkeletonLookAtNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonLookAtNodeManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonLookAtNodeManager" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeManager * >(argp1);
  delete_CS_Animation_iSkeletonLookAtNodeManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonLookAtNodeManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeFactory_SetChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeFactory *arg1 = (CS::Animation::iSkeletonLookAtNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeFactory_SetChildNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNodeFactory_SetChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNodeFactory_SetChildNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  (arg1)->SetChildNode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeFactory_GetChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeFactory *arg1 = (CS::Animation::iSkeletonLookAtNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeFactory_GetChildNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNodeFactory_GetChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeFactory * >(argp1);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)(arg1)->GetChildNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeFactory_ClearChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeFactory *arg1 = (CS::Animation::iSkeletonLookAtNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeFactory_ClearChildNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNodeFactory_ClearChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeFactory * >(argp1);
  (arg1)->ClearChildNode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonLookAtNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonLookAtNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNodeFactory *arg1 = (CS::Animation::iSkeletonLookAtNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonLookAtNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonLookAtNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonLookAtNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonLookAtNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonLookAtNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_SetBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_SetBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonLookAtNode_SetBone" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  (arg1)->SetBone(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetTarget__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  csVector3 arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_SetTarget",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_csVector3,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "2"" of type '" "csVector3""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "2"" of type '" "csVector3""'");
    } else {
      csVector3 * temp = reinterpret_cast< csVector3 * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  (arg1)->SetTarget(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetTarget__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  iMovable *arg2 = (iMovable *) 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_SetTarget",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iMovable, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "2"" of type '" "iMovable *""'"); 
  }
  arg2 = reinterpret_cast< iMovable * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetTarget(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetTarget__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  iCamera *arg2 = (iCamera *) 0 ;
  csVector3 *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_SetTarget",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iCamera, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "2"" of type '" "iCamera *""'"); 
  }
  arg2 = reinterpret_cast< iCamera * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_csVector3,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "iSkeletonLookAtNode_SetTarget" "', argument " "3"" of type '" "csVector3 const &""'"); 
  }
  arg3 = reinterpret_cast< csVector3 * >(argp3);
  (arg1)->SetTarget(arg2,(csVector3 const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetTarget(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_csVector3, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iSkeletonLookAtNode_SetTarget__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iMovable, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iSkeletonLookAtNode_SetTarget__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_iCamera, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_csVector3, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_iSkeletonLookAtNode_SetTarget__SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSkeletonLookAtNode_SetTarget'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    SetTarget(CS::Animation::iSkeletonLookAtNode *,csVector3)\n"
    "    SetTarget(CS::Animation::iSkeletonLookAtNode *,iMovable *,csVector3 const &)\n"
    "    SetTarget(CS::Animation::iSkeletonLookAtNode *,iCamera *,csVector3 const &)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_RemoveTarget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_RemoveTarget",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_RemoveTarget" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  (arg1)->RemoveTarget();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetMaximumSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_SetMaximumSpeed",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_SetMaximumSpeed" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonLookAtNode_SetMaximumSpeed" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetMaximumSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetAlwaysRotate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_SetAlwaysRotate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_SetAlwaysRotate" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonLookAtNode_SetAlwaysRotate" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAlwaysRotate(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_SetListenerDelay(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_SetListenerDelay",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_SetListenerDelay" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonLookAtNode_SetListenerDelay" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetListenerDelay(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_AddListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  CS::Animation::iSkeletonLookAtListener *arg2 = (CS::Animation::iSkeletonLookAtListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_AddListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_AddListener" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonLookAtListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNode_AddListener" "', argument " "2"" of type '" "CS::Animation::iSkeletonLookAtListener *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonLookAtListener * >(argp2);
  (arg1)->AddListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_RemoveListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  CS::Animation::iSkeletonLookAtListener *arg2 = (CS::Animation::iSkeletonLookAtListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_RemoveListener",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtNode_RemoveListener" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonLookAtListener, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonLookAtNode_RemoveListener" "', argument " "2"" of type '" "CS::Animation::iSkeletonLookAtListener *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonLookAtListener * >(argp2);
  (arg1)->RemoveListener(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonLookAtNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonLookAtNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtNode *arg1 = (CS::Animation::iSkeletonLookAtNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonLookAtNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonLookAtNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtNode * >(argp1);
  delete_CS_Animation_iSkeletonLookAtNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonLookAtNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonLookAtNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonLookAtListener_TargetReached(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtListener *arg1 = (CS::Animation::iSkeletonLookAtListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtListener_TargetReached",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtListener_TargetReached" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtListener *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtListener * >(argp1);
  (arg1)->TargetReached();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtListener_TargetLost(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtListener *arg1 = (CS::Animation::iSkeletonLookAtListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtListener_TargetLost",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtListener, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonLookAtListener_TargetLost" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtListener *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtListener * >(argp1);
  (arg1)->TargetLost();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonLookAtListener_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonLookAtListener_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonLookAtListener_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonLookAtListener(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonLookAtListener *arg1 = (CS::Animation::iSkeletonLookAtListener *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonLookAtListener",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonLookAtListener, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonLookAtListener" "', argument " "1"" of type '" "CS::Animation::iSkeletonLookAtListener *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonLookAtListener * >(argp1);
  delete_CS_Animation_iSkeletonLookAtListener(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonLookAtListener_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonLookAtListener, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeManager_CreateAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeManager *arg1 = (CS::Animation::iSkeletonRagdollNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  CS::Animation::iBodySkeleton *arg3 = (CS::Animation::iBodySkeleton *) 0 ;
  iDynamicSystem *arg4 = (iDynamicSystem *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  CS::Animation::iSkeletonRagdollNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeManager_CreateAnimNodeFactory",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeManager_CreateAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNodeManager_CreateAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "iSkeletonRagdollNodeManager_CreateAnimNodeFactory" "', argument " "3"" of type '" "CS::Animation::iBodySkeleton *""'"); 
  }
  arg3 = reinterpret_cast< CS::Animation::iBodySkeleton * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_iDynamicSystem, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "iSkeletonRagdollNodeManager_CreateAnimNodeFactory" "', argument " "4"" of type '" "iDynamicSystem *""'"); 
  }
  arg4 = reinterpret_cast< iDynamicSystem * >(argp4);
  result = (CS::Animation::iSkeletonRagdollNodeFactory *)(arg1)->CreateAnimNodeFactory((char const *)arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeManager_FindAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeManager *arg1 = (CS::Animation::iSkeletonRagdollNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonRagdollNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeManager_FindAnimNodeFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeManager_FindAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeManager const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNodeManager_FindAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonRagdollNodeFactory *)((CS::Animation::iSkeletonRagdollNodeManager const *)arg1)->FindAnimNodeFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeManager_ClearAnimNodeFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeManager *arg1 = (CS::Animation::iSkeletonRagdollNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeManager_ClearAnimNodeFactories",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeManager_ClearAnimNodeFactories" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeManager * >(argp1);
  (arg1)->ClearAnimNodeFactories();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonRagdollNodeManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonRagdollNodeManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeManager *arg1 = (CS::Animation::iSkeletonRagdollNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonRagdollNodeManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonRagdollNodeManager" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeManager * >(argp1);
  delete_CS_Animation_iSkeletonRagdollNodeManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonRagdollNodeManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_AddBodyChain__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  CS::Animation::iBodyChain *arg2 = (CS::Animation::iBodyChain *) 0 ;
  CS::Animation::RagdollState arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_AddBodyChain",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_AddBodyChain" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNodeFactory_AddBodyChain" "', argument " "2"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iBodyChain * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonRagdollNodeFactory_AddBodyChain" "', argument " "3"" of type '" "CS::Animation::RagdollState""'");
  } 
  arg3 = static_cast< CS::Animation::RagdollState >(val3);
  (arg1)->AddBodyChain(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_AddBodyChain__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  CS::Animation::iBodyChain *arg2 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_AddBodyChain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_AddBodyChain" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNodeFactory_AddBodyChain" "', argument " "2"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iBodyChain * >(argp2);
  (arg1)->AddBodyChain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_AddBodyChain(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = (int)PyObject_Length(args);
  for (ii = 0; (ii < argc) && (ii < 3); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CS__Animation__iBodyChain, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_iSkeletonRagdollNodeFactory_AddBodyChain__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_CS__Animation__iBodyChain, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_iSkeletonRagdollNodeFactory_AddBodyChain__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number of arguments for overloaded function 'iSkeletonRagdollNodeFactory_AddBodyChain'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    AddBodyChain(CS::Animation::iSkeletonRagdollNodeFactory *,CS::Animation::iBodyChain *,CS::Animation::RagdollState)\n"
    "    AddBodyChain(CS::Animation::iSkeletonRagdollNodeFactory *,CS::Animation::iBodyChain *)\n");
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_RemoveBodyChain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  CS::Animation::iBodyChain *arg2 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_RemoveBodyChain",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_RemoveBodyChain" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNodeFactory_RemoveBodyChain" "', argument " "2"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iBodyChain * >(argp2);
  (arg1)->RemoveBodyChain(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_SetChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_SetChildNode",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_SetChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNodeFactory_SetChildNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  (arg1)->SetChildNode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_GetChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_GetChildNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_GetChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  result = (CS::Animation::iSkeletonAnimNodeFactory *)((CS::Animation::iSkeletonRagdollNodeFactory const *)arg1)->GetChildNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_ClearChildNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_ClearChildNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_ClearChildNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  (arg1)->ClearChildNode();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_GetDynamicSystem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  iDynamicSystem *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_GetDynamicSystem",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_GetDynamicSystem" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  result = (iDynamicSystem *)((CS::Animation::iSkeletonRagdollNodeFactory const *)arg1)->GetDynamicSystem();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iDynamicSystem, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_GetBodySkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  CS::Animation::iBodySkeleton *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_GetBodySkeleton",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNodeFactory_GetBodySkeleton" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  result = (CS::Animation::iBodySkeleton *)((CS::Animation::iSkeletonRagdollNodeFactory const *)arg1)->GetBodySkeleton();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iBodySkeleton, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonRagdollNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonRagdollNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNodeFactory *arg1 = (CS::Animation::iSkeletonRagdollNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonRagdollNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonRagdollNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonRagdollNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonRagdollNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonRagdollNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_SetBodyChainState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  CS::Animation::iBodyChain *arg2 = (CS::Animation::iBodyChain *) 0 ;
  CS::Animation::RagdollState arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_SetBodyChainState",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_SetBodyChainState" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNode_SetBodyChainState" "', argument " "2"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iBodyChain * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonRagdollNode_SetBodyChainState" "', argument " "3"" of type '" "CS::Animation::RagdollState""'");
  } 
  arg3 = static_cast< CS::Animation::RagdollState >(val3);
  (arg1)->SetBodyChainState(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_GetBodyChainState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  CS::Animation::iBodyChain *arg2 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::RagdollState result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_GetBodyChainState",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_GetBodyChainState" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNode_GetBodyChainState" "', argument " "2"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iBodyChain * >(argp2);
  result = (CS::Animation::RagdollState)((CS::Animation::iSkeletonRagdollNode const *)arg1)->GetBodyChainState(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_GetBoneRigidBody(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iRigidBody *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_GetBoneRigidBody",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_GetBoneRigidBody" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonRagdollNode_GetBoneRigidBody" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (iRigidBody *)(arg1)->GetBoneRigidBody(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iRigidBody, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_GetBoneJoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  CS::Animation::BoneID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  iJoint *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_GetBoneJoint",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_GetBoneJoint" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonRagdollNode_GetBoneJoint" "', argument " "2"" of type '" "CS::Animation::BoneID""'");
  } 
  arg2 = static_cast< CS::Animation::BoneID >(val2);
  result = (iJoint *)(arg1)->GetBoneJoint(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_iJoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_GetBoneCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  CS::Animation::RagdollState arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  uint result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_GetBoneCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_GetBoneCount" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonRagdollNode_GetBoneCount" "', argument " "2"" of type '" "CS::Animation::RagdollState""'");
  } 
  arg2 = static_cast< CS::Animation::RagdollState >(val2);
  result = (uint)((CS::Animation::iSkeletonRagdollNode const *)arg1)->GetBoneCount(arg2);
  resultobj = SWIG_From_unsigned_SS_long(static_cast< unsigned long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_GetBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  CS::Animation::RagdollState arg2 ;
  uint arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  unsigned long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_GetBone",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_GetBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonRagdollNode_GetBone" "', argument " "2"" of type '" "CS::Animation::RagdollState""'");
  } 
  arg2 = static_cast< CS::Animation::RagdollState >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonRagdollNode_GetBone" "', argument " "3"" of type '" "uint""'");
  } 
  arg3 = static_cast< uint >(val3);
  result = ((CS::Animation::iSkeletonRagdollNode const *)arg1)->GetBone(arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_ResetChainTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  CS::Animation::iBodyChain *arg2 = (CS::Animation::iBodyChain *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_ResetChainTransform",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_ResetChainTransform" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iBodyChain, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNode_ResetChainTransform" "', argument " "2"" of type '" "CS::Animation::iBodyChain *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iBodyChain * >(argp2);
  (arg1)->ResetChainTransform(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_GetRigidBodyBone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  iRigidBody *arg2 = (iRigidBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::BoneID result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_GetRigidBodyBone",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonRagdollNode_GetRigidBodyBone" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode const *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_iRigidBody, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonRagdollNode_GetRigidBodyBone" "', argument " "2"" of type '" "iRigidBody *""'"); 
  }
  arg2 = reinterpret_cast< iRigidBody * >(argp2);
  result = ((CS::Animation::iSkeletonRagdollNode const *)arg1)->GetRigidBodyBone(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonRagdollNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonRagdollNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonRagdollNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonRagdollNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonRagdollNode *arg1 = (CS::Animation::iSkeletonRagdollNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonRagdollNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonRagdollNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonRagdollNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonRagdollNode * >(argp1);
  delete_CS_Animation_iSkeletonRagdollNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonRagdollNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonRagdollNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonSpeedNodeManager_CreateAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNodeManager *arg1 = (CS::Animation::iSkeletonSpeedNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonSpeedNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNodeManager_CreateAnimNodeFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonSpeedNodeManager_CreateAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonSpeedNodeManager_CreateAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonSpeedNodeFactory *)(arg1)->CreateAnimNodeFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonSpeedNodeManager_FindAnimNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNodeManager *arg1 = (CS::Animation::iSkeletonSpeedNodeManager *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  CS::Animation::iSkeletonSpeedNodeFactory *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNodeManager_FindAnimNodeFactory",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonSpeedNodeManager_FindAnimNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNodeManager * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonSpeedNodeManager_FindAnimNodeFactory" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = (CS::Animation::iSkeletonSpeedNodeFactory *)(arg1)->FindAnimNodeFactory((char const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeFactory, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonSpeedNodeManager_ClearAnimNodeFactories(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNodeManager *arg1 = (CS::Animation::iSkeletonSpeedNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNodeManager_ClearAnimNodeFactories",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonSpeedNodeManager_ClearAnimNodeFactories" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNodeManager * >(argp1);
  (arg1)->ClearAnimNodeFactories();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonSpeedNodeManager_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNodeManager_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonSpeedNodeManager_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonSpeedNodeManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNodeManager *arg1 = (CS::Animation::iSkeletonSpeedNodeManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonSpeedNodeManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonSpeedNodeManager" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNodeManager *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNodeManager * >(argp1);
  delete_CS_Animation_iSkeletonSpeedNodeManager(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonSpeedNodeManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonSpeedNodeFactory_AddNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNodeFactory *arg1 = (CS::Animation::iSkeletonSpeedNodeFactory *) 0 ;
  CS::Animation::iSkeletonAnimNodeFactory *arg2 = (CS::Animation::iSkeletonAnimNodeFactory *) 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNodeFactory_AddNode",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonSpeedNodeFactory_AddNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNodeFactory * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_CS__Animation__iSkeletonAnimNodeFactory, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "iSkeletonSpeedNodeFactory_AddNode" "', argument " "2"" of type '" "CS::Animation::iSkeletonAnimNodeFactory *""'"); 
  }
  arg2 = reinterpret_cast< CS::Animation::iSkeletonAnimNodeFactory * >(argp2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "iSkeletonSpeedNodeFactory_AddNode" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->AddNode(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonSpeedNodeFactory_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNodeFactory_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonSpeedNodeFactory_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonSpeedNodeFactory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNodeFactory *arg1 = (CS::Animation::iSkeletonSpeedNodeFactory *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonSpeedNodeFactory",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeFactory, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonSpeedNodeFactory" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNodeFactory *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNodeFactory * >(argp1);
  delete_CS_Animation_iSkeletonSpeedNodeFactory(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonSpeedNodeFactory_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonSpeedNodeFactory, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_iSkeletonSpeedNode_SetSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNode *arg1 = (CS::Animation::iSkeletonSpeedNode *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNode_SetSpeed",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "iSkeletonSpeedNode_SetSpeed" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNode * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "iSkeletonSpeedNode_SetSpeed" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_iSkeletonSpeedNode_scfGetVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"iSkeletonSpeedNode_scfGetVersion",0,0)) SWIG_fail;
  result = (int)CS_Animation_iSkeletonSpeedNode_scfGetVersion();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_iSkeletonSpeedNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  CS::Animation::iSkeletonSpeedNode *arg1 = (CS::Animation::iSkeletonSpeedNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_iSkeletonSpeedNode",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_CS__Animation__iSkeletonSpeedNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iSkeletonSpeedNode" "', argument " "1"" of type '" "CS::Animation::iSkeletonSpeedNode *""'"); 
  }
  arg1 = reinterpret_cast< CS::Animation::iSkeletonSpeedNode * >(argp1);
  delete_CS_Animation_iSkeletonSpeedNode(arg1);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *iSkeletonSpeedNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_CS__Animation__iSkeletonSpeedNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"_SetSCFPointer", _wrap__SetSCFPointer, METH_VARARGS, NULL},
	 { (char *)"_GetSCFPointer", _wrap__GetSCFPointer, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_CreateSkeletonFactory", _wrap_iSkeletonManager_CreateSkeletonFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_FindSkeletonFactory", _wrap_iSkeletonManager_FindSkeletonFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_ClearSkeletonFactories", _wrap_iSkeletonManager_ClearSkeletonFactories, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_CreateAnimPacketFactory", _wrap_iSkeletonManager_CreateAnimPacketFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_FindAnimPacketFactory", _wrap_iSkeletonManager_FindAnimPacketFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_ClearAnimPacketFactories", _wrap_iSkeletonManager_ClearAnimPacketFactories, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_ClearAll", _wrap_iSkeletonManager_ClearAll, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_scfGetVersion", _wrap_iSkeletonManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonManager", _wrap_delete_iSkeletonManager, METH_VARARGS, NULL},
	 { (char *)"iSkeletonManager_swigregister", iSkeletonManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_CreateBone", _wrap_iSkeletonFactory_CreateBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_FindBone", _wrap_iSkeletonFactory_FindBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_RemoveBone", _wrap_iSkeletonFactory_RemoveBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetBoneParent", _wrap_iSkeletonFactory_GetBoneParent, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_HasBone", _wrap_iSkeletonFactory_HasBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_SetBoneName", _wrap_iSkeletonFactory_SetBoneName, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetBoneName", _wrap_iSkeletonFactory_GetBoneName, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetTopBoneID", _wrap_iSkeletonFactory_GetTopBoneID, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetTransformBoneSpace", _wrap_iSkeletonFactory_GetTransformBoneSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_SetTransformBoneSpace", _wrap_iSkeletonFactory_SetTransformBoneSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetTransformAbsSpace", _wrap_iSkeletonFactory_GetTransformAbsSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_SetTransformAbsSpace", _wrap_iSkeletonFactory_SetTransformAbsSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_CreateSkeleton", _wrap_iSkeletonFactory_CreateSkeleton, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetAnimationPacket", _wrap_iSkeletonFactory_GetAnimationPacket, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_SetAnimationPacket", _wrap_iSkeletonFactory_SetAnimationPacket, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_SetAutoStart", _wrap_iSkeletonFactory_SetAutoStart, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetAutoStart", _wrap_iSkeletonFactory_GetAutoStart, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_Description", _wrap_iSkeletonFactory_Description, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_GetBoneOrderList", _wrap_iSkeletonFactory_GetBoneOrderList, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_scfGetVersion", _wrap_iSkeletonFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonFactory", _wrap_delete_iSkeletonFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFactory_swigregister", iSkeletonFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetSceneNode", _wrap_iSkeleton_GetSceneNode, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetTransformBoneSpace", _wrap_iSkeleton_GetTransformBoneSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_SetTransformBoneSpace", _wrap_iSkeleton_SetTransformBoneSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetTransformAbsSpace", _wrap_iSkeleton_GetTransformAbsSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_SetTransformAbsSpace", _wrap_iSkeleton_SetTransformAbsSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetTransformBindSpace", _wrap_iSkeleton_GetTransformBindSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_SetTransformBindSpace", _wrap_iSkeleton_SetTransformBindSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetStateAbsSpace", _wrap_iSkeleton_GetStateAbsSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetStateBoneSpace", _wrap_iSkeleton_GetStateBoneSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetStateBindSpace", _wrap_iSkeleton_GetStateBindSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetFactory", _wrap_iSkeleton_GetFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetAnimationPacket", _wrap_iSkeleton_GetAnimationPacket, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_SetAnimationPacket", _wrap_iSkeleton_SetAnimationPacket, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_RecreateSkeleton", _wrap_iSkeleton_RecreateSkeleton, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_UpdateSkeleton", _wrap_iSkeleton_UpdateSkeleton, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetSkeletonStateVersion", _wrap_iSkeleton_GetSkeletonStateVersion, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_SetAnimatedMesh", _wrap_iSkeleton_SetAnimatedMesh, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_GetAnimatedMesh", _wrap_iSkeleton_GetAnimatedMesh, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_ResetSkeletonState", _wrap_iSkeleton_ResetSkeletonState, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_scfGetVersion", _wrap_iSkeleton_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeleton", _wrap_delete_iSkeleton, METH_VARARGS, NULL},
	 { (char *)"iSkeleton_swigregister", iSkeleton_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_csSkeletalState", _wrap_new_csSkeletalState, METH_VARARGS, NULL},
	 { (char *)"delete_csSkeletalState", _wrap_delete_csSkeletalState, METH_VARARGS, NULL},
	 { (char *)"csSkeletalState_GetVector", _wrap_csSkeletalState_GetVector, METH_VARARGS, NULL},
	 { (char *)"csSkeletalState_GetQuaternion", _wrap_csSkeletalState_GetQuaternion, METH_VARARGS, NULL},
	 { (char *)"csSkeletalState_IsBoneUsed", _wrap_csSkeletalState_IsBoneUsed, METH_VARARGS, NULL},
	 { (char *)"csSkeletalState_SetBoneUsed", _wrap_csSkeletalState_SetBoneUsed, METH_VARARGS, NULL},
	 { (char *)"csSkeletalState_GetBoneCount", _wrap_csSkeletalState_GetBoneCount, METH_VARARGS, NULL},
	 { (char *)"csSkeletalState_Setup", _wrap_csSkeletalState_Setup, METH_VARARGS, NULL},
	 { (char *)"csSkeletalState_swigregister", csSkeletalState_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodyManager_CreateBodySkeleton", _wrap_iBodyManager_CreateBodySkeleton, METH_VARARGS, NULL},
	 { (char *)"iBodyManager_FindBodySkeleton", _wrap_iBodyManager_FindBodySkeleton, METH_VARARGS, NULL},
	 { (char *)"iBodyManager_ClearBodySkeletons", _wrap_iBodyManager_ClearBodySkeletons, METH_VARARGS, NULL},
	 { (char *)"iBodyManager_scfGetVersion", _wrap_iBodyManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodyManager", _wrap_delete_iBodyManager, METH_VARARGS, NULL},
	 { (char *)"iBodyManager_swigregister", iBodyManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_GetName", _wrap_iBodySkeleton_GetName, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_GetSkeletonFactory", _wrap_iBodySkeleton_GetSkeletonFactory, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_ClearAll", _wrap_iBodySkeleton_ClearAll, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_CreateBodyBone", _wrap_iBodySkeleton_CreateBodyBone, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_ClearBodyBones", _wrap_iBodySkeleton_ClearBodyBones, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_CreateBodyChain", _wrap_iBodySkeleton_CreateBodyChain, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_FindBodyChain", _wrap_iBodySkeleton_FindBodyChain, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_ClearBodyChains", _wrap_iBodySkeleton_ClearBodyChains, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_FindBodyBone", _wrap_iBodySkeleton_FindBodyBone, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_scfGetVersion", _wrap_iBodySkeleton_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodySkeleton", _wrap_delete_iBodySkeleton, METH_VARARGS, NULL},
	 { (char *)"iBodySkeleton_swigregister", iBodySkeleton_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_GetAnimeshBone", _wrap_iBodyBone_GetAnimeshBone, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_CreateBoneProperties", _wrap_iBodyBone_CreateBoneProperties, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_GetBoneProperties", _wrap_iBodyBone_GetBoneProperties, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_CreateBoneJoint", _wrap_iBodyBone_CreateBoneJoint, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_GetBoneJoint", _wrap_iBodyBone_GetBoneJoint, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_CreateBoneCollider", _wrap_iBodyBone_CreateBoneCollider, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_GetBoneColliderCount", _wrap_iBodyBone_GetBoneColliderCount, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_GetBoneCollider", _wrap_iBodyBone_GetBoneCollider, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_scfGetVersion", _wrap_iBodyBone_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodyBone", _wrap_delete_iBodyBone, METH_VARARGS, NULL},
	 { (char *)"iBodyBone_swigregister", iBodyBone_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_GetName", _wrap_iBodyChain_GetName, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_GetBodySkeleton", _wrap_iBodyChain_GetBodySkeleton, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_GetRootNode", _wrap_iBodyChain_GetRootNode, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_AddSubChain", _wrap_iBodyChain_AddSubChain, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_AddAllSubChains", _wrap_iBodyChain_AddAllSubChains, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_DebugPrint", _wrap_iBodyChain_DebugPrint, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_scfGetVersion", _wrap_iBodyChain_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodyChain", _wrap_delete_iBodyChain, METH_VARARGS, NULL},
	 { (char *)"iBodyChain_swigregister", iBodyChain_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_GetAnimeshBone", _wrap_iBodyChainNode_GetAnimeshBone, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_GetChildCount", _wrap_iBodyChainNode_GetChildCount, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_GetChild", _wrap_iBodyChainNode_GetChild, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_GetParent", _wrap_iBodyChainNode_GetParent, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_FindSubChild", _wrap_iBodyChainNode_FindSubChild, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_DebugPrint", _wrap_iBodyChainNode_DebugPrint, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_scfGetVersion", _wrap_iBodyChainNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodyChainNode", _wrap_delete_iBodyChainNode, METH_VARARGS, NULL},
	 { (char *)"iBodyChainNode_swigregister", iBodyChainNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_SetMass", _wrap_iBodyBoneProperties_SetMass, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_GetMass", _wrap_iBodyBoneProperties_GetMass, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_SetCenter", _wrap_iBodyBoneProperties_SetCenter, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_GetCenter", _wrap_iBodyBoneProperties_GetCenter, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_SetInertia", _wrap_iBodyBoneProperties_SetInertia, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_GetInertia", _wrap_iBodyBoneProperties_GetInertia, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_scfGetVersion", _wrap_iBodyBoneProperties_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodyBoneProperties", _wrap_delete_iBodyBoneProperties, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneProperties_swigregister", iBodyBoneProperties_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetBounce", _wrap_iBodyBoneJoint_SetBounce, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetMaximumAngle", _wrap_iBodyBoneJoint_SetMaximumAngle, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetMaximumDistance", _wrap_iBodyBoneJoint_SetMaximumDistance, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetMinimumAngle", _wrap_iBodyBoneJoint_SetMinimumAngle, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetMinimumDistance", _wrap_iBodyBoneJoint_SetMinimumDistance, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetRotConstraints", _wrap_iBodyBoneJoint_SetRotConstraints, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetTransConstraints", _wrap_iBodyBoneJoint_SetTransConstraints, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_SetTransform", _wrap_iBodyBoneJoint_SetTransform, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_GetBounce", _wrap_iBodyBoneJoint_GetBounce, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_GetMaximumAngle", _wrap_iBodyBoneJoint_GetMaximumAngle, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_GetMaximumDistance", _wrap_iBodyBoneJoint_GetMaximumDistance, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_GetMinimumAngle", _wrap_iBodyBoneJoint_GetMinimumAngle, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_GetMinimumDistance", _wrap_iBodyBoneJoint_GetMinimumDistance, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_IsXRotConstrained", _wrap_iBodyBoneJoint_IsXRotConstrained, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_IsXTransConstrained", _wrap_iBodyBoneJoint_IsXTransConstrained, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_IsYRotConstrained", _wrap_iBodyBoneJoint_IsYRotConstrained, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_IsYTransConstrained", _wrap_iBodyBoneJoint_IsYTransConstrained, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_IsZRotConstrained", _wrap_iBodyBoneJoint_IsZRotConstrained, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_IsZTransConstrained", _wrap_iBodyBoneJoint_IsZTransConstrained, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_GetTransform", _wrap_iBodyBoneJoint_GetTransform, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_scfGetVersion", _wrap_iBodyBoneJoint_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodyBoneJoint", _wrap_delete_iBodyBoneJoint, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneJoint_swigregister", iBodyBoneJoint_swigregister, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetBoxGeometry", _wrap_iBodyBoneCollider_SetBoxGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetCapsuleGeometry", _wrap_iBodyBoneCollider_SetCapsuleGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetConvexMeshGeometry", _wrap_iBodyBoneCollider_SetConvexMeshGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetCylinderGeometry", _wrap_iBodyBoneCollider_SetCylinderGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetMeshGeometry", _wrap_iBodyBoneCollider_SetMeshGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetPlaneGeometry", _wrap_iBodyBoneCollider_SetPlaneGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetSphereGeometry", _wrap_iBodyBoneCollider_SetSphereGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetGeometryType", _wrap_iBodyBoneCollider_GetGeometryType, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetBoxGeometry", _wrap_iBodyBoneCollider_GetBoxGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetCapsuleGeometry", _wrap_iBodyBoneCollider_GetCapsuleGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetConvexMeshGeometry", _wrap_iBodyBoneCollider_GetConvexMeshGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetCylinderGeometry", _wrap_iBodyBoneCollider_GetCylinderGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetMeshGeometry", _wrap_iBodyBoneCollider_GetMeshGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetPlaneGeometry", _wrap_iBodyBoneCollider_GetPlaneGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetSphereGeometry", _wrap_iBodyBoneCollider_GetSphereGeometry, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetTransform", _wrap_iBodyBoneCollider_SetTransform, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetTransform", _wrap_iBodyBoneCollider_GetTransform, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetFriction", _wrap_iBodyBoneCollider_SetFriction, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetFriction", _wrap_iBodyBoneCollider_GetFriction, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetSoftness", _wrap_iBodyBoneCollider_SetSoftness, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetSoftness", _wrap_iBodyBoneCollider_GetSoftness, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetElasticity", _wrap_iBodyBoneCollider_SetElasticity, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetElasticity", _wrap_iBodyBoneCollider_GetElasticity, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_SetDensity", _wrap_iBodyBoneCollider_SetDensity, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_GetDensity", _wrap_iBodyBoneCollider_GetDensity, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_scfGetVersion", _wrap_iBodyBoneCollider_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iBodyBoneCollider", _wrap_delete_iBodyBoneCollider, METH_VARARGS, NULL},
	 { (char *)"iBodyBoneCollider_swigregister", iBodyBoneCollider_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_CreateInstance", _wrap_iSkeletonAnimPacketFactory_CreateInstance, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_CreateAnimation", _wrap_iSkeletonAnimPacketFactory_CreateAnimation, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_FindAnimation", _wrap_iSkeletonAnimPacketFactory_FindAnimation, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_ClearAnimations", _wrap_iSkeletonAnimPacketFactory_ClearAnimations, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_GetAnimation", _wrap_iSkeletonAnimPacketFactory_GetAnimation, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_GetAnimationCount", _wrap_iSkeletonAnimPacketFactory_GetAnimationCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_SetAnimationRoot", _wrap_iSkeletonAnimPacketFactory_SetAnimationRoot, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_GetAnimationRoot", _wrap_iSkeletonAnimPacketFactory_GetAnimationRoot, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_CreateAnimationNode", _wrap_iSkeletonAnimPacketFactory_CreateAnimationNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_CreateBlendNode", _wrap_iSkeletonAnimPacketFactory_CreateBlendNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_CreatePriorityNode", _wrap_iSkeletonAnimPacketFactory_CreatePriorityNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_CreateRandomNode", _wrap_iSkeletonAnimPacketFactory_CreateRandomNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_CreateFSMNode", _wrap_iSkeletonAnimPacketFactory_CreateFSMNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_scfGetVersion", _wrap_iSkeletonAnimPacketFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimPacketFactory", _wrap_delete_iSkeletonAnimPacketFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacketFactory_swigregister", iSkeletonAnimPacketFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacket_GetFactory", _wrap_iSkeletonAnimPacket_GetFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacket_GetAnimationRoot", _wrap_iSkeletonAnimPacket_GetAnimationRoot, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacket_scfGetVersion", _wrap_iSkeletonAnimPacket_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimPacket", _wrap_delete_iSkeletonAnimPacket, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimPacket_swigregister", iSkeletonAnimPacket_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetName", _wrap_iSkeletonAnimation_GetName, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_AddChannel", _wrap_iSkeletonAnimation_AddChannel, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_FindChannel", _wrap_iSkeletonAnimation_FindChannel, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_AddKeyFrame", _wrap_iSkeletonAnimation_AddKeyFrame, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetKeyFrameCount", _wrap_iSkeletonAnimation_GetKeyFrameCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetKeyFrame", _wrap_iSkeletonAnimation_GetKeyFrame, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetTwoKeyFrames", _wrap_iSkeletonAnimation_GetTwoKeyFrames, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_BlendState", _wrap_iSkeletonAnimation_BlendState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetDuration", _wrap_iSkeletonAnimation_GetDuration, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_SetKeyFrame", _wrap_iSkeletonAnimation_SetKeyFrame, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_SetFramesInBindSpace", _wrap_iSkeletonAnimation_SetFramesInBindSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetFramesInBindSpace", _wrap_iSkeletonAnimation_GetFramesInBindSpace, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetChannelCount", _wrap_iSkeletonAnimation_GetChannelCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_GetChannelBone", _wrap_iSkeletonAnimation_GetChannelBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_SetChannelBone", _wrap_iSkeletonAnimation_SetChannelBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_RemoveChannel", _wrap_iSkeletonAnimation_RemoveChannel, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_scfGetVersion", _wrap_iSkeletonAnimation_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimation", _wrap_delete_iSkeletonAnimation, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimation_swigregister", iSkeletonAnimation_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimCallback_AnimationFinished", _wrap_iSkeletonAnimCallback_AnimationFinished, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimCallback_AnimationCycled", _wrap_iSkeletonAnimCallback_AnimationCycled, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimCallback_PlayStateChanged", _wrap_iSkeletonAnimCallback_PlayStateChanged, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimCallback_DurationChanged", _wrap_iSkeletonAnimCallback_DurationChanged, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimCallback", _wrap_delete_iSkeletonAnimCallback, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimCallback_swigregister", iSkeletonAnimCallback_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNodeFactory_CreateInstance", _wrap_iSkeletonAnimNodeFactory_CreateInstance, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNodeFactory_GetNodeName", _wrap_iSkeletonAnimNodeFactory_GetNodeName, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNodeFactory_FindNode", _wrap_iSkeletonAnimNodeFactory_FindNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNodeFactory_scfGetVersion", _wrap_iSkeletonAnimNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimNodeFactory", _wrap_delete_iSkeletonAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNodeFactory_swigregister", iSkeletonAnimNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_Play", _wrap_iSkeletonAnimNode_Play, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_Stop", _wrap_iSkeletonAnimNode_Stop, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_SetPlaybackPosition", _wrap_iSkeletonAnimNode_SetPlaybackPosition, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_GetPlaybackPosition", _wrap_iSkeletonAnimNode_GetPlaybackPosition, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_GetDuration", _wrap_iSkeletonAnimNode_GetDuration, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_SetPlaybackSpeed", _wrap_iSkeletonAnimNode_SetPlaybackSpeed, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_GetPlaybackSpeed", _wrap_iSkeletonAnimNode_GetPlaybackSpeed, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_BlendState", _wrap_iSkeletonAnimNode_BlendState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_TickAnimation", _wrap_iSkeletonAnimNode_TickAnimation, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_IsActive", _wrap_iSkeletonAnimNode_IsActive, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_GetFactory", _wrap_iSkeletonAnimNode_GetFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_FindNode", _wrap_iSkeletonAnimNode_FindNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_AddAnimationCallback", _wrap_iSkeletonAnimNode_AddAnimationCallback, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_RemoveAnimationCallback", _wrap_iSkeletonAnimNode_RemoveAnimationCallback, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_scfGetVersion", _wrap_iSkeletonAnimNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimNode", _wrap_delete_iSkeletonAnimNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimNode_swigregister", iSkeletonAnimNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_SetAnimation", _wrap_iSkeletonAnimationNodeFactory_SetAnimation, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_GetAnimation", _wrap_iSkeletonAnimationNodeFactory_GetAnimation, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_SetCyclic", _wrap_iSkeletonAnimationNodeFactory_SetCyclic, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_IsCyclic", _wrap_iSkeletonAnimationNodeFactory_IsCyclic, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_SetPlaybackSpeed", _wrap_iSkeletonAnimationNodeFactory_SetPlaybackSpeed, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_GetPlaybackSpeed", _wrap_iSkeletonAnimationNodeFactory_GetPlaybackSpeed, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_SetAutomaticReset", _wrap_iSkeletonAnimationNodeFactory_SetAutomaticReset, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_GetAutomaticReset", _wrap_iSkeletonAnimationNodeFactory_GetAutomaticReset, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_SetAutomaticStop", _wrap_iSkeletonAnimationNodeFactory_SetAutomaticStop, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_GetAutomaticStop", _wrap_iSkeletonAnimationNodeFactory_GetAutomaticStop, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_scfGetVersion", _wrap_iSkeletonAnimationNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimationNodeFactory", _wrap_delete_iSkeletonAnimationNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNodeFactory_swigregister", iSkeletonAnimationNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNode_scfGetVersion", _wrap_iSkeletonAnimationNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonAnimationNode", _wrap_delete_iSkeletonAnimationNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonAnimationNode_swigregister", iSkeletonAnimationNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_AddNode", _wrap_iSkeletonBlendNodeFactory_AddNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_SetNodeWeight", _wrap_iSkeletonBlendNodeFactory_SetNodeWeight, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_NormalizeWeights", _wrap_iSkeletonBlendNodeFactory_NormalizeWeights, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_GetNode", _wrap_iSkeletonBlendNodeFactory_GetNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_GetNodeCount", _wrap_iSkeletonBlendNodeFactory_GetNodeCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_ClearNodes", _wrap_iSkeletonBlendNodeFactory_ClearNodes, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_SetSynchronizationMode", _wrap_iSkeletonBlendNodeFactory_SetSynchronizationMode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_GetSynchronizationMode", _wrap_iSkeletonBlendNodeFactory_GetSynchronizationMode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_scfGetVersion", _wrap_iSkeletonBlendNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonBlendNodeFactory", _wrap_delete_iSkeletonBlendNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNodeFactory_swigregister", iSkeletonBlendNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNode_SetNodeWeight", _wrap_iSkeletonBlendNode_SetNodeWeight, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNode_NormalizeWeights", _wrap_iSkeletonBlendNode_NormalizeWeights, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNode_scfGetVersion", _wrap_iSkeletonBlendNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonBlendNode", _wrap_delete_iSkeletonBlendNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonBlendNode_swigregister", iSkeletonBlendNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNodeFactory_AddNode", _wrap_iSkeletonPriorityNodeFactory_AddNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNodeFactory_SetNodePriority", _wrap_iSkeletonPriorityNodeFactory_SetNodePriority, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNodeFactory_GetNode", _wrap_iSkeletonPriorityNodeFactory_GetNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNodeFactory_GetNodeCount", _wrap_iSkeletonPriorityNodeFactory_GetNodeCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNodeFactory_ClearNodes", _wrap_iSkeletonPriorityNodeFactory_ClearNodes, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNodeFactory_scfGetVersion", _wrap_iSkeletonPriorityNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonPriorityNodeFactory", _wrap_delete_iSkeletonPriorityNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNodeFactory_swigregister", iSkeletonPriorityNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNode_SetNodePriority", _wrap_iSkeletonPriorityNode_SetNodePriority, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNode_scfGetVersion", _wrap_iSkeletonPriorityNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonPriorityNode", _wrap_delete_iSkeletonPriorityNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonPriorityNode_swigregister", iSkeletonPriorityNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_AddNode", _wrap_iSkeletonRandomNodeFactory_AddNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_SetNodeProbability", _wrap_iSkeletonRandomNodeFactory_SetNodeProbability, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_SetAutomaticSwitch", _wrap_iSkeletonRandomNodeFactory_SetAutomaticSwitch, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_GetNode", _wrap_iSkeletonRandomNodeFactory_GetNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_GetNodeCount", _wrap_iSkeletonRandomNodeFactory_GetNodeCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_ClearNodes", _wrap_iSkeletonRandomNodeFactory_ClearNodes, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_scfGetVersion", _wrap_iSkeletonRandomNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonRandomNodeFactory", _wrap_delete_iSkeletonRandomNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNodeFactory_swigregister", iSkeletonRandomNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNode_Switch", _wrap_iSkeletonRandomNode_Switch, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNode_GetCurrentNode", _wrap_iSkeletonRandomNode_GetCurrentNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNode_scfGetVersion", _wrap_iSkeletonRandomNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonRandomNode", _wrap_delete_iSkeletonRandomNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRandomNode_swigregister", iSkeletonRandomNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_SetStateNode", _wrap_iSkeletonFSMNodeFactory_SetStateNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_GetStateNode", _wrap_iSkeletonFSMNodeFactory_GetStateNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_SetStateName", _wrap_iSkeletonFSMNodeFactory_SetStateName, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_GetStateName", _wrap_iSkeletonFSMNodeFactory_GetStateName, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_FindState", _wrap_iSkeletonFSMNodeFactory_FindState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_SetStartState", _wrap_iSkeletonFSMNodeFactory_SetStartState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_GetStartState", _wrap_iSkeletonFSMNodeFactory_GetStartState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_GetStateCount", _wrap_iSkeletonFSMNodeFactory_GetStateCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_ClearStates", _wrap_iSkeletonFSMNodeFactory_ClearStates, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_SetStateTransition", _wrap_iSkeletonFSMNodeFactory_SetStateTransition, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_SetTransitionCrossfade", _wrap_iSkeletonFSMNodeFactory_SetTransitionCrossfade, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_AddState", _wrap_iSkeletonFSMNodeFactory_AddState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_SetAutomaticTransition", _wrap_iSkeletonFSMNodeFactory_SetAutomaticTransition, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_scfGetVersion", _wrap_iSkeletonFSMNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonFSMNodeFactory", _wrap_delete_iSkeletonFSMNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNodeFactory_swigregister", iSkeletonFSMNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNode_SwitchToState", _wrap_iSkeletonFSMNode_SwitchToState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNode_GetCurrentState", _wrap_iSkeletonFSMNode_GetCurrentState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNode_GetStateNode", _wrap_iSkeletonFSMNode_GetStateNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNode_scfGetVersion", _wrap_iSkeletonFSMNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonFSMNode", _wrap_delete_iSkeletonFSMNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonFSMNode_swigregister", iSkeletonFSMNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeManager_CreateAnimNodeFactory", _wrap_iSkeletonIKNodeManager_CreateAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeManager_FindAnimNodeFactory", _wrap_iSkeletonIKNodeManager_FindAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeManager_ClearAnimNodeFactories", _wrap_iSkeletonIKNodeManager_ClearAnimNodeFactories, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeManager_scfGetVersion", _wrap_iSkeletonIKNodeManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonIKNodeManager", _wrap_delete_iSkeletonIKNodeManager, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeManager_swigregister", iSkeletonIKNodeManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeFactory_SetChildNode", _wrap_iSkeletonIKNodeFactory_SetChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeFactory_GetChildNode", _wrap_iSkeletonIKNodeFactory_GetChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeFactory_ClearChildNode", _wrap_iSkeletonIKNodeFactory_ClearChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeFactory_AddEffector", _wrap_iSkeletonIKNodeFactory_AddEffector, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeFactory_RemoveEffector", _wrap_iSkeletonIKNodeFactory_RemoveEffector, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeFactory_scfGetVersion", _wrap_iSkeletonIKNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonIKNodeFactory", _wrap_delete_iSkeletonIKNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNodeFactory_swigregister", iSkeletonIKNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNode_AddConstraint", _wrap_iSkeletonIKNode_AddConstraint, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNode_RemoveConstraint", _wrap_iSkeletonIKNode_RemoveConstraint, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNode_scfGetVersion", _wrap_iSkeletonIKNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonIKNode", _wrap_delete_iSkeletonIKNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKNode_swigregister", iSkeletonIKNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNodeFactory_SetChainAutoReset", _wrap_iSkeletonIKPhysicalNodeFactory_SetChainAutoReset, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNodeFactory_GetChainAutoReset", _wrap_iSkeletonIKPhysicalNodeFactory_GetChainAutoReset, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNodeFactory_scfGetVersion", _wrap_iSkeletonIKPhysicalNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonIKPhysicalNodeFactory", _wrap_delete_iSkeletonIKPhysicalNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNodeFactory_swigregister", iSkeletonIKPhysicalNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNode_SetRagdollNode", _wrap_iSkeletonIKPhysicalNode_SetRagdollNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNode_GetRagdollNode", _wrap_iSkeletonIKPhysicalNode_GetRagdollNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNode_scfGetVersion", _wrap_iSkeletonIKPhysicalNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonIKPhysicalNode", _wrap_delete_iSkeletonIKPhysicalNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKPhysicalNode_swigregister", iSkeletonIKPhysicalNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_SetMaximumIterations", _wrap_iSkeletonIKCCDNodeFactory_SetMaximumIterations, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_GetMaximumIterations", _wrap_iSkeletonIKCCDNodeFactory_GetMaximumIterations, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_SetTargetDistance", _wrap_iSkeletonIKCCDNodeFactory_SetTargetDistance, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_GetTargetDistance", _wrap_iSkeletonIKCCDNodeFactory_GetTargetDistance, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_SetMotionRatio", _wrap_iSkeletonIKCCDNodeFactory_SetMotionRatio, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_GetMotionRatio", _wrap_iSkeletonIKCCDNodeFactory_GetMotionRatio, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_SetJointInitialization", _wrap_iSkeletonIKCCDNodeFactory_SetJointInitialization, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_GetJointInitialization", _wrap_iSkeletonIKCCDNodeFactory_GetJointInitialization, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_SetUpwardIterations", _wrap_iSkeletonIKCCDNodeFactory_SetUpwardIterations, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_GetUpwardIterations", _wrap_iSkeletonIKCCDNodeFactory_GetUpwardIterations, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonIKCCDNodeFactory", _wrap_delete_iSkeletonIKCCDNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNodeFactory_swigregister", iSkeletonIKCCDNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonIKCCDNode", _wrap_delete_iSkeletonIKCCDNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonIKCCDNode_swigregister", iSkeletonIKCCDNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeManager_CreateAnimNodeFactory", _wrap_iSkeletonLookAtNodeManager_CreateAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeManager_FindAnimNodeFactory", _wrap_iSkeletonLookAtNodeManager_FindAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeManager_ClearAnimNodeFactories", _wrap_iSkeletonLookAtNodeManager_ClearAnimNodeFactories, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeManager_scfGetVersion", _wrap_iSkeletonLookAtNodeManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonLookAtNodeManager", _wrap_delete_iSkeletonLookAtNodeManager, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeManager_swigregister", iSkeletonLookAtNodeManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeFactory_SetChildNode", _wrap_iSkeletonLookAtNodeFactory_SetChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeFactory_GetChildNode", _wrap_iSkeletonLookAtNodeFactory_GetChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeFactory_ClearChildNode", _wrap_iSkeletonLookAtNodeFactory_ClearChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeFactory_scfGetVersion", _wrap_iSkeletonLookAtNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonLookAtNodeFactory", _wrap_delete_iSkeletonLookAtNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNodeFactory_swigregister", iSkeletonLookAtNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_SetBone", _wrap_iSkeletonLookAtNode_SetBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_SetTarget", _wrap_iSkeletonLookAtNode_SetTarget, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_RemoveTarget", _wrap_iSkeletonLookAtNode_RemoveTarget, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_SetMaximumSpeed", _wrap_iSkeletonLookAtNode_SetMaximumSpeed, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_SetAlwaysRotate", _wrap_iSkeletonLookAtNode_SetAlwaysRotate, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_SetListenerDelay", _wrap_iSkeletonLookAtNode_SetListenerDelay, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_AddListener", _wrap_iSkeletonLookAtNode_AddListener, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_RemoveListener", _wrap_iSkeletonLookAtNode_RemoveListener, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_scfGetVersion", _wrap_iSkeletonLookAtNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonLookAtNode", _wrap_delete_iSkeletonLookAtNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtNode_swigregister", iSkeletonLookAtNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtListener_TargetReached", _wrap_iSkeletonLookAtListener_TargetReached, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtListener_TargetLost", _wrap_iSkeletonLookAtListener_TargetLost, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtListener_scfGetVersion", _wrap_iSkeletonLookAtListener_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonLookAtListener", _wrap_delete_iSkeletonLookAtListener, METH_VARARGS, NULL},
	 { (char *)"iSkeletonLookAtListener_swigregister", iSkeletonLookAtListener_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeManager_CreateAnimNodeFactory", _wrap_iSkeletonRagdollNodeManager_CreateAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeManager_FindAnimNodeFactory", _wrap_iSkeletonRagdollNodeManager_FindAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeManager_ClearAnimNodeFactories", _wrap_iSkeletonRagdollNodeManager_ClearAnimNodeFactories, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeManager_scfGetVersion", _wrap_iSkeletonRagdollNodeManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonRagdollNodeManager", _wrap_delete_iSkeletonRagdollNodeManager, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeManager_swigregister", iSkeletonRagdollNodeManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_AddBodyChain", _wrap_iSkeletonRagdollNodeFactory_AddBodyChain, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_RemoveBodyChain", _wrap_iSkeletonRagdollNodeFactory_RemoveBodyChain, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_SetChildNode", _wrap_iSkeletonRagdollNodeFactory_SetChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_GetChildNode", _wrap_iSkeletonRagdollNodeFactory_GetChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_ClearChildNode", _wrap_iSkeletonRagdollNodeFactory_ClearChildNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_GetDynamicSystem", _wrap_iSkeletonRagdollNodeFactory_GetDynamicSystem, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_GetBodySkeleton", _wrap_iSkeletonRagdollNodeFactory_GetBodySkeleton, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_scfGetVersion", _wrap_iSkeletonRagdollNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonRagdollNodeFactory", _wrap_delete_iSkeletonRagdollNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNodeFactory_swigregister", iSkeletonRagdollNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_SetBodyChainState", _wrap_iSkeletonRagdollNode_SetBodyChainState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_GetBodyChainState", _wrap_iSkeletonRagdollNode_GetBodyChainState, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_GetBoneRigidBody", _wrap_iSkeletonRagdollNode_GetBoneRigidBody, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_GetBoneJoint", _wrap_iSkeletonRagdollNode_GetBoneJoint, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_GetBoneCount", _wrap_iSkeletonRagdollNode_GetBoneCount, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_GetBone", _wrap_iSkeletonRagdollNode_GetBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_ResetChainTransform", _wrap_iSkeletonRagdollNode_ResetChainTransform, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_GetRigidBodyBone", _wrap_iSkeletonRagdollNode_GetRigidBodyBone, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_scfGetVersion", _wrap_iSkeletonRagdollNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonRagdollNode", _wrap_delete_iSkeletonRagdollNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonRagdollNode_swigregister", iSkeletonRagdollNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeManager_CreateAnimNodeFactory", _wrap_iSkeletonSpeedNodeManager_CreateAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeManager_FindAnimNodeFactory", _wrap_iSkeletonSpeedNodeManager_FindAnimNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeManager_ClearAnimNodeFactories", _wrap_iSkeletonSpeedNodeManager_ClearAnimNodeFactories, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeManager_scfGetVersion", _wrap_iSkeletonSpeedNodeManager_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonSpeedNodeManager", _wrap_delete_iSkeletonSpeedNodeManager, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeManager_swigregister", iSkeletonSpeedNodeManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeFactory_AddNode", _wrap_iSkeletonSpeedNodeFactory_AddNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeFactory_scfGetVersion", _wrap_iSkeletonSpeedNodeFactory_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonSpeedNodeFactory", _wrap_delete_iSkeletonSpeedNodeFactory, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNodeFactory_swigregister", iSkeletonSpeedNodeFactory_swigregister, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNode_SetSpeed", _wrap_iSkeletonSpeedNode_SetSpeed, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNode_scfGetVersion", _wrap_iSkeletonSpeedNode_scfGetVersion, METH_VARARGS, NULL},
	 { (char *)"delete_iSkeletonSpeedNode", _wrap_delete_iSkeletonSpeedNode, METH_VARARGS, NULL},
	 { (char *)"iSkeletonSpeedNode_swigregister", iSkeletonSpeedNode_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_CS__Animation__iSkeletonIKPhysicalNodeFactoryTo_p_CS__Animation__iSkeletonIKNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonIKNodeFactory *)  ((CS::Animation::iSkeletonIKPhysicalNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKCCDNodeFactoryTo_p_CS__Animation__iSkeletonIKNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonIKNodeFactory *)  ((CS::Animation::iSkeletonIKCCDNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonAnimationNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonAnimationNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonBlendNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonBlendNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonPriorityNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonPriorityNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonRandomNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonRandomNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonFSMNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonFSMNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonIKNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKPhysicalNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *) (CS::Animation::iSkeletonIKNodeFactory *) ((CS::Animation::iSkeletonIKPhysicalNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKCCDNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *) (CS::Animation::iSkeletonIKNodeFactory *) ((CS::Animation::iSkeletonIKCCDNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonLookAtNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonLookAtNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonRagdollNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonRagdollNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonSpeedNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNodeFactory *)  ((CS::Animation::iSkeletonSpeedNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKCCDNodeTo_p_CS__Animation__iSkeletonIKNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonIKNode *)  ((CS::Animation::iSkeletonIKCCDNode *) x));
}
static void *_p_CS__Animation__iSkeletonIKPhysicalNodeTo_p_CS__Animation__iSkeletonIKNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonIKNode *)  ((CS::Animation::iSkeletonIKPhysicalNode *) x));
}
static void *_p_CS__Animation__csSkeletalStateTo_p_csRefCount(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((csRefCount *)  ((CS::Animation::csSkeletalState *) x));
}
static void *_p_iDocumentNodeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNodeIterator *) x));
}
static void *_p_iDocumentAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttributeIterator *) x));
}
static void *_p_iConfigIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigIterator *) x));
}
static void *_p_iReporterIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterIterator *) x));
}
static void *_p_iObjectIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectIterator *) x));
}
static void *_p_iObjectRegistryIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistryIterator *) x));
}
static void *_p_iEventAttributeIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventAttributeIterator *) x));
}
static void *_p_iPluginIteratorTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginIterator *) x));
}
static void *_p_iDocumentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocument *) x));
}
static void *_p_CS__Animation__iSkeletonAnimationNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonAnimationNode *) x));
}
static void *_p_CS__Animation__iBodyBoneColliderTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodyBoneCollider *) x));
}
static void *_p_iDocumentNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentNode *) x));
}
static void *_p_iObjectRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectRegistry *) x));
}
static void *_p_iEventNameRegistryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventNameRegistry *) x));
}
static void *_p_CS__Animation__iSkeletonAnimPacketTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonAnimPacket *) x));
}
static void *_p_iEventCordTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventCord *) x));
}
static void *_p_iStringSetTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iStringSetBase< CS::StringSetTag::General > *) ((iStringSet *) x));
}
static void *_p_CS__Animation__iSkeletonAnimationNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonAnimationNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonAnimNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonAnimNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonAnimPacketFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonAnimPacketFactory *) x));
}
static void *_p_CS__Animation__iSkeletonFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonFactory *) x));
}
static void *_p_iFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFactory *) x));
}
static void *_p_CS__Animation__iSkeletonBlendNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonBlendNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonPriorityNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonPriorityNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonRandomNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonRandomNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonFSMNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonFSMNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonIKNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKPhysicalNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *)(CS::Animation::iSkeletonIKNodeFactory *) ((CS::Animation::iSkeletonIKPhysicalNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonIKCCDNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *)(CS::Animation::iSkeletonIKNodeFactory *) ((CS::Animation::iSkeletonIKCCDNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonLookAtNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonLookAtNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonRagdollNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonRagdollNodeFactory *) x));
}
static void *_p_CS__Animation__iSkeletonSpeedNodeFactoryTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNodeFactory *) ((CS::Animation::iSkeletonSpeedNodeFactory *) x));
}
static void *_p_CS__Animation__iBodyChainNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodyChainNode *) x));
}
static void *_p_iEventTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEvent *) x));
}
static void *_p_CS__Animation__iSkeletonIKCCDNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *)(CS::Animation::iSkeletonIKNode *) ((CS::Animation::iSkeletonIKCCDNode *) x));
}
static void *_p_iClipper2DTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iClipper2D *) x));
}
static void *_p_CS__Animation__iSkeletonIKNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonIKNode *) x));
}
static void *_p_csConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *)(scfImplementation1< csConfigFile,iConfigFile > *) ((csConfigFile *) x));
}
static void *_p_iConfigFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iConfigFile *) x));
}
static void *_p_iDebugHelperTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDebugHelper *) x));
}
static void *_p_iDocumentSystemTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentSystem *) x));
}
static void *_p_CS__Animation__iSkeletonBlendNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonBlendNode *) x));
}
static void *_p_iKeyComposerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyComposer *) x));
}
static void *_p_iSCFTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iSCF *) x));
}
static void *_p_CS__Animation__iBodyChainTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodyChain *) x));
}
static void *_p_iThreadReturnTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadReturn *) x));
}
static void *_p_CS__Animation__iBodyBonePropertiesTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodyBoneProperties *) x));
}
static void *_p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringSetBase< CS::StringSetTag::General > *) x));
}
static void *_p_scfImplementation1T_csObject_iObject_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *) ((scfImplementation1< csObject,iObject > *) x));
}
static void *_p_CS__Animation__iSkeletonLookAtNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonLookAtNode *) x));
}
static void *_p_iEventOutletTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventOutlet *) x));
}
static void *_p_iPathTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPath *) x));
}
static void *_p_iVirtualClockTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVirtualClock *) x));
}
static void *_p_iReporterTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporter *) x));
}
static void *_p_CS__Animation__iSkeletonSpeedNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonSpeedNode *) x));
}
static void *_p_iObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObject *) x));
}
static void *_p_csObjectTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *) ((csObject *) x));
}
static void *_p_iEventQueueTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventQueue *) x));
}
static void *_p_CS__Animation__iBodyBoneJointTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodyBoneJoint *) x));
}
static void *_p_iStringTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iString *) x));
}
static void *_p_CS__Animation__iSkeletonPriorityNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonPriorityNode *) x));
}
static void *_p_iComponentTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iComponent *) x));
}
static void *_p_iCommandLineParserTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCommandLineParser *) x));
}
static void *_p_iJoystickDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iJoystickDriver *) x));
}
static void *_p_iMouseDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iMouseDriver *) x));
}
static void *_p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iObject *)(scfImplementation1< csObject,iObject > *)(csObject *) ((scfImplementationExt1< csPath,csObject,iPath > *) x));
}
static void *_p_iVFSTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iVFS *) x));
}
static void *_p_iStringArrayTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iStringArray *) x));
}
static void *_p_CS__Animation__iSkeletonRandomNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonRandomNode *) x));
}
static void *_p_iEventHandlerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventHandler *) x));
}
static void *_p_iEventPlugTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iEventPlug *) x));
}
static void *_p_CS__Animation__iSkeletonAnimNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonAnimNode *) x));
}
static void *_p_CS__Animation__iSkeletonAnimCallbackTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonAnimCallback *) x));
}
static void *_p_CS__Animation__iSkeletonIKPhysicalNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *)(CS::Animation::iSkeletonIKNode *) ((CS::Animation::iSkeletonIKPhysicalNode *) x));
}
static void *_p_CS__Animation__iBodyManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodyManager *) x));
}
static void *_p_CS__Animation__iSkeletonManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonManager *) x));
}
static void *_p_iConfigManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((iConfigManager *) x));
}
static void *_p_iCacheManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iCacheManager *) x));
}
static void *_p_iThreadManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iThreadManager *) x));
}
static void *_p_iPluginManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iPluginManager *) x));
}
static void *_p_iTriangleMeshTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iTriangleMesh *) x));
}
static void *_p_CS__Animation__iBodySkeletonTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodySkeleton *) x));
}
static void *_p_CS__Animation__iSkeletonTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeleton *) x));
}
static void *_p_CS__Animation__iSkeletonIKNodeManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonIKNodeManager *) x));
}
static void *_p_CS__Animation__iSkeletonLookAtNodeManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonLookAtNodeManager *) x));
}
static void *_p_CS__Animation__iSkeletonRagdollNodeManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonRagdollNodeManager *) x));
}
static void *_p_CS__Animation__iSkeletonSpeedNodeManagerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonSpeedNodeManager *) x));
}
static void *_p_CS__Animation__iBodyBoneTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iBodyBone *) x));
}
static void *_p_iFrameEventSignpostTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iEventHandler *) ((iFrameEventSignpost *) x));
}
static void *_p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (iConfigFile *) ((scfImplementation1< csConfigFile,iConfigFile > *) x));
}
static void *_p_iDataBufferTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDataBuffer *) x));
}
static void *_p_CS__Animation__iSkeletonFSMNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonFSMNode *) x));
}
static void *_p_CS__Animation__iSkeletonRagdollNodeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *) (CS::Animation::iSkeletonAnimNode *) ((CS::Animation::iSkeletonRagdollNode *) x));
}
static void *_p_CS__Animation__iSkeletonAnimationTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonAnimation *) x));
}
static void *_p_iKeyboardDriverTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iKeyboardDriver *) x));
}
static void *_p_iReporterListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iReporterListener *) x));
}
static void *_p_iObjectNameChangeListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iObjectNameChangeListener *) x));
}
static void *_p_CS__Animation__iSkeletonLookAtListenerTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((CS::Animation::iSkeletonLookAtListener *) x));
}
static void *_p_iFileTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iFile *) x));
}
static void *_p_iDocumentAttributeTo_p_iBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((iBase *)  ((iDocumentAttribute *) x));
}
static void *_p_CS__Animation__iSkeletonSpeedNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonSpeedNode *) x));
}
static void *_p_CS__Animation__iSkeletonRandomNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonRandomNode *) x));
}
static void *_p_CS__Animation__iSkeletonLookAtNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonLookAtNode *) x));
}
static void *_p_CS__Animation__iSkeletonPriorityNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonPriorityNode *) x));
}
static void *_p_CS__Animation__iSkeletonIKCCDNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *) (CS::Animation::iSkeletonIKNode *) ((CS::Animation::iSkeletonIKCCDNode *) x));
}
static void *_p_CS__Animation__iSkeletonIKPhysicalNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *) (CS::Animation::iSkeletonIKNode *) ((CS::Animation::iSkeletonIKPhysicalNode *) x));
}
static void *_p_CS__Animation__iSkeletonAnimationNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonAnimationNode *) x));
}
static void *_p_CS__Animation__iSkeletonBlendNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonBlendNode *) x));
}
static void *_p_CS__Animation__iSkeletonRagdollNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonRagdollNode *) x));
}
static void *_p_CS__Animation__iSkeletonFSMNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonFSMNode *) x));
}
static void *_p_CS__Animation__iSkeletonIKNodeTo_p_CS__Animation__iSkeletonAnimNode(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((CS::Animation::iSkeletonAnimNode *)  ((CS::Animation::iSkeletonIKNode *) x));
}
static swig_type_info _swigt__p_AllocatorType = {"_p_AllocatorType", "AllocatorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__csSkeletalState = {"_p_CS__Animation__csSkeletalState", "csSkeletalState2 *|CS::Animation::csSkeletalState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodyBone = {"_p_CS__Animation__iBodyBone", "CS::Animation::iBodyBone *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodyBoneCollider = {"_p_CS__Animation__iBodyBoneCollider", "CS::Animation::iBodyBoneCollider *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodyBoneJoint = {"_p_CS__Animation__iBodyBoneJoint", "CS::Animation::iBodyBoneJoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodyBoneProperties = {"_p_CS__Animation__iBodyBoneProperties", "CS::Animation::iBodyBoneProperties *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodyChain = {"_p_CS__Animation__iBodyChain", "CS::Animation::iBodyChain *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodyChainNode = {"_p_CS__Animation__iBodyChainNode", "CS::Animation::iBodyChainNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodyManager = {"_p_CS__Animation__iBodyManager", "CS::Animation::iBodyManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iBodySkeleton = {"_p_CS__Animation__iBodySkeleton", "CS::Animation::iBodySkeleton *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeleton = {"_p_CS__Animation__iSkeleton", "CS::Animation::iSkeleton *|iSkeleton2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimCallback = {"_p_CS__Animation__iSkeletonAnimCallback", "CS::Animation::iSkeletonAnimCallback *|iSkeletonAnimCallback2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimNode = {"_p_CS__Animation__iSkeletonAnimNode", "CS::Animation::iSkeletonAnimNode *|iSkeletonAnimNode2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimNodeFactory = {"_p_CS__Animation__iSkeletonAnimNodeFactory", "CS::Animation::iSkeletonAnimNodeFactory *|iSkeletonAnimNodeFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimPacket = {"_p_CS__Animation__iSkeletonAnimPacket", "iSkeletonAnimPacket2 *|CS::Animation::iSkeletonAnimPacket *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimPacketFactory = {"_p_CS__Animation__iSkeletonAnimPacketFactory", "CS::Animation::iSkeletonAnimPacketFactory *|iSkeletonAnimPacketFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimation = {"_p_CS__Animation__iSkeletonAnimation", "CS::Animation::iSkeletonAnimation *|iSkeletonAnimation2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimationNode = {"_p_CS__Animation__iSkeletonAnimationNode", "iSkeletonAnimationNode2 *|CS::Animation::iSkeletonAnimationNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonAnimationNodeFactory = {"_p_CS__Animation__iSkeletonAnimationNodeFactory", "CS::Animation::iSkeletonAnimationNodeFactory *|iSkeletonAnimationNodeFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonBlendNode = {"_p_CS__Animation__iSkeletonBlendNode", "iSkeletonBlendNode2 *|CS::Animation::iSkeletonBlendNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonBlendNodeFactory = {"_p_CS__Animation__iSkeletonBlendNodeFactory", "CS::Animation::iSkeletonBlendNodeFactory *|iSkeletonBlendNodeFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonFSMNode = {"_p_CS__Animation__iSkeletonFSMNode", "CS::Animation::iSkeletonFSMNode *|iSkeletonFSMNode2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonFSMNodeFactory = {"_p_CS__Animation__iSkeletonFSMNodeFactory", "CS::Animation::iSkeletonFSMNodeFactory *|iSkeletonFSMNodeFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonFactory = {"_p_CS__Animation__iSkeletonFactory", "CS::Animation::iSkeletonFactory *|iSkeletonFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonIKCCDNode = {"_p_CS__Animation__iSkeletonIKCCDNode", "CS::Animation::iSkeletonIKCCDNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonIKCCDNodeFactory = {"_p_CS__Animation__iSkeletonIKCCDNodeFactory", "CS::Animation::iSkeletonIKCCDNodeFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonIKNode = {"_p_CS__Animation__iSkeletonIKNode", "CS::Animation::iSkeletonIKNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonIKNodeFactory = {"_p_CS__Animation__iSkeletonIKNodeFactory", "CS::Animation::iSkeletonIKNodeFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonIKNodeManager = {"_p_CS__Animation__iSkeletonIKNodeManager", "CS::Animation::iSkeletonIKNodeManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonIKPhysicalNode = {"_p_CS__Animation__iSkeletonIKPhysicalNode", "CS::Animation::iSkeletonIKPhysicalNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonIKPhysicalNodeFactory = {"_p_CS__Animation__iSkeletonIKPhysicalNodeFactory", "CS::Animation::iSkeletonIKPhysicalNodeFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonLookAtListener = {"_p_CS__Animation__iSkeletonLookAtListener", "CS::Animation::iSkeletonLookAtListener *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonLookAtNode = {"_p_CS__Animation__iSkeletonLookAtNode", "CS::Animation::iSkeletonLookAtNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonLookAtNodeFactory = {"_p_CS__Animation__iSkeletonLookAtNodeFactory", "CS::Animation::iSkeletonLookAtNodeFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonLookAtNodeManager = {"_p_CS__Animation__iSkeletonLookAtNodeManager", "CS::Animation::iSkeletonLookAtNodeManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonManager = {"_p_CS__Animation__iSkeletonManager", "CS::Animation::iSkeletonManager *|iSkeletonManager2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonPriorityNode = {"_p_CS__Animation__iSkeletonPriorityNode", "CS::Animation::iSkeletonPriorityNode *|iSkeletonPriorityNode2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonPriorityNodeFactory = {"_p_CS__Animation__iSkeletonPriorityNodeFactory", "CS::Animation::iSkeletonPriorityNodeFactory *|iSkeletonPriorityNodeFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonRagdollNode = {"_p_CS__Animation__iSkeletonRagdollNode", "CS::Animation::iSkeletonRagdollNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonRagdollNodeFactory = {"_p_CS__Animation__iSkeletonRagdollNodeFactory", "CS::Animation::iSkeletonRagdollNodeFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonRagdollNodeManager = {"_p_CS__Animation__iSkeletonRagdollNodeManager", "CS::Animation::iSkeletonRagdollNodeManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonRandomNode = {"_p_CS__Animation__iSkeletonRandomNode", "CS::Animation::iSkeletonRandomNode *|iSkeletonRandomNode2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonRandomNodeFactory = {"_p_CS__Animation__iSkeletonRandomNodeFactory", "CS::Animation::iSkeletonRandomNodeFactory *|iSkeletonRandomNodeFactory2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonSpeedNode = {"_p_CS__Animation__iSkeletonSpeedNode", "CS::Animation::iSkeletonSpeedNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonSpeedNodeFactory = {"_p_CS__Animation__iSkeletonSpeedNodeFactory", "CS::Animation::iSkeletonSpeedNodeFactory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Animation__iSkeletonSpeedNodeManager = {"_p_CS__Animation__iSkeletonSpeedNodeManager", "CS::Animation::iSkeletonSpeedNodeManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Memory__AllocatorMalloc = {"_p_CS__Memory__AllocatorMalloc", "CS::Container::ArrayAllocDefault *|CS::Memory::AllocatorMalloc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Mesh__iAnimatedMesh = {"_p_CS__Mesh__iAnimatedMesh", "CS::Mesh::iAnimatedMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__StringIDT_CS__StringSetTag__General_t = {"_p_CS__StringIDT_CS__StringSetTag__General_t", "csStringID *|csEventID *|CS::StringID< CS::StringSetTag::General > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t = {"_p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t", "csStringSet *|CS::Utility::StringSet< CS::StringSetTag::General,false > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CapacityHandlerType = {"_p_CapacityHandlerType", "CapacityHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ElementHandlerType = {"_p_ElementHandlerType", "ElementHandlerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_HashType = {"_p_HashType", "HashType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TagType = {"_p_TagType", "TagType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ThisType = {"_p_ThisType", "ThisType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ValueType = {"_p_ValueType", "ValueType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__1_basetype = {"_p__1_basetype", "$1_basetype *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyCharType = {"_p__csKeyCharType", "enum _csKeyCharType *|csKeyCharType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyEventType = {"_p__csKeyEventType", "enum _csKeyEventType *|csKeyEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierNumType = {"_p__csKeyModifierNumType", "enum _csKeyModifierNumType *|csKeyModifierNumType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifierType = {"_p__csKeyModifierType", "enum _csKeyModifierType *|csKeyModifierType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csKeyModifiers = {"_p__csKeyModifiers", "_csKeyModifiers *|csKeyModifiers *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p__csMouseEventType = {"_p__csMouseEventType", "enum _csMouseEventType *|csMouseEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityFixedGrowT_16_t = {"_p_csArrayCapacityFixedGrowT_16_t", "CS::Container::ArrayCapacityDefault *|csArrayCapacityFixedGrow< 16 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayCapacityVariableGrow = {"_p_csArrayCapacityVariableGrow", "csArrayCapacityDefault *|csArrayCapacityVariableGrow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t = {"_p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t", "csArray< CS::Animation::BoneID > *|csArray< size_t > *|csArray< size_t,csArrayElementHandler< size_t >,CS::Container::ArrayAllocDefault,CS::Container::ArrayCapacityDefault > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csColliderGeometryType = {"_p_csColliderGeometryType", "csColliderGeometryType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csMatrix3 = {"_p_csMatrix3", "csMatrix3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csOrthoTransform = {"_p_csOrthoTransform", "csOrthoTransform *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPlane3 = {"_p_csPlane3", "csPlane3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__csSkeletalState_t = {"_p_csPtrT_CS__Animation__csSkeletalState_t", "csPtr< CS::Animation::csSkeletalState > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeletonAnimNode_t = {"_p_csPtrT_CS__Animation__iSkeletonAnimNode_t", "csPtr< CS::Animation::iSkeletonAnimNode > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeletonAnimPacket_t = {"_p_csPtrT_CS__Animation__iSkeletonAnimPacket_t", "csPtr< CS::Animation::iSkeletonAnimPacket > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t = {"_p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t", "csPtr< CS::Animation::iSkeletonAnimationNodeFactory > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t = {"_p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t", "csPtr< CS::Animation::iSkeletonBlendNodeFactory > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t = {"_p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t", "csPtr< CS::Animation::iSkeletonFSMNodeFactory > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t = {"_p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t", "csPtr< CS::Animation::iSkeletonPriorityNodeFactory > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t = {"_p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t", "csPtr< CS::Animation::iSkeletonRandomNodeFactory > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csPtrT_CS__Animation__iSkeleton_t = {"_p_csPtrT_CS__Animation__iSkeleton_t", "csPtr< CS::Animation::iSkeleton > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csQuaternion = {"_p_csQuaternion", "csQuaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefArrayT_iObject_t = {"_p_csRefArrayT_iObject_t", "csRefArray< iObject > *|csObjectContainer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csRefCount = {"_p_csRefCount", "csRefCount *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csSphere = {"_p_csSphere", "csSphere *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_csVector3 = {"_p_csVector3", "csVector3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iBase = {"_p_iBase", "iBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDocumentNodeIterator = {"_p_iDocumentNodeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentAttributeIterator = {"_p_iDocumentAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigIterator = {"_p_iConfigIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporterIterator = {"_p_iReporterIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectIterator = {"_p_iObjectIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectRegistryIterator = {"_p_iObjectRegistryIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventAttributeIterator = {"_p_iEventAttributeIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPluginIterator = {"_p_iPluginIterator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocument = {"_p_iDocument", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentNode = {"_p_iDocumentNode", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectRegistry = {"_p_iObjectRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventNameRegistry = {"_p_iEventNameRegistry", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventCord = {"_p_iEventCord", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringSet = {"_p_iStringSet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t = {"_p_scfImplementationExt1T_csPath_csObject_iPath_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFactory = {"_p_iFactory", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iClipper2D = {"_p_iClipper2D", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csConfigFile = {"_p_csConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigFile = {"_p_iConfigFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDebugHelper = {"_p_iDebugHelper", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentSystem = {"_p_iDocumentSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iKeyComposer = {"_p_iKeyComposer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iThreadReturn = {"_p_iThreadReturn", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventOutlet = {"_p_iEventOutlet", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t = {"_p_scfImplementation1T_csConfigFile_iConfigFile_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVirtualClock = {"_p_iVirtualClock", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPath = {"_p_iPath", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporter = {"_p_iReporter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObject = {"_p_iObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_csObject = {"_p_csObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventQueue = {"_p_iEventQueue", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEvent = {"_p_iEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iString = {"_p_iString", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iComponent = {"_p_iComponent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCommandLineParser = {"_p_iCommandLineParser", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iJoystickDriver = {"_p_iJoystickDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iMouseDriver = {"_p_iMouseDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringArray = {"_p_iStringArray", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventHandler = {"_p_iEventHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iEventPlug = {"_p_iEventPlug", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iVFS = {"_p_iVFS", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iConfigManager = {"_p_iConfigManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCacheManager = {"_p_iCacheManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iThreadManager = {"_p_iThreadManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iPluginManager = {"_p_iPluginManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iTriangleMesh = {"_p_iTriangleMesh", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFrameEventSignpost = {"_p_iFrameEventSignpost", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDataBuffer = {"_p_iDataBuffer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iStringSetBaseT_CS__StringSetTag__General_t = {"_p_iStringSetBaseT_CS__StringSetTag__General_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iKeyboardDriver = {"_p_iKeyboardDriver", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_scfImplementation1T_csObject_iObject_t = {"_p_scfImplementation1T_csObject_iObject_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iReporterListener = {"_p_iReporterListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iObjectNameChangeListener = {"_p_iObjectNameChangeListener", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iFile = {"_p_iFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iDocumentAttribute = {"_p_iDocumentAttribute", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_iCamera = {"_p_iCamera", "iCamera *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iDynamicSystem = {"_p_iDynamicSystem", "iDynamicSystem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iJoint = {"_p_iJoint", "iJoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iMeshWrapper = {"_p_iMeshWrapper", "iMeshWrapper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iMovable = {"_p_iMovable", "iMovable *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iRigidBody = {"_p_iRigidBody", "iRigidBody *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iSCF = {"_p_iSCF", "iSCF *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iSceneNode = {"_p_iSceneNode", "iSceneNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|int32 *|scfInterfaceVersion *|int32_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int16_t = {"_p_int16_t", "int16 *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *|int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int8_t = {"_p_int8_t", "int8 *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "longlong *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_iMeshWrapper = {"_p_p_iMeshWrapper", "iMeshWrapper **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "size_t *|CS::Animation::BoneID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint16_t = {"_p_uint16_t", "uint16 *|uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *|uint32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *|uint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "uint8 *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "CS::StringIDValue *|unsigned int *|uint *|CS::Animation::ChannelID *|CS::Animation::StateID *|CS::Animation::KeyFrameID *|CS::Animation::EffectorID *|csTicks *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|scfInterfaceID *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "ulonglong *|unsigned long long *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_AllocatorType,
  &_swigt__p_CS__Animation__csSkeletalState,
  &_swigt__p_CS__Animation__iBodyBone,
  &_swigt__p_CS__Animation__iBodyBoneCollider,
  &_swigt__p_CS__Animation__iBodyBoneJoint,
  &_swigt__p_CS__Animation__iBodyBoneProperties,
  &_swigt__p_CS__Animation__iBodyChain,
  &_swigt__p_CS__Animation__iBodyChainNode,
  &_swigt__p_CS__Animation__iBodyManager,
  &_swigt__p_CS__Animation__iBodySkeleton,
  &_swigt__p_CS__Animation__iSkeleton,
  &_swigt__p_CS__Animation__iSkeletonAnimCallback,
  &_swigt__p_CS__Animation__iSkeletonAnimNode,
  &_swigt__p_CS__Animation__iSkeletonAnimNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonAnimPacket,
  &_swigt__p_CS__Animation__iSkeletonAnimPacketFactory,
  &_swigt__p_CS__Animation__iSkeletonAnimation,
  &_swigt__p_CS__Animation__iSkeletonAnimationNode,
  &_swigt__p_CS__Animation__iSkeletonAnimationNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonBlendNode,
  &_swigt__p_CS__Animation__iSkeletonBlendNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonFSMNode,
  &_swigt__p_CS__Animation__iSkeletonFSMNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonFactory,
  &_swigt__p_CS__Animation__iSkeletonIKCCDNode,
  &_swigt__p_CS__Animation__iSkeletonIKCCDNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonIKNode,
  &_swigt__p_CS__Animation__iSkeletonIKNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonIKNodeManager,
  &_swigt__p_CS__Animation__iSkeletonIKPhysicalNode,
  &_swigt__p_CS__Animation__iSkeletonIKPhysicalNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonLookAtListener,
  &_swigt__p_CS__Animation__iSkeletonLookAtNode,
  &_swigt__p_CS__Animation__iSkeletonLookAtNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonLookAtNodeManager,
  &_swigt__p_CS__Animation__iSkeletonManager,
  &_swigt__p_CS__Animation__iSkeletonPriorityNode,
  &_swigt__p_CS__Animation__iSkeletonPriorityNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonRagdollNode,
  &_swigt__p_CS__Animation__iSkeletonRagdollNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonRagdollNodeManager,
  &_swigt__p_CS__Animation__iSkeletonRandomNode,
  &_swigt__p_CS__Animation__iSkeletonRandomNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonSpeedNode,
  &_swigt__p_CS__Animation__iSkeletonSpeedNodeFactory,
  &_swigt__p_CS__Animation__iSkeletonSpeedNodeManager,
  &_swigt__p_CS__Memory__AllocatorMalloc,
  &_swigt__p_CS__Mesh__iAnimatedMesh,
  &_swigt__p_CS__StringIDT_CS__StringSetTag__General_t,
  &_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t,
  &_swigt__p_CapacityHandlerType,
  &_swigt__p_ElementHandlerType,
  &_swigt__p_HashType,
  &_swigt__p_TagType,
  &_swigt__p_ThisType,
  &_swigt__p_ValueType,
  &_swigt__p__1_basetype,
  &_swigt__p__csKeyCharType,
  &_swigt__p__csKeyEventType,
  &_swigt__p__csKeyModifierNumType,
  &_swigt__p__csKeyModifierType,
  &_swigt__p__csKeyModifiers,
  &_swigt__p__csMouseEventType,
  &_swigt__p_char,
  &_swigt__p_csArrayCapacityFixedGrowT_16_t,
  &_swigt__p_csArrayCapacityVariableGrow,
  &_swigt__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  &_swigt__p_csColliderGeometryType,
  &_swigt__p_csConfigFile,
  &_swigt__p_csMatrix3,
  &_swigt__p_csObject,
  &_swigt__p_csOrthoTransform,
  &_swigt__p_csPlane3,
  &_swigt__p_csPtrT_CS__Animation__csSkeletalState_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeletonAnimNode_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeletonAnimPacket_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t,
  &_swigt__p_csPtrT_CS__Animation__iSkeleton_t,
  &_swigt__p_csQuaternion,
  &_swigt__p_csRefArrayT_iObject_t,
  &_swigt__p_csRefCount,
  &_swigt__p_csSphere,
  &_swigt__p_csVector3,
  &_swigt__p_float,
  &_swigt__p_iBase,
  &_swigt__p_iCacheManager,
  &_swigt__p_iCamera,
  &_swigt__p_iClipper2D,
  &_swigt__p_iCommandLineParser,
  &_swigt__p_iComponent,
  &_swigt__p_iConfigFile,
  &_swigt__p_iConfigIterator,
  &_swigt__p_iConfigManager,
  &_swigt__p_iDataBuffer,
  &_swigt__p_iDebugHelper,
  &_swigt__p_iDocument,
  &_swigt__p_iDocumentAttribute,
  &_swigt__p_iDocumentAttributeIterator,
  &_swigt__p_iDocumentNode,
  &_swigt__p_iDocumentNodeIterator,
  &_swigt__p_iDocumentSystem,
  &_swigt__p_iDynamicSystem,
  &_swigt__p_iEvent,
  &_swigt__p_iEventAttributeIterator,
  &_swigt__p_iEventCord,
  &_swigt__p_iEventHandler,
  &_swigt__p_iEventNameRegistry,
  &_swigt__p_iEventOutlet,
  &_swigt__p_iEventPlug,
  &_swigt__p_iEventQueue,
  &_swigt__p_iFactory,
  &_swigt__p_iFile,
  &_swigt__p_iFrameEventSignpost,
  &_swigt__p_iJoint,
  &_swigt__p_iJoystickDriver,
  &_swigt__p_iKeyComposer,
  &_swigt__p_iKeyboardDriver,
  &_swigt__p_iMeshWrapper,
  &_swigt__p_iMouseDriver,
  &_swigt__p_iMovable,
  &_swigt__p_iObject,
  &_swigt__p_iObjectIterator,
  &_swigt__p_iObjectNameChangeListener,
  &_swigt__p_iObjectRegistry,
  &_swigt__p_iObjectRegistryIterator,
  &_swigt__p_iPath,
  &_swigt__p_iPluginIterator,
  &_swigt__p_iPluginManager,
  &_swigt__p_iReporter,
  &_swigt__p_iReporterIterator,
  &_swigt__p_iReporterListener,
  &_swigt__p_iRigidBody,
  &_swigt__p_iSCF,
  &_swigt__p_iSceneNode,
  &_swigt__p_iString,
  &_swigt__p_iStringArray,
  &_swigt__p_iStringSet,
  &_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t,
  &_swigt__p_iThreadManager,
  &_swigt__p_iThreadReturn,
  &_swigt__p_iTriangleMesh,
  &_swigt__p_iVFS,
  &_swigt__p_iVirtualClock,
  &_swigt__p_int,
  &_swigt__p_int16_t,
  &_swigt__p_int64_t,
  &_swigt__p_int8_t,
  &_swigt__p_long_long,
  &_swigt__p_p_iMeshWrapper,
  &_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  &_swigt__p_scfImplementation1T_csObject_iObject_t,
  &_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  &_swigt__p_size_t,
  &_swigt__p_uint16_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_uint8_t,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_long_long,
};

static swig_cast_info _swigc__p_AllocatorType[] = {  {&_swigt__p_AllocatorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__csSkeletalState[] = {  {&_swigt__p_CS__Animation__csSkeletalState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodyBone[] = {  {&_swigt__p_CS__Animation__iBodyBone, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodyBoneCollider[] = {  {&_swigt__p_CS__Animation__iBodyBoneCollider, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodyBoneJoint[] = {  {&_swigt__p_CS__Animation__iBodyBoneJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodyBoneProperties[] = {  {&_swigt__p_CS__Animation__iBodyBoneProperties, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodyChain[] = {  {&_swigt__p_CS__Animation__iBodyChain, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodyChainNode[] = {  {&_swigt__p_CS__Animation__iBodyChainNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodyManager[] = {  {&_swigt__p_CS__Animation__iBodyManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iBodySkeleton[] = {  {&_swigt__p_CS__Animation__iBodySkeleton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeleton[] = {  {&_swigt__p_CS__Animation__iSkeleton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimCallback[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimNode[] = {  {&_swigt__p_CS__Animation__iSkeletonSpeedNode, _p_CS__Animation__iSkeletonSpeedNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRandomNode, _p_CS__Animation__iSkeletonRandomNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonLookAtNode, _p_CS__Animation__iSkeletonLookAtNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonPriorityNode, _p_CS__Animation__iSkeletonPriorityNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKCCDNode, _p_CS__Animation__iSkeletonIKCCDNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimNode, 0, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNode, _p_CS__Animation__iSkeletonIKPhysicalNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimationNode, _p_CS__Animation__iSkeletonAnimationNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonBlendNode, _p_CS__Animation__iSkeletonBlendNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRagdollNode, _p_CS__Animation__iSkeletonRagdollNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonFSMNode, _p_CS__Animation__iSkeletonFSMNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKNode, _p_CS__Animation__iSkeletonIKNodeTo_p_CS__Animation__iSkeletonAnimNode, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimationNodeFactory, _p_CS__Animation__iSkeletonAnimationNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonBlendNodeFactory, _p_CS__Animation__iSkeletonBlendNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonPriorityNodeFactory, _p_CS__Animation__iSkeletonPriorityNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRandomNodeFactory, _p_CS__Animation__iSkeletonRandomNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonFSMNodeFactory, _p_CS__Animation__iSkeletonFSMNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKNodeFactory, _p_CS__Animation__iSkeletonIKNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNodeFactory, _p_CS__Animation__iSkeletonIKPhysicalNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKCCDNodeFactory, _p_CS__Animation__iSkeletonIKCCDNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonLookAtNodeFactory, _p_CS__Animation__iSkeletonLookAtNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRagdollNodeFactory, _p_CS__Animation__iSkeletonRagdollNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonSpeedNodeFactory, _p_CS__Animation__iSkeletonSpeedNodeFactoryTo_p_CS__Animation__iSkeletonAnimNodeFactory, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimPacket[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimPacket, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimPacketFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimPacketFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimation[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimationNode[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimationNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonAnimationNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimationNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonBlendNode[] = {  {&_swigt__p_CS__Animation__iSkeletonBlendNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonBlendNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonBlendNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonFSMNode[] = {  {&_swigt__p_CS__Animation__iSkeletonFSMNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonFSMNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonFSMNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonIKCCDNode[] = {  {&_swigt__p_CS__Animation__iSkeletonIKCCDNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonIKCCDNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonIKCCDNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonIKNode[] = {  {&_swigt__p_CS__Animation__iSkeletonIKCCDNode, _p_CS__Animation__iSkeletonIKCCDNodeTo_p_CS__Animation__iSkeletonIKNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNode, _p_CS__Animation__iSkeletonIKPhysicalNodeTo_p_CS__Animation__iSkeletonIKNode, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonIKNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonIKNodeFactory, 0, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNodeFactory, _p_CS__Animation__iSkeletonIKPhysicalNodeFactoryTo_p_CS__Animation__iSkeletonIKNodeFactory, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKCCDNodeFactory, _p_CS__Animation__iSkeletonIKCCDNodeFactoryTo_p_CS__Animation__iSkeletonIKNodeFactory, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonIKNodeManager[] = {  {&_swigt__p_CS__Animation__iSkeletonIKNodeManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonIKPhysicalNode[] = {  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonIKPhysicalNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonLookAtListener[] = {  {&_swigt__p_CS__Animation__iSkeletonLookAtListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonLookAtNode[] = {  {&_swigt__p_CS__Animation__iSkeletonLookAtNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonLookAtNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonLookAtNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonLookAtNodeManager[] = {  {&_swigt__p_CS__Animation__iSkeletonLookAtNodeManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonManager[] = {  {&_swigt__p_CS__Animation__iSkeletonManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonPriorityNode[] = {  {&_swigt__p_CS__Animation__iSkeletonPriorityNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonPriorityNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonPriorityNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonRagdollNode[] = {  {&_swigt__p_CS__Animation__iSkeletonRagdollNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonRagdollNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonRagdollNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonRagdollNodeManager[] = {  {&_swigt__p_CS__Animation__iSkeletonRagdollNodeManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonRandomNode[] = {  {&_swigt__p_CS__Animation__iSkeletonRandomNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonRandomNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonRandomNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonSpeedNode[] = {  {&_swigt__p_CS__Animation__iSkeletonSpeedNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonSpeedNodeFactory[] = {  {&_swigt__p_CS__Animation__iSkeletonSpeedNodeFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Animation__iSkeletonSpeedNodeManager[] = {  {&_swigt__p_CS__Animation__iSkeletonSpeedNodeManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Memory__AllocatorMalloc[] = {  {&_swigt__p_CS__Memory__AllocatorMalloc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Mesh__iAnimatedMesh[] = {  {&_swigt__p_CS__Mesh__iAnimatedMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__StringIDT_CS__StringSetTag__General_t[] = {  {&_swigt__p_CS__StringIDT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t[] = {  {&_swigt__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CapacityHandlerType[] = {  {&_swigt__p_CapacityHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ElementHandlerType[] = {  {&_swigt__p_ElementHandlerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_HashType[] = {  {&_swigt__p_HashType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TagType[] = {  {&_swigt__p_TagType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ThisType[] = {  {&_swigt__p_ThisType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ValueType[] = {  {&_swigt__p_ValueType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__1_basetype[] = {  {&_swigt__p__1_basetype, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyCharType[] = {  {&_swigt__p__csKeyCharType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyEventType[] = {  {&_swigt__p__csKeyEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierNumType[] = {  {&_swigt__p__csKeyModifierNumType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifierType[] = {  {&_swigt__p__csKeyModifierType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csKeyModifiers[] = {  {&_swigt__p__csKeyModifiers, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p__csMouseEventType[] = {  {&_swigt__p__csMouseEventType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityFixedGrowT_16_t[] = {  {&_swigt__p_csArrayCapacityFixedGrowT_16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayCapacityVariableGrow[] = {  {&_swigt__p_csArrayCapacityVariableGrow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t[] = {  {&_swigt__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csColliderGeometryType[] = {  {&_swigt__p_csColliderGeometryType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csMatrix3[] = {  {&_swigt__p_csMatrix3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csOrthoTransform[] = {  {&_swigt__p_csOrthoTransform, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPlane3[] = {  {&_swigt__p_csPlane3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__csSkeletalState_t[] = {  {&_swigt__p_csPtrT_CS__Animation__csSkeletalState_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeletonAnimNode_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeletonAnimNode_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeletonAnimPacket_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeletonAnimPacket_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csPtrT_CS__Animation__iSkeleton_t[] = {  {&_swigt__p_csPtrT_CS__Animation__iSkeleton_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csQuaternion[] = {  {&_swigt__p_csQuaternion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefArrayT_iObject_t[] = {  {&_swigt__p_csRefArrayT_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csRefCount[] = {  {&_swigt__p_csRefCount, 0, 0, 0},  {&_swigt__p_CS__Animation__csSkeletalState, _p_CS__Animation__csSkeletalStateTo_p_csRefCount, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csSphere[] = {  {&_swigt__p_csSphere, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csVector3[] = {  {&_swigt__p_csVector3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNodeIterator[] = {{&_swigt__p_iDocumentNodeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttributeIterator[] = {{&_swigt__p_iDocumentAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigIterator[] = {{&_swigt__p_iConfigIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterIterator[] = {{&_swigt__p_iReporterIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectIterator[] = {{&_swigt__p_iObjectIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistryIterator[] = {{&_swigt__p_iObjectRegistryIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventAttributeIterator[] = {{&_swigt__p_iEventAttributeIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginIterator[] = {{&_swigt__p_iPluginIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocument[] = {{&_swigt__p_iDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentNode[] = {{&_swigt__p_iDocumentNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectRegistry[] = {{&_swigt__p_iObjectRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventNameRegistry[] = {{&_swigt__p_iEventNameRegistry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventCord[] = {{&_swigt__p_iEventCord, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSet[] = {{&_swigt__p_iStringSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t[] = {{&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFactory[] = {{&_swigt__p_iFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iClipper2D[] = {{&_swigt__p_iClipper2D, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csConfigFile[] = {{&_swigt__p_csConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigFile[] = {{&_swigt__p_iConfigFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDebugHelper[] = {{&_swigt__p_iDebugHelper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentSystem[] = {{&_swigt__p_iDocumentSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyComposer[] = {{&_swigt__p_iKeyComposer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadReturn[] = {{&_swigt__p_iThreadReturn, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventOutlet[] = {{&_swigt__p_iEventOutlet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t[] = {{&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVirtualClock[] = {{&_swigt__p_iVirtualClock, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPath[] = {{&_swigt__p_iPath, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporter[] = {{&_swigt__p_iReporter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObject[] = {{&_swigt__p_iObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_csObject[] = {{&_swigt__p_csObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventQueue[] = {{&_swigt__p_iEventQueue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEvent[] = {{&_swigt__p_iEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iString[] = {{&_swigt__p_iString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iComponent[] = {{&_swigt__p_iComponent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCommandLineParser[] = {{&_swigt__p_iCommandLineParser, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iJoystickDriver[] = {{&_swigt__p_iJoystickDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMouseDriver[] = {{&_swigt__p_iMouseDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringArray[] = {{&_swigt__p_iStringArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventHandler[] = {{&_swigt__p_iEventHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iEventPlug[] = {{&_swigt__p_iEventPlug, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iVFS[] = {{&_swigt__p_iVFS, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iConfigManager[] = {{&_swigt__p_iConfigManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCacheManager[] = {{&_swigt__p_iCacheManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iThreadManager[] = {{&_swigt__p_iThreadManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iPluginManager[] = {{&_swigt__p_iPluginManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iTriangleMesh[] = {{&_swigt__p_iTriangleMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFrameEventSignpost[] = {{&_swigt__p_iFrameEventSignpost, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDataBuffer[] = {{&_swigt__p_iDataBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t[] = {{&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iKeyboardDriver[] = {{&_swigt__p_iKeyboardDriver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_scfImplementation1T_csObject_iObject_t[] = {{&_swigt__p_scfImplementation1T_csObject_iObject_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iReporterListener[] = {{&_swigt__p_iReporterListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iObjectNameChangeListener[] = {{&_swigt__p_iObjectNameChangeListener, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iFile[] = {{&_swigt__p_iFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDocumentAttribute[] = {{&_swigt__p_iDocumentAttribute, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iBase[] = {  {&_swigt__p_CS__Animation__iSkeletonAnimationNode, _p_CS__Animation__iSkeletonAnimationNodeTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNodeIterator, _p_iDocumentNodeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttributeIterator, _p_iDocumentAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iConfigIterator, _p_iConfigIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iReporterIterator, _p_iReporterIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectIterator, _p_iObjectIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iObjectRegistryIterator, _p_iObjectRegistryIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iEventAttributeIterator, _p_iEventAttributeIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iPluginIterator, _p_iPluginIteratorTo_p_iBase, 0, 0},  {&_swigt__p_iDocument, _p_iDocumentTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodyBoneCollider, _p_CS__Animation__iBodyBoneColliderTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentNode, _p_iDocumentNodeTo_p_iBase, 0, 0},  {&_swigt__p_iObjectRegistry, _p_iObjectRegistryTo_p_iBase, 0, 0},  {&_swigt__p_iEventNameRegistry, _p_iEventNameRegistryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimPacket, _p_CS__Animation__iSkeletonAnimPacketTo_p_iBase, 0, 0},  {&_swigt__p_iEventCord, _p_iEventCordTo_p_iBase, 0, 0},  {&_swigt__p_iStringSet, _p_iStringSetTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementationExt1T_csPath_csObject_iPath_t, _p_scfImplementationExt1T_csPath_csObject_iPath_tTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimationNodeFactory, _p_CS__Animation__iSkeletonAnimationNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimNodeFactory, _p_CS__Animation__iSkeletonAnimNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonBlendNodeFactory, _p_CS__Animation__iSkeletonBlendNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonPriorityNodeFactory, _p_CS__Animation__iSkeletonPriorityNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRandomNodeFactory, _p_CS__Animation__iSkeletonRandomNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonFSMNodeFactory, _p_CS__Animation__iSkeletonFSMNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKNodeFactory, _p_CS__Animation__iSkeletonIKNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNodeFactory, _p_CS__Animation__iSkeletonIKPhysicalNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKCCDNodeFactory, _p_CS__Animation__iSkeletonIKCCDNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonLookAtNodeFactory, _p_CS__Animation__iSkeletonLookAtNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRagdollNodeFactory, _p_CS__Animation__iSkeletonRagdollNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonSpeedNodeFactory, _p_CS__Animation__iSkeletonSpeedNodeFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimPacketFactory, _p_CS__Animation__iSkeletonAnimPacketFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonFactory, _p_CS__Animation__iSkeletonFactoryTo_p_iBase, 0, 0},  {&_swigt__p_iFactory, _p_iFactoryTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodyChainNode, _p_CS__Animation__iBodyChainNodeTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKCCDNode, _p_CS__Animation__iSkeletonIKCCDNodeTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKNode, _p_CS__Animation__iSkeletonIKNodeTo_p_iBase, 0, 0},  {&_swigt__p_iClipper2D, _p_iClipper2DTo_p_iBase, 0, 0},  {&_swigt__p_csConfigFile, _p_csConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_iConfigFile, _p_iConfigFileTo_p_iBase, 0, 0},  {&_swigt__p_iDebugHelper, _p_iDebugHelperTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentSystem, _p_iDocumentSystemTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonBlendNode, _p_CS__Animation__iSkeletonBlendNodeTo_p_iBase, 0, 0},  {&_swigt__p_iKeyComposer, _p_iKeyComposerTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodyChain, _p_CS__Animation__iBodyChainTo_p_iBase, 0, 0},  {&_swigt__p_iThreadReturn, _p_iThreadReturnTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodyBoneProperties, _p_CS__Animation__iBodyBonePropertiesTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonLookAtNode, _p_CS__Animation__iSkeletonLookAtNodeTo_p_iBase, 0, 0},  {&_swigt__p_iEventOutlet, _p_iEventOutletTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csConfigFile_iConfigFile_t, _p_scfImplementation1T_csConfigFile_iConfigFile_tTo_p_iBase, 0, 0},  {&_swigt__p_iVirtualClock, _p_iVirtualClockTo_p_iBase, 0, 0},  {&_swigt__p_iPath, _p_iPathTo_p_iBase, 0, 0},  {&_swigt__p_iReporter, _p_iReporterTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonSpeedNode, _p_CS__Animation__iSkeletonSpeedNodeTo_p_iBase, 0, 0},  {&_swigt__p_iObject, _p_iObjectTo_p_iBase, 0, 0},  {&_swigt__p_csObject, _p_csObjectTo_p_iBase, 0, 0},  {&_swigt__p_iSCF, _p_iSCFTo_p_iBase, 0, 0},  {&_swigt__p_iEventQueue, _p_iEventQueueTo_p_iBase, 0, 0},  {&_swigt__p_iEvent, _p_iEventTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodyBoneJoint, _p_CS__Animation__iBodyBoneJointTo_p_iBase, 0, 0},  {&_swigt__p_iString, _p_iStringTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonPriorityNode, _p_CS__Animation__iSkeletonPriorityNodeTo_p_iBase, 0, 0},  {&_swigt__p_iComponent, _p_iComponentTo_p_iBase, 0, 0},  {&_swigt__p_iCommandLineParser, _p_iCommandLineParserTo_p_iBase, 0, 0},  {&_swigt__p_iJoystickDriver, _p_iJoystickDriverTo_p_iBase, 0, 0},  {&_swigt__p_iMouseDriver, _p_iMouseDriverTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRandomNode, _p_CS__Animation__iSkeletonRandomNodeTo_p_iBase, 0, 0},  {&_swigt__p_iStringArray, _p_iStringArrayTo_p_iBase, 0, 0},  {&_swigt__p_iEventHandler, _p_iEventHandlerTo_p_iBase, 0, 0},  {&_swigt__p_iEventPlug, _p_iEventPlugTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimNode, _p_CS__Animation__iSkeletonAnimNodeTo_p_iBase, 0, 0},  {&_swigt__p_iVFS, _p_iVFSTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKPhysicalNode, _p_CS__Animation__iSkeletonIKPhysicalNodeTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimCallback, _p_CS__Animation__iSkeletonAnimCallbackTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodyManager, _p_CS__Animation__iBodyManagerTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonManager, _p_CS__Animation__iSkeletonManagerTo_p_iBase, 0, 0},  {&_swigt__p_iConfigManager, _p_iConfigManagerTo_p_iBase, 0, 0},  {&_swigt__p_iCacheManager, _p_iCacheManagerTo_p_iBase, 0, 0},  {&_swigt__p_iThreadManager, _p_iThreadManagerTo_p_iBase, 0, 0},  {&_swigt__p_iPluginManager, _p_iPluginManagerTo_p_iBase, 0, 0},  {&_swigt__p_iTriangleMesh, _p_iTriangleMeshTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodySkeleton, _p_CS__Animation__iBodySkeletonTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeleton, _p_CS__Animation__iSkeletonTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonIKNodeManager, _p_CS__Animation__iSkeletonIKNodeManagerTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonLookAtNodeManager, _p_CS__Animation__iSkeletonLookAtNodeManagerTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRagdollNodeManager, _p_CS__Animation__iSkeletonRagdollNodeManagerTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonSpeedNodeManager, _p_CS__Animation__iSkeletonSpeedNodeManagerTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iBodyBone, _p_CS__Animation__iBodyBoneTo_p_iBase, 0, 0},  {&_swigt__p_iFrameEventSignpost, _p_iFrameEventSignpostTo_p_iBase, 0, 0},  {&_swigt__p_iDataBuffer, _p_iDataBufferTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonFSMNode, _p_CS__Animation__iSkeletonFSMNodeTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonRagdollNode, _p_CS__Animation__iSkeletonRagdollNodeTo_p_iBase, 0, 0},  {&_swigt__p_iStringSetBaseT_CS__StringSetTag__General_t, _p_iStringSetBaseT_CS__StringSetTag__General_tTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonAnimation, _p_CS__Animation__iSkeletonAnimationTo_p_iBase, 0, 0},  {&_swigt__p_iKeyboardDriver, _p_iKeyboardDriverTo_p_iBase, 0, 0},  {&_swigt__p_scfImplementation1T_csObject_iObject_t, _p_scfImplementation1T_csObject_iObject_tTo_p_iBase, 0, 0},  {&_swigt__p_iReporterListener, _p_iReporterListenerTo_p_iBase, 0, 0},  {&_swigt__p_iObjectNameChangeListener, _p_iObjectNameChangeListenerTo_p_iBase, 0, 0},  {&_swigt__p_CS__Animation__iSkeletonLookAtListener, _p_CS__Animation__iSkeletonLookAtListenerTo_p_iBase, 0, 0},  {&_swigt__p_iBase, 0, 0, 0},  {&_swigt__p_iFile, _p_iFileTo_p_iBase, 0, 0},  {&_swigt__p_iDocumentAttribute, _p_iDocumentAttributeTo_p_iBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iCamera[] = {  {&_swigt__p_iCamera, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iDynamicSystem[] = {  {&_swigt__p_iDynamicSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iJoint[] = {  {&_swigt__p_iJoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMeshWrapper[] = {  {&_swigt__p_iMeshWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iMovable[] = {  {&_swigt__p_iMovable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iRigidBody[] = {  {&_swigt__p_iRigidBody, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSCF[] = {  {&_swigt__p_iSCF, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iSceneNode[] = {  {&_swigt__p_iSceneNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int16_t[] = {  {&_swigt__p_int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int8_t[] = {  {&_swigt__p_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_iMeshWrapper[] = {  {&_swigt__p_p_iMeshWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint16_t[] = {  {&_swigt__p_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_AllocatorType,
  _swigc__p_CS__Animation__csSkeletalState,
  _swigc__p_CS__Animation__iBodyBone,
  _swigc__p_CS__Animation__iBodyBoneCollider,
  _swigc__p_CS__Animation__iBodyBoneJoint,
  _swigc__p_CS__Animation__iBodyBoneProperties,
  _swigc__p_CS__Animation__iBodyChain,
  _swigc__p_CS__Animation__iBodyChainNode,
  _swigc__p_CS__Animation__iBodyManager,
  _swigc__p_CS__Animation__iBodySkeleton,
  _swigc__p_CS__Animation__iSkeleton,
  _swigc__p_CS__Animation__iSkeletonAnimCallback,
  _swigc__p_CS__Animation__iSkeletonAnimNode,
  _swigc__p_CS__Animation__iSkeletonAnimNodeFactory,
  _swigc__p_CS__Animation__iSkeletonAnimPacket,
  _swigc__p_CS__Animation__iSkeletonAnimPacketFactory,
  _swigc__p_CS__Animation__iSkeletonAnimation,
  _swigc__p_CS__Animation__iSkeletonAnimationNode,
  _swigc__p_CS__Animation__iSkeletonAnimationNodeFactory,
  _swigc__p_CS__Animation__iSkeletonBlendNode,
  _swigc__p_CS__Animation__iSkeletonBlendNodeFactory,
  _swigc__p_CS__Animation__iSkeletonFSMNode,
  _swigc__p_CS__Animation__iSkeletonFSMNodeFactory,
  _swigc__p_CS__Animation__iSkeletonFactory,
  _swigc__p_CS__Animation__iSkeletonIKCCDNode,
  _swigc__p_CS__Animation__iSkeletonIKCCDNodeFactory,
  _swigc__p_CS__Animation__iSkeletonIKNode,
  _swigc__p_CS__Animation__iSkeletonIKNodeFactory,
  _swigc__p_CS__Animation__iSkeletonIKNodeManager,
  _swigc__p_CS__Animation__iSkeletonIKPhysicalNode,
  _swigc__p_CS__Animation__iSkeletonIKPhysicalNodeFactory,
  _swigc__p_CS__Animation__iSkeletonLookAtListener,
  _swigc__p_CS__Animation__iSkeletonLookAtNode,
  _swigc__p_CS__Animation__iSkeletonLookAtNodeFactory,
  _swigc__p_CS__Animation__iSkeletonLookAtNodeManager,
  _swigc__p_CS__Animation__iSkeletonManager,
  _swigc__p_CS__Animation__iSkeletonPriorityNode,
  _swigc__p_CS__Animation__iSkeletonPriorityNodeFactory,
  _swigc__p_CS__Animation__iSkeletonRagdollNode,
  _swigc__p_CS__Animation__iSkeletonRagdollNodeFactory,
  _swigc__p_CS__Animation__iSkeletonRagdollNodeManager,
  _swigc__p_CS__Animation__iSkeletonRandomNode,
  _swigc__p_CS__Animation__iSkeletonRandomNodeFactory,
  _swigc__p_CS__Animation__iSkeletonSpeedNode,
  _swigc__p_CS__Animation__iSkeletonSpeedNodeFactory,
  _swigc__p_CS__Animation__iSkeletonSpeedNodeManager,
  _swigc__p_CS__Memory__AllocatorMalloc,
  _swigc__p_CS__Mesh__iAnimatedMesh,
  _swigc__p_CS__StringIDT_CS__StringSetTag__General_t,
  _swigc__p_CS__Utility__StringSetT_CS__StringSetTag__General_false_t,
  _swigc__p_CapacityHandlerType,
  _swigc__p_ElementHandlerType,
  _swigc__p_HashType,
  _swigc__p_TagType,
  _swigc__p_ThisType,
  _swigc__p_ValueType,
  _swigc__p__1_basetype,
  _swigc__p__csKeyCharType,
  _swigc__p__csKeyEventType,
  _swigc__p__csKeyModifierNumType,
  _swigc__p__csKeyModifierType,
  _swigc__p__csKeyModifiers,
  _swigc__p__csMouseEventType,
  _swigc__p_char,
  _swigc__p_csArrayCapacityFixedGrowT_16_t,
  _swigc__p_csArrayCapacityVariableGrow,
  _swigc__p_csArrayT_size_t_csArrayElementHandlerT_size_t_t_CS__Memory__AllocatorMalloc_csArrayCapacityFixedGrowT_16_t_t,
  _swigc__p_csColliderGeometryType,
  _swigc__p_csConfigFile,
  _swigc__p_csMatrix3,
  _swigc__p_csObject,
  _swigc__p_csOrthoTransform,
  _swigc__p_csPlane3,
  _swigc__p_csPtrT_CS__Animation__csSkeletalState_t,
  _swigc__p_csPtrT_CS__Animation__iSkeletonAnimNode_t,
  _swigc__p_csPtrT_CS__Animation__iSkeletonAnimPacket_t,
  _swigc__p_csPtrT_CS__Animation__iSkeletonAnimationNodeFactory_t,
  _swigc__p_csPtrT_CS__Animation__iSkeletonBlendNodeFactory_t,
  _swigc__p_csPtrT_CS__Animation__iSkeletonFSMNodeFactory_t,
  _swigc__p_csPtrT_CS__Animation__iSkeletonPriorityNodeFactory_t,
  _swigc__p_csPtrT_CS__Animation__iSkeletonRandomNodeFactory_t,
  _swigc__p_csPtrT_CS__Animation__iSkeleton_t,
  _swigc__p_csQuaternion,
  _swigc__p_csRefArrayT_iObject_t,
  _swigc__p_csRefCount,
  _swigc__p_csSphere,
  _swigc__p_csVector3,
  _swigc__p_float,
  _swigc__p_iBase,
  _swigc__p_iCacheManager,
  _swigc__p_iCamera,
  _swigc__p_iClipper2D,
  _swigc__p_iCommandLineParser,
  _swigc__p_iComponent,
  _swigc__p_iConfigFile,
  _swigc__p_iConfigIterator,
  _swigc__p_iConfigManager,
  _swigc__p_iDataBuffer,
  _swigc__p_iDebugHelper,
  _swigc__p_iDocument,
  _swigc__p_iDocumentAttribute,
  _swigc__p_iDocumentAttributeIterator,
  _swigc__p_iDocumentNode,
  _swigc__p_iDocumentNodeIterator,
  _swigc__p_iDocumentSystem,
  _swigc__p_iDynamicSystem,
  _swigc__p_iEvent,
  _swigc__p_iEventAttributeIterator,
  _swigc__p_iEventCord,
  _swigc__p_iEventHandler,
  _swigc__p_iEventNameRegistry,
  _swigc__p_iEventOutlet,
  _swigc__p_iEventPlug,
  _swigc__p_iEventQueue,
  _swigc__p_iFactory,
  _swigc__p_iFile,
  _swigc__p_iFrameEventSignpost,
  _swigc__p_iJoint,
  _swigc__p_iJoystickDriver,
  _swigc__p_iKeyComposer,
  _swigc__p_iKeyboardDriver,
  _swigc__p_iMeshWrapper,
  _swigc__p_iMouseDriver,
  _swigc__p_iMovable,
  _swigc__p_iObject,
  _swigc__p_iObjectIterator,
  _swigc__p_iObjectNameChangeListener,
  _swigc__p_iObjectRegistry,
  _swigc__p_iObjectRegistryIterator,
  _swigc__p_iPath,
  _swigc__p_iPluginIterator,
  _swigc__p_iPluginManager,
  _swigc__p_iReporter,
  _swigc__p_iReporterIterator,
  _swigc__p_iReporterListener,
  _swigc__p_iRigidBody,
  _swigc__p_iSCF,
  _swigc__p_iSceneNode,
  _swigc__p_iString,
  _swigc__p_iStringArray,
  _swigc__p_iStringSet,
  _swigc__p_iStringSetBaseT_CS__StringSetTag__General_t,
  _swigc__p_iThreadManager,
  _swigc__p_iThreadReturn,
  _swigc__p_iTriangleMesh,
  _swigc__p_iVFS,
  _swigc__p_iVirtualClock,
  _swigc__p_int,
  _swigc__p_int16_t,
  _swigc__p_int64_t,
  _swigc__p_int8_t,
  _swigc__p_long_long,
  _swigc__p_p_iMeshWrapper,
  _swigc__p_scfImplementation1T_csConfigFile_iConfigFile_t,
  _swigc__p_scfImplementation1T_csObject_iObject_t,
  _swigc__p_scfImplementationExt1T_csPath_csObject_iPath_t,
  _swigc__p_size_t,
  _swigc__p_uint16_t,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_uint8_t,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_long_long,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  PyDict_SetItemString(d,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"InvalidBoneID",Swig_var_InvalidBoneID_get, Swig_var_InvalidBoneID_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"InvalidChannelID",Swig_var_InvalidChannelID_get, Swig_var_InvalidChannelID_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"InvalidKeyframeID",Swig_var_InvalidKeyframeID_get, Swig_var_InvalidKeyframeID_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"InvalidStateID",Swig_var_InvalidStateID_get, Swig_var_InvalidStateID_set);
  SWIG_Python_SetConstant(d, "SYNC_NONE",SWIG_From_int(static_cast< int >(CS::Animation::SYNC_NONE)));
  SWIG_Python_SetConstant(d, "SYNC_FIRSTFRAME",SWIG_From_int(static_cast< int >(CS::Animation::SYNC_FIRSTFRAME)));
  SWIG_Python_SetConstant(d, "STATE_INACTIVE",SWIG_From_int(static_cast< int >(CS::Animation::STATE_INACTIVE)));
  SWIG_Python_SetConstant(d, "STATE_DYNAMIC",SWIG_From_int(static_cast< int >(CS::Animation::STATE_DYNAMIC)));
  SWIG_Python_SetConstant(d, "STATE_KINEMATIC",SWIG_From_int(static_cast< int >(CS::Animation::STATE_KINEMATIC)));
}

