SubDir TOP plugins cscript csperl5 ;

if $(PERL5.AVAILABLE) = "yes" && $(DO_MSVCGEN) != "yes" # Ugly!
{
  # @@@ FIXME: This scheme of creating a file which includes
  # csperlxs_fallback.inc fails when it comes to project file creation, since
  # the project file needs to reference an existing file.  To fix, the fallback
  # file should exist at all times, but should be utilized only when needed,
  # such as when ExtUtils is unavailable or when creating a project file.

  rule PerlEmbedGlueFile
  {
    MakeLocate $(<) : $(LOCATE_TARGET) ;
    Clean csperl5clean : $(<) ;
  }

  if $(PERL5.EXTUTILS.EMBED.AVAILABLE) = "yes"
  {
    if $(PERL5.DYNALOADER.AVAILABLE) = "yes"
    {
      actions PerlEmbedGlueFile
      {
        $(CMD.PERL5) -MExtUtils::Embed -e xsinit -- \
        -o $(<) -std DynaLoader cspace
      }
    }
    else
    {
      actions PerlEmbedGlueFile
      {
        $(CMD.PERL5) -MExtUtils::Embed -e xsinit -- -o $(<) -std cspace
      }
    }
  }
  else
  {
    actions PerlEmbedGlueFile
    {
      echo '#include "csutil/csperlxs_fallback.inc"' > $(<)
    }
  }

  local targetdir ;
  local target = [ FGristFiles cswigpl5.inc ] ;

  if $(CMD.SWIG)
  {
    targetdir = $(LOCATE_TARGET) ;
    Swig $(target) [ FGristFiles cspace.pm ] :
      [ FGristFiles cspace.i ] :
      perl5 :
      -c++ -shadow -const -module cspace :
      [ ConcatDirs $(TOP) include ] :
      [ ConcatDirs $(TOP) include ivaria ] :
      [ ConcatDirs $(TOP) scripts perl5 ] ;
  }
  else
  {
    targetdir = [ ConcatDirs $(TOP) scripts perl5 ] ;
  }

  local perlxs = [ FGristFiles csperlxs.c ] ;
  PerlEmbedGlueFile $(perlxs) ;
  
  Help csperl5 : "Crystal Script Perl5 plug-in" ;
  Plugin csperl5 : $(perlxs) csperl5.cpp csperl5.h cswigpl5.cpp ;
  LinkWith csperl5 : cstool csgfx csgeom csutil ;
  ExternalLibs csperl5 : PERL5 ;
  CFlags csperl5 :
    [ FIncludes $(targetdir) ] $(COMPILER.C++FLAGS.WARNING.NO_UNUSED) ;
}
