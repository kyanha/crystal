SubDir TOP plugins cscript cspython ;

if $(PYTHON.AVAILABLE) = "yes"
{
  local target = cs_pyth.cpp ;

  if ! [ Property build : projgen ]
  {
    target = [ FGristFiles $(target) ] ;

    if $(CMD.SWIG)
    {
      Swig $(target) [ FGristFiles cspace.py ] :
        [ FGristFiles cspace.i ] :
        python :
	-c++ -shadow :
	[ ConcatDirs $(TOP) include ] :
	[ ConcatDirs $(TOP) include ivaria ] :
	$(SEARCH_SOURCE) [ ConcatDirs $(TOP) scripts python ] ;
      Depends cspythonclean : pythonswigclean ;
    }
    else
    {
      SEARCH on $(target) = $(SEARCH_SOURCE) ;
    }
  }

  Help cspython : "Crystal Script Python plug-in" ;
  Plugin cspython : $(target) cspython.h cspython.cpp pytocs.h pytocs.cpp ;
  LinkWith cspython : cstool csgfx csgeom csutil ;
  ExternalLibs cspython : PYTHON ;
  CFlags cspython :
    [ FDefines SWIG_GLOBAL ]
    $(COMPILER.C++FLAGS.WARNING.NO_UNUSED) 
    $(COMPILER.C++FLAGS.WARNING.NO_UNINITIALIZED) ;


  # Note that '__EOF__' is purposely quoted to prevent shell from intrepreting
  # dollar signs in quoted block.
  actions PythonCex
  {
    cat > $(<) << '__EOF__'
#! /bin/sh
# This file is generated automatically by cspython/Jamfile
PYTH_LIBS="$(PYTHON.LFLAGS[1]) $(CSPYTHON.PLATFORM_LIBS[1])"
PYTH_CFLAGS="$(PYTHON.CFLAGS[1])"
PYTH_CXXFLAGS="$(PYTHON.CFLAGS[1])"
PYTH_DEPS=""

if test -z "$1"; then
    echo "Do not invoke directly; it is a sub-component of cs-config."
    exit 1
fi

case $1 in
    --libs) echo "$PYTH_LIBS" ;;
    --deps) echo "$PYTH_DEPS" ;;
    --cflags) echo "$PYTH_CFLAGS" ;;
    --cxxflags) echo "$PYTH_CXXFLAGS" ;;
    *) echo "Unknown option"; exit 1 ;;
esac
__EOF__
  }

  local cexfile = python.cex ;
  switch $(TARGET.OS)
  {
    case WIN32 : CSPYTHON.PLATFORM_LIBS on $(cexfile) = "gdi32 shell32" ;
    case * : CSPYTHON.PLATFORM_LIBS = "" ;
  }
  ShellScript $(cexfile) : PythonCex ;
  Depends cspython : $(cexfile) ;
  Depends cspythonclean : $(cexfile)clean ;
}
