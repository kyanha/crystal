# This is a subinclude file used to define the rules needed
# to build the Glide2 3D driver -- glide3d Version 2

# Driver description
DESCRIPTION.glide3d2 = Crystal Space Glide V2 3D renderer

#------------------------------------------------------------- rootdefines ---#
ifeq ($(MAKESECTION),rootdefines)

# Driver-specific help commands
DRIVERHELP += \
  $(NEWLINE)echo $"  make glide3d2     Make the $(DESCRIPTION.glide3d2)$"

endif # ifeq ($(MAKESECTION),rootdefines)

#------------------------------------------------------------- roottargets ---#
ifeq ($(MAKESECTION),roottargets)

.PHONY: glide3d2 glide3d2clean
all plugins drivers drivers3d: glide3d2

glide3d2:
	$(MAKE_TARGET) MAKE_DLL=yes
glide3d2clean:
	$(MAKE_CLEAN)

endif # ifeq ($(MAKESECTION),roottargets)

#------------------------------------------------------------- postdefines ---#
ifeq ($(MAKESECTION),postdefines)

ifeq (,$(strip $(GLIDE2_LIB)))
GLIDE2_LIB = -lglide2x
endif

CFLAGS.GLIDE3D2 += $(GLIDE2_PATH) -DDO_GLIDE -DGLIDE24_ONLY
LIB.GLIDE3D2.SYSTEM += $(GLIDE2_LIB)

ifeq ($(USE_SHARED_PLUGINS),yes)
  GLIDE3D2 = $(OUTDLL)glide3d2$(DLL)
  LIB.GLIDE3D2 = $(foreach d,$(DEP.GLIDE3D2),$($d.LIB))
  LIB.GLIDE3D2.SPECIAL = $(LIB.GLIDE3D2.SYSTEM)
  TO_INSTALL.DYNAMIC_LIBS += $(GLIDE3D2)
else
  GLIDE3D2 = $(OUT)$(LIB_PREFIX)gl3d2$(LIB)
  DEP.EXE += $(GLIDE3D2)
  LIBS.EXE += $(LIB.GLIDE3D2.SYSTEM)
  CFLAGS.STATIC_SCF += $(CFLAGS.D)SCL_GLIDE3D2
  TO_INSTALL.STATIC_LIBS += $(GLIDE3D2)
endif

INC.GLIDE3D2 = $(wildcard plugins/video/renderer/glide/*.h \
  plugins/video/renderer/common/*.h)
SRC.GLIDE3D2.1 = $(wildcard plugins/video/renderer/glide/*.cpp)
SRC.GLIDE3D2.2 = $(wildcard plugins/video/renderer/common/*.cpp)
SRC.GLIDE3D2 = $(SRC.GLIDE3D2.1) $(SRC.GLIDE3D2.2)
OBJ.GLIDE3D2 = $(addprefix $(OUT),$(notdir $(SRC.GLIDE3D2.1:.cpp=2$O))) \
$(addprefix $(OUT),$(notdir $(SRC.GLIDE3D2.2:.cpp=$O)))
DEP.GLIDE3D2 = CSGEOM CSGFXLDR CSUTIL CSSYS
CFG.GLIDE3D2 = data/config/glide.cfg

TO_INSTALL.CONFIG += $(CFG.GLIDE3D2)

#MSVC.DSP += GLIDE3D2
#DSP.GLIDE3D2.NAME = glide3d2
#DSP.GLIDE3D2.TYPE = plugin
#DSP.GLIDE3D2.RESOURCES = plugins/video/renderer/glide/init2.inc

endif # ifeq ($(MAKESECTION),postdefines)

#----------------------------------------------------------------- targets ---#
ifeq ($(MAKESECTION),targets)

.PHONY: glide3d2 glide3d2clean

# Chain rules
clean: glide3d2clean

glide3d2: $(OUTDIRS) $(GLIDE3D2)

$(OUT)%2$O: plugins/video/renderer/glide/%.cpp
	$(DO.COMPILE.CPP) $(CFLAGS.GLIDE3D2)

$(OUT)%$O: plugins/video/renderer/common/%.cpp
	$(DO.COMPILE.CPP) $(CFLAGS.GLIDE3D2)

$(GLIDE3D2): $(OBJ.GLIDE3D2) $(LIB.GLIDE3D2)
	$(DO.PLUGIN) $(LIB.GLIDE3D2.SPECIAL)

glide3d2clean:
	$(RM) $(GLIDE3D2) $(OBJ.GLIDE3D2) $(OUTOS)glide3d2.dep

ifdef DO_DEPEND
dep: $(OUTOS)glide3d2.dep
$(OUTOS)glide3d2.dep: $(SRC.GLIDE3D2)
	$(DO.DEP1) $(CFLAGS.GLIDE3D2) $(DO.DEP2)
else
-include $(OUTOS)glide3d2.dep
endif

endif # ifeq ($(MAKESECTION),targets)
