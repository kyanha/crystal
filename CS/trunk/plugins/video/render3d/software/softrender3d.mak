# This is a subinclude file used to define the rules needed
# to build the 3D software rendering driver.

# Driver description
DESCRIPTION.softrender3d = Crystal Space software 3D renderer

#------------------------------------------------------------- rootdefines ---#
ifeq ($(MAKESECTION),rootdefines)

# Driver-specific help commands
DRIVERHELP += \
  $(NEWLINE)echo $"  make softrender3d       Make the $(DESCRIPTION.softrender3d)$"

endif # ifeq ($(MAKESECTION),rootdefines)

#------------------------------------------------------------- roottargets ---#
ifeq ($(MAKESECTION),roottargets)

.PHONY: softrender3d
all plugins drivers drivers3d: softrender3d

softrender3d:
	$(MAKE_TARGET) MAKE_DLL=yes
softrender3dclean:
	$(MAKE_CLEAN)

endif # ifeq ($(MAKESECTION),roottargets)

#------------------------------------------------------------- postdefines ---#
ifeq ($(MAKESECTION),postdefines)

vpath %.cpp $(SRCDIR)/plugins/video/render3d/common

ifeq ($(USE_PLUGINS),yes)
  SOFTRENDER3D = $(OUTDLL)/softrender3d$(DLL)
  LIB.SOFTRENDER3D = $(foreach d,$(DEP.SOFTRENDER3D),$($d.LIB))
  TO_INSTALL.DYNAMIC_LIBS += $(SOFTRENDER3D)
else
  SOFTRENDER3D = $(OUT)/$(LIB_PREFIX)softrender3d$(LIB)
  DEP.EXE += $(SOFTRENDER3D)
  SCF.STATIC += softrender3d
  TO_INSTALL.STATIC_LIBS += $(SOFTRENDER3D)
endif

INF.SOFTRENDER3D = $(SRCDIR)/plugins/video/render3d/software/softrender3d.csplugin
INC.SOFTRENDER3D = $(wildcard $(addprefix $(SRCDIR)/, \
  plugins/video/render3d/software/*.h \
  plugins/video/render3d/common/txtmgr.h \
  plugins/video/render3d/common/dtmesh.h \
  plugins/video/render3d/common/dpmesh.h \
  plugins/video/render3d/common/vbufmgr.h \
  plugins/video/render3d/common/polybuf.h))
SRC.SOFTRENDER3D = $(wildcard $(addprefix $(SRCDIR)/, \
  plugins/video/render3d/software/*.cpp \
  plugins/video/render3d/common/txtmgr.cpp \
  plugins/video/render3d/common/dtmesh.cpp \
  plugins/video/render3d/common/dpmesh.cpp \
  plugins/video/render3d/common/vbufmgr.cpp \
  plugins/video/render3d/common/polybuf.cpp))
ifeq ($(NASM.AVAILABLE),yes)
  SRC.SOFTRENDER3D += \
    $(wildcard $(SRCDIR)/plugins/video/render3d/software/i386/*.asm)
endif
OBJ.SOFTRENDER3D = \
  $(addprefix $(OUT)/,$(notdir $(subst .asm,$O,$(SRC.SOFTRENDER3D:.cpp=$O))))
DEP.SOFTRENDER3D = CSGEOM CSGFX CSUTIL CSUTIL
CFG.SOFTRENDER3D = $(SRCDIR)/data/config/soft3d.cfg

NASMFLAGS.SOFTRENDER3D = -i$(SRCDIR)/plugins/video/render3d/software/i386/

TO_INSTALL.CONFIG += $(CFG.SOFTRENDER3D)

MSVC.DSP += SOFTRENDER3D
DSP.SOFTRENDER3D.NAME = softrender3d
DSP.SOFTRENDER3D.TYPE = plugin
DSP.SOFTRENDER3D.RESOURCES = \
  $(wildcard $(SRCDIR)/plugins/video/render3d/software/*.inc)

endif # ifeq ($(MAKESECTION),postdefines)

#----------------------------------------------------------------- targets ---#
ifeq ($(MAKESECTION),targets)

.PHONY: softrender3d softrender3dclean

# Chain rules
all: $(SOFTRENDER3D)
clean: softrender3dclean

softrender3d: $(OUTDIRS) $(SOFTRENDER3D)

# Extra dependencies not generated by "make depend"
$(OUT)/scan16a$O: $(SRCDIR)/plugins/video/render3d/software/i386/cs.ash \
  $(SRCDIR)/plugins/video/render3d/software/i386/scan.ash
$(OUT)/scan32a$O: $(SRCDIR)/plugins/video/render3d/software/i386/cs.ash \
  $(SRCDIR)/plugins/video/render3d/software/i386/scan.ash
$(OUT)/cpuid$O: $(SRCDIR)/plugins/video/render3d/software/i386/cs.ash

$(OUT)/%$O: $(SRCDIR)/plugins/video/render3d/software/i386/%.asm
	$(DO.COMPILE.ASM) $(NASMFLAGS.SOFTRENDER3D)

$(OUT)/%$O: $(SRCDIR)/plugins/video/render3d/software/%.cpp
	$(DO.COMPILE.CPP) $(CFLAGS.PIXEL_LAYOUT)

$(SOFTRENDER3D): $(OBJ.SOFTRENDER3D) $(LIB.SOFTRENDER3D)
	$(DO.PLUGIN)

softrender3dclean:
	-$(RMDIR) $(SOFTRENDER3D) $(OBJ.SOFTRENDER3D) $(OUTDLL)/$(notdir $(INF.SOFTRENDER3D))

ifdef DO_DEPEND
dep: $(OUTOS)/softrender3d.dep
$(OUTOS)/softrender3d.dep: $(SRC.SOFTRENDER3D)
	$(DO.DEP1) $(CFLAGS.PIXEL_LAYOUT) $(DO.DEP2)
else
-include $(OUTOS)/softrender3d.dep
endif

endif # ifeq ($(MAKESECTION),targets)
