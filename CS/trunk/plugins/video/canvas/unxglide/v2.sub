# This is a subinclude file used to define the rules needed
# to build the GlideX 2D driver -- glidex2d

# Driver description
DESCRIPTION.glidx2d2 = Crystal Space Glide V2/X 2D driver

#-------------------------------------------------------------- rootdefines ---#
ifeq ($(MAKESECTION),rootdefines)

# Driver-specific help commands
DRIVERHELP += $(NEWLINE)echo $"  make glidx2d2     Make the $(DESCRIPTION.glidx2d2)$"

endif # ifeq ($(MAKESECTION),rootdefines)

#-------------------------------------------------------------- roottargets ---#
ifeq ($(MAKESECTION),roottargets)

.PHONY: glidx2d2

all plugins drivers drivers2d: glidx2d2

glidx2d2:
	$(MAKE_TARGET) MAKE_DLL=yes
glidx2d2clean:
	$(MAKE_CLEAN)

endif # ifeq ($(MAKESECTION),roottargets)

#-------------------------------------------------------------- postdefines ---#
ifeq ($(MAKESECTION),postdefines)

# local CFLAGS
CFLAGS.GLIDX2D2=-I$(X11_PATH)/include $(GLIDE2_PATH)

LIBS._GLIDX2D2+=-L$(X11_PATH)/lib -lXext -lX11 -lglide2x  

# The 2D GlideX driver
ifeq ($(USE_SHARED_PLUGINS),yes)
  GLIDX2D2=glidx2d2$(DLL)
  LIBS.GLIDX2D2=$(LIBS._GLIDX2D2)
else
  GLIDX2D2=$(OUT)$(LIB_PREFIX)glidx2d2$(LIB)
  DEP.EXE+=$(GLIDX2D2)
  LIBS.EXE+=$(LIBS._GLIDX2D2)
  CFLAGS.STATIC_SCF+=$(CFLAGS.D)SCL_GLIDX2D2
endif
DESCRIPTION.$(GLIDX2D2) = $(DESCRIPTION.glidx2d2)
SRC.GLIDX2D2 = plugins/video/canvas/unxglide/glidex2d.cpp plugins/video/canvas/glide2common/glide2common2d.cpp \
               $(SRC.COMMON.DRV2D)
OBJ.GLIDX2D2 = $(OUT)glidx2d2$O $(OUT)glide2common2d$O \
               $(addprefix $(OUT),$(notdir $(SRC.COMMON.DRV2D:.cpp=$O)))


endif # ifeq ($(MAKESECTION),postdefines)

#------------------------------------------------------------------ targets ---#
ifeq ($(MAKESECTION),targets)

.PHONY: glidx2d2 glidx2d2clean

# Chain rules
clean: glidx2d2clean

glidx2d2: $(OUTDIRS) $(GLIDX2D2)

$(OUT)glidx2d2$O: plugins/video/canvas/unxglide/glidex2d.cpp
	$(DO.COMPILE.CPP) $(CFLAGS.GLIDX2D2)
$(OUT)glide2common2d$O: plugins/video/canvas/glide2common/glide2common2d.cpp plugins/video/canvas/glide2common/glidcurs.h
	$(DO.COMPILE.CPP) $(CFLAGS.GLIDX2D2)
$(OUT)%$O: plugins/video/canvas/common/%.cpp
	$(DO.COMPILE.CPP) $(CFLAGS.GLIDX2D2)
 
$(GLIDX2D2): $(OBJ.GLIDX2D2) $(CSGEOM.LIB) $(CSUTIL.LIB) $(CSSYS.LIB)
	$(DO.PLUGIN) $(LIBS.GLIDX2D2)

glidx2d2clean:
	$(RM) $(GLIDX2D2) $(OBJ.GLIDX2D2)

ifdef DO_DEPEND
dep: $(OUTOS)glidx2d2.dep
$(OUTOS)glidx2d2.dep: $(SRC.GLIDX2D2)
	$(DO.DEP1) $(CFLAGS.GLIDX2D2) $(DO.DEP2)
else
-include $(OUTOS)glidx2d2.dep
endif

endif # ifeq ($(MAKESECTION),targets)

#------------------------------------------------------------------- config ---#
ifeq ($(ROOTCONFIG)/$(MAKESECTION),volatile/rootdefines)

# Default value for DO_SHM
ifndef DO_SHM
  DO_SHM = yes
endif

ifeq ($(DO_SHM)$(findstring DO_SHM,$(MAKE_VOLATILE_H)),yes)
  MAKE_VOLATILE_H+=$(NEWLINE)echo $"\#define DO_SHM$">>volatile.tmp
endif

endif # ifeq ($(ROOTCONFIG)/$(MAKESECTION),volatile/rootdefines)
