/*********
  Bison definitions for skin files.
 *********/

%{

#include "cssysdef.h"
#include "csgeom/csrect.h"

#include <stdio.h>

%}
 
%pure_parser
%union {
  char   *str;     /* For returning titles and handles to items. */
  int     val;     /* For returning numbers                      */
  csRect *rect;    /* For returning rectangular regions          */
}

%{

extern int awslex(YYSTYPE *awslval);
extern int awserror(char *s);

%}

%token <val>  TOKEN_NUM
%token <str>  TOKEN_STR
%token <str>  TOKEN_ATTR
%token        TOKEN_SKIN
%token        TOKEN_FOR
%token        TOKEN_WINDOW
%token        TOKEN_FROM

%type  <val>  exp
/*%type  <rect> rectdef*/

%right '='
%left '-' '+'
%left '*' '/'
%left NEG     /* Negation--unary minus */
%right '^'    /* Exponentiation        */
                                         

%%

input:          /* empty */
               | input line
;

line:            '\n'
               | skin                   { }
               | window                 { }
               | error '\n'             { yyerrok;      }
;

/*************************************
  Definitions for parsing a window def
 *************************************/
 
window_item:    TOKEN_ATTR ':' TOKEN_STR                                        {               }
              | TOKEN_ATTR ':' '(' exp ',' exp ')' '-' '(' exp ',' exp ')'      {               }
              | TOKEN_ATTR ':' TOKEN_ATTR                                       {               }
;


window_item_list:  window_item
              | window_item_list window_item
;

window:        TOKEN_WINDOW TOKEN_STR TOKEN_FROM TOKEN_STR '{' window_item_list '}'
;                                     



/*************************************
  Definitions for parsing a skin def
 *************************************/

skin_item:       TOKEN_ATTR ':' TOKEN_STR             {                      }
;

skin_item_list:  skin_item                
               | skin_item_list skin_item 
;

skin:            TOKEN_SKIN TOKEN_FOR TOKEN_STR '{' skin_item_list '}'   
;

/*************************************
  Definitions for parsing an expression
 *************************************/

exp:             TOKEN_NUM              { $$ = $1;      }
               | exp '+' exp            { $$ = $1 + $3; }
               | exp '-' exp            { $$ = $1 - $3; }
               | exp '*' exp            { $$ = $1 * $3; }
               | exp '/' exp            { $$ = $1 / $3; }
               | '-' exp %prec NEG      { $$ = -$2;     }
               | '(' exp ')'            { $$ = $2;      }
;               
                     


%%

int 
awserror(char *s)
{
 printf("aws skin defintion parse error: %s\n", s);
 return 0;
}
