; Uncomment to disable all shader techniques with a "detail texture" effect.
;Video.ShaderManager.Tags.detail_texture.Presence = forbidden
; Uncomment to disable all shader techniques with a multipass "detail texture" 
; effect.
;Video.ShaderManager.Tags.multipass detail texture.Presence = forbidden

; Other examples:
; Require a tag. Shader techniques without that tag won't validate.
;Video.ShaderManager.Tags.some tag.Presence = required
; Change a tag's priority. All techniques with that tag get theit priorities
; biased with the value specified below. This has the effect that the sum of 
; all tag priorities is decisive when two shader techniques have the same 
; technique priority.
;Video.ShaderManager.Tags.some tag.Priority = 10

Video.ShaderManager.EnableShaderCache = true

; Cg general compiler options
Video.OpenGL.Shader.Cg.CompilerOptions = -O3
; Cg compiler options for vertex programs
;Video.OpenGL.Shader.Cg.CompilerOptions.Vertex =
; Cg compiler options for fragment programs
;Video.OpenGL.Shader.Cg.CompilerOptions.Fragment =
; Cg compiler options for specific profiles
;Video.OpenGL.Shader.Cg.CompilerOptions.Vertex.arbvp1 =

; "Coercion library" for the Cg combiner. The library contains Cg snippets
; for coercions between different data types. Usually, the best idea is to
; just stick to the default coercions...
Video.OpenGL.Shader.Cg.Combiner.CoerceLibrary = /shader/combiner-cg/library.xml

; Debugging settings: influence shader plugins or allow a glance into what
; goes on the inside.
;
; Note: a lot of these options are also enabled by shader-debug.cfg. It can be
; pulled in with the "-cfgfile=/config/shader-debug.cfg" command line argument.
;
;  Dump compiled Cg programs (allows to inspect generated assembly)
;Video.OpenGL.Shader.Cg.DebugDump = true
;Video.OpenGL.Shader.PS1.UseDisplayLists = false
; PS1.1 - PS1.3 programs are converted to PS1.4 on ATI cards. Enabled to see
; the result of the conversion.
;Video.OpenGL.Shader.PS1.Dump14ConverterOutput = true
;Video.OpenGL.Shader.Fixed.MaxTextureUnits = 2
;  Dump the shader XML apres processing the conditional stuff
;Video.XMLShader.DumpVariantXML = true
;  Dump internal condition tree - hardly useful
;Video.XMLShader.DumpConditions = true
;  Print out some additional info while processing XML instructions.
;Video.XMLShader.DebugInstructionProcessing = true
;  Shader weaver: dump the generated XML to a file before sending it to
;  xmlshader.
;Video.ShaderWeaver.DumpWeavedXML = true
;  Shader weaver: annotate the combined output
;Video.ShaderWeaver.AnnotateOutput = true


;; CG SHADER PRECACHING RESOURCE LIMITS
; Available limits:
;  MaxAddressRegs (arbvp1, vp40)
;  MaxInstructions (arbvp1, vp40)
;  MaxLocalParams (arbfp1, arbvp1, vp20, vp30, vp40, fp40)
;  MaxTexIndirections (arbfp1)
;  NumInstructionSlots (arbfp1, fp30, fp40)
;  NumMathInstructionSlots (arbfp1)
;  NumTemps (arbfp1, arbvp1, vp40, fp30, fp40)
;  NumTexInstructionSlots (arbfp1)

; Minimal limits as dictated by ARB_v_p spec
Video.OpenGL.Shader.Cg.Precache.Vertex.minimalavp1.Profile = arbvp1
Video.OpenGL.Shader.Cg.Precache.Vertex.minimalavp1.MaxAddressRegs = 1
Video.OpenGL.Shader.Cg.Precache.Vertex.minimalavp1.MaxInstructions = 128
Video.OpenGL.Shader.Cg.Precache.Vertex.minimalavp1.MaxLocalParams = 96
Video.OpenGL.Shader.Cg.Precache.Vertex.minimalavp1.NumTemps = 12
; Minimal limits as dictated by ARB_f_p spec
Video.OpenGL.Shader.Cg.Precache.Fragment.minimalafp1.Profile = arbfp1
Video.OpenGL.Shader.Cg.Precache.Fragment.minimalafp1.MaxLocalParams = 24
Video.OpenGL.Shader.Cg.Precache.Fragment.minimalafp1.MaxTexIndirections = 4
Video.OpenGL.Shader.Cg.Precache.Fragment.minimalafp1.NumInstructionSlots = 72
Video.OpenGL.Shader.Cg.Precache.Fragment.minimalafp1.NumMathInstructionSlots = 48
Video.OpenGL.Shader.Cg.Precache.Fragment.minimalafp1.NumTemps = 16
Video.OpenGL.Shader.Cg.Precache.Fragment.minimalafp1.NumTexInstructionSlots = 24

; GF 3/4
; Use ps_* profiles instead of fp20 to allow reuse on old Radeons.
Video.OpenGL.Shader.Cg.Precache.Fragment.gf3.Profile = ps_1_1
Video.OpenGL.Shader.Cg.Precache.Fragment.gf4.Profile = ps_1_3

; GeForce FX limits
; see eg http://delphi3d.net/hardware/viewreport.php?report=1583
Video.OpenGL.Shader.Cg.Precache.Vertex.gffx.Profile = vp30
Video.OpenGL.Shader.Cg.Precache.Vertex.gffx.MaxLocalParams = 256
Video.OpenGL.Shader.Cg.Precache.Fragment.gffx.Profile = fp30
; @@@ Correct? Cg defaults to 256 here
Video.OpenGL.Shader.Cg.Precache.Fragment.gffx.NumInstructionSlots = 1024
Video.OpenGL.Shader.Cg.Precache.Fragment.gffx.NumTemps = 32

; GeForce 6 limits
; see eg http://delphi3d.net/hardware/viewreport.php?report=1613
Video.OpenGL.Shader.Cg.Precache.Vertex.gf6.Profile = vp40
Video.OpenGL.Shader.Cg.Precache.Vertex.gf6.MaxAddressRegs = 2
Video.OpenGL.Shader.Cg.Precache.Vertex.gf6.MaxLocalParams = 256
Video.OpenGL.Shader.Cg.Precache.Vertex.gf6.MaxInstructions = 512
Video.OpenGL.Shader.Cg.Precache.Vertex.gf6.NumTemps = 48
Video.OpenGL.Shader.Cg.Precache.Fragment.gf6.Profile = fp40
Video.OpenGL.Shader.Cg.Precache.Fragment.gf6.MaxLocalParams = 512
Video.OpenGL.Shader.Cg.Precache.Fragment.gf6.NumInstructionSlots = 4096
Video.OpenGL.Shader.Cg.Precache.Fragment.gf6.NumTemps = 32

; GeForce 7 limits - are pretty much the same as GF6 ones

; GeForce 8 limits
Video.OpenGL.Shader.Cg.Precache.Vertex.gf8.Profile = gp4vp
Video.OpenGL.Shader.Cg.Precache.Fragment.gf8.Profile = gp4fp


; Radeon 9500 limits
; see eg http://delphi3d.net/hardware/viewreport.php?report=762
Video.OpenGL.Shader.Cg.Precache.Vertex.r300.Profile = arbvp1
Video.OpenGL.Shader.Cg.Precache.Vertex.r300.MaxAddressRegs = 1
Video.OpenGL.Shader.Cg.Precache.Vertex.r300.MaxInstructions = 256
Video.OpenGL.Shader.Cg.Precache.Vertex.r300.MaxLocalParams = 256
Video.OpenGL.Shader.Cg.Precache.Vertex.r300.NumTemps = 32
Video.OpenGL.Shader.Cg.Precache.Fragment.r300.Profile = arbfp1
Video.OpenGL.Shader.Cg.Precache.Fragment.r300.MaxLocalParams = 32
Video.OpenGL.Shader.Cg.Precache.Fragment.r300.MaxTexIndirections = 4
Video.OpenGL.Shader.Cg.Precache.Fragment.r300.NumInstructionSlots = 96
Video.OpenGL.Shader.Cg.Precache.Fragment.r300.NumMathInstructionSlots = 64
Video.OpenGL.Shader.Cg.Precache.Fragment.r300.NumTemps = 32
Video.OpenGL.Shader.Cg.Precache.Fragment.r300.NumTexInstructionSlots = 32

; Radeon X800 limits
; see eg http://delphi3d.net/hardware/viewreport.php?report=1485
Video.OpenGL.Shader.Cg.Precache.Vertex.r420.Profile = arbvp1
Video.OpenGL.Shader.Cg.Precache.Vertex.r420.MaxAddressRegs = 1
Video.OpenGL.Shader.Cg.Precache.Vertex.r420.MaxInstructions = 256
Video.OpenGL.Shader.Cg.Precache.Vertex.r420.MaxLocalParams = 256
Video.OpenGL.Shader.Cg.Precache.Vertex.r420.NumTemps = 32
Video.OpenGL.Shader.Cg.Precache.Fragment.r420.Profile = arbfp1
Video.OpenGL.Shader.Cg.Precache.Fragment.r420.MaxLocalParams = 64
Video.OpenGL.Shader.Cg.Precache.Fragment.r420.MaxTexIndirections = 4
Video.OpenGL.Shader.Cg.Precache.Fragment.r420.NumInstructionSlots = 1024
Video.OpenGL.Shader.Cg.Precache.Fragment.r420.NumMathInstructionSlots = 512
Video.OpenGL.Shader.Cg.Precache.Fragment.r420.NumTemps = 64
Video.OpenGL.Shader.Cg.Precache.Fragment.r420.NumTexInstructionSlots = 512

; Radeon X1650 limits
; see eg http://delphi3d.net/hardware/viewreport.php?report=1485
Video.OpenGL.Shader.Cg.Precache.Vertex.r520.Profile = arbvp1
Video.OpenGL.Shader.Cg.Precache.Vertex.r520.MaxAddressRegs = 1
Video.OpenGL.Shader.Cg.Precache.Vertex.r520.MaxInstructions = 256
Video.OpenGL.Shader.Cg.Precache.Vertex.r520.MaxLocalParams = 256
Video.OpenGL.Shader.Cg.Precache.Vertex.r520.NumTemps = 32
Video.OpenGL.Shader.Cg.Precache.Fragment.r520.Profile = arbfp1
Video.OpenGL.Shader.Cg.Precache.Fragment.r520.MaxLocalParams = 64
Video.OpenGL.Shader.Cg.Precache.Fragment.r520.MaxTexIndirections = 512
Video.OpenGL.Shader.Cg.Precache.Fragment.r520.NumInstructionSlots = 1024
Video.OpenGL.Shader.Cg.Precache.Fragment.r520.NumMathInstructionSlots = 512
Video.OpenGL.Shader.Cg.Precache.Fragment.r520.NumTemps = 64
Video.OpenGL.Shader.Cg.Precache.Fragment.r520.NumTexInstructionSlots = 512

