<!--
  Copyright (C) 2008 by Frank Richter
	    (C) 2008 by Jorrit Tyberghein
      (C) 2011 by Alexandru Voicu

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Library General Public License for more details.

  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<snippet>
  <technique priority="100">
    <combiner name="cg" plugin="crystalspace.graphics3d.shader.combiner.glcg" />
    
    <block location="pass">
      <?Include /shader-snippets/lighting/lighting-tools.inc ?>
      
      <?Generate L 0 63?>
	<texture name="light osm[$L$]" destination="lightPropsOM_opacityMap[$L$]"
		comparemode="rToTexture" comparefunc="lequal" />
      <?Endgenerate?>
      <?Generate L 0 7?>
	<texture name="light shadow map start[$L$]" destination="lightPropsOM_shadowMapStart[$L$]"
		comparemode="rToTexture" comparefunc="lequal" />
      <?Endgenerate?>
      <?Generate L 0 7?>
	<texture name="light shadow map end[$L$]" destination="lightPropsOM_shadowMapEnd[$L$]"
		comparemode="rToTexture" comparefunc="lequal" />
      <?Endgenerate?>
      <?Generate L 0 7?>
	<texture name="split function[$L$]" destination="lightPropsOM_splitFunc[$L$]"
		comparemode="rToTexture" comparefunc="lequal" />
      <?Endgenerate?>      
    </block>
    
    <block location="cg:variablemap">
      <?Lighting_OpacityMap_Variablemaps?>
    </block>
    
    <block location="cg:definitions">
      <?Include /shader-snippets/lighting/shadow-osm.cginc ?>
    </block>
    
    <block location="cg:fragmentMain">
      ShadowShadowMapDepth shadowDepth;
      shadow = shadowDepth;
    </block>

    <block location="cg:vertexMain">
      ShadowShadowMapDepth shadowDepth;
      shadow = shadowDepth;
    </block>
    
    <output name="shadow" type="ShadowShadowMap" />
  </technique>
</snippet>
