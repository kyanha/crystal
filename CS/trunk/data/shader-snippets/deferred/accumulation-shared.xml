<?xml version="1.0" encoding="utf-8" ?> 
<!--
  Copyright (C) 2012 by Matthieu Kraus

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Library General Public License for more details.

  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<snippet type="compound">
  <technique priority="200">
    <combiner plugin="crystalspace.graphics3d.shader.combiner.glcg" />

    <!--
	Weak aliases.
	"Weak" means they do _not_ override aliases specified above this
	snippet; instead, the weak alias applies only if an alias with the
	given has not been specified yet.
	The practical effect is that this allows to use aliased snippets,
	but also provide "default" snippets and thus does not require users
	of this snippets to provide all aliases.
      -->
    <alias name="use_buffer" weak="yes" file="/shader-snippets/deferred/use_gbuffer.xml" />

    <!--
	Snippets - the building blocks of this shader.
	Their order influence what happens if not all features of the shader
	are supported; for earlier appearing snippets higher techniques
	are preferred.
    -->
    <snippet id="position" file="/shader-snippets/position.xml" />
    <snippet id="use_buffer" filealias="use_buffer" />
    <snippet id="lighting" filealias="lighting" />

    <!-- "connections" describe what snippets take input from what other
	  snippets (ie the "data flow" is modeled). The exact resolution of
	  what output is linked to what input is done automatically. -->
    <connection from="position" to="use_buffer" />
    <connection from="use_buffer" to="lighting" />

    <output snippet="lighting" name="diffuseColor" to="color0" />
    <output snippet="lighting" name="specularColor" to="color1" />
  </technique>
</snippet>
