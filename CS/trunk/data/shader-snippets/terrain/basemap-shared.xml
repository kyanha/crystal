<?xml version="1.0" encoding="utf-8" ?> 
<!--
  Copyright (C) 2007-2010 by Frank Richter
	    (C) 2007 by Jorrit Tyberghein

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Library General Public License for more details.

  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<snippet type="compound">
  <technique priority="200">
    <combiner plugin="crystalspace.graphics3d.shader.combiner.glcg" />

    <!-- Snippets - the building blocks of this shader. -->
    <snippet id="position" file="/shader/snippets/position.xml" />
    <!-- @@@ Should be an object-space normal map -->
    <snippet id="normalmap" file="/shader-snippets/surface/normalmap-none.xml" />
    
    <snippet id="basemapscale">
      <technique priority="50">
	<combiner plugin="crystalspace.graphics3d.shader.combiner.glcg" name="cg" />

	<input name="basemapscale" type="float4" default="complex" private="yes">
	  <block location="shadervars">
	    <shadervar name="basemap scale" type="vector4">1,1,0,0</shadervar>
	  </block> 
	  
	  <block location="cg:fragmentIn">
	    <uniform type="float4" name="basemapscale" />
	  </block>
	  
	  <block location="cg:fragmentMain">
	    basemapscale = fragmentIn.basemapscale;
	  </block>

	  <block location="cg:variablemap">
	    <variablemap variable="basemap scale" 
	      destination="fragmentIn.basemapscale" />
	  </block>
	</input>
	
	<block location="cg:fragmentMain">
	  scale = basemapscale;
	</block>
	<output name="scale" type="float4" />
      </technique>
    </snippet>
    <snippet id="tc_basemapadjust" file="/shader-snippets/texcoord2-scale-xlate.xml" />
    
    <snippet id="surface" file="/shader-snippets/surface/surface-classic.xml" />
    
    <snippet id="apply_mixmode_alpha" file="/shader-snippets/mixmode-alpha.xml" />
    <snippet id="apply_alpha" file="/shader-snippets/surface/alpha-none.xml" />
    
    <snippet id="lighting" filealias="lighting" />
    <snippet id="ambient" filealias="ambient" />
    
    <snippet id="specular" file="/shader-snippets/surface/specular-default.xml" />
    <snippet id="apply_lighting" file="/shader-snippets/lighting/apply-lighting.xml" />
    <snippet id="glow" file="/shader/lighting/glow.xml" />
    <snippet id="sectorfog" file="/shader-snippets/fog/fog-sector.xml" />
    <snippet id="hdrscale" file="/shader-snippets/hdr-postscale.xml" />


    <connection from="position" to="lighting" />
    
    <connection from="position" to="surface" />
    <connection from="basemapscale" to="tc_basemapadjust" />
    <connection from="tc_basemapadjust" to="surface" />
    <connection from="normalmap" to="surface" />

    <connection from="normalmap" to="ambient" />
    <connection from="normalmap" to="lighting" />
    
    <connection from="tc_basemapadjust" to="ambient" />
    
    <connection from="surface" to="apply_mixmode_alpha" />
    <connection from="surface" to="specular" />
    
    <connection from="apply_mixmode_alpha" to="apply_alpha" />
    <connection from="apply_alpha" to="apply_lighting">
      <explicit from="outputColor" to="surfaceDiffuse" />
    </connection>
    <connection from="lighting" to="apply_lighting">
      <explicit from="diffuseColor" to="lightDiffuse" />
      <explicit from="specularColor" to="lightSpecular" />
    </connection>
    <connection from="ambient" to="apply_lighting">
      <explicit from="ambient" to="ambient" />
    </connection>
    <connection from="specular" to="apply_lighting">
      <explicit from="specularColor" to="surfaceSpecular" />
    </connection>
    <connection from="apply_lighting" to="glow" />
    <connection from="glow" to="sectorfog" />
    <connection from="sectorfog" to="hdrscale" />
  </technique>
</snippet>
