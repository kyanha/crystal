[World]
; Start world file
WORLDFILE=flarge
; Optional zipfile extensions
WORLDZIPTYPE=zip
;WORLDZIPTYPE=csz

; NB1: The left side (lvalue) defines the functionality ID of the plugin.
; No FuncID may be used twice or more.
; Some parts of CS use this to distinguish between several plugins that
; export the same interface. For example, if you need a secondary 3d driver
; (which means: any additional plugin that implements the iGraphics3d
; interface) for some reason, CS will not be able to find out which one you
; want to use for the engine. CS will then look for the standard FuncID for
; the 3d driver. Be sure to use the correct FuncID for the drivers. If you
; use other FuncIDs, CS will not use these drivers for the engine (however,
; you can still use them if you ask for the correct FuncID, or if you accept
; any FuncID). These FuncIDs are recognized by CS:
;
; VFS           the virtual file system
; VideoDriver   standard graphics output
; SoundRender   standard sound output
; NetDriver     network driver
; NetManager    network manager
; Protocol      network protocol layer
; CmdManager    network command manager
; Console       the console
; Engine        the 3d engine
;
;
; NB2: a specific driver can be ommited, if it is not used.
; For example, if you just ommit the sound renderer, you will
; simply hear no sound, but the program will still run
;
; NB3: Plugins will be loaded in the same order they are listed
; here. This means that if, for example, a plugin needs the video
; driver during his initialization, it should come *after*
; video driver in the following section.
[PlugIns]

; First of all, the Virtual File System plug-in
VFS = crystalspace.kernel.vfs

; Video driver
;VideoDriver = crystalspace.graphics3d.software.offscreen
VideoDriver = crystalspace.graphics3d.software
;VideoDriver = crystalspace.graphics3d.opengl
;VideoDriver = crystalspace.graphics3d.direct3d.dx5
;VideoDriver = crystalspace.graphics3d.direct3d.dx61
;VideoDriver = crystalspace.graphics3d.glide.2
;VideoDriver = crystalspace.graphics3d.glide.3
;VideoDriver = crystalspace.graphics3d.line

; The console
Console = crystalspace.console.output.simple
;Console = crystalspace.console.output.standard
;Console = crystalspace.console.output.funky
ConsoleInput = crystalspace.console.input.simple

; Sound renderer
;SoundRender=crystalspace.sound.render.software
;SoundRender=crystalspace.sound.render.a3d
;SoundRender=crystalspace.sound.render.ds3d

; Sound Loader
SoundLoader=crystalspace.sound.loader

;NetDriver=crystalspace.network.driver.sockets

;NetManager=crystalspace.network.manager.simple
;NetManager=crystalspace.network.manager.deadreckoning

; Now the Engine (csWorld) plug-in
Engine = crystalspace.engine.core

; Additional plugins come here
;Python = crystalspace.script.python
;CrystalClear = crystalclear.kernel

Perfstat = crystalspace.utilities.perfstat

[FontServer]
;FontServer=crystalspace.font.server.csfont
;FontServer=crystalspace.font.server.freetype


[VFS.Options]
Config = vfs.cfg

[CD]
JUMPSPEED=0.08
WALKACCELERATE=0.02
WALKMAXSPEED=0.1
WALKBRAKE=0.04
ROTATEACCELERATE=0.01
ROTATEMAXSPEED=0.04
ROTATEBRAKE=0.02
LOOKACCELERATE=0.028

; Here's how player body is built:
;
;   +------+  The body consist of two boxes: the top "body" box and the
;  /      /|  bottom "legs" box (see picture 1). The BODYXXX parameters refers
; +------+ |  to the top box, the LEGSXXX parameters refers to the bottom box.
; |      | |  WIDTH, HEIGHT and DEPTH refers to the corresponding parameters
; |      | |  of the box; since they share one plane the height of legs are
; |      | +  given by the lower bound of the body box.
; |      |/   The vertical axis is OY, the horizontal axis is OX and the depth
; +-+--+-+    axis is OZ. The eyes are located at (0,0,0). The width and depth
;   |  | |    of body/legs are automatically split into two and half of the
;   |  | +    width/depth is placed on one side of YOZ/XOY and other half is
;   |  |/     placed on the other side of the plane. That is, the body is
;   +--+      automatically centered along the X and Z axis. For the Y axis
;   pic.1     you have to specify what the Y coordinate of the lower plane of
;             body box will be. This is defined by the EYEOFFSET parameter,
; which is usually less than zero. That is, the lower plane of body is below
; your eyes (which are at y=0, remember?). And finally, the LEGSOFFSET
; parameter defines the Y offset of the bottom plane of legs. Usually
; LEGSOFFSET < EYEOFFSET, since legs should have at least a little length.
;
;             ^ Y
;             |
;          +-----+              - y = eye_offset + body_height
;          |  |  |
; ---------|--+--|---------> X  - y = 0 (eyes are at (0,0,0))
;          |  |  |
;          |  |  |
;          |  |  |
;          +-+-+-+              - y = eye_offset
;            |||
;            |||
;            |||
;            +-+                - y = legs_offset
;
; The parameters below defines a 1.8 meters high person with a 40cm torso and
; 30cm body depth, and with 30cm legs width and 20cm legs depth. The body is
; 1m high, the legs are 80cm high.
BODYHEIGHT=1
BODYWIDTH=0.4
BODYDEPTH=0.3
EYEOFFSET=-0.7
LEGSWIDTH=0.3
LEGSDEPTH=0.2
LEGSOFFSET=-1.5

[Lighting]
Ambient.White=20
Ambient.Red=0
Ambient.Green=0
Ambient.Blue=0

LightmapSize=16
Reflections=2
CosinusFactor=0
SpriteHighQual=no
Radiosity=no

Radiosity.Enable=no
Radiosity.DoStaticSpecular=no
Radiosity.StaticSpecularAmount=0.70
Radiosity.StaticSpecularTightness=4
Radiosity.ColourBleed=1.0
Radiosity.StopPriority=0.1
Radiosity.StopImprovement=100.0
Radiosity.StopIterations=10000
Radiosity.SourcePatchSize=16

[VideoDriver]
; Width/height of CrystalSpace visual
Width=640
Height=480
; Screen depth (currently supports 8, 15, 16, and 32 bits, NO 24 bits!)
Depth=16
; Use full-screen mode if available
FullScreen=no

; Use libshm if available (X-Windows only)
Xshm=yes
; Simulate another depth (supported only by some video drivers)
;SimulateDepth=8
; Use system mouse cursor (yes) or software-simulated (no)
SysMouseCursor=yes

[SimpleConsole]
CONFG=255,255,255
CONBG=0,0,0
CONFONT=auto
LINEMAX=4
LINEHISTORY=50
TRANSPBG=no

[WalkTest]
FPS=yes
STATS=no
MESSAGE=console
DEBUG=no

; Enable collision detection?
COLLDET=yes
COLLDET_PLUGIN=crystalspace.colldet.rapid

[Network]
;this is temporaly place for this thing, next time it will be in console
Server=no

[MouseDriver]
; Double click time in 1/1000 seconds
DoubleClickTime = 300
; Maximal distance that mouse can move between clicks for double click to occur
DoubleClickDist = 2
; For now its used only in DOS/DJGPP port
MouseSensivity = 1.0

[Microsoft Windows]
DebugConsole = yes
