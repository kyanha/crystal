;-------------------------------------------
; OpenGL specific stuff
;-------------------------------------------

;Video.OpenGL.Canvas = crystalspace.graphics2d.glx
;Video.OpenGL.Canvas = crystalspace.graphics2d.glwin32
;Video.OpenGL.Canvas = crystalspace.graphics2d.glmac

; Override the detected graphics capabilities. 
; For broken drivers or unknown cards you can uncomment and set
; the following values. If commented, a nice default will be used instead.
;Video.OpenGL.Caps.MaxTextureSize = 1024

Video.OpenGL.UseExtension.GL_NV_vertex_array_range = yes

;Video.OpenGL.TextureLODBias = 16
Video.OpenGL.TextureDownsample = 0
Video.OpenGL.SharpenMipmaps = 256

; This threshold is the number of triangles (for a single object) after
; which stencil clipping is prefered instead of plane clipping.
Video.OpenGL.StencilThreshold = 50
; Set to true if stencil clipping is broken.
;Video.OpenGL.BrokenStencil = true
; When clearing the stencil buffer is needed, also clear the Z buffer. 
; Possibly faster on some HW.
Video.OpenGL.StencilClearWithZ = yes

Video.OpenGL.DelaySwap = no

; Set the number of bytes above which VBO hardware buffers will be used.
; Smaller buffers will use normal system memory. Increasing this value
; avoids using VBO for smaller buffers which is useful since VBO appears
; to eat up considerable memory.
Video.OpenGL.VBOThresshold = 0

Video.OpenGL.UseNVidiaExt = true
Video.OpenGL.UseATIExt = true
;Video.OpenGL.UseExtension.GL_ARB_multitexture  = false
;Video.OpenGL.UseExtension.GL_ARB_texture_compression  = false
;Video.OpenGL.UseExtension.GL_SGIS_generate_mipmap = false
;Video.OpenGL.UseExtension.GL_EXT_texture_filter_anisotropic = false
;Video.OpenGL.UseExtension.GL_EXT_texture_lod_bias = false
;Video.OpenGL.UseExtension.GL_ARB_vertex_program = true
Video.OpenGL.UseExtension.GL_ARB_vertex_buffer_object = false
Video.OpenGL.UseExtension.GL_EXT_framebuffer_object = false

;Video.OpenGL.MultiSamples = 4

Video.OpenGL.VBO.VBsize = 33554432
Video.OpenGL.VBO.IBsize = 16M

; Texture format configuration.
; You can explicitly tell what target format(ie, how is it stored in GL) for a 
; a texture class should be used. The default is to compress, if possible,
; otherwise the default format.
Video.OpenGL.TextureClass.default.FormatRGB = GL_COMPRESSED_RGB_ARB,GL_RGB
Video.OpenGL.TextureClass.default.FormatRGBA = GL_COMPRESSED_RGBA_ARB,GL_RGBA
; Whether precomputed (e.g. like in DDS) mipmaps should still be sharpened.
; Usually "no".
Video.OpenGL.TextureClass.default.SharpenPrecomputedMipmaps = no
; Whether image source data should always be converted to csRGBpixel data.
; Usually "no".
Video.OpenGL.TextureClass.default.ForceDecompress = no
; Whether the resolution of this texture can be reduced.
; Usually "yes".
Video.OpenGL.TextureClass.default.AllowDownsample = yes
; Whether (generated) mipmaps are sharpened.
; Usually "yes".
Video.OpenGL.TextureClass.default.AllowMipSharpen = yes

; Compressing normal maps makes them look ugly, so store them uncompressed.
Video.OpenGL.TextureClass.normalmap.FormatRGB = GL_RGB8
Video.OpenGL.TextureClass.normalmap.FormatRGBA = GL_RGBA8
Video.OpenGL.TextureClass.normalmap.AllowMipSharpen = no

; Certain data, e.g. some gradients, doesn't compress that well either
Video.OpenGL.TextureClass.nocompress.FormatRGB = GL_RGB8
Video.OpenGL.TextureClass.nocompress.FormatRGBA = GL_RGBA8

; Same for textures with a look-up character.
; Also, always keep them at their original size.
Video.OpenGL.TextureClass.lookup.FormatRGB = GL_RGB8
Video.OpenGL.TextureClass.lookup.FormatRGBA = GL_RGBA8
Video.OpenGL.TextureClass.lookup.AllowDownsample = no
