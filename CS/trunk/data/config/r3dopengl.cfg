;-------------------------------------------
; OpenGL specific stuff
;-------------------------------------------

;Video.OpenGL.Canvas = crystalspace.graphics2d.glx
;Video.OpenGL.Canvas = crystalspace.graphics2d.glwin32
;Video.OpenGL.Canvas = crystalspace.graphics2d.glmac

; Override the detected graphics capabilities. 
; For broken drivers or unknown cards you can uncomment and set
; the following values. If commented, a nice default will be used instead.
;Video.OpenGL.Caps.MaxTextureSize = 1024

Video.OpenGL.UseExtension.GL_NV_vertex_array_range = yes

;Video.OpenGL.TextureLODBias = 16
Video.OpenGL.TextureDownsample = 0
Video.OpenGL.SharpenMipmaps = 256

; This threshold is the number of triangles (for a single object) after
; which stencil clipping is prefered instead of plane clipping.
Video.OpenGL.StencilThreshold = 50
; Set to true if stencil clipping is broken.
;Video.OpenGL.BrokenStencil = true

; Set the number of bytes above which VBO hardware buffers will be used.
; Smaller buffers will use normal system memory. Increasing this value
; avoids using VBO for smaller buffers which is useful since VBO appears
; to eat up considerable memory.
Video.OpenGL.VBOThresshold = 0

Video.OpenGL.UseNVidiaExt = true
Video.OpenGL.UseATIExt = true
;Video.OpenGL.UseExtension.GL_ARB_multitexture  = false
;Video.OpenGL.UseExtension.GL_ARB_texture_compression  = false
;Video.OpenGL.UseExtension.GL_SGIS_generate_mipmap = false
;Video.OpenGL.UseExtension.GL_EXT_texture_filter_anisotropic = false
;Video.OpenGL.UseExtension.GL_EXT_texture_lod_bias = false
;Video.OpenGL.UseExtension.GL_ARB_vertex_program = true
Video.OpenGL.UseExtension.GL_ARB_vertex_buffer_object = false

;Video.OpenGL.MultiSamples = 4

; Bit depth of textures. Some cards may run faster
; with 16 bit textures, some save textures internally in
; 32 bit anyway. 0 means: use display color depth.
; This bit depth is used to set a preset texture target format, so explicitly
; setting a target format will override the texture bit depth. Also, 
; the same "driver may not honor it" caveat applies.
Video.OpenGL.TextureBits = 32

; You can explicitly tell what target format(ie, how is it stored in GL) for a 
; source format should be used.
; Note that the formats need to be both in the same class, that is
; you can map RGB to some specific RGB format only, no RGBA format, and vice
; versa.
; Also, CS just "asks" the driver to use such or such texture format 
; internally, it may not honor it at all.
;Video.OpenGL.TargetFormat.GL_RGB = GL_RGB8
;Video.OpenGL.TargetFormat.GL_RGBA = GL_RGBA8
; Here you can specify if textures using a selected targetformat should be held
; compressed in texture memory (note: this setting is currently made through
; the driver database)
;Video.OpenGL.TargetFormat.GL_RGB = compressed
;Video.OpenGL.TargetFormat.GL_RGBA = compressed
