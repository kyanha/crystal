# dependencies of CS
depends()
{
    case $1 in
	-lcsutil) DEPS="-lcssys";;
	-lcssys) DEPS="-lcsutil";;
	-lcsengine) DEPS="-lcssys -lcsutil -lcstool -lcsgeom";;
	-lcsgeom) DEPS="-lcsutil -lcssys";;
	-lcsgfx) DEPS="-lcssys -lcsutil";;
	-lcstool) DEPS="-lcsutil -lcssys";;
	-lcsws) DEPS="-lcsgfx -lcsgeom -lcsutil -lcssys";;
	*) DEPS=""
    esac
}

#is it a source distribution?
if test -r "$prefix/Makefile"; then
#	look for the lib files...
#	a more or less dirty hack...
	if test -r "$prefix/lib/libcssys.a"; then
	    libdir="$prefix/lib"
	else
	    #Thanks go to Jorge for this script magic...
	    libdir=`find "$CRYSTAL/out" -name "libcssys.a"  | sed -e "s~\(.*\)/.*~\1~" -e "1q"`
	    if test -z "$libdir"; then
	        echo "Couldn't detect dir with lib files, aborting!"
		echo "  Did you already compile CS?"
		exit 1
	    fi  
	fi
fi

usage()
{
	cat <<EOF
Usage: cs-config [OPTIONS] [LIBRARIES]
Options:
	[--prefix[=DIR]]
	[--exec-prefix[=DIR]]
	[--version]
	[--libs]
	[--cflags]
	[--cxxflags]
	[--help]
Libraries:
	csengine
	csgeom
	csgfx
	csphyzik
	cssys
	cstool
	csutil
	csws
EOF
	exit $1
}

if test $# -eq 0; then
	usage 1 1>&2
fi

cflags=false
libs_L=false
libs_l=false

the_flags="-I${includedir} -I${exec_prefix}/include"

while test $# -gt 0; do
  case "$1" in
  -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) optarg= ;;
  esac

  case $1 in
    --prefix=*)
      prefix=$optarg
      if test $exec_prefix_set = no ; then
        exec_prefix=$optarg
      fi
      ;;
    --prefix)
	echo $prefix
	exit 0
	;;
    --exec-prefix=*)
	exec_prefix=$optarg
	exec_prefix_set=yes
	;;
    --exec-prefix)
	echo $exec_prefix
	exit 0
	;;
    --version)
      echo $version
      exit 0
      ;;
    --cflags)
      show_cflags=true
      ;;
    --cxxflags)
	show_cxxflags=true
	;;
    --libs)
	libs_l=true
	libs_L=true
	;;
    --libs-only-L)
	libs_L=true
	;;
    --libs-only-l)
	libs_l=true
	;;
    cssys)
	the_libs="$the_libs -lcssys"
	;;
    csengine)
	the_libs="$the_libs -lcsengine"
	;;
    csgeom)
	the_libs="$the_libs -lcsgeom"
	;;
    csgfx)
	the_libs="$the_libs -lcsgfx"
	;;
    cstool)
	the_libs="$the_libs -lcstool"
	;;
    csutil)
	the_libs="$the_libs -lcsutil"
	;; 
    csws)
	the_libs="$the_libs -lcsws"
	;;
    *)
      usage 1 1>&2
      ;;
  esac
  shift
done

#if users specified none, output all
if test -z "$the_libs"; then
	the_libs="-lcsengine -lcsws -lcsgeom -lcsgfx -lcstool -lcsutil -lcssys"
fi

#look for dependencies
includedeps()
{
# already had all dependencies of this lib? then exit
    case " $ALREADY_TESTED " in
    	*\ $1\ *) return 0;;
    	*) ;;
    esac

# if not add 1 dependency
    depends $1
    ALREADY_TESTED="$ALREADY_TESTED $1"
    for a in $DEPS; do
	case " $@ " in
	    *\ $a\ *) ;;
    	    *)  
		LIBS_OUT="$LIBS_OUT $a"
	    	return 1
	    ;;
	esac
    done
    shift
    if test -n "$1"; then
	if includedeps $@; then
	    return 0
	else
	    return 1
	fi
    else
	return 0
    fi
}

LIBS_OUT="$the_libs"
ALREADY_TESTED=""
# loop as long new dependencies had to be added
while ! includedeps $LIBS_OUT; do
	ALREADY_TESTED=""
done

# reverse order
the_libs=""
for i in $LIBS_OUT; do
	the_libs="$i $the_libs"
done

the_libs="-L$libdir $syslibs $the_libs"
if test -n "$show_cflags"; then
	echo "$common_cflags"
fi
if test -n "$show_cxxflags"; then
	echo "$common_cxxflags"
fi
if $libs_L || $libs_l; then
	echo "$the_libs"
fi

exit 0
