<arbvp>
  <variablemap variable="STANDARD_LIGHT_0_POSITION" register="0"/>
  <variablemap variable="STANDARD_LIGHT_0_DIFFUSE" register="1"/>
  <variablemap variable="STANDARD_LIGHT_0_SPECULAR" register="2"/>
  <variablemap variable="STANDARD_LIGHT_0_ATTENUATION" register="3"/>
  
  <variablemap variable="mat diffuse" register="4"/>
  <variablemap variable="mat ambient" register="5"/>
  <variablemap variable="mat reflection" register="6"/>
  <variablemap variable="mat flatcolor" register="7"/>
  
  <variablemap variable="mat specular" register="8"/>
  <program>
    <![CDATA[
      !!ARBvp1.0
      #---------------------------------------
      # Simple Vertex Lighting Program
      #---------------------------------------
      #Parameter definition
      PARAM mv[4]	     	= { state.matrix.modelview };
      PARAM mvi[4]	 	= { state.matrix.modelview.invtrans };
      PARAM mvp[4]	     	= { state.matrix.mvp };
      PARAM lightPos   		= program.local[0];
      PARAM lightDiffuse 	= program.local[1];
      PARAM lightSpecular 	= program.local[2];
      PARAM lightAttenuation 	= program.local[3];
      PARAM bleh 	= {0, 0.5, 0.75, 1};
      
      PARAM materialDiffuse	= program.local[4];
      PARAM materialAmbient	= program.local[5];
      PARAM materialReflection	= program.local[6];
      PARAM materialFlatColor 	= program.local[7];
      PARAM materialSpecular 	= program.local[8];
      # Per vertex inputs
      ATTRIB iPos		= vertex.position;
      ATTRIB iCol0		= vertex.attrib[1];
      ATTRIB iNorm		= vertex.attrib[2];
      ATTRIB iTex0		= vertex.attrib[3];
      # Outputs
      OUTPUT oPos		    = result.position;
      OUTPUT oCol0		  = result.color;
      OUTPUT oLightDir	= result.texcoord[0];
      OUTPUT oNormal		= result.texcoord[1];
      OUTPUT oTex0		  = result.texcoord[2];
      # Temporaries
      TEMP eyeVertex;
      TEMP eyeNormal;
      TEMP normalEyeToVertex;
      TEMP vertToLight;
      TEMP temp;
      TEMP temp2;
      TEMP lightAtnFinal;
      TEMP lightFactors;
      TEMP halfVector;
      TEMP lightConsts;
      
      TEMP diffuse;
      
      #Transform vertex to viewspace
      DP4 oPos.x, mvp[0], iPos;
      DP4 oPos.y, mvp[1], iPos;
      DP4 oPos.z, mvp[2], iPos;
      DP4 oPos.w, mvp[3], iPos;
      
      #Just pass on texture-coordinate
      MOV oTex0, iTex0;
      
      #Transform position to eye
      DP4 eyeVertex.x, mv[0], iPos;
      DP4 eyeVertex.y, mv[1], iPos;
      DP4 eyeVertex.z, mv[2], iPos;
      DP4 eyeVertex.w, mv[3], iPos;
      
      #Transform normal
      DP4 oNormal.x, mvi[0], iNorm;
      DP4 oNormal.y, mvi[1], iNorm;
      DP4 oNormal.z, mvi[2], iNorm;
      DP4 oNormal.w, mvi[3], iNorm;
      
      #calculate vector from vertex to light in eye-space
      ADD oLightDir, lightPos, -eyeVertex;
      
      #Just pass on diffuse color
      MOV oCol0, lightDiffuse;
      
      END
    ]]>
  </program>
</arbvp>
