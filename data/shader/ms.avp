<arbvp>
<shadervar name="multiplyer" type="float">0.8</shadervar>
<shadervar name="color" type="vector3">0,1,0.4</shadervar>
<variablemap variable="multiplyer" destination="register 5"/>
<variablemap variable="STANDARD_TIME" destination="register 0"/>
<program>
<![CDATA[
!!ARBvp1.0
#---------------------------------------
# Simple Vertex Program
#---------------------------------------
#Parameter definition
PARAM mvp[4]	  = { state.matrix.mvp };
PARAM color		  = program.local[4];
PARAM multiple	= program.local[5];
PARAM time      = program.local[0];
PARAM m			    = { 0.3, 0.3, 0.3, 0.3 };
PARAM consts    = { 1, 0, 0.5, 2 };
PARAM consts2   = { 0.1, 0.2, 0.33, 0.4 };
# Per vertex inputs
ATTRIB iPos		= vertex.position;
ATTRIB iCol0	= vertex.color;
ATTRIB iTex0	= vertex.texcoord;
# Outputs
OUTPUT oPos		= result.position;
OUTPUT oCol0	= result.color;
OUTPUT oTex0	= result.texcoord;
# Temporaries
TEMP tempColor;

#Transform vertex
DP4 oPos.x, mvp[0],iPos;
DP4 oPos.y, mvp[1],iPos;
DP4 oPos.z, mvp[2],iPos; 
DP4 oPos.w, mvp[3],iPos;

#Just pass on texture-coordinate
MOV oTex0, iTex0;

#Fix colors
#red
#convert to 0..1 (with t/2 as period)
MUL tempColor.x, time.x, consts.z;
FRC tempColor.x, tempColor.x;

#green
#1..0 with t/3 as period
MUL tempColor.y, time.x, consts2.z;
FRC tempColor.y, tempColor.y;
ADD tempColor.y, consts.x, -tempColor.y;

#blue
#0 .. 1 with 2t+0.5 as period
ADD tempColor.z, time.x, consts.z;
MUL tempColor.z, tempColor.z, consts.w;
FRC tempColor.z, tempColor.z;

#alpha = 1
MOV tempColor.w, consts.x;

#MOV oCol0, tempColor;
MUL oCol0, iPos, tempColor;

END
]]>
</program>
</arbvp>
