<cgvp>
<program>
<![CDATA[
		
struct app2vertex {
	float4 Position : POSITION;
	float3 Normal : NORMAL;
};

struct vertex2fragment { 
	float4 HPosition : POSITION;
	float3 LightVec : TEXCOORD0;	
	float3 WorldNormal : TEXCOORD1;		
	float3 WorldView: TEXCOORD2;	
};

// main function
vertex2fragment main (app2vertex IN,
	uniform float4x4 ModelViewIT : state.matrix.modelview.invtrans,
	uniform float4x4 ModelViewProj : state.matrix.mvp,
	uniform float3 LightPos)
{
	LightPos = float3(9000, 0, 0);
	vertex2fragment OUT;

	OUT.WorldNormal = IN.Normal;
	
	// position in object coords:	
	float4 Po = float4(IN.Position.x, IN.Position.y, IN.Position.z, 1.0);
	// pos in world coords - same the mesh is recomputed every time
	float3 Pw = Po.xyz;
	
	// light vector
	OUT.LightVec = LightPos - Pw;

	// view vector in world coords:
	OUT.WorldView = normalize(ModelViewIT[3].xyz - Pw);
	// pos in clip coords:
	OUT.HPosition = mul(ModelViewProj, Po);
	
	return OUT;	// output of vertex shader
}

]]>
</program>
</cgvp>