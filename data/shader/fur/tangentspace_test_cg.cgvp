<cgvp>
<program>
<![CDATA[

struct app2vertex {
	float4 Position : POSITION;
	float4 Normal : NORMAL;
	float3 Tangent : TEXCOORD0;
	float3 Binormal : TEXCOORD1;	
};

struct vertex2fragment { 
	float4 Hposition : POSITION;
	float4 Color : COLOR0;
};

vertex2fragment main (app2vertex IN,
	uniform float4x4 ModelView : state.matrix.modelview,
	uniform float4x4 ModelViewIT : state.matrix.modelview.invtrans,
	uniform float4x4 ModelViewProj : state.matrix.mvp,
	uniform float4 LightPos,
	uniform float3 LightColor)
{
	vertex2fragment OUT;
    LightPos = float4(9000,0,0,1);
    LightColor = float3(1); 

	float3 eyeNormal = normalize( IN.Normal.xyz );
	float3 eyeTangent = normalize( IN.Tangent.xyz );
	float3 eyeBinormal = normalize( IN.Binormal.xyz );
	
	float3 camera = ModelViewIT[3].xyz;
	// for camera
	float3 vertToLight = camera - IN.Position.xyz;
	// for light
	//float3 vertToLight = LightPos - IN.Position.xyz;
	
	vertToLight = normalize(vertToLight);
  
	OUT.Hposition = mul (ModelViewProj, IN.Position);
	OUT.Color.b = max(dot (eyeNormal, vertToLight),0);
	OUT.Color.r = max(dot (eyeTangent, vertToLight),0);
	OUT.Color.g = max(dot (eyeTangent, vertToLight),0);
	//OUT.Color.rgb = OUT.Color.r;
	//OUT.Color.rgb = LightColor * max(dot (eyeNormal, vertToLight), 0);
	return OUT;
}

]]>
</program>
</cgvp>