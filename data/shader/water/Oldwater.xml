<shader compiler="xmlshader" name="water">

        <!--
                These are the wave properties as outlined in section 4.1 in this paper by
                Jerry Tessendorf, presented in 2004, which uses ideas from Fournier and 
                Reeves' paper from Siggraph '86 Proceedings:

                http://www.finelightvisualtechnology.com/docs/coursenotes2004.pdf
                http://www.iro.umontreal.ca/~poulin/fournier/papers/p75-fournier.pdf

                TODO: Move from Gerstner waves to a statistical model representation using
                Fast Fourier Transforms as described in section 4.3 of Tessendorf's paper.
        -->

        <shadervars>
            <shadervar name="position" type="vector4">-1.0, -1.0, -1.0, 0.0</shadervar>
            <shadervar name="color" type="vector4">0.9, 0.9, 0.9, 1.0</shadervar>
			<shadervar name="colorVer" type="vector4">0.1, 0.1, 0.1, 1.0</shadervar>
            <shadervar name="shine" type="float">128.0</shadervar>
            <shadervar name="murkiness" type="float">0.3</shadervar>

            <!-- Wave properties -->

            <shadervar name="time" type="expression">
              <sexp>(* "standard time" 1)</sexp>
            </shadervar>
     
        </shadervars>


<technique priority="100">
    <pass>
      <mixmode><alpha/></mixmode>

      <buffer source="texture coordinate 0" destination="texture coordinate 0" />
	  <texture name="tex height" destination="Heightmap"/>
	  <texture name="tex foam" destination="TexFoam"/>
      <texture name="tex normal" destination="TexNormal" />
	  <texture name="tex plane reflect" destination="TexReflect" />
	  <texture name="tex plane refract" destination="TexRefract" />
      <texture name="foam dist" destination="foamDist" />
      <vp plugin="glcg" name="Water Vertices">
            <cgvp>
				<variablemap variable="colorVer" destination="colorVer" />
                <variablemap variable="time" destination="time" />

                <?if vars."freqs" && vars."kxs" && vars."kys" && vars."amps" && vars."phases"?>
                <!-- The wave amplitudes -->
                <variablemap variable="amps" destination="amps" />

                <!-- The "kxs" and "kys" are the X and Z components of the 2D directional 
                vectors of the waves. It is possible to grab these values from a time 
                dependent function of the vertex's position, but it generates visually 
                pleasing effects even if they are hardcoded. -->
                <variablemap variable="kxs" destination="kxs" />
                <variablemap variable="kys" destination="kys" />

                <!-- The wave frequencies -->
                <variablemap variable="freqs" destination="freqs" />

                <!-- The wave phases -->
                <variablemap variable="phases" destination="phases" />

                <variablemap variable="object2world transform" destination="o2w" />

				<variablemap variable="reflection coord xform" destination="reflectXform" />

				<variablemap variable="refraction coord xform" destination="refractXform" />

				<variablemap variable="foam points" destination="foamPoints" />
				
                <program file="/shader/water/ocean.cgvp"/>
                <?else ?>
				<variablemap variable="object2world transform" destination="o2w" />
				<variablemap variable="reflection coord xform" destination="reflectXform" />
				<variablemap variable="refraction coord xform" destination="refractXform" />
                <program file="/shader/water/water.cgvp"/>
                <?endif ?>
            </cgvp>
      </vp>

	  
      <fp plugin="glcg" name="Water pixels">
            <cgfp>
                <variablemap variable="position" destination="lightPos" />
                <variablemap variable="color" destination="lightCol" />
                <variablemap variable="shine" destination="shininess" />
                <variablemap variable="murkiness" destination="waterAlpha" />
                <program file="/shader/water/water.cgfp"/>
            </cgfp>
      </fp>
    </pass>
  </technique>
</shader>