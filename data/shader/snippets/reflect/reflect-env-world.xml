<!--
  Copyright (C) 2007 by Frank Richter
	    (C) 2007 by Jorrit Tyberghein

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Library General Public
  License as published by the Free Software Foundation; either
  version 2 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  Library General Public License for more details.

  You should have received a copy of the GNU Library General Public
  License along with this library; if not, write to the Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
-->
<snippet>
  <technique priority="100">
    <combiner name="cg" plugin="crystalspace.graphics3d.shader.combiner.glcg" />
    
    <!-- Surface normal -->
    <input name="normal" type="normal_world" />
    <!-- Vector from eye to position -->
    <input name="eyeVec" type="direction_world" />
    
    <block location="cg:vertexMain">
      reflected = reflect (eyeVec, normal);
    </block>
    
    <block location="cg:fragmentMain">
      reflected = reflect (eyeVec, normal);
    </block>
    
    <output name="reflected" type="direction_world" />
  </technique>
</snippet>
