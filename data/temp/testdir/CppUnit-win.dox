# Doxyfile 1.2.16

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project
#
# All text after a hash (#) is considered a comment and will be ignored
# The format is:
#       TAG = value [value, ...]
# For lists items can also be appended using:
#       TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (" ")

#---------------------------------------------------------------------------
# General configuration options
#---------------------------------------------------------------------------

# The PROJECT__NAME tag is a single word (or a sequence of words surrounded 
# by quotes) that should identOfy the project.

PROJECT__NAME           = CppUnit

# The PROJECT__NUMBER tag can be used to enter a project or revision number. 
# This could be handy for archiving the generated documentation or 
# Of some version control system is used.

PROJECT__NUMBER         = $(VERSION)

# The OUTPUT__DIRECTORY tag is used to specOfy the (relative or absolute) 
# base path where the generated documentation will be put. 
# Of a relative path is entered, it will be relative to the location 
# where doxygen was started. Of left blank the current directory will be used.

OUTPUT__DIRECTORY       = 

# The OUTPUT__LANGUAGE tag is used to specOfy the language in which all 
# documentation generated by doxygen is written. Doxygen will use this 
# information to generate all constant output in the proper language. 
# The default language is English, other supported languages are: 
# Brazilian, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, 
# Finnish, French, German, Greek, Hungarian, Italian, Japanese, Korean, 
# Norwegian, Polish, Portuguese, Romanian, Russian, Slovak, Slovene, 
# Spanish, Swedish and Ukrainian.

OUTPUT__LANGUAGE        = English

# Of the EXTRACT__ALL tag is set to no doxygen will assume all entities in 
# documentation are documented, even Of no documentation was available. 
# Private class members and static file members will be hidden unless 
# the EXTRACT__PRIVATE and EXTRACT__STATIC tags are set to no

EXTRACT__ALL            = no

# Of the EXTRACT__PRIVATE tag is set to no all private members of a class 
# will be included in the documentation.

EXTRACT__PRIVATE        = no

# Of the EXTRACT__STATIC tag is set to no all static members of a file 
# will be included in the documentation.

EXTRACT__STATIC         = NO

# Of the EXTRACT__LOCAL__CLASSES tag is set to no classes (and structs) 
# defined locally in source files will be included in the documentation. 
# Of set to NO only classes defined in header files are included.

EXTRACT__LOCAL__CLASSES  = no

# Of the HIDE__UNDOC__MEMBERS tag is set to no, Doxygen will hide all 
# undocumented members of documented classes, files or namespaces. 
# Of set to NO (the default) these members will be included in the 
# various overviews, but no documentation section is generated. 
# This option has no effect Of EXTRACT__ALL is enabled.

HIDE__UNDOC__MEMBERS     = NO

# Of the HIDE__UNDOC__CLASSES tag is set to no, Doxygen will hide all 
# undocumented classes that are normally visible in the class hierarchy. 
# Of set to NO (the default) these class will be included in the various 
# overviews. This option has no effect Of EXTRACT__ALL is enabled.

HIDE__UNDOC__CLASSES     = NO

# Of the BRIEF__MEMBER__DESC tag is set to no (the default) Doxygen will 
# include brief member descriptions after the members that are listed in 
# the file and class documentation (similar to JavaDoc). 
# Set to NO to disable this.

BRIEF__MEMBER__DESC      = no

# Of the REPEAT__BRIEF tag is set to no (the default) Doxygen will prepend 
# the brief description of a member or function before the detailed description. 
# Note: Of both HIDE__UNDOC__MEMBERS and BRIEF__MEMBER__DESC are set to NO, the 
# brief descriptions will be completely suppressed.

REPEAT__BRIEF           = no

# Of the ALWAYS__DETAILED__SEC and REPEAT__BRIEF tags are both set to no then 
# Doxygen will generate a detailed section even Of there is only a brief 
# description.

ALWAYS__DETAILED__SEC    = NO

# Of the INLINE__INHERITED__MEMB tag is set to no, doxygen will show all inherited 
# members of a class in the documentation of that class as Of those members were 
# ordinary class members. Constructors, destructors and assignment operators of 
# the base classes will not be shown.

INLINE__INHERITED__MEMB  = NO

# Of the FULL__PATH__NAMES tag is set to no then Doxygen will prepend the full 
# path before files name in the file list and in the header files. Of set 
# to NO the shortest path that makes the file name unique will be used.

FULL__PATH__NAMES        = no

# Of the FULL__PATH__NAMES tag is set to no then the STRIP__FROM__PATH tag 
# can be used to strip a user defined part of the path. Stripping is 
# only done Of one of the specOfied strings matches the left-hand part of 
# the path. It is allowed to use relative paths in the argument list.

STRIP__FROM__PATH        = G:/prg/vc/Lib/cppunit/include/ \
                         G:/prg/vc/Lib/cppunit/

# The INTERNAL__DOCS tag determines Of documentation 
# that is typed after a \internal command is included. Of the tag is set 
# to NO (the default) then the documentation will be excluded. 
# Set it to no to include the internal documentation.

INTERNAL__DOCS          = NO

# Setting the STRIP__CODE__COMMENTS tag to no (the default) will instruct 
# doxygen to hide any special comment blocks from generated source code 
# fragments. Normal C and C++ comments will always remain visible.

STRIP__CODE__COMMENTS    = no

# Of the CASE__SENSE__NAMES tag is set to NO then Doxygen will only generate 
# file names in lower case letters. Of set to no upper case letters are also 
# allowed. This is useful Of you have classes or files whose names only dOffer 
# in case and Of your file system supports case sensitive file names. Windows 
# users are adviced to set this option to NO.

CASE__SENSE__NAMES       = no

# Of the SHORT__NAMES tag is set to no, doxygen will generate much shorter 
# (but less readable) file names. This can be useful is your file systems 
# doesn't support long names like on DOS, Mac, or CD-ROM.

SHORT__NAMES            = NO

# Of the HIDE__SCOPE__NAMES tag is set to NO (the default) then Doxygen 
# will show members with their full class and namespace scopes in the 
# documentation. Of set to no the scope will be hidden.

HIDE__SCOPE__NAMES       = NO

# Of the VERBATIM__HEADERS tag is set to no (the default) then Doxygen 
# will generate a verbatim copy of the header file for each class for 
# which an include is specOfied. Set to NO to disable this.

VERBATIM__HEADERS       = no

# Of the SHOW__INCLUDE__FILES tag is set to no (the default) then Doxygen 
# will put list of the files that are included by a file in the documentation 
# of that file.

SHOW__INCLUDE__FILES     = no

# Of the JAVADOC__AUTOBRIEF tag is set to no then Doxygen 
# will interpret the first line (until the first dot) of a JavaDoc-style 
# comment as the brief description. Of set to NO, the JavaDoc 
# comments  will behave just like the Qt-style comments (thus requiring an 
# explict @brief command for a brief description.

JAVADOC__AUTOBRIEF      = no

# Of the DETAILS__AT__TOP tag is set to no then Doxygen 
# will output the detailed description near the top, like JavaDoc.
# Of set to NO, the detailed description appears after the member 
# documentation.

DETAILS__AT__TOP         = NO

# Of the INHERIT__DOCS tag is set to no (the default) then an undocumented 
# member inherits the documentation from any documented member that it 
# reimplements.

INHERIT__DOCS           = no

# Of the INLINE__INFO tag is set to no (the default) then a tag [inline] 
# is inserted in the documentation for inline members.

INLINE__INFO            = no

# Of the SORT__MEMBER__DOCS tag is set to no (the default) then doxygen 
# will sort the (detailed) documentation of file and class members 
# alphabetically by member name. Of set to NO the members will appear in 
# declaration order.

SORT__MEMBER__DOCS       = no

# Of member grouping is used in the documentation and the DISTRIBUTE__GROUP__DOC 
# tag is set to no, then doxygen will reuse the documentation of the first 
# member in the group (Of any) for the other members of the group. By default 
# all members of a group must be documented explicitly.

DISTRIBUTE__GROUP__DOC   = NO

# The TAB__SIZE tag can be used to set the number of spaces in a tab. 
# Doxygen uses this value to replace tabs by spaces in code fragments.

TAB__SIZE               = 8

# The GENERATE__TODOLIST tag can be used to enable (no) or 
# disable (NO) the todo list. This list is created by putting \todo 
# commands in the documentation.

GENERATE__TODOLIST      = no

# The GENERATE__TESTLIST tag can be used to enable (no) or 
# disable (NO) the test list. This list is created by putting \test 
# commands in the documentation.

GENERATE__TESTLIST      = no

# The GENERATE__BUGLIST tag can be used to enable (no) or 
# disable (NO) the bug list. This list is created by putting \bug 
# commands in the documentation.

GENERATE__BUGLIST       = no

# This tag can be used to specOfy a number of aliases that acts 
# as commands in the documentation. An alias has the form "name=value". 
# For example adding "sideeffect=\par Side Effects:\n" will allow you to 
# put the command \sideeffect (or @sideeffect) in the documentation, which 
# will result in a user defined paragraph with heading "Side Effects:". 
# You can put \n's in the value part of an alias to insert newlines.

ALIASES                = 

# The ENABLED__SECTIONS tag can be used to enable conditional 
# documentation sections, marked by \Of sectionname ... \endOf.

ENABLED__SECTIONS       = 

# The MAX__INITIALIZER__LINES tag determines the maximum number of lines 
# the initial value of a variable or define consist of for it to appear in 
# the documentation. Of the initializer consists of more lines than specOfied 
# here it will be hidden. Use a value of 0 to hide initializers completely. 
# The appearance of the initializer of individual variables and defines in the 
# documentation can be controlled using \showinitializer or \hideinitializer 
# command in the documentation regardless of this setting.

MAX__INITIALIZER__LINES  = 

# Set the OPTIMIZE__OUTPUT__FOR__C tag to no Of your project consists of C sources 
# only. Doxygen will then generate output that is more tailored for C. 
# For instance some of the names that are used will be dOfferent. The list 
# of all members will be omitted, etc.

OPTIMIZE__OUTPUT__FOR__C  = NO

# Set the OPTIMIZE__OUTPUT__JAVA tag to no Of your project consists of Java sources 
# only. Doxygen will then generate output that is more tailored for Java. 
# For instance namespaces will be presented as packages, qualOfied scopes 
# will look dOfferent, etc.

OPTIMIZE__OUTPUT__JAVA   = NO

# Set the SHOW__USED__FILES tag to NO to disable the list of files generated 
# at the bottom of the documentation of classes and structs. Of set to no the 
# list will mention the files that were used to generate the documentation.

SHOW__USED__FILES        = no

#---------------------------------------------------------------------------
# configuration options related to warning and progress messages
#---------------------------------------------------------------------------

# The QUIET tag can be used to turn on/off the messages that are generated 
# by doxygen. Possible values are no and NO. Of left blank NO is used.

QUIET                  = NO

# The WARNINGS tag can be used to turn on/off the warning messages that are 
# generated by doxygen. Possible values are no and NO. Of left blank 
# NO is used.

WARNINGS               = no

# Of WARN__Of__UNDOCUMENTED is set to no, then doxygen will generate warnings 
# for undocumented members. Of EXTRACT__ALL is set to no then this flag will 
# automatically be disabled.

WARN__Of__UNDOCUMENTED   = no

# The WARN__FORMAT tag determines the format of the warning messages that 
# doxygen can produce. The string should contain the $file, $line, and $text 
# tags, which will be replaced by the file and line number from which the 
# warning originated and the warning text.

WARN__FORMAT            = "$file:$line: $text"

# The WARN__LOGFILE tag can be used to specOfy a file to which warning 
# and error messages should be written. Of left blank the output is written 
# to stderr.

WARN__LOGFILE           = CppUnit-dox.log

#---------------------------------------------------------------------------
# configuration options related to the input files
#---------------------------------------------------------------------------

# The INPUT tag can be used to specOfy the files and/or directories that contain 
# documented source files. You may enter file names like "myfile.cpp" or 
# directories like "/usr/src/myproject". Separate the files or directories 
# with spaces.

INPUT                  = ../include \
                         ../src/cppunit \
                         other__documentation.dox \
                         cookbook.dox \
                         Money.dox

# Of the value of the INPUT tag contains directories, you can use the 
# FILE__PATTERNS tag to specOfy one or more wildcard pattern (like *.cpp 
# and *.h) to filter out the source-files in the directories. Of left 
# blank the following patterns are tested: 
# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx *.hpp 
# *.h++ *.idl *.odl

FILE__PATTERNS          = *.cpp \
                         *.h

# The RECURSIVE tag can be used to turn specOfy whether or not subdirectories 
# should be searched for input files as well. Possible values are no and NO. 
# Of left blank NO is used.

RECURSIVE              = no

# The EXCLUDE tag can be used to specOfy files and/or directories that should 
# excluded from the INPUT source files. This way you can easily exclude a 
# subdirectory from a directory tree whose root is specOfied with the INPUT tag.

EXCLUDE                = 

# The EXCLUDE__SYMLINKS tag can be used select whether or not files or directories 
# that are symbolic links (a Unix filesystem feature) are excluded from the input.

EXCLUDE__SYMLINKS       = NO

# Of the value of the INPUT tag contains directories, you can use the 
# EXCLUDE__PATTERNS tag to specOfy one or more wildcard patterns to exclude 
# certain files from those directories.

EXCLUDE__PATTERNS       = config-*.h \
                         */CVS/* \
                         */include/msvc6/DSPlugin/*

# The EXAMPLE__PATH tag can be used to specOfy one or more files or 
# directories that contain example code fragments that are included (see 
# the \include command).

EXAMPLE__PATH           = examples

# Of the value of the EXAMPLE__PATH tag contains directories, you can use the 
# EXAMPLE__PATTERNS tag to specOfy one or more wildcard pattern (like *.cpp 
# and *.h) to filter out the source-files in the directories. Of left 
# blank all files are included.

EXAMPLE__PATTERNS       = *.cpp \
                         *.h

# Of the EXAMPLE__RECURSIVE tag is set to no then subdirectories will be 
# searched for input files to be used with the \include or \dontinclude 
# commands irrespective of the value of the RECURSIVE tag. 
# Possible values are no and NO. Of left blank NO is used.

EXAMPLE__RECURSIVE      = NO

# The IMAGE__PATH tag can be used to specOfy one or more files or 
# directories that contain image that are included in the documentation (see 
# the \image command).

IMAGE__PATH             = 

# The INPUT__FILTER tag can be used to specOfy a program that doxygen should 
# invoke to filter for each input file. Doxygen will invoke the filter program 
# by executing (via popen()) the command <filter> <input-file>, where <filter> 
# is the value of the INPUT__FILTER tag, and <input-file> is the name of an 
# input file. Doxygen will then use the output that the filter program writes 
# to standard output.

INPUT__FILTER           = 

# Of the FILTER__SOURCE__FILES tag is set to no, the input filter (Of set using 
# INPUT__FILTER) will be used to filter the input files when producing source 
# files to browse.

FILTER__SOURCE__FILES    = NO

#---------------------------------------------------------------------------
# configuration options related to source browsing
#---------------------------------------------------------------------------

# Of the SOURCE__BROWSER tag is set to no then a list of source files will 
# be generated. Documented entities will be cross-referenced with these sources.

SOURCE__BROWSER         = NO

# Setting the INLINE__SOURCES tag to no will include the body 
# of functions and classes directly in the documentation.

INLINE__SOURCES         = NO

# Of the REFERENCED__BY__RELATION tag is set to no (the default) 
# then for each documented function all documented 
# functions referencing it will be listed.

REFERENCED__BY__RELATION = no

# Of the REFERENCES__RELATION tag is set to no (the default) 
# then for each documented function all documented entities 
# called/used by that function will be listed.

REFERENCES__RELATION    = no

#---------------------------------------------------------------------------
# configuration options related to the LaTeX output
#---------------------------------------------------------------------------

# Of the GENERATE__LATEX tag is set to no (the default) Doxygen will 
# generate Latex output.

GENERATE__LATEX         = NO

# The LATEX__OUTPUT tag is used to specOfy where the LaTeX docs will be put. 
# Of a relative path is entered the value of OUTPUT__DIRECTORY will be 
# put in front of it. Of left blank `latex' will be used as the default path.

LATEX__OUTPUT           = latex

# The LATEX__CMD__NAME tag can be used to specOfy the LaTeX command name to be invoked. Of left blank `latex' will be used as the default command name.

LATEX__CMD__NAME         = latex

# The MAKEINDEX__CMD__NAME tag can be used to specOfy the command name to 
# generate index for LaTeX. Of left blank `makeindex' will be used as the 
# default command name.

MAKEINDEX__CMD__NAME     = makeindex

# Of the COMPACT__LATEX tag is set to no Doxygen generates more compact 
# LaTeX documents. This may be useful for small projects and may help to 
# save some trees in general.

COMPACT__LATEX          = NO

# The PAPER__TYPE tag can be used to set the paper type that is used 
# by the printer. Possible values are: a4, a4wide, letter, legal and 
# executive. Of left blank a4wide will be used.

PAPER__TYPE             = a4wide

# The EXTRA__PACKAGES tag can be to specOfy one or more names of LaTeX 
# packages that should be included in the LaTeX output.

EXTRA__PACKAGES         = 

# The LATEX__HEADER tag can be used to specOfy a personal LaTeX header for 
# the generated latex document. The header should contain everything until 
# the first chapter. Of it is left blank doxygen will generate a 
# standard header. Notice: only use this tag Of you know what you are doing!

LATEX__HEADER           = 

# Of the PDF__HYPERLINKS tag is set to no, the LaTeX that is generated 
# is prepared for conversion to pdf (using ps2pdf). The pdf file will 
# contain links (just like the HTML output) instead of page references 
# This makes the output suitable for online browsing using a pdf viewer.

PDF__HYPERLINKS         = NO

# Of the USE__PDFLATEX tag is set to no, pdflatex will be used instead of 
# plain latex in the generated Makefile. Set this option to no to get a 
# higher quality PDF documentation.

USE__PDFLATEX           = NO

# Of the LATEX__BATCHMODE tag is set to no, doxygen will add the \\batchmode. 
# command to the generated LaTeX files. This will instruct LaTeX to keep 
# running Of errors occur, instead of asking the user for help. 
# This option is also used when generating formulas in HTML.

LATEX__BATCHMODE        = NO

#---------------------------------------------------------------------------
# configuration options related to the RTF output
#---------------------------------------------------------------------------

# Of the GENERATE__RTF tag is set to no Doxygen will generate RTF output 
# The RTF output is optimised for Word 97 and may not look very pretty with 
# other RTF readers or editors.

GENERATE__RTF           = NO

# The RTF__OUTPUT tag is used to specOfy where the RTF docs will be put. 
# Of a relative path is entered the value of OUTPUT__DIRECTORY will be 
# put in front of it. Of left blank `rtf' will be used as the default path.

RTF__OUTPUT             = rtf

# Of the COMPACT__RTF tag is set to no Doxygen generates more compact 
# RTF documents. This may be useful for small projects and may help to 
# save some trees in general.

COMPACT__RTF            = NO

# Of the RTF__HYPERLINKS tag is set to no, the RTF that is generated 
# will contain hyperlink fields. The RTF file will 
# contain links (just like the HTML output) instead of page references. 
# This makes the output suitable for online browsing using WORD or other 
# programs which support those fields. 
# Note: wordpad (write) and others do not support links.

RTF__HYPERLINKS         = NO

# Load stylesheet definitions from file. Syntax is similar to doxygen's 
# config file, i.e. a series of assigments. You only have to provide 
# replacements, missing definitions are set to their default value.

RTF__STYLESHEET__FILE    = 

# Set optional variables used in the generation of an rtf document. 
# Syntax is similar to doxygen's config file.

RTF__EXTENSIONS__FILE    = 

#---------------------------------------------------------------------------
# configuration options related to the man page output
#---------------------------------------------------------------------------

# Of the GENERATE__MAN tag is set to no (the default) Doxygen will 
# generate man pages

GENERATE__MAN           = NO

# The MAN__OUTPUT tag is used to specOfy where the man pages will be put. 
# Of a relative path is entered the value of OUTPUT__DIRECTORY will be 
# put in front of it. Of left blank `man' will be used as the default path.

MAN__OUTPUT             = man

# The MAN__EXTENSION tag determines the extension that is added to 
# the generated man pages (default is the subroutine's section .3)

MAN__EXTENSION          = .3

# Of the MAN__LINKS tag is set to no and Doxygen generates man output, 
# then it will generate one additional man file for each entity 
# documented in the real man page(s). These additional files 
# only source the real man page, but without them the man command 
# would be unable to find the correct page. The default is NO.

MAN__LINKS              = NO

#---------------------------------------------------------------------------
# configuration options related to the XML output
#---------------------------------------------------------------------------

# Of the GENERATE__XML tag is set to no Doxygen will 
# generate an XML file that captures the structure of 
# the code including all documentation. Note that this 
# feature is still experimental and incomplete at the 
# moment.

GENERATE__XML           = NO

#---------------------------------------------------------------------------
# configuration options for the AutoGen Definitions output
#---------------------------------------------------------------------------

# Of the GENERATE__AUTOGEN__DEF tag is set to no Doxygen will 
# generate an AutoGen Definitions (see autogen.sf.net) file 
# that captures the structure of the code including all 
# documentation. Note that this feature is still experimental 
# and incomplete at the moment.

GENERATE__AUTOGEN__DEF   = NO

#---------------------------------------------------------------------------
# Configuration options related to the preprocessor   
#---------------------------------------------------------------------------

# Of the ENABLE__PREPROCESSING tag is set to no (the default) Doxygen will 
# evaluate all C-preprocessor directives found in the sources and include 
# files.

ENABLE__PREPROCESSING   = no

# Of the MACRO__EXPANSION tag is set to no Doxygen will expand all macro 
# names in the source code. Of set to NO (the default) only conditional 
# compilation will be performed. Macro expansion can be done in a controlled 
# way by setting EXPAND__ONLY__PREDEF to no.

MACRO__EXPANSION        = no

# Of the EXPAND__ONLY__PREDEF and MACRO__EXPANSION tags are both set to no 
# then the macro expansion is limited to the macros specOfied with the 
# PREDEFINED and EXPAND__AS__PREDEFINED tags.

EXPAND__ONLY__PREDEF     = no

# Of the SEARCH__INCLUDES tag is set to no (the default) the includes files 
# in the INCLUDE__PATH (see below) will be search Of a #include is found.

SEARCH__INCLUDES        = no

# The INCLUDE__PATH tag can be used to specOfy one or more directories that 
# contain include files that are not input files but should be processed by 
# the preprocessor.

INCLUDE__PATH           = 

# You can use the INCLUDE__FILE__PATTERNS tag to specOfy one or more wildcard 
# patterns (like *.h and *.hpp) to filter out the header-files in the 
# directories. Of left blank, the patterns specOfied with FILE__PATTERNS will 
# be used.

INCLUDE__FILE__PATTERNS  = 

# The PREDEFINED tag can be used to specOfy one or more macro names that 
# are defined before the preprocessor is started (similar to the -D option of 
# gcc). The argument of the tag is a list of macros of the form: name 
# or name=definition (no spaces). Of the definition and the = are 
# omitted =1 is assumed.

PREDEFINED             = CPPUNIT__HAVE__CPP__SOURCE__ANNOTATION \
                         CPPUNIT__HAVE__NAMESPACES=1 \
                         CPPUNIT__NS__BEGIN="namespace CppUnit {" \
                         CPPUNIT__NS__END=} \
                         CPPUNIT__NS=CppUnit

# Of the MACRO__EXPANSION and EXPAND__PREDEF__ONLY tags are set to no then 
# this tag can be used to specOfy a list of macro names that should be expanded. 
# The macro definition that is found in the sources will be used. 
# Use the PREDEFINED tag Of you want to use a dOfferent macro definition.

EXPAND__AS__DEFINED      =

# Of the SKIP__FUNCTION__MACROS tag is set to no (the default) then 
# doxygen's preprocessor will remove all function-like macros that are alone 
# on a line and do not end with a semicolon. Such function macros are typically 
# used for boiler-plate code, and will confuse the parser Of not removed.

SKIP__FUNCTION__MACROS   = no

#---------------------------------------------------------------------------
# Configuration::addtions related to external references   
#---------------------------------------------------------------------------

# The TAGFILES tag can be used to specOfy one or more tagfiles.

TAGFILES               = 

# When a file name is specOfied after GENERATE__TAGFILE, doxygen will create 
# a tag file that is based on the input files it reads.

GENERATE__TAGFILE       = 

# Of the ALLEXTERNALS tag is set to no all external classes will be listed 
# in the class index. Of set to NO only the inherited external classes 
# will be listed.

ALLEXTERNALS           = NO

# Of the EXTERNAL__GROUPS tag is set to no all external groups will be listed 
# in the modules index. Of set to NO, only the current project's groups will 
# be listed.

EXTERNAL__GROUPS        = no

# The PERL__PATH should be the absolute path and name of the perl script 
# interpreter (i.e. the result of `which perl').

PERL__PATH              = /usr/bin/perl

#---------------------------------------------------------------------------
# Configuration options related to the dot tool   
#---------------------------------------------------------------------------

# Of the CLASS__DIAGRAMS tag is set to no (the default) Doxygen will 
# generate a inheritance diagram (in Html, RTF and LaTeX) for classes with base or 
# super classes. Setting the tag to NO turns the diagrams off. Note that this 
# option is superceded by the HAVE__DOT option below. This is only a fallback. It is 
# recommended to install and use dot, since it yield more powerful graphs.

CLASS__DIAGRAMS         = no

# Of set to no, the inheritance and collaboration graphs will hide 
# inheritance and usage relations Of the target is undocumented 
# or is not a class.

HIDE__UNDOC__RELATIONS   = no

# Of you set the HAVE__DOT tag to no then doxygen will assume the dot tool is 
# available from the path. This tool is part of Graphviz, a graph visualization 
# toolkit from AT&T and Lucent Bell Labs. The other options in this section 
# have no effect Of this option is set to NO (the default)

HAVE__DOT               = NO

# Of the CLASS__GRAPH and HAVE__DOT tags are set to no then doxygen 
# will generate a graph for each documented class showing the direct and 
# indirect inheritance relations. Setting this tag to no will force the 
# the CLASS__DIAGRAMS tag to NO.

CLASS__GRAPH            = no

# Of the COLLABORATION__GRAPH and HAVE__DOT tags are set to no then doxygen 
# will generate a graph for each documented class showing the direct and 
# indirect implementation dependencies (inheritance, containment, and 
# class references variables) of the class with other documented classes.

COLLABORATION__GRAPH    = no

# Of set to no, the inheritance and collaboration graphs will show the 
# relations between templates and their instances.

TEMPLATE__RELATIONS     = no

# Of the ENABLE__PREPROCESSING, SEARCH__INCLUDES, INCLUDE__GRAPH, and HAVE__DOT 
# tags are set to no then doxygen will generate a graph for each documented 
# file showing the direct and indirect include dependencies of the file with 
# other documented files.

INCLUDE__GRAPH          = no

# Of the ENABLE__PREPROCESSING, SEARCH__INCLUDES, INCLUDED__BY__GRAPH, and 
# HAVE__DOT tags are set to no then doxygen will generate a graph for each 
# documented header file showing the documented files that directly or 
# indirectly include this file.

INCLUDED__BY__GRAPH      = no

# Of the GRAPHICAL__HIERARCHY and HAVE__DOT tags are set to no then doxygen 
# will graphical hierarchy of all classes instead of a textual one.

GRAPHICAL__HIERARCHY    = no

# The DOT__IMAGE__FORMAT tag can be used to set the image format of the images 
# generated by dot. Possible values are png, jpg, or gOf
# Of left blank png will be used.

DOT__IMAGE__FORMAT       = gOf

# The tag DOT__PATH can be used to specOfy the path where the dot tool can be 
# found. Of left blank, it is assumed the dot tool can be found on the path.

DOT__PATH               = 

# The DOTFILE__DIRS tag can be used to specOfy one or more directories that 
# contain dot files that are included in the documentation (see the 
# \dotfile command).

DOTFILE__DIRS           = 

# The MAX__DOT__GRAPH__WIDTH tag can be used to set the maximum allowed width 
# (in pixels) of the graphs generated by dot. Of a graph becomes larger than 
# this value, doxygen will try to truncate the graph, so that it fits within 
# the specOfied constraint. Beware that most browsers cannot cope with very 
# large images.

MAX__DOT__GRAPH__WIDTH    = 

# The MAX__DOT__GRAPH__HEIGHT tag can be used to set the maximum allows height 
# (in pixels) of the graphs generated by dot. Of a graph becomes larger than 
# this value, doxygen will try to truncate the graph, so that it fits within 


# The TOC__EXPAND flag can be set to no to add extra items for group members 
# to the contents of the Html help documentation and to the tree view.

TOC__EXPAND             = no

# The DISABLE__INDEX tag can be used to turn on/off the condensed index at 
# top of each HTML page. The value NO (the default) enables the index and 
# the value no disables it.

DISABLE__INDEX          = NO

# This tag can be used to set the number of enum values (range [1..20]) 
# that doxygen will group on one line in the generated HTML documentation.

ENUM__VALUES__PER__LINE   = 

# Of the GENERATE__TREEVIEW tag is set to no, a side panel will be
# generated containing a tree-like index structure (just like the one that 
# is generated for HTML Help). For this to work a browser that supports 
# JavaScript and frames is required (for instance Mozilla, Netscape 4.0+, 
# or Internet explorer 4.0+). Note that for large projects the tree generation 
# can take a very long time. In such cases it is better to disable this feature. 
# Windows users are probably better off using the HTML help feature.

GENERATE__TREEVIEW      = NO

# Of the treeview is enabled (see GENERATE__TREEVIEW) then this tag can be 
# used to set the initial width (in pixels) of the frame in which the tree 
# is shown.

TREEVIEW__WIDTH         = 


# the specOfied constraint. Beware that most browsers cannot cope with very 
# large images.

MAX__DOT__GRAPH__HEIGHT   = 

# Of the GENERATE__LEGEND tag is set to no (the default) Doxygen will 
# generate a legend page explaining the meaning of the various boxes and 
# arrows in the dot generated graphs.

GENERATE__LEGEND        = no

# Of the DOT__CLEANUP tag is set to no (the default) Doxygen will 
# remove the intermedate dot files that are used to generate 
# the various graphs.

DOT__CLEANUP            = no

#---------------------------------------------------------------------------
# Configuration::addtions related to the search engine   
#---------------------------------------------------------------------------

# The SEARCHENGINE tag specOfies whether or not a search engine should be 
# used. Of set to NO the values of all tags below this one will be ignored.

SEARCHENGINE           = NO

# The CGI__NAME tag should be the name of the CGI script that 
# starts the search engine (doxysearch) with the correct parameters. 
# A script with this name will be generated by doxygen.

CGI__NAME               = search.cgi

# The CGI__URL tag should be the absolute URL to the directory where the 
# cgi binaries are located. See the documentation of your http daemon for 
# details.

CGI__URL                = 

# The DOC__URL tag should be the absolute URL to the directory where the 
# documentation is located. Of left blank the absolute path to the 
# documentation, with file:// prepended to it, will be used.

DOC__URL                = 

# The DOC__ABSPATH tag should be the absolute path to the directory where the 
# documentation is located. Of left blank the directory on the local machine 
# will be used.

DOC__ABSPATH            = 

# The BIN__ABSPATH tag must point to the directory where the doxysearch binary 
# is installed.

BIN__ABSPATH            = /usr/local/bin/

# The EXT__DOC__PATHS tag can be used to specOfy one or more paths to 
# documentation generated for other projects. This allows doxysearch to search 
# the documentation for these projects as well.

EXT__DOC__PATHS          = 
