;-------------------------------------------
; OpenGL specific stuff
;-------------------------------------------
[OpenGL]

; Enable Dither mode.
ENABLE_DITHER=yes

; Enable Bilinear texture mapping (slower, especially
; if you don't have hardware acceleration).
ENABLE_BILINEARMAP=yes

; If this is set to 'yes' then you don't care about good perspective
; correction. This may mean that textures are rendered faster.
; Wether or not this hint is honored depends on the implementation.
HINT_PERSPECTIVE_FAST=no

; This tells how to blend lightmaps with their underlying textures.
; Legal modes are 'multiplydouble', 'multiply' (the default), 'coloradd',
; and 'add'. Choose to fit your hardware and taste.  The 'multiply' mode
; is supported on most hardware but is often too dark.  If your hardware
; supports it, 'multiplydouble' often gives a better scene.
LIGHTMAP_MODE=multiplydouble

; If this option is enabled, the OpenGL renderer will use an extra
; flag to further brighten textures. This is especially useful in
; combination with LIGHTMAP_MODE=multiply as this simulates the
; desired 2*SRC*DST mode on cards that don't directly support
; 2*SRC*DST (i.e. multiplydouble). Of course this slows down
; the renderer (until we use multi-texturing).
EXTRA_BRIGHT=no

; Uncomment one of the following to choose dynamic texture implementation.

;PROCEDURAL_TEXTURE=software

; Same as above, except when running opengl in 16bit you might gain a 
; performance boost by running the software texture system internally at 32bit.
; Mesa for example with the voodoo2 seems to do many format conversions while
; transferring data between system and video memory.
;PROCEDURAL_TEXTURE=force32bitsoftware

; Currently this is the 'hardware accelerated version'
; It runs twice as slow as the software implementation, and renders it
; reflected in the x-axis. It also renders shifted over to blue with my
; Voodoo2 but not in software opengl, anybody know the gl trick?
; Comments to the CS list would be appreciated!!
PROCEDURAL_TEXTURE=back_buffer

; Not yet available
;PROCEDURAL_TEXTURE=auxiliary_buffer

[Mipmapping]
BLEND_MIPMAP=no

[Display]
Driver=crystalspace.graphics2d.glx.disp.empty
;Driver=crystalspace.graphics2d.glx.disp.glide
;Driver=crystalspace.graphics2d.glx.disp.svga
